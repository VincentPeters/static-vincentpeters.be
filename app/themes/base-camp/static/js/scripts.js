/******/
(function (modules) {
  // webpackBootstrap
  /******/
  // install a JSONP callback for chunk loading
  /******/
  function webpackJsonpCallback(data) {
    /******/
    var chunkIds = data[0];
    /******/
    var moreModules = data[1];
    /******/
    var executeModules = data[2];
    /******/
    /******/
    // add "moreModules" to the modules object,
    /******/
    // then flag all "chunkIds" as loaded and fire callback
    /******/
    var moduleId,
      chunkId,
      i = 0,
      resolves = [];
    /******/
    for (; i < chunkIds.length; i++) {
      /******/
      chunkId = chunkIds[i];
      /******/
      if (
        Object.prototype.hasOwnProperty.call(
          installedChunks,
          chunkId
        ) &&
        installedChunks[chunkId]
      ) {
        /******/
        resolves.push(installedChunks[chunkId][0]);
        /******/
      }
      /******/
      installedChunks[chunkId] = 0;
      /******/
    }
    /******/
    for (moduleId in moreModules) {
      /******/
      if (
        Object.prototype.hasOwnProperty.call(moreModules, moduleId)
      ) {
        /******/
        modules[moduleId] = moreModules[moduleId];
        /******/
      }
      /******/
    }
    /******/
    if (parentJsonpFunction) parentJsonpFunction(data);
    /******/
    /******/
    while (resolves.length) {
      /******/
      resolves.shift()();
      /******/
    }
    /******/
    /******/
    // add entry modules from loaded chunk to deferred list
    /******/
    deferredModules.push.apply(deferredModules, executeModules || []);
    /******/
    /******/
    // run deferred modules when all chunks ready
    /******/
    return checkDeferredModules();
    /******/
  } /******/
  function checkDeferredModules() {
    /******/
    var result;
    /******/
    for (var i = 0; i < deferredModules.length; i++) {
      /******/
      var deferredModule = deferredModules[i];
      /******/
      var fulfilled = true;
      /******/
      for (var j = 1; j < deferredModule.length; j++) {
        /******/
        var depId = deferredModule[j];
        /******/
        if (installedChunks[depId] !== 0) fulfilled = false;
        /******/
      }
      /******/
      if (fulfilled) {
        /******/
        deferredModules.splice(i--, 1);
        /******/
        result = __webpack_require__(
          (__webpack_require__.s = deferredModule[0])
        );
        /******/
      }
      /******/
    }
    /******/
    /******/
    return result;
    /******/
  }
  /******/
  /******/
  // The module cache
  /******/
  var installedModules = {};
  /******/
  /******/
  // object to store loaded and loading chunks
  /******/
  // undefined = chunk not loaded, null = chunk preloaded/prefetched
  /******/
  // Promise = chunk loading, 0 = chunk loaded
  /******/
  var installedChunks = {
    /******/
    scripts: 0 /******/,
  };
  /******/
  /******/
  var deferredModules = [];
  /******/
  /******/
  // The require function
  /******/
  function __webpack_require__(moduleId) {
    /******/
    /******/
    // Check if module is in cache
    /******/
    if (installedModules[moduleId]) {
      /******/
      return installedModules[moduleId].exports;
      /******/
    }
    /******/
    // Create a new module (and put it into the cache)
    /******/
    var module = (installedModules[moduleId] = {
      /******/
      i: moduleId,
      /******/
      l: false,
      /******/
      exports: {} /******/,
    });
    /******/
    /******/
    // Execute the module function
    /******/
    modules[moduleId].call(
      module.exports,
      module,
      module.exports,
      __webpack_require__
    );
    /******/
    /******/
    // Flag the module as loaded
    /******/
    module.l = true;
    /******/
    /******/
    // Return the exports of the module
    /******/
    return module.exports;
    /******/
  }
  /******/
  /******/
  /******/
  // expose the modules object (__webpack_modules__)
  /******/
  __webpack_require__.m = modules;
  /******/
  /******/
  // expose the module cache
  /******/
  __webpack_require__.c = installedModules;
  /******/
  /******/
  // define getter function for harmony exports
  /******/
  __webpack_require__.d = function (exports, name, getter) {
    /******/
    if (!__webpack_require__.o(exports, name)) {
      /******/
      Object.defineProperty(exports, name, {
        enumerable: true,
        get: getter,
      });
      /******/
    }
    /******/
  };
  /******/
  /******/
  // define __esModule on exports
  /******/
  __webpack_require__.r = function (exports) {
    /******/
    if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
      /******/
      Object.defineProperty(exports, Symbol.toStringTag, {
        value: 'Module',
      });
      /******/
    }
    /******/
    Object.defineProperty(exports, '__esModule', {
      value: true,
    });
    /******/
  };
  /******/
  /******/
  // create a fake namespace object
  /******/
  // mode & 1: value is a module id, require it
  /******/
  // mode & 2: merge all properties of value into the ns
  /******/
  // mode & 4: return value when already ns object
  /******/
  // mode & 8|1: behave like require
  /******/
  __webpack_require__.t = function (value, mode) {
    /******/
    if (mode & 1) value = __webpack_require__(value);
    /******/
    if (mode & 8) return value;
    /******/
    if (
      mode & 4 &&
      typeof value === 'object' &&
      value &&
      value.__esModule
    )
      return value;
    /******/
    var ns = Object.create(null);
    /******/
    __webpack_require__.r(ns);
    /******/
    Object.defineProperty(ns, 'default', {
      enumerable: true,
      value: value,
    });
    /******/
    if (mode & 2 && typeof value != 'string')
      for (var key in value)
        __webpack_require__.d(
          ns,
          key,
          function (key) {
            return value[key];
          }.bind(null, key)
        );
    /******/
    return ns;
    /******/
  };
  /******/
  /******/
  // getDefaultExport function for compatibility with non-harmony modules
  /******/
  __webpack_require__.n = function (module) {
    /******/
    var getter =
      module && module.__esModule /******/
        ? function getDefault() {
            return module['default'];
          }
        : /******/
          function getModuleExports() {
            return module;
          };
    /******/
    __webpack_require__.d(getter, 'a', getter);
    /******/
    return getter;
    /******/
  };
  /******/
  /******/
  // Object.prototype.hasOwnProperty.call
  /******/
  __webpack_require__.o = function (object, property) {
    return Object.prototype.hasOwnProperty.call(object, property);
  };
  /******/
  /******/
  // __webpack_public_path__
  /******/
  __webpack_require__.p = '';
  /******/
  /******/
  var jsonpArray = (window['webpackJsonp'] =
    window['webpackJsonp'] || []);
  /******/
  var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
  /******/
  jsonpArray.push = webpackJsonpCallback;
  /******/
  jsonpArray = jsonpArray.slice();
  /******/
  for (var i = 0; i < jsonpArray.length; i++)
    webpackJsonpCallback(jsonpArray[i]);
  /******/
  var parentJsonpFunction = oldJsonpFunction;
  /******/
  /******/
  /******/
  // add entry module to deferred list
  /******/
  deferredModules.push(['./resources/assets/js/main.js', 'vendor']);
  /******/
  // run deferred modules when ready
  /******/
  return checkDeferredModules();
  /******/
})(
  /************************************************************************/
  /******/
  {
    /***/
    /*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
    './node_modules/@babel/runtime/helpers/asyncToGenerator.js':
      /*! no static exports found */
      /***/
      function (module, exports) {
        function asyncGeneratorStep(
          gen,
          resolve,
          reject,
          _next,
          _throw,
          key,
          arg
        ) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }
          if (info.done) {
            resolve(value);
          } else {
            Promise.resolve(value).then(_next, _throw);
          }
        }
        function _asyncToGenerator(fn) {
          return function () {
            var self = this,
              args = arguments;
            return new Promise(function (resolve, reject) {
              var gen = fn.apply(self, args);
              function _next(value) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'next',
                  value
                );
              }
              function _throw(err) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'throw',
                  err
                );
              }
              _next(undefined);
            });
          };
        }
        (module.exports = _asyncToGenerator),
          (module.exports.__esModule = true),
          (module.exports['default'] = module.exports);

        /***/
      },

    /***/
    /*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
    './node_modules/@babel/runtime/helpers/defineProperty.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var toPropertyKey = __webpack_require__(
          /*! ./toPropertyKey.js */
          './node_modules/@babel/runtime/helpers/toPropertyKey.js'
        );
        function _defineProperty(obj, key, value) {
          key = toPropertyKey(key);
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }
          return obj;
        }
        (module.exports = _defineProperty),
          (module.exports.__esModule = true),
          (module.exports['default'] = module.exports);

        /***/
      },

    /***/
    /*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPrimitive.js ***!
  \************************************************************/
    './node_modules/@babel/runtime/helpers/toPrimitive.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var _typeof = __webpack_require__(
          /*! ./typeof.js */
          './node_modules/@babel/runtime/helpers/typeof.js'
        )['default'];
        function toPrimitive(t, r) {
          if ('object' != _typeof(t) || !t) return t;
          var e = t[Symbol.toPrimitive];
          if (void 0 !== e) {
            var i = e.call(t, r || 'default');
            if ('object' != _typeof(i)) return i;
            throw new TypeError(
              '@@toPrimitive must return a primitive value.'
            );
          }
          return ('string' === r ? String : Number)(t);
        }
        (module.exports = toPrimitive),
          (module.exports.__esModule = true),
          (module.exports['default'] = module.exports);

        /***/
      },

    /***/
    /*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPropertyKey.js ***!
  \**************************************************************/
    './node_modules/@babel/runtime/helpers/toPropertyKey.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var _typeof = __webpack_require__(
          /*! ./typeof.js */
          './node_modules/@babel/runtime/helpers/typeof.js'
        )['default'];
        var toPrimitive = __webpack_require__(
          /*! ./toPrimitive.js */
          './node_modules/@babel/runtime/helpers/toPrimitive.js'
        );
        function toPropertyKey(t) {
          var i = toPrimitive(t, 'string');
          return 'symbol' == _typeof(i) ? i : i + '';
        }
        (module.exports = toPropertyKey),
          (module.exports.__esModule = true),
          (module.exports['default'] = module.exports);

        /***/
      },

    /***/
    /*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
    './node_modules/@babel/runtime/helpers/typeof.js':
      /*! no static exports found */
      /***/
      function (module, exports) {
        function _typeof(o) {
          '@babel/helpers - typeof';

          return (
            ((module.exports = _typeof =
              'function' == typeof Symbol &&
              'symbol' == typeof Symbol.iterator
                ? function (o) {
                    return typeof o;
                  }
                : function (o) {
                    return o &&
                      'function' == typeof Symbol &&
                      o.constructor === Symbol &&
                      o !== Symbol.prototype
                      ? 'symbol'
                      : typeof o;
                  }),
            (module.exports.__esModule = true),
            (module.exports['default'] = module.exports)),
            _typeof(o)
          );
        }
        (module.exports = _typeof),
          (module.exports.__esModule = true),
          (module.exports['default'] = module.exports);

        /***/
      },

    /***/
    /*!******************************************************!*\
  !*** ./node_modules/@vimeo/player/dist/player.es.js ***!
  \******************************************************/
    './node_modules/@vimeo/player/dist/player.es.js':
      /*! exports provided: default */
      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */
        (function (global, setImmediate) {
          /*! @vimeo/player v2.22.0 | (c) 2024 Vimeo | MIT License | https://github.com/vimeo/player.js */
          function ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
              var symbols = Object.getOwnPropertySymbols(object);
              enumerableOnly &&
                (symbols = symbols.filter(function (sym) {
                  return Object.getOwnPropertyDescriptor(
                    object,
                    sym
                  ).enumerable;
                })),
                keys.push.apply(keys, symbols);
            }
            return keys;
          }
          function _objectSpread2(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = null != arguments[i] ? arguments[i] : {};
              i % 2
                ? ownKeys(Object(source), !0).forEach(function (key) {
                    _defineProperty(target, key, source[key]);
                  })
                : Object.getOwnPropertyDescriptors
                ? Object.defineProperties(
                    target,
                    Object.getOwnPropertyDescriptors(source)
                  )
                : ownKeys(Object(source)).forEach(function (key) {
                    Object.defineProperty(
                      target,
                      key,
                      Object.getOwnPropertyDescriptor(source, key)
                    );
                  });
            }
            return target;
          }
          function _regeneratorRuntime() {
            _regeneratorRuntime = function () {
              return exports;
            };
            var exports = {},
              Op = Object.prototype,
              hasOwn = Op.hasOwnProperty,
              defineProperty =
                Object.defineProperty ||
                function (obj, key, desc) {
                  obj[key] = desc.value;
                },
              $Symbol = 'function' == typeof Symbol ? Symbol : {},
              iteratorSymbol = $Symbol.iterator || '@@iterator',
              asyncIteratorSymbol =
                $Symbol.asyncIterator || '@@asyncIterator',
              toStringTagSymbol =
                $Symbol.toStringTag || '@@toStringTag';
            function define(obj, key, value) {
              return (
                Object.defineProperty(obj, key, {
                  value: value,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                }),
                obj[key]
              );
            }
            try {
              define({}, '');
            } catch (err) {
              define = function (obj, key, value) {
                return (obj[key] = value);
              };
            }
            function wrap(innerFn, outerFn, self, tryLocsList) {
              var protoGenerator =
                  outerFn && outerFn.prototype instanceof Generator
                    ? outerFn
                    : Generator,
                generator = Object.create(protoGenerator.prototype),
                context = new Context(tryLocsList || []);
              return (
                defineProperty(generator, '_invoke', {
                  value: makeInvokeMethod(innerFn, self, context),
                }),
                generator
              );
            }
            function tryCatch(fn, obj, arg) {
              try {
                return {
                  type: 'normal',
                  arg: fn.call(obj, arg),
                };
              } catch (err) {
                return {
                  type: 'throw',
                  arg: err,
                };
              }
            }
            exports.wrap = wrap;
            var ContinueSentinel = {};
            function Generator() {}
            function GeneratorFunction() {}
            function GeneratorFunctionPrototype() {}
            var IteratorPrototype = {};
            define(IteratorPrototype, iteratorSymbol, function () {
              return this;
            });
            var getProto = Object.getPrototypeOf,
              NativeIteratorPrototype =
                getProto && getProto(getProto(values([])));
            NativeIteratorPrototype &&
              NativeIteratorPrototype !== Op &&
              hasOwn.call(NativeIteratorPrototype, iteratorSymbol) &&
              (IteratorPrototype = NativeIteratorPrototype);
            var Gp =
              (GeneratorFunctionPrototype.prototype =
              Generator.prototype =
                Object.create(IteratorPrototype));
            function defineIteratorMethods(prototype) {
              ['next', 'throw', 'return'].forEach(function (method) {
                define(prototype, method, function (arg) {
                  return this._invoke(method, arg);
                });
              });
            }
            function AsyncIterator(generator, PromiseImpl) {
              function invoke(method, arg, resolve, reject) {
                var record = tryCatch(
                  generator[method],
                  generator,
                  arg
                );
                if ('throw' !== record.type) {
                  var result = record.arg,
                    value = result.value;
                  return value &&
                    'object' == typeof value &&
                    hasOwn.call(value, '__await')
                    ? PromiseImpl.resolve(value.__await).then(
                        function (value) {
                          invoke('next', value, resolve, reject);
                        },
                        function (err) {
                          invoke('throw', err, resolve, reject);
                        }
                      )
                    : PromiseImpl.resolve(value).then(
                        function (unwrapped) {
                          (result.value = unwrapped), resolve(result);
                        },
                        function (error) {
                          return invoke(
                            'throw',
                            error,
                            resolve,
                            reject
                          );
                        }
                      );
                }
                reject(record.arg);
              }
              var previousPromise;
              defineProperty(this, '_invoke', {
                value: function (method, arg) {
                  function callInvokeWithMethodAndArg() {
                    return new PromiseImpl(function (
                      resolve,
                      reject
                    ) {
                      invoke(method, arg, resolve, reject);
                    });
                  }
                  return (previousPromise = previousPromise
                    ? previousPromise.then(
                        callInvokeWithMethodAndArg,
                        callInvokeWithMethodAndArg
                      )
                    : callInvokeWithMethodAndArg());
                },
              });
            }
            function makeInvokeMethod(innerFn, self, context) {
              var state = 'suspendedStart';
              return function (method, arg) {
                if ('executing' === state)
                  throw new Error('Generator is already running');
                if ('completed' === state) {
                  if ('throw' === method) throw arg;
                  return doneResult();
                }
                for (context.method = method, context.arg = arg; ; ) {
                  var delegate = context.delegate;
                  if (delegate) {
                    var delegateResult = maybeInvokeDelegate(
                      delegate,
                      context
                    );
                    if (delegateResult) {
                      if (delegateResult === ContinueSentinel)
                        continue;
                      return delegateResult;
                    }
                  }
                  if ('next' === context.method)
                    context.sent = context._sent = context.arg;
                  else if ('throw' === context.method) {
                    if ('suspendedStart' === state)
                      throw ((state = 'completed'), context.arg);
                    context.dispatchException(context.arg);
                  } else
                    'return' === context.method &&
                      context.abrupt('return', context.arg);
                  state = 'executing';
                  var record = tryCatch(innerFn, self, context);
                  if ('normal' === record.type) {
                    if (
                      ((state = context.done
                        ? 'completed'
                        : 'suspendedYield'),
                      record.arg === ContinueSentinel)
                    )
                      continue;
                    return {
                      value: record.arg,
                      done: context.done,
                    };
                  }
                  'throw' === record.type &&
                    ((state = 'completed'),
                    (context.method = 'throw'),
                    (context.arg = record.arg));
                }
              };
            }
            function maybeInvokeDelegate(delegate, context) {
              var methodName = context.method,
                method = delegate.iterator[methodName];
              if (undefined === method)
                return (
                  (context.delegate = null),
                  ('throw' === methodName &&
                    delegate.iterator.return &&
                    ((context.method = 'return'),
                    (context.arg = undefined),
                    maybeInvokeDelegate(delegate, context),
                    'throw' === context.method)) ||
                    ('return' !== methodName &&
                      ((context.method = 'throw'),
                      (context.arg = new TypeError(
                        "The iterator does not provide a '" +
                          methodName +
                          "' method"
                      )))),
                  ContinueSentinel
                );
              var record = tryCatch(
                method,
                delegate.iterator,
                context.arg
              );
              if ('throw' === record.type)
                return (
                  (context.method = 'throw'),
                  (context.arg = record.arg),
                  (context.delegate = null),
                  ContinueSentinel
                );
              var info = record.arg;
              return info
                ? info.done
                  ? ((context[delegate.resultName] = info.value),
                    (context.next = delegate.nextLoc),
                    'return' !== context.method &&
                      ((context.method = 'next'),
                      (context.arg = undefined)),
                    (context.delegate = null),
                    ContinueSentinel)
                  : info
                : ((context.method = 'throw'),
                  (context.arg = new TypeError(
                    'iterator result is not an object'
                  )),
                  (context.delegate = null),
                  ContinueSentinel);
            }
            function pushTryEntry(locs) {
              var entry = {
                tryLoc: locs[0],
              };
              1 in locs && (entry.catchLoc = locs[1]),
                2 in locs &&
                  ((entry.finallyLoc = locs[2]),
                  (entry.afterLoc = locs[3])),
                this.tryEntries.push(entry);
            }
            function resetTryEntry(entry) {
              var record = entry.completion || {};
              (record.type = 'normal'),
                delete record.arg,
                (entry.completion = record);
            }
            function Context(tryLocsList) {
              (this.tryEntries = [
                {
                  tryLoc: 'root',
                },
              ]),
                tryLocsList.forEach(pushTryEntry, this),
                this.reset(!0);
            }
            function values(iterable) {
              if (iterable) {
                var iteratorMethod = iterable[iteratorSymbol];
                if (iteratorMethod)
                  return iteratorMethod.call(iterable);
                if ('function' == typeof iterable.next)
                  return iterable;
                if (!isNaN(iterable.length)) {
                  var i = -1,
                    next = function next() {
                      for (; ++i < iterable.length; )
                        if (hasOwn.call(iterable, i))
                          return (
                            (next.value = iterable[i]),
                            (next.done = !1),
                            next
                          );
                      return (
                        (next.value = undefined),
                        (next.done = !0),
                        next
                      );
                    };
                  return (next.next = next);
                }
              }
              return {
                next: doneResult,
              };
            }
            function doneResult() {
              return {
                value: undefined,
                done: !0,
              };
            }
            return (
              (GeneratorFunction.prototype =
                GeneratorFunctionPrototype),
              defineProperty(Gp, 'constructor', {
                value: GeneratorFunctionPrototype,
                configurable: !0,
              }),
              defineProperty(
                GeneratorFunctionPrototype,
                'constructor',
                {
                  value: GeneratorFunction,
                  configurable: !0,
                }
              ),
              (GeneratorFunction.displayName = define(
                GeneratorFunctionPrototype,
                toStringTagSymbol,
                'GeneratorFunction'
              )),
              (exports.isGeneratorFunction = function (genFun) {
                var ctor =
                  'function' == typeof genFun && genFun.constructor;
                return (
                  !!ctor &&
                  (ctor === GeneratorFunction ||
                    'GeneratorFunction' ===
                      (ctor.displayName || ctor.name))
                );
              }),
              (exports.mark = function (genFun) {
                return (
                  Object.setPrototypeOf
                    ? Object.setPrototypeOf(
                        genFun,
                        GeneratorFunctionPrototype
                      )
                    : ((genFun.__proto__ =
                        GeneratorFunctionPrototype),
                      define(
                        genFun,
                        toStringTagSymbol,
                        'GeneratorFunction'
                      )),
                  (genFun.prototype = Object.create(Gp)),
                  genFun
                );
              }),
              (exports.awrap = function (arg) {
                return {
                  __await: arg,
                };
              }),
              defineIteratorMethods(AsyncIterator.prototype),
              define(
                AsyncIterator.prototype,
                asyncIteratorSymbol,
                function () {
                  return this;
                }
              ),
              (exports.AsyncIterator = AsyncIterator),
              (exports.async = function (
                innerFn,
                outerFn,
                self,
                tryLocsList,
                PromiseImpl
              ) {
                void 0 === PromiseImpl && (PromiseImpl = Promise);
                var iter = new AsyncIterator(
                  wrap(innerFn, outerFn, self, tryLocsList),
                  PromiseImpl
                );
                return exports.isGeneratorFunction(outerFn)
                  ? iter
                  : iter.next().then(function (result) {
                      return result.done ? result.value : iter.next();
                    });
              }),
              defineIteratorMethods(Gp),
              define(Gp, toStringTagSymbol, 'Generator'),
              define(Gp, iteratorSymbol, function () {
                return this;
              }),
              define(Gp, 'toString', function () {
                return '[object Generator]';
              }),
              (exports.keys = function (val) {
                var object = Object(val),
                  keys = [];
                for (var key in object) keys.push(key);
                return (
                  keys.reverse(),
                  function next() {
                    for (; keys.length; ) {
                      var key = keys.pop();
                      if (key in object)
                        return (
                          (next.value = key), (next.done = !1), next
                        );
                    }
                    return (next.done = !0), next;
                  }
                );
              }),
              (exports.values = values),
              (Context.prototype = {
                constructor: Context,
                reset: function (skipTempReset) {
                  if (
                    ((this.prev = 0),
                    (this.next = 0),
                    (this.sent = this._sent = undefined),
                    (this.done = !1),
                    (this.delegate = null),
                    (this.method = 'next'),
                    (this.arg = undefined),
                    this.tryEntries.forEach(resetTryEntry),
                    !skipTempReset)
                  )
                    for (var name in this)
                      't' === name.charAt(0) &&
                        hasOwn.call(this, name) &&
                        !isNaN(+name.slice(1)) &&
                        (this[name] = undefined);
                },
                stop: function () {
                  this.done = !0;
                  var rootRecord = this.tryEntries[0].completion;
                  if ('throw' === rootRecord.type)
                    throw rootRecord.arg;
                  return this.rval;
                },
                dispatchException: function (exception) {
                  if (this.done) throw exception;
                  var context = this;
                  function handle(loc, caught) {
                    return (
                      (record.type = 'throw'),
                      (record.arg = exception),
                      (context.next = loc),
                      caught &&
                        ((context.method = 'next'),
                        (context.arg = undefined)),
                      !!caught
                    );
                  }
                  for (
                    var i = this.tryEntries.length - 1;
                    i >= 0;
                    --i
                  ) {
                    var entry = this.tryEntries[i],
                      record = entry.completion;
                    if ('root' === entry.tryLoc) return handle('end');
                    if (entry.tryLoc <= this.prev) {
                      var hasCatch = hasOwn.call(entry, 'catchLoc'),
                        hasFinally = hasOwn.call(entry, 'finallyLoc');
                      if (hasCatch && hasFinally) {
                        if (this.prev < entry.catchLoc)
                          return handle(entry.catchLoc, !0);
                        if (this.prev < entry.finallyLoc)
                          return handle(entry.finallyLoc);
                      } else if (hasCatch) {
                        if (this.prev < entry.catchLoc)
                          return handle(entry.catchLoc, !0);
                      } else {
                        if (!hasFinally)
                          throw new Error(
                            'try statement without catch or finally'
                          );
                        if (this.prev < entry.finallyLoc)
                          return handle(entry.finallyLoc);
                      }
                    }
                  }
                },
                abrupt: function (type, arg) {
                  for (
                    var i = this.tryEntries.length - 1;
                    i >= 0;
                    --i
                  ) {
                    var entry = this.tryEntries[i];
                    if (
                      entry.tryLoc <= this.prev &&
                      hasOwn.call(entry, 'finallyLoc') &&
                      this.prev < entry.finallyLoc
                    ) {
                      var finallyEntry = entry;
                      break;
                    }
                  }
                  finallyEntry &&
                    ('break' === type || 'continue' === type) &&
                    finallyEntry.tryLoc <= arg &&
                    arg <= finallyEntry.finallyLoc &&
                    (finallyEntry = null);
                  var record = finallyEntry
                    ? finallyEntry.completion
                    : {};
                  return (
                    (record.type = type),
                    (record.arg = arg),
                    finallyEntry
                      ? ((this.method = 'next'),
                        (this.next = finallyEntry.finallyLoc),
                        ContinueSentinel)
                      : this.complete(record)
                  );
                },
                complete: function (record, afterLoc) {
                  if ('throw' === record.type) throw record.arg;
                  return (
                    'break' === record.type ||
                    'continue' === record.type
                      ? (this.next = record.arg)
                      : 'return' === record.type
                      ? ((this.rval = this.arg = record.arg),
                        (this.method = 'return'),
                        (this.next = 'end'))
                      : 'normal' === record.type &&
                        afterLoc &&
                        (this.next = afterLoc),
                    ContinueSentinel
                  );
                },
                finish: function (finallyLoc) {
                  for (
                    var i = this.tryEntries.length - 1;
                    i >= 0;
                    --i
                  ) {
                    var entry = this.tryEntries[i];
                    if (entry.finallyLoc === finallyLoc)
                      return (
                        this.complete(
                          entry.completion,
                          entry.afterLoc
                        ),
                        resetTryEntry(entry),
                        ContinueSentinel
                      );
                  }
                },
                catch: function (tryLoc) {
                  for (
                    var i = this.tryEntries.length - 1;
                    i >= 0;
                    --i
                  ) {
                    var entry = this.tryEntries[i];
                    if (entry.tryLoc === tryLoc) {
                      var record = entry.completion;
                      if ('throw' === record.type) {
                        var thrown = record.arg;
                        resetTryEntry(entry);
                      }
                      return thrown;
                    }
                  }
                  throw new Error('illegal catch attempt');
                },
                delegateYield: function (
                  iterable,
                  resultName,
                  nextLoc
                ) {
                  return (
                    (this.delegate = {
                      iterator: values(iterable),
                      resultName: resultName,
                      nextLoc: nextLoc,
                    }),
                    'next' === this.method && (this.arg = undefined),
                    ContinueSentinel
                  );
                },
              }),
              exports
            );
          }
          function asyncGeneratorStep(
            gen,
            resolve,
            reject,
            _next,
            _throw,
            key,
            arg
          ) {
            try {
              var info = gen[key](arg);
              var value = info.value;
            } catch (error) {
              reject(error);
              return;
            }
            if (info.done) {
              resolve(value);
            } else {
              Promise.resolve(value).then(_next, _throw);
            }
          }
          function _asyncToGenerator(fn) {
            return function () {
              var self = this,
                args = arguments;
              return new Promise(function (resolve, reject) {
                var gen = fn.apply(self, args);
                function _next(value) {
                  asyncGeneratorStep(
                    gen,
                    resolve,
                    reject,
                    _next,
                    _throw,
                    'next',
                    value
                  );
                }
                function _throw(err) {
                  asyncGeneratorStep(
                    gen,
                    resolve,
                    reject,
                    _next,
                    _throw,
                    'throw',
                    err
                  );
                }
                _next(undefined);
              });
            };
          }
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError(
                'Cannot call a class as a function'
              );
            }
          }
          function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(
                target,
                _toPropertyKey(descriptor.key),
                descriptor
              );
            }
          }
          function _createClass(
            Constructor,
            protoProps,
            staticProps
          ) {
            if (protoProps)
              _defineProperties(Constructor.prototype, protoProps);
            if (staticProps)
              _defineProperties(Constructor, staticProps);
            Object.defineProperty(Constructor, 'prototype', {
              writable: false,
            });
            return Constructor;
          }
          function _defineProperty(obj, key, value) {
            key = _toPropertyKey(key);
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true,
              });
            } else {
              obj[key] = value;
            }
            return obj;
          }
          function _inherits(subClass, superClass) {
            if (
              typeof superClass !== 'function' &&
              superClass !== null
            ) {
              throw new TypeError(
                'Super expression must either be null or a function'
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  writable: true,
                  configurable: true,
                },
              }
            );
            Object.defineProperty(subClass, 'prototype', {
              writable: false,
            });
            if (superClass) _setPrototypeOf(subClass, superClass);
          }
          function _getPrototypeOf(o) {
            _getPrototypeOf = Object.setPrototypeOf
              ? Object.getPrototypeOf.bind()
              : function _getPrototypeOf(o) {
                  return o.__proto__ || Object.getPrototypeOf(o);
                };
            return _getPrototypeOf(o);
          }
          function _setPrototypeOf(o, p) {
            _setPrototypeOf = Object.setPrototypeOf
              ? Object.setPrototypeOf.bind()
              : function _setPrototypeOf(o, p) {
                  o.__proto__ = p;
                  return o;
                };
            return _setPrototypeOf(o, p);
          }
          function _isNativeReflectConstruct() {
            if (typeof Reflect === 'undefined' || !Reflect.construct)
              return false;
            if (Reflect.construct.sham) return false;
            if (typeof Proxy === 'function') return true;
            try {
              Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
              );
              return true;
            } catch (e) {
              return false;
            }
          }
          function _construct(Parent, args, Class) {
            if (_isNativeReflectConstruct()) {
              _construct = Reflect.construct.bind();
            } else {
              _construct = function _construct(Parent, args, Class) {
                var a = [null];
                a.push.apply(a, args);
                var Constructor = Function.bind.apply(Parent, a);
                var instance = new Constructor();
                if (Class) _setPrototypeOf(instance, Class.prototype);
                return instance;
              };
            }
            return _construct.apply(null, arguments);
          }
          function _isNativeFunction(fn) {
            return (
              Function.toString.call(fn).indexOf('[native code]') !==
              -1
            );
          }
          function _wrapNativeSuper(Class) {
            var _cache =
              typeof Map === 'function' ? new Map() : undefined;
            _wrapNativeSuper = function _wrapNativeSuper(Class) {
              if (Class === null || !_isNativeFunction(Class))
                return Class;
              if (typeof Class !== 'function') {
                throw new TypeError(
                  'Super expression must either be null or a function'
                );
              }
              if (typeof _cache !== 'undefined') {
                if (_cache.has(Class)) return _cache.get(Class);
                _cache.set(Class, Wrapper);
              }
              function Wrapper() {
                return _construct(
                  Class,
                  arguments,
                  _getPrototypeOf(this).constructor
                );
              }
              Wrapper.prototype = Object.create(Class.prototype, {
                constructor: {
                  value: Wrapper,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              });
              return _setPrototypeOf(Wrapper, Class);
            };
            return _wrapNativeSuper(Class);
          }
          function _assertThisInitialized(self) {
            if (self === void 0) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return self;
          }
          function _possibleConstructorReturn(self, call) {
            if (
              call &&
              (typeof call === 'object' || typeof call === 'function')
            ) {
              return call;
            } else if (call !== void 0) {
              throw new TypeError(
                'Derived constructors may only return object or undefined'
              );
            }
            return _assertThisInitialized(self);
          }
          function _createSuper(Derived) {
            var hasNativeReflectConstruct =
              _isNativeReflectConstruct();
            return function _createSuperInternal() {
              var Super = _getPrototypeOf(Derived),
                result;
              if (hasNativeReflectConstruct) {
                var NewTarget = _getPrototypeOf(this).constructor;
                result = Reflect.construct(
                  Super,
                  arguments,
                  NewTarget
                );
              } else {
                result = Super.apply(this, arguments);
              }
              return _possibleConstructorReturn(this, result);
            };
          }
          function _toPrimitive(input, hint) {
            if (typeof input !== 'object' || input === null)
              return input;
            var prim = input[Symbol.toPrimitive];
            if (prim !== undefined) {
              var res = prim.call(input, hint || 'default');
              if (typeof res !== 'object') return res;
              throw new TypeError(
                '@@toPrimitive must return a primitive value.'
              );
            }
            return (hint === 'string' ? String : Number)(input);
          }
          function _toPropertyKey(arg) {
            var key = _toPrimitive(arg, 'string');
            return typeof key === 'symbol' ? key : String(key);
          }

          /**
           * @module lib/functions
           */

          /**
           * Check to see this is a node environment.
           * @type {Boolean}
           */
          /* global global */
          var isNode =
            typeof global !== 'undefined' &&
            {}.toString.call(global) === '[object global]';

          /**
           * Get the name of the method for a given getter or setter.
           *
           * @param {string} prop The name of the property.
           * @param {string} type Either “get” or “set”.
           * @return {string}
           */
          function getMethodName(prop, type) {
            if (prop.indexOf(type.toLowerCase()) === 0) {
              return prop;
            }
            return ''
              .concat(type.toLowerCase())
              .concat(prop.substr(0, 1).toUpperCase())
              .concat(prop.substr(1));
          }

          /**
           * Check to see if the object is a DOM Element.
           *
           * @param {*} element The object to check.
           * @return {boolean}
           */
          function isDomElement(element) {
            return Boolean(
              element &&
                element.nodeType === 1 &&
                'nodeName' in element &&
                element.ownerDocument &&
                element.ownerDocument.defaultView
            );
          }

          /**
           * Check to see whether the value is a number.
           *
           * @see http://dl.dropboxusercontent.com/u/35146/js/tests/isNumber.html
           * @param {*} value The value to check.
           * @param {boolean} integer Check if the value is an integer.
           * @return {boolean}
           */
          function isInteger(value) {
            // eslint-disable-next-line eqeqeq
            return (
              !isNaN(parseFloat(value)) &&
              isFinite(value) &&
              Math.floor(value) == value
            );
          }

          /**
           * Check to see if the URL is a Vimeo url.
           *
           * @param {string} url The url string.
           * @return {boolean}
           */
          function isVimeoUrl(url) {
            return /^(https?:)?\/\/((player|www)\.)?vimeo\.com(?=$|\/)/.test(
              url
            );
          }

          /**
           * Check to see if the URL is for a Vimeo embed.
           *
           * @param {string} url The url string.
           * @return {boolean}
           */
          function isVimeoEmbed(url) {
            var expr = /^https:\/\/player\.vimeo\.com\/video\/\d+/;
            return expr.test(url);
          }

          /**
           * Get the Vimeo URL from an element.
           * The element must have either a data-vimeo-id or data-vimeo-url attribute.
           *
           * @param {object} oEmbedParameters The oEmbed parameters.
           * @return {string}
           */
          function getVimeoUrl() {
            var oEmbedParameters =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : {};
            var id = oEmbedParameters.id;
            var url = oEmbedParameters.url;
            var idOrUrl = id || url;
            if (!idOrUrl) {
              throw new Error(
                'An id or url must be passed, either in an options object or as a data-vimeo-id or data-vimeo-url attribute.'
              );
            }
            if (isInteger(idOrUrl)) {
              return 'https://vimeo.com/'.concat(idOrUrl);
            }
            if (isVimeoUrl(idOrUrl)) {
              return idOrUrl.replace('http:', 'https:');
            }
            if (id) {
              throw new TypeError(
                '\u201C'.concat(id, '\u201D is not a valid video id.')
              );
            }
            throw new TypeError(
              '\u201C'.concat(
                idOrUrl,
                '\u201D is not a vimeo.com url.'
              )
            );
          }

          /* eslint-disable max-params */
          /**
           * A utility method for attaching and detaching event handlers
           *
           * @param {EventTarget} target
           * @param {string | string[]} eventName
           * @param {function} callback
           * @param {'addEventListener' | 'on'} onName
           * @param {'removeEventListener' | 'off'} offName
           * @return {{cancel: (function(): void)}}
           */
          var subscribe = function subscribe(
            target,
            eventName,
            callback
          ) {
            var onName =
              arguments.length > 3 && arguments[3] !== undefined
                ? arguments[3]
                : 'addEventListener';
            var offName =
              arguments.length > 4 && arguments[4] !== undefined
                ? arguments[4]
                : 'removeEventListener';
            var eventNames =
              typeof eventName === 'string' ? [eventName] : eventName;
            eventNames.forEach(function (evName) {
              target[onName](evName, callback);
            });
            return {
              cancel: function cancel() {
                return eventNames.forEach(function (evName) {
                  return target[offName](evName, callback);
                });
              },
            };
          };

          var arrayIndexOfSupport =
            typeof Array.prototype.indexOf !== 'undefined';
          var postMessageSupport =
            typeof window !== 'undefined' &&
            typeof window.postMessage !== 'undefined';
          if (
            !isNode &&
            (!arrayIndexOfSupport || !postMessageSupport)
          ) {
            throw new Error(
              'Sorry, the Vimeo Player API is not available in this browser.'
            );
          }

          var commonjsGlobal =
            typeof globalThis !== 'undefined'
              ? globalThis
              : typeof window !== 'undefined'
              ? window
              : typeof global !== 'undefined'
              ? global
              : typeof self !== 'undefined'
              ? self
              : {};

          function createCommonjsModule(fn, module) {
            return (
              (module = {
                exports: {},
              }),
              fn(module, module.exports),
              module.exports
            );
          }

          /*!
           * weakmap-polyfill v2.0.4 - ECMAScript6 WeakMap polyfill
           * https://github.com/polygonplanet/weakmap-polyfill
           * Copyright (c) 2015-2021 polygonplanet <polygon.planet.aqua@gmail.com>
           * @license MIT
           */

          (function (self) {
            if (self.WeakMap) {
              return;
            }
            var hasOwnProperty = Object.prototype.hasOwnProperty;
            var hasDefine =
              Object.defineProperty &&
              (function () {
                try {
                  // Avoid IE8's broken Object.defineProperty
                  return (
                    Object.defineProperty({}, 'x', {
                      value: 1,
                    }).x === 1
                  );
                } catch (e) {}
              })();
            var defineProperty = function (object, name, value) {
              if (hasDefine) {
                Object.defineProperty(object, name, {
                  configurable: true,
                  writable: true,
                  value: value,
                });
              } else {
                object[name] = value;
              }
            };
            self.WeakMap = (function () {
              // ECMA-262 23.3 WeakMap Objects
              function WeakMap() {
                if (this === void 0) {
                  throw new TypeError(
                    "Constructor WeakMap requires 'new'"
                  );
                }
                defineProperty(this, '_id', genId('_WeakMap'));

                // ECMA-262 23.3.1.1 WeakMap([iterable])
                if (arguments.length > 0) {
                  // Currently, WeakMap `iterable` argument is not supported
                  throw new TypeError(
                    'WeakMap iterable is not supported'
                  );
                }
              }

              // ECMA-262 23.3.3.2 WeakMap.prototype.delete(key)
              defineProperty(
                WeakMap.prototype,
                'delete',
                function (key) {
                  checkInstance(this, 'delete');
                  if (!isObject(key)) {
                    return false;
                  }
                  var entry = key[this._id];
                  if (entry && entry[0] === key) {
                    delete key[this._id];
                    return true;
                  }
                  return false;
                }
              );

              // ECMA-262 23.3.3.3 WeakMap.prototype.get(key)
              defineProperty(
                WeakMap.prototype,
                'get',
                function (key) {
                  checkInstance(this, 'get');
                  if (!isObject(key)) {
                    return void 0;
                  }
                  var entry = key[this._id];
                  if (entry && entry[0] === key) {
                    return entry[1];
                  }
                  return void 0;
                }
              );

              // ECMA-262 23.3.3.4 WeakMap.prototype.has(key)
              defineProperty(
                WeakMap.prototype,
                'has',
                function (key) {
                  checkInstance(this, 'has');
                  if (!isObject(key)) {
                    return false;
                  }
                  var entry = key[this._id];
                  if (entry && entry[0] === key) {
                    return true;
                  }
                  return false;
                }
              );

              // ECMA-262 23.3.3.5 WeakMap.prototype.set(key, value)
              defineProperty(
                WeakMap.prototype,
                'set',
                function (key, value) {
                  checkInstance(this, 'set');
                  if (!isObject(key)) {
                    throw new TypeError(
                      'Invalid value used as weak map key'
                    );
                  }
                  var entry = key[this._id];
                  if (entry && entry[0] === key) {
                    entry[1] = value;
                    return this;
                  }
                  defineProperty(key, this._id, [key, value]);
                  return this;
                }
              );
              function checkInstance(x, methodName) {
                if (!isObject(x) || !hasOwnProperty.call(x, '_id')) {
                  throw new TypeError(
                    methodName +
                      ' method called on incompatible receiver ' +
                      typeof x
                  );
                }
              }
              function genId(prefix) {
                return prefix + '_' + rand() + '.' + rand();
              }
              function rand() {
                return Math.random().toString().substring(2);
              }
              defineProperty(WeakMap, '_polyfill', true);
              return WeakMap;
            })();
            function isObject(x) {
              return Object(x) === x;
            }
          })(
            typeof globalThis !== 'undefined'
              ? globalThis
              : typeof self !== 'undefined'
              ? self
              : typeof window !== 'undefined'
              ? window
              : typeof commonjsGlobal !== 'undefined'
              ? commonjsGlobal
              : commonjsGlobal
          );

          var npo_src = createCommonjsModule(function (module) {
            /*! Native Promise Only
    v0.8.1 (c) Kyle Simpson
    MIT License: http://getify.mit-license.org
*/

            (function UMD(name, context, definition) {
              // special form of UMD for polyfilling across evironments
              context[name] = context[name] || definition();
              if (module.exports) {
                module.exports = context[name];
              }
            })(
              'Promise',
              typeof commonjsGlobal != 'undefined'
                ? commonjsGlobal
                : commonjsGlobal,
              function DEF() {
                var builtInProp,
                  cycle,
                  scheduling_queue,
                  ToString = Object.prototype.toString,
                  timer =
                    typeof setImmediate != 'undefined'
                      ? function timer(fn) {
                          return setImmediate(fn);
                        }
                      : setTimeout;

                // dammit, IE8.
                try {
                  Object.defineProperty({}, 'x', {});
                  builtInProp = function builtInProp(
                    obj,
                    name,
                    val,
                    config
                  ) {
                    return Object.defineProperty(obj, name, {
                      value: val,
                      writable: true,
                      configurable: config !== false,
                    });
                  };
                } catch (err) {
                  builtInProp = function builtInProp(obj, name, val) {
                    obj[name] = val;
                    return obj;
                  };
                }

                // Note: using a queue instead of array for efficiency
                scheduling_queue = (function Queue() {
                  var first, last, item;
                  function Item(fn, self) {
                    this.fn = fn;
                    this.self = self;
                    this.next = void 0;
                  }
                  return {
                    add: function add(fn, self) {
                      item = new Item(fn, self);
                      if (last) {
                        last.next = item;
                      } else {
                        first = item;
                      }
                      last = item;
                      item = void 0;
                    },
                    drain: function drain() {
                      var f = first;
                      first = last = cycle = void 0;
                      while (f) {
                        f.fn.call(f.self);
                        f = f.next;
                      }
                    },
                  };
                })();
                function schedule(fn, self) {
                  scheduling_queue.add(fn, self);
                  if (!cycle) {
                    cycle = timer(scheduling_queue.drain);
                  }
                }

                // promise duck typing
                function isThenable(o) {
                  var _then,
                    o_type = typeof o;
                  if (
                    o != null &&
                    (o_type == 'object' || o_type == 'function')
                  ) {
                    _then = o.then;
                  }
                  return typeof _then == 'function' ? _then : false;
                }
                function notify() {
                  for (var i = 0; i < this.chain.length; i++) {
                    notifyIsolated(
                      this,
                      this.state === 1
                        ? this.chain[i].success
                        : this.chain[i].failure,
                      this.chain[i]
                    );
                  }
                  this.chain.length = 0;
                }

                // NOTE: This is a separate function to isolate
                // the `try..catch` so that other code can be
                // optimized better
                function notifyIsolated(self, cb, chain) {
                  var ret, _then;
                  try {
                    if (cb === false) {
                      chain.reject(self.msg);
                    } else {
                      if (cb === true) {
                        ret = self.msg;
                      } else {
                        ret = cb.call(void 0, self.msg);
                      }
                      if (ret === chain.promise) {
                        chain.reject(
                          TypeError('Promise-chain cycle')
                        );
                      } else if ((_then = isThenable(ret))) {
                        _then.call(ret, chain.resolve, chain.reject);
                      } else {
                        chain.resolve(ret);
                      }
                    }
                  } catch (err) {
                    chain.reject(err);
                  }
                }
                function resolve(msg) {
                  var _then,
                    self = this;

                  // already triggered?
                  if (self.triggered) {
                    return;
                  }
                  self.triggered = true;

                  // unwrap
                  if (self.def) {
                    self = self.def;
                  }
                  try {
                    if ((_then = isThenable(msg))) {
                      schedule(function () {
                        var def_wrapper = new MakeDefWrapper(self);
                        try {
                          _then.call(
                            msg,
                            function $resolve$() {
                              resolve.apply(def_wrapper, arguments);
                            },
                            function $reject$() {
                              reject.apply(def_wrapper, arguments);
                            }
                          );
                        } catch (err) {
                          reject.call(def_wrapper, err);
                        }
                      });
                    } else {
                      self.msg = msg;
                      self.state = 1;
                      if (self.chain.length > 0) {
                        schedule(notify, self);
                      }
                    }
                  } catch (err) {
                    reject.call(new MakeDefWrapper(self), err);
                  }
                }
                function reject(msg) {
                  var self = this;

                  // already triggered?
                  if (self.triggered) {
                    return;
                  }
                  self.triggered = true;

                  // unwrap
                  if (self.def) {
                    self = self.def;
                  }
                  self.msg = msg;
                  self.state = 2;
                  if (self.chain.length > 0) {
                    schedule(notify, self);
                  }
                }
                function iteratePromises(
                  Constructor,
                  arr,
                  resolver,
                  rejecter
                ) {
                  for (var idx = 0; idx < arr.length; idx++) {
                    (function IIFE(idx) {
                      Constructor.resolve(arr[idx]).then(
                        function $resolver$(msg) {
                          resolver(idx, msg);
                        },
                        rejecter
                      );
                    })(idx);
                  }
                }
                function MakeDefWrapper(self) {
                  this.def = self;
                  this.triggered = false;
                }
                function MakeDef(self) {
                  this.promise = self;
                  this.state = 0;
                  this.triggered = false;
                  this.chain = [];
                  this.msg = void 0;
                }
                function Promise(executor) {
                  if (typeof executor != 'function') {
                    throw TypeError('Not a function');
                  }
                  if (this.__NPO__ !== 0) {
                    throw TypeError('Not a promise');
                  }

                  // instance shadowing the inherited "brand"
                  // to signal an already "initialized" promise
                  this.__NPO__ = 1;
                  var def = new MakeDef(this);
                  this['then'] = function then(success, failure) {
                    var o = {
                      success:
                        typeof success == 'function' ? success : true,
                      failure:
                        typeof failure == 'function'
                          ? failure
                          : false,
                    };
                    // Note: `then(..)` itself can be borrowed to be used against
                    // a different promise constructor for making the chained promise,
                    // by substituting a different `this` binding.
                    o.promise = new this.constructor(
                      function extractChain(resolve, reject) {
                        if (
                          typeof resolve != 'function' ||
                          typeof reject != 'function'
                        ) {
                          throw TypeError('Not a function');
                        }
                        o.resolve = resolve;
                        o.reject = reject;
                      }
                    );
                    def.chain.push(o);
                    if (def.state !== 0) {
                      schedule(notify, def);
                    }
                    return o.promise;
                  };
                  this['catch'] = function $catch$(failure) {
                    return this.then(void 0, failure);
                  };
                  try {
                    executor.call(
                      void 0,
                      function publicResolve(msg) {
                        resolve.call(def, msg);
                      },
                      function publicReject(msg) {
                        reject.call(def, msg);
                      }
                    );
                  } catch (err) {
                    reject.call(def, err);
                  }
                }
                var PromisePrototype = builtInProp(
                  {},
                  'constructor',
                  Promise /*configurable=*/,
                  false
                );

                // Note: Android 4 cannot use `Object.defineProperty(..)` here
                Promise.prototype = PromisePrototype;

                // built-in "brand" to signal an "uninitialized" promise
                builtInProp(
                  PromisePrototype,
                  '__NPO__',
                  0 /*configurable=*/,
                  false
                );
                builtInProp(
                  Promise,
                  'resolve',
                  function Promise$resolve(msg) {
                    var Constructor = this;

                    // spec mandated checks
                    // note: best "isPromise" check that's practical for now
                    if (
                      msg &&
                      typeof msg == 'object' &&
                      msg.__NPO__ === 1
                    ) {
                      return msg;
                    }
                    return new Constructor(function executor(
                      resolve,
                      reject
                    ) {
                      if (
                        typeof resolve != 'function' ||
                        typeof reject != 'function'
                      ) {
                        throw TypeError('Not a function');
                      }
                      resolve(msg);
                    });
                  }
                );
                builtInProp(
                  Promise,
                  'reject',
                  function Promise$reject(msg) {
                    return new this(function executor(
                      resolve,
                      reject
                    ) {
                      if (
                        typeof resolve != 'function' ||
                        typeof reject != 'function'
                      ) {
                        throw TypeError('Not a function');
                      }
                      reject(msg);
                    });
                  }
                );
                builtInProp(
                  Promise,
                  'all',
                  function Promise$all(arr) {
                    var Constructor = this;

                    // spec mandated checks
                    if (ToString.call(arr) != '[object Array]') {
                      return Constructor.reject(
                        TypeError('Not an array')
                      );
                    }
                    if (arr.length === 0) {
                      return Constructor.resolve([]);
                    }
                    return new Constructor(function executor(
                      resolve,
                      reject
                    ) {
                      if (
                        typeof resolve != 'function' ||
                        typeof reject != 'function'
                      ) {
                        throw TypeError('Not a function');
                      }
                      var len = arr.length,
                        msgs = Array(len),
                        count = 0;
                      iteratePromises(
                        Constructor,
                        arr,
                        function resolver(idx, msg) {
                          msgs[idx] = msg;
                          if (++count === len) {
                            resolve(msgs);
                          }
                        },
                        reject
                      );
                    });
                  }
                );
                builtInProp(
                  Promise,
                  'race',
                  function Promise$race(arr) {
                    var Constructor = this;

                    // spec mandated checks
                    if (ToString.call(arr) != '[object Array]') {
                      return Constructor.reject(
                        TypeError('Not an array')
                      );
                    }
                    return new Constructor(function executor(
                      resolve,
                      reject
                    ) {
                      if (
                        typeof resolve != 'function' ||
                        typeof reject != 'function'
                      ) {
                        throw TypeError('Not a function');
                      }
                      iteratePromises(
                        Constructor,
                        arr,
                        function resolver(idx, msg) {
                          resolve(msg);
                        },
                        reject
                      );
                    });
                  }
                );
                return Promise;
              }
            );
          });

          /**
           * @module lib/callbacks
           */

          var callbackMap = new WeakMap();

          /**
           * Store a callback for a method or event for a player.
           *
           * @param {Player} player The player object.
           * @param {string} name The method or event name.
           * @param {(function(this:Player, *): void|{resolve: function, reject: function})} callback
           *        The callback to call or an object with resolve and reject functions for a promise.
           * @return {void}
           */
          function storeCallback(player, name, callback) {
            var playerCallbacks =
              callbackMap.get(player.element) || {};
            if (!(name in playerCallbacks)) {
              playerCallbacks[name] = [];
            }
            playerCallbacks[name].push(callback);
            callbackMap.set(player.element, playerCallbacks);
          }

          /**
           * Get the callbacks for a player and event or method.
           *
           * @param {Player} player The player object.
           * @param {string} name The method or event name
           * @return {function[]}
           */
          function getCallbacks(player, name) {
            var playerCallbacks =
              callbackMap.get(player.element) || {};
            return playerCallbacks[name] || [];
          }

          /**
           * Remove a stored callback for a method or event for a player.
           *
           * @param {Player} player The player object.
           * @param {string} name The method or event name
           * @param {function} [callback] The specific callback to remove.
           * @return {boolean} Was this the last callback?
           */
          function removeCallback(player, name, callback) {
            var playerCallbacks =
              callbackMap.get(player.element) || {};
            if (!playerCallbacks[name]) {
              return true;
            }

            // If no callback is passed, remove all callbacks for the event
            if (!callback) {
              playerCallbacks[name] = [];
              callbackMap.set(player.element, playerCallbacks);
              return true;
            }
            var index = playerCallbacks[name].indexOf(callback);
            if (index !== -1) {
              playerCallbacks[name].splice(index, 1);
            }
            callbackMap.set(player.element, playerCallbacks);
            return (
              playerCallbacks[name] &&
              playerCallbacks[name].length === 0
            );
          }

          /**
           * Return the first stored callback for a player and event or method.
           *
           * @param {Player} player The player object.
           * @param {string} name The method or event name.
           * @return {function} The callback, or false if there were none
           */
          function shiftCallbacks(player, name) {
            var playerCallbacks = getCallbacks(player, name);
            if (playerCallbacks.length < 1) {
              return false;
            }
            var callback = playerCallbacks.shift();
            removeCallback(player, name, callback);
            return callback;
          }

          /**
           * Move callbacks associated with an element to another element.
           *
           * @param {HTMLElement} oldElement The old element.
           * @param {HTMLElement} newElement The new element.
           * @return {void}
           */
          function swapCallbacks(oldElement, newElement) {
            var playerCallbacks = callbackMap.get(oldElement);
            callbackMap.set(newElement, playerCallbacks);
            callbackMap.delete(oldElement);
          }

          /**
           * @module lib/postmessage
           */

          /**
           * Parse a message received from postMessage.
           *
           * @param {*} data The data received from postMessage.
           * @return {object}
           */
          function parseMessageData(data) {
            if (typeof data === 'string') {
              try {
                data = JSON.parse(data);
              } catch (error) {
                // If the message cannot be parsed, throw the error as a warning
                console.warn(error);
                return {};
              }
            }
            return data;
          }

          /**
           * Post a message to the specified target.
           *
           * @param {Player} player The player object to use.
           * @param {string} method The API method to call.
           * @param {object} params The parameters to send to the player.
           * @return {void}
           */
          function postMessage(player, method, params) {
            if (
              !player.element.contentWindow ||
              !player.element.contentWindow.postMessage
            ) {
              return;
            }
            var message = {
              method: method,
            };
            if (params !== undefined) {
              message.value = params;
            }

            // IE 8 and 9 do not support passing messages, so stringify them
            var ieVersion = parseFloat(
              navigator.userAgent
                .toLowerCase()
                .replace(/^.*msie (\d+).*$/, '$1')
            );
            if (ieVersion >= 8 && ieVersion < 10) {
              message = JSON.stringify(message);
            }
            player.element.contentWindow.postMessage(
              message,
              player.origin
            );
          }

          /**
           * Parse the data received from a message event.
           *
           * @param {Player} player The player that received the message.
           * @param {(Object|string)} data The message data. Strings will be parsed into JSON.
           * @return {void}
           */
          function processData(player, data) {
            data = parseMessageData(data);
            var callbacks = [];
            var param;
            if (data.event) {
              if (data.event === 'error') {
                var promises = getCallbacks(player, data.data.method);
                promises.forEach(function (promise) {
                  var error = new Error(data.data.message);
                  error.name = data.data.name;
                  promise.reject(error);
                  removeCallback(player, data.data.method, promise);
                });
              }
              callbacks = getCallbacks(
                player,
                'event:'.concat(data.event)
              );
              param = data.data;
            } else if (data.method) {
              var callback = shiftCallbacks(player, data.method);
              if (callback) {
                callbacks.push(callback);
                param = data.value;
              }
            }
            callbacks.forEach(function (callback) {
              try {
                if (typeof callback === 'function') {
                  callback.call(player, param);
                  return;
                }
                callback.resolve(param);
              } catch (e) {
                // empty
              }
            });
          }

          /**
           * @module lib/embed
           */
          var oEmbedParameters = [
            'airplay',
            'audio_tracks',
            'autopause',
            'autoplay',
            'background',
            'byline',
            'cc',
            'chapter_id',
            'chapters',
            'chromecast',
            'color',
            'colors',
            'controls',
            'dnt',
            'end_time',
            'fullscreen',
            'height',
            'id',
            'interactive_params',
            'keyboard',
            'loop',
            'maxheight',
            'maxwidth',
            'muted',
            'play_button_position',
            'playsinline',
            'portrait',
            'progress_bar',
            'quality_selector',
            'responsive',
            'speed',
            'start_time',
            'texttrack',
            'title',
            'transcript',
            'transparent',
            'url',
            'vimeo_logo',
            'volume',
            'watch_full_video',
            'width',
          ];

          /**
           * Get the 'data-vimeo'-prefixed attributes from an element as an object.
           *
           * @param {HTMLElement} element The element.
           * @param {Object} [defaults={}] The default values to use.
           * @return {Object<string, string>}
           */
          function getOEmbedParameters(element) {
            var defaults =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : {};
            return oEmbedParameters.reduce(function (params, param) {
              var value = element.getAttribute(
                'data-vimeo-'.concat(param)
              );
              if (value || value === '') {
                params[param] = value === '' ? 1 : value;
              }
              return params;
            }, defaults);
          }

          /**
           * Create an embed from oEmbed data inside an element.
           *
           * @param {object} data The oEmbed data.
           * @param {HTMLElement} element The element to put the iframe in.
           * @return {HTMLIFrameElement} The iframe embed.
           */
          function createEmbed(_ref, element) {
            var html = _ref.html;
            if (!element) {
              throw new TypeError('An element must be provided');
            }
            if (
              element.getAttribute('data-vimeo-initialized') !== null
            ) {
              return element.querySelector('iframe');
            }
            var div = document.createElement('div');
            div.innerHTML = html;
            element.appendChild(div.firstChild);
            element.setAttribute('data-vimeo-initialized', 'true');
            return element.querySelector('iframe');
          }

          /**
           * Make an oEmbed call for the specified URL.
           *
           * @param {string} videoUrl The vimeo.com url for the video.
           * @param {Object} [params] Parameters to pass to oEmbed.
           * @param {HTMLElement} element The element.
           * @return {Promise}
           */
          function getOEmbedData(videoUrl) {
            var params =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : {};
            var element =
              arguments.length > 2 ? arguments[2] : undefined;
            return new Promise(function (resolve, reject) {
              if (!isVimeoUrl(videoUrl)) {
                throw new TypeError(
                  '\u201C'.concat(
                    videoUrl,
                    '\u201D is not a vimeo.com url.'
                  )
                );
              }
              var url =
                'https://vimeo.com/api/oembed.json?url='.concat(
                  encodeURIComponent(videoUrl)
                );
              for (var param in params) {
                if (params.hasOwnProperty(param)) {
                  url += '&'
                    .concat(param, '=')
                    .concat(encodeURIComponent(params[param]));
                }
              }
              var xhr =
                'XDomainRequest' in window
                  ? new XDomainRequest()
                  : new XMLHttpRequest();
              xhr.open('GET', url, true);
              xhr.onload = function () {
                if (xhr.status === 404) {
                  reject(
                    new Error(
                      '\u201C'.concat(
                        videoUrl,
                        '\u201D was not found.'
                      )
                    )
                  );
                  return;
                }
                if (xhr.status === 403) {
                  reject(
                    new Error(
                      '\u201C'.concat(
                        videoUrl,
                        '\u201D is not embeddable.'
                      )
                    )
                  );
                  return;
                }
                try {
                  var json = JSON.parse(xhr.responseText);
                  // Check api response for 403 on oembed
                  if (json.domain_status_code === 403) {
                    // We still want to create the embed to give users visual feedback
                    createEmbed(json, element);
                    reject(
                      new Error(
                        '\u201C'.concat(
                          videoUrl,
                          '\u201D is not embeddable.'
                        )
                      )
                    );
                    return;
                  }
                  resolve(json);
                } catch (error) {
                  reject(error);
                }
              };
              xhr.onerror = function () {
                var status = xhr.status
                  ? ' ('.concat(xhr.status, ')')
                  : '';
                reject(
                  new Error(
                    'There was an error fetching the embed code from Vimeo'.concat(
                      status,
                      '.'
                    )
                  )
                );
              };
              xhr.send();
            });
          }

          /**
           * Initialize all embeds within a specific element
           *
           * @param {HTMLElement} [parent=document] The parent element.
           * @return {void}
           */
          function initializeEmbeds() {
            var parent =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : document;
            var elements = [].slice.call(
              parent.querySelectorAll(
                '[data-vimeo-id], [data-vimeo-url]'
              )
            );
            var handleError = function handleError(error) {
              if ('console' in window && console.error) {
                console.error(
                  'There was an error creating an embed: '.concat(
                    error
                  )
                );
              }
            };
            elements.forEach(function (element) {
              try {
                // Skip any that have data-vimeo-defer
                if (
                  element.getAttribute('data-vimeo-defer') !== null
                ) {
                  return;
                }
                var params = getOEmbedParameters(element);
                var url = getVimeoUrl(params);
                getOEmbedData(url, params, element)
                  .then(function (data) {
                    return createEmbed(data, element);
                  })
                  .catch(handleError);
              } catch (error) {
                handleError(error);
              }
            });
          }

          /**
           * Resize embeds when messaged by the player.
           *
           * @param {HTMLElement} [parent=document] The parent element.
           * @return {void}
           */
          function resizeEmbeds() {
            var parent =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : document;
            // Prevent execution if users include the player.js script multiple times.
            if (window.VimeoPlayerResizeEmbeds_) {
              return;
            }
            window.VimeoPlayerResizeEmbeds_ = true;
            var onMessage = function onMessage(event) {
              if (!isVimeoUrl(event.origin)) {
                return;
              }

              // 'spacechange' is fired only on embeds with cards
              if (!event.data || event.data.event !== 'spacechange') {
                return;
              }
              var iframes = parent.querySelectorAll('iframe');
              for (var i = 0; i < iframes.length; i++) {
                if (iframes[i].contentWindow !== event.source) {
                  continue;
                }

                // Change padding-bottom of the enclosing div to accommodate
                // card carousel without distorting aspect ratio
                var space = iframes[i].parentElement;
                space.style.paddingBottom = ''.concat(
                  event.data.data[0].bottom,
                  'px'
                );
                break;
              }
            };
            window.addEventListener('message', onMessage);
          }

          /**
           * Add chapters to existing metadata for Google SEO
           *
           * @param {HTMLElement} [parent=document] The parent element.
           * @return {void}
           */
          function initAppendVideoMetadata() {
            var parent =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : document;
            //  Prevent execution if users include the player.js script multiple times.
            if (window.VimeoSeoMetadataAppended) {
              return;
            }
            window.VimeoSeoMetadataAppended = true;
            var onMessage = function onMessage(event) {
              if (!isVimeoUrl(event.origin)) {
                return;
              }
              var data = parseMessageData(event.data);
              if (!data || data.event !== 'ready') {
                return;
              }
              var iframes = parent.querySelectorAll('iframe');
              for (var i = 0; i < iframes.length; i++) {
                var iframe = iframes[i];

                // Initiate appendVideoMetadata if iframe is a Vimeo embed
                var isValidMessageSource =
                  iframe.contentWindow === event.source;
                if (
                  isVimeoEmbed(iframe.src) &&
                  isValidMessageSource
                ) {
                  var player = new Player(iframe);
                  player.callMethod(
                    'appendVideoMetadata',
                    window.location.href
                  );
                }
              }
            };
            window.addEventListener('message', onMessage);
          }

          /**
           * Seek to time indicated by vimeo_t query parameter if present in URL
           *
           * @param {HTMLElement} [parent=document] The parent element.
           * @return {void}
           */
          function checkUrlTimeParam() {
            var parent =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : document;
            //  Prevent execution if users include the player.js script multiple times.
            if (window.VimeoCheckedUrlTimeParam) {
              return;
            }
            window.VimeoCheckedUrlTimeParam = true;
            var handleError = function handleError(error) {
              if ('console' in window && console.error) {
                console.error(
                  'There was an error getting video Id: '.concat(
                    error
                  )
                );
              }
            };
            var onMessage = function onMessage(event) {
              if (!isVimeoUrl(event.origin)) {
                return;
              }
              var data = parseMessageData(event.data);
              if (!data || data.event !== 'ready') {
                return;
              }
              var iframes = parent.querySelectorAll('iframe');
              var _loop = function _loop() {
                var iframe = iframes[i];
                var isValidMessageSource =
                  iframe.contentWindow === event.source;
                if (
                  isVimeoEmbed(iframe.src) &&
                  isValidMessageSource
                ) {
                  var player = new Player(iframe);
                  player
                    .getVideoId()
                    .then(function (videoId) {
                      var matches = new RegExp(
                        '[?&]vimeo_t_'.concat(videoId, '=([^&#]*)')
                      ).exec(window.location.href);
                      if (matches && matches[1]) {
                        var sec = decodeURI(matches[1]);
                        player.setCurrentTime(sec);
                      }
                      return;
                    })
                    .catch(handleError);
                }
              };
              for (var i = 0; i < iframes.length; i++) {
                _loop();
              }
            };
            window.addEventListener('message', onMessage);
          }

          /* MIT License

Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
Terms */

          function initializeScreenfull() {
            var fn = (function () {
              var val;
              var fnMap = [
                [
                  'requestFullscreen',
                  'exitFullscreen',
                  'fullscreenElement',
                  'fullscreenEnabled',
                  'fullscreenchange',
                  'fullscreenerror',
                ], // New WebKit
                [
                  'webkitRequestFullscreen',
                  'webkitExitFullscreen',
                  'webkitFullscreenElement',
                  'webkitFullscreenEnabled',
                  'webkitfullscreenchange',
                  'webkitfullscreenerror',
                ], // Old WebKit
                [
                  'webkitRequestFullScreen',
                  'webkitCancelFullScreen',
                  'webkitCurrentFullScreenElement',
                  'webkitCancelFullScreen',
                  'webkitfullscreenchange',
                  'webkitfullscreenerror',
                ],
                [
                  'mozRequestFullScreen',
                  'mozCancelFullScreen',
                  'mozFullScreenElement',
                  'mozFullScreenEnabled',
                  'mozfullscreenchange',
                  'mozfullscreenerror',
                ],
                [
                  'msRequestFullscreen',
                  'msExitFullscreen',
                  'msFullscreenElement',
                  'msFullscreenEnabled',
                  'MSFullscreenChange',
                  'MSFullscreenError',
                ],
              ];
              var i = 0;
              var l = fnMap.length;
              var ret = {};
              for (; i < l; i++) {
                val = fnMap[i];
                if (val && val[1] in document) {
                  for (i = 0; i < val.length; i++) {
                    ret[fnMap[0][i]] = val[i];
                  }
                  return ret;
                }
              }
              return false;
            })();
            var eventNameMap = {
              fullscreenchange: fn.fullscreenchange,
              fullscreenerror: fn.fullscreenerror,
            };
            var screenfull = {
              request: function request(element) {
                return new Promise(function (resolve, reject) {
                  var onFullScreenEntered =
                    function onFullScreenEntered() {
                      screenfull.off(
                        'fullscreenchange',
                        onFullScreenEntered
                      );
                      resolve();
                    };
                  screenfull.on(
                    'fullscreenchange',
                    onFullScreenEntered
                  );
                  element = element || document.documentElement;
                  var returnPromise = element[fn.requestFullscreen]();
                  if (returnPromise instanceof Promise) {
                    returnPromise
                      .then(onFullScreenEntered)
                      .catch(reject);
                  }
                });
              },
              exit: function exit() {
                return new Promise(function (resolve, reject) {
                  if (!screenfull.isFullscreen) {
                    resolve();
                    return;
                  }
                  var onFullScreenExit = function onFullScreenExit() {
                    screenfull.off(
                      'fullscreenchange',
                      onFullScreenExit
                    );
                    resolve();
                  };
                  screenfull.on('fullscreenchange', onFullScreenExit);
                  var returnPromise = document[fn.exitFullscreen]();
                  if (returnPromise instanceof Promise) {
                    returnPromise
                      .then(onFullScreenExit)
                      .catch(reject);
                  }
                });
              },
              on: function on(event, callback) {
                var eventName = eventNameMap[event];
                if (eventName) {
                  document.addEventListener(eventName, callback);
                }
              },
              off: function off(event, callback) {
                var eventName = eventNameMap[event];
                if (eventName) {
                  document.removeEventListener(eventName, callback);
                }
              },
            };
            Object.defineProperties(screenfull, {
              isFullscreen: {
                get: function get() {
                  return Boolean(document[fn.fullscreenElement]);
                },
              },
              element: {
                enumerable: true,
                get: function get() {
                  return document[fn.fullscreenElement];
                },
              },
              isEnabled: {
                enumerable: true,
                get: function get() {
                  // Coerce to boolean in case of old WebKit
                  return Boolean(document[fn.fullscreenEnabled]);
                },
              },
            });
            return screenfull;
          }

          /** @typedef {import('./timing-src-connector.types').PlayerControls} PlayerControls */
          /** @typedef {import('./timing-object.types').TimingObject} TimingObject */
          /** @typedef {import('./timing-src-connector.types').TimingSrcConnectorOptions} TimingSrcConnectorOptions */
          /** @typedef {(msg: string) => any} Logger */
          /** @typedef {import('timing-object.types').TConnectionState} TConnectionState */

          /**
           * @type {TimingSrcConnectorOptions}
           *
           * For details on these properties and their effects, see the typescript definition referenced above.
           */
          var defaultOptions = {
            role: 'viewer',
            autoPlayMuted: true,
            allowedDrift: 0.3,
            maxAllowedDrift: 1,
            minCheckInterval: 0.1,
            maxRateAdjustment: 0.2,
            maxTimeToCatchUp: 1,
          };

          /**
           * There's a proposed W3C spec for the Timing Object which would introduce a new set of APIs that would simplify time-synchronization tasks for browser applications.
           *
           * Proposed spec: https://webtiming.github.io/timingobject/
           * V3 Spec: https://timingsrc.readthedocs.io/en/latest/
           * Demuxed talk: https://www.youtube.com/watch?v=cZSjDaGDmX8
           *
           * This class makes it easy to connect Vimeo.Player to a provided TimingObject via Vimeo.Player.setTimingSrc(myTimingObject, options) and the synchronization will be handled automatically.
           *
           * There are 5 general responsibilities in TimingSrcConnector:
           *
           * 1. `updatePlayer()` which sets the player's currentTime, playbackRate and pause/play state based on current state of the TimingObject.
           * 2. `updateTimingObject()` which sets the TimingObject's position and velocity from the player's state.
           * 3. `playerUpdater` which listens for change events on the TimingObject and will respond by calling updatePlayer.
           * 4. `timingObjectUpdater` which listens to the player events of seeked, play and pause and will respond by calling `updateTimingObject()`.
           * 5. `maintainPlaybackPosition` this is code that constantly monitors the player to make sure it's always in sync with the TimingObject. This is needed because videos will generally not play with precise time accuracy and there will be some drift which becomes more noticeable over longer periods (as noted in the timing-object spec). More details on this method below.
           */
          var TimingSrcConnector =
            /*#__PURE__*/
            (function (_EventTarget) {
              _inherits(TimingSrcConnector, _EventTarget);
              var _super = _createSuper(TimingSrcConnector);
              /**
               * @param {PlayerControls} player
               * @param {TimingObject} timingObject
               * @param {TimingSrcConnectorOptions} options
               * @param {Logger} logger
               */
              function TimingSrcConnector(_player, timingObject) {
                var _this;
                var options =
                  arguments.length > 2 && arguments[2] !== undefined
                    ? arguments[2]
                    : {};
                var logger =
                  arguments.length > 3 ? arguments[3] : undefined;
                _classCallCheck(this, TimingSrcConnector);
                _this = _super.call(this);
                _defineProperty(
                  _assertThisInitialized(_this),
                  'logger',
                  void 0
                );
                _defineProperty(
                  _assertThisInitialized(_this),
                  'speedAdjustment',
                  0
                );
                /**
                 * @param {PlayerControls} player
                 * @param {number} newAdjustment
                 * @return {Promise<void>}
                 */
                _defineProperty(
                  _assertThisInitialized(_this),
                  'adjustSpeed' /*#__PURE__*/,
                  (function () {
                    var _ref = _asyncToGenerator(
                      /*#__PURE__*/
                      _regeneratorRuntime().mark(function _callee(
                        player,
                        newAdjustment
                      ) {
                        var newPlaybackRate;
                        return _regeneratorRuntime().wrap(
                          function _callee$(_context) {
                            while (1)
                              switch (
                                (_context.prev = _context.next)
                              ) {
                                case 0:
                                  if (
                                    !(
                                      _this.speedAdjustment ===
                                      newAdjustment
                                    )
                                  ) {
                                    _context.next = 2;
                                    break;
                                  }
                                  return _context.abrupt('return');
                                case 2:
                                  _context.next = 4;
                                  return player.getPlaybackRate();
                                case 4:
                                  _context.t0 = _context.sent;
                                  _context.t1 = _this.speedAdjustment;
                                  _context.t2 =
                                    _context.t0 - _context.t1;
                                  _context.t3 = newAdjustment;
                                  newPlaybackRate =
                                    _context.t2 + _context.t3;
                                  _this.log(
                                    'New playbackRate:  '.concat(
                                      newPlaybackRate
                                    )
                                  );
                                  _context.next = 12;
                                  return player.setPlaybackRate(
                                    newPlaybackRate
                                  );
                                case 12:
                                  _this.speedAdjustment =
                                    newAdjustment;
                                case 13:
                                case 'end':
                                  return _context.stop();
                              }
                          },
                          _callee
                        );
                      })
                    );
                    return function (_x, _x2) {
                      return _ref.apply(this, arguments);
                    };
                  })()
                );
                _this.logger = logger;
                _this.init(
                  timingObject,
                  _player,
                  _objectSpread2(
                    _objectSpread2({}, defaultOptions),
                    options
                  )
                );
                return _this;
              }
              _createClass(TimingSrcConnector, [
                {
                  key: 'disconnect',
                  value: function disconnect() {
                    this.dispatchEvent(new Event('disconnect'));
                  },
                  /**
                   * @param {TimingObject} timingObject
                   * @param {PlayerControls} player
                   * @param {TimingSrcConnectorOptions} options
                   * @return {Promise<void>}
                   */
                },
                {
                  key: 'init',
                  value: (function () {
                    var _init = _asyncToGenerator(
                      /*#__PURE__*/
                      _regeneratorRuntime().mark(function _callee2(
                        timingObject,
                        player,
                        options
                      ) {
                        var _this2 = this;
                        var playerUpdater,
                          positionSync,
                          timingObjectUpdater;
                        return _regeneratorRuntime().wrap(
                          function _callee2$(_context2) {
                            while (1)
                              switch (
                                (_context2.prev = _context2.next)
                              ) {
                                case 0:
                                  _context2.next = 2;
                                  return this.waitForTOReadyState(
                                    timingObject,
                                    'open'
                                  );
                                case 2:
                                  if (!(options.role === 'viewer')) {
                                    _context2.next = 10;
                                    break;
                                  }
                                  _context2.next = 5;
                                  return this.updatePlayer(
                                    timingObject,
                                    player,
                                    options
                                  );
                                case 5:
                                  playerUpdater = subscribe(
                                    timingObject,
                                    'change',
                                    function () {
                                      return _this2.updatePlayer(
                                        timingObject,
                                        player,
                                        options
                                      );
                                    }
                                  );
                                  positionSync =
                                    this.maintainPlaybackPosition(
                                      timingObject,
                                      player,
                                      options
                                    );
                                  this.addEventListener(
                                    'disconnect',
                                    function () {
                                      positionSync.cancel();
                                      playerUpdater.cancel();
                                    }
                                  );
                                  _context2.next = 14;
                                  break;
                                case 10:
                                  _context2.next = 12;
                                  return this.updateTimingObject(
                                    timingObject,
                                    player
                                  );
                                case 12:
                                  timingObjectUpdater = subscribe(
                                    player,
                                    [
                                      'seeked',
                                      'play',
                                      'pause',
                                      'ratechange',
                                    ],
                                    function () {
                                      return _this2.updateTimingObject(
                                        timingObject,
                                        player
                                      );
                                    },
                                    'on',
                                    'off'
                                  );
                                  this.addEventListener(
                                    'disconnect',
                                    function () {
                                      return timingObjectUpdater.cancel();
                                    }
                                  );
                                case 14:
                                case 'end':
                                  return _context2.stop();
                              }
                          },
                          _callee2,
                          this
                        );
                      })
                    );
                    function init(_x3, _x4, _x5) {
                      return _init.apply(this, arguments);
                    }
                    return init;
                  })(),
                  /**
                   * Sets the TimingObject's state to reflect that of the player
                   *
                   * @param {TimingObject} timingObject
                   * @param {PlayerControls} player
                   * @return {Promise<void>}
                   */
                },
                {
                  key: 'updateTimingObject',
                  value: (function () {
                    var _updateTimingObject = _asyncToGenerator(
                      /*#__PURE__*/
                      _regeneratorRuntime().mark(function _callee3(
                        timingObject,
                        player
                      ) {
                        return _regeneratorRuntime().wrap(
                          function _callee3$(_context3) {
                            while (1)
                              switch (
                                (_context3.prev = _context3.next)
                              ) {
                                case 0:
                                  _context3.t0 = timingObject;
                                  _context3.next = 3;
                                  return player.getCurrentTime();
                                case 3:
                                  _context3.t1 = _context3.sent;
                                  _context3.next = 6;
                                  return player.getPaused();
                                case 6:
                                  if (!_context3.sent) {
                                    _context3.next = 10;
                                    break;
                                  }
                                  _context3.t2 = 0;
                                  _context3.next = 13;
                                  break;
                                case 10:
                                  _context3.next = 12;
                                  return player.getPlaybackRate();
                                case 12:
                                  _context3.t2 = _context3.sent;
                                case 13:
                                  _context3.t3 = _context3.t2;
                                  _context3.t4 = {
                                    position: _context3.t1,
                                    velocity: _context3.t3,
                                  };
                                  _context3.t0.update.call(
                                    _context3.t0,
                                    _context3.t4
                                  );
                                case 16:
                                case 'end':
                                  return _context3.stop();
                              }
                          },
                          _callee3
                        );
                      })
                    );
                    function updateTimingObject(_x6, _x7) {
                      return _updateTimingObject.apply(
                        this,
                        arguments
                      );
                    }
                    return updateTimingObject;
                  })(),
                  /**
                   * Sets the player's timing state to reflect that of the TimingObject
                   *
                   * @param {TimingObject} timingObject
                   * @param {PlayerControls} player
                   * @param {TimingSrcConnectorOptions} options
                   * @return {Promise<void>}
                   */
                },
                {
                  key: 'updatePlayer',
                  value: (function () {
                    var _updatePlayer = _asyncToGenerator(
                      /*#__PURE__*/
                      _regeneratorRuntime().mark(function _callee5(
                        timingObject,
                        player,
                        options
                      ) {
                        var _timingObject$query, position, velocity;
                        return _regeneratorRuntime().wrap(
                          function _callee5$(_context5) {
                            while (1)
                              switch (
                                (_context5.prev = _context5.next)
                              ) {
                                case 0:
                                  (_timingObject$query =
                                    timingObject.query()),
                                    (position =
                                      _timingObject$query.position),
                                    (velocity =
                                      _timingObject$query.velocity);
                                  if (typeof position === 'number') {
                                    player.setCurrentTime(position);
                                  }
                                  if (
                                    !(typeof velocity === 'number')
                                  ) {
                                    _context5.next = 25;
                                    break;
                                  }
                                  if (!(velocity === 0)) {
                                    _context5.next = 11;
                                    break;
                                  }
                                  _context5.next = 6;
                                  return player.getPaused();
                                case 6:
                                  _context5.t0 = _context5.sent;
                                  if (!(_context5.t0 === false)) {
                                    _context5.next = 9;
                                    break;
                                  }
                                  player.pause();
                                case 9:
                                  _context5.next = 25;
                                  break;
                                case 11:
                                  if (!(velocity > 0)) {
                                    _context5.next = 25;
                                    break;
                                  }
                                  _context5.next = 14;
                                  return player.getPaused();
                                case 14:
                                  _context5.t1 = _context5.sent;
                                  if (!(_context5.t1 === true)) {
                                    _context5.next = 19;
                                    break;
                                  }
                                  _context5.next = 18;
                                  return player.play().catch(
                                    /*#__PURE__*/
                                    (function () {
                                      var _ref2 = _asyncToGenerator(
                                        /*#__PURE__*/
                                        _regeneratorRuntime().mark(
                                          function _callee4(err) {
                                            return _regeneratorRuntime().wrap(
                                              function _callee4$(
                                                _context4
                                              ) {
                                                while (1)
                                                  switch (
                                                    (_context4.prev =
                                                      _context4.next)
                                                  ) {
                                                    case 0:
                                                      if (
                                                        !(
                                                          err.name ===
                                                            'NotAllowedError' &&
                                                          options.autoPlayMuted
                                                        )
                                                      ) {
                                                        _context4.next = 5;
                                                        break;
                                                      }
                                                      _context4.next = 3;
                                                      return player.setMuted(
                                                        true
                                                      );
                                                    case 3:
                                                      _context4.next = 5;
                                                      return player
                                                        .play()
                                                        .catch(
                                                          function (
                                                            err2
                                                          ) {
                                                            return console.error(
                                                              "Couldn't play the video from TimingSrcConnector. Error:",
                                                              err2
                                                            );
                                                          }
                                                        );
                                                    case 5:
                                                    case 'end':
                                                      return _context4.stop();
                                                  }
                                              },
                                              _callee4
                                            );
                                          }
                                        )
                                      );
                                      return function (_x11) {
                                        return _ref2.apply(
                                          this,
                                          arguments
                                        );
                                      };
                                    })()
                                  );
                                case 18:
                                  this.updatePlayer(
                                    timingObject,
                                    player,
                                    options
                                  );
                                case 19:
                                  _context5.next = 21;
                                  return player.getPlaybackRate();
                                case 21:
                                  _context5.t2 = _context5.sent;
                                  _context5.t3 = velocity;
                                  if (
                                    !(_context5.t2 !== _context5.t3)
                                  ) {
                                    _context5.next = 25;
                                    break;
                                  }
                                  player.setPlaybackRate(velocity);
                                case 25:
                                case 'end':
                                  return _context5.stop();
                              }
                          },
                          _callee5,
                          this
                        );
                      })
                    );
                    function updatePlayer(_x8, _x9, _x10) {
                      return _updatePlayer.apply(this, arguments);
                    }
                    return updatePlayer;
                  })(),
                  /**
                   * Since video players do not play with 100% time precision, we need to closely monitor
                   * our player to be sure it remains in sync with the TimingObject.
                   *
                   * If out of sync, we use the current conditions and the options provided to determine
                   * whether to re-sync via setting currentTime or adjusting the playbackRate
                   *
                   * @param {TimingObject} timingObject
                   * @param {PlayerControls} player
                   * @param {TimingSrcConnectorOptions} options
                   * @return {{cancel: (function(): void)}}
                   */
                },
                {
                  key: 'maintainPlaybackPosition',
                  value: function maintainPlaybackPosition(
                    timingObject,
                    player,
                    options
                  ) {
                    var _this3 = this;
                    var allowedDrift = options.allowedDrift,
                      maxAllowedDrift = options.maxAllowedDrift,
                      minCheckInterval = options.minCheckInterval,
                      maxRateAdjustment = options.maxRateAdjustment,
                      maxTimeToCatchUp = options.maxTimeToCatchUp;
                    var syncInterval =
                      Math.min(
                        maxTimeToCatchUp,
                        Math.max(minCheckInterval, maxAllowedDrift)
                      ) * 1000;
                    var check =
                      /*#__PURE__*/
                      (function () {
                        var _ref3 = _asyncToGenerator(
                          /*#__PURE__*/
                          _regeneratorRuntime().mark(
                            function _callee6() {
                              var diff, diffAbs, min, max, adjustment;
                              return _regeneratorRuntime().wrap(
                                function _callee6$(_context6) {
                                  while (1)
                                    switch (
                                      (_context6.prev =
                                        _context6.next)
                                    ) {
                                      case 0:
                                        _context6.t0 =
                                          timingObject.query()
                                            .velocity === 0;
                                        if (_context6.t0) {
                                          _context6.next = 6;
                                          break;
                                        }
                                        _context6.next = 4;
                                        return player.getPaused();
                                      case 4:
                                        _context6.t1 = _context6.sent;
                                        _context6.t0 =
                                          _context6.t1 === true;
                                      case 6:
                                        if (!_context6.t0) {
                                          _context6.next = 8;
                                          break;
                                        }
                                        return _context6.abrupt(
                                          'return'
                                        );
                                      case 8:
                                        _context6.t2 =
                                          timingObject.query().position;
                                        _context6.next = 11;
                                        return player.getCurrentTime();
                                      case 11:
                                        _context6.t3 = _context6.sent;
                                        diff =
                                          _context6.t2 - _context6.t3;
                                        diffAbs = Math.abs(diff);
                                        _this3.log(
                                          'Drift: '.concat(diff)
                                        );
                                        if (
                                          !(diffAbs > maxAllowedDrift)
                                        ) {
                                          _context6.next = 22;
                                          break;
                                        }
                                        _context6.next = 18;
                                        return _this3.adjustSpeed(
                                          player,
                                          0
                                        );
                                      case 18:
                                        player.setCurrentTime(
                                          timingObject.query()
                                            .position
                                        );
                                        _this3.log(
                                          'Resync by currentTime'
                                        );
                                        _context6.next = 29;
                                        break;
                                      case 22:
                                        if (
                                          !(diffAbs > allowedDrift)
                                        ) {
                                          _context6.next = 29;
                                          break;
                                        }
                                        min =
                                          diffAbs / maxTimeToCatchUp;
                                        max = maxRateAdjustment;
                                        adjustment =
                                          min < max
                                            ? (max - min) / 2
                                            : max;
                                        _context6.next = 28;
                                        return _this3.adjustSpeed(
                                          player,
                                          adjustment * Math.sign(diff)
                                        );
                                      case 28:
                                        _this3.log(
                                          'Resync by playbackRate'
                                        );
                                      case 29:
                                      case 'end':
                                        return _context6.stop();
                                    }
                                },
                                _callee6
                              );
                            }
                          )
                        );
                        return function check() {
                          return _ref3.apply(this, arguments);
                        };
                      })();
                    var interval = setInterval(function () {
                      return check();
                    }, syncInterval);
                    return {
                      cancel: function cancel() {
                        return clearInterval(interval);
                      },
                    };
                  },
                  /**
                   * @param {string} msg
                   */
                },
                {
                  key: 'log',
                  value: function log(msg) {
                    var _this$logger;
                    (_this$logger = this.logger) === null ||
                    _this$logger === void 0
                      ? void 0
                      : _this$logger.call(
                          this,
                          'TimingSrcConnector: '.concat(msg)
                        );
                  },
                },
                {
                  key: 'waitForTOReadyState',
                  /**
                   * @param {TimingObject} timingObject
                   * @param {TConnectionState} state
                   * @return {Promise<void>}
                   */
                  value: function waitForTOReadyState(
                    timingObject,
                    state
                  ) {
                    return new Promise(function (resolve) {
                      var check = function check() {
                        if (timingObject.readyState === state) {
                          resolve();
                        } else {
                          timingObject.addEventListener(
                            'readystatechange',
                            check,
                            {
                              once: true,
                            }
                          );
                        }
                      };
                      check();
                    });
                  },
                },
              ]);
              return TimingSrcConnector;
            })(/*#__PURE__*/ _wrapNativeSuper(EventTarget));

          var playerMap = new WeakMap();
          var readyMap = new WeakMap();
          var screenfull = {};
          var Player =
            /*#__PURE__*/
            (function () {
              /**
               * Create a Player.
               *
               * @param {(HTMLIFrameElement|HTMLElement|string|jQuery)} element A reference to the Vimeo
               *        player iframe, and id, or a jQuery object.
               * @param {object} [options] oEmbed parameters to use when creating an embed in the element.
               * @return {Player}
               */
              function Player(element) {
                var _this = this;
                var options =
                  arguments.length > 1 && arguments[1] !== undefined
                    ? arguments[1]
                    : {};
                _classCallCheck(this, Player);
                /* global jQuery */
                if (window.jQuery && element instanceof jQuery) {
                  if (
                    element.length > 1 &&
                    window.console &&
                    console.warn
                  ) {
                    console.warn(
                      'A jQuery object with multiple elements was passed, using the first element.'
                    );
                  }
                  element = element[0];
                }

                // Find an element by ID
                if (
                  typeof document !== 'undefined' &&
                  typeof element === 'string'
                ) {
                  element = document.getElementById(element);
                }

                // Not an element!
                if (!isDomElement(element)) {
                  throw new TypeError(
                    'You must pass either a valid element or a valid id.'
                  );
                }

                // Already initialized an embed in this div, so grab the iframe
                if (element.nodeName !== 'IFRAME') {
                  var iframe = element.querySelector('iframe');
                  if (iframe) {
                    element = iframe;
                  }
                }

                // iframe url is not a Vimeo url
                if (
                  element.nodeName === 'IFRAME' &&
                  !isVimeoUrl(element.getAttribute('src') || '')
                ) {
                  throw new Error(
                    'The player element passed isn’t a Vimeo embed.'
                  );
                }

                // If there is already a player object in the map, return that
                if (playerMap.has(element)) {
                  return playerMap.get(element);
                }
                this._window = element.ownerDocument.defaultView;
                this.element = element;
                this.origin = '*';
                var readyPromise = new npo_src(function (
                  resolve,
                  reject
                ) {
                  _this._onMessage = function (event) {
                    if (
                      !isVimeoUrl(event.origin) ||
                      _this.element.contentWindow !== event.source
                    ) {
                      return;
                    }
                    if (_this.origin === '*') {
                      _this.origin = event.origin;
                    }
                    var data = parseMessageData(event.data);
                    var isError = data && data.event === 'error';
                    var isReadyError =
                      isError &&
                      data.data &&
                      data.data.method === 'ready';
                    if (isReadyError) {
                      var error = new Error(data.data.message);
                      error.name = data.data.name;
                      reject(error);
                      return;
                    }
                    var isReadyEvent = data && data.event === 'ready';
                    var isPingResponse =
                      data && data.method === 'ping';
                    if (isReadyEvent || isPingResponse) {
                      _this.element.setAttribute(
                        'data-ready',
                        'true'
                      );
                      resolve();
                      return;
                    }
                    processData(_this, data);
                  };
                  _this._window.addEventListener(
                    'message',
                    _this._onMessage
                  );
                  if (_this.element.nodeName !== 'IFRAME') {
                    var params = getOEmbedParameters(
                      element,
                      options
                    );
                    var url = getVimeoUrl(params);
                    getOEmbedData(url, params, element)
                      .then(function (data) {
                        var iframe = createEmbed(data, element);
                        // Overwrite element with the new iframe,
                        // but store reference to the original element
                        _this.element = iframe;
                        _this._originalElement = element;
                        swapCallbacks(element, iframe);
                        playerMap.set(_this.element, _this);
                        return data;
                      })
                      .catch(reject);
                  }
                });

                // Store a copy of this Player in the map
                readyMap.set(this, readyPromise);
                playerMap.set(this.element, this);

                // Send a ping to the iframe so the ready promise will be resolved if
                // the player is already ready.
                if (this.element.nodeName === 'IFRAME') {
                  postMessage(this, 'ping');
                }
                if (screenfull.isEnabled) {
                  var exitFullscreen = function exitFullscreen() {
                    return screenfull.exit();
                  };
                  this.fullscreenchangeHandler = function () {
                    if (screenfull.isFullscreen) {
                      storeCallback(
                        _this,
                        'event:exitFullscreen',
                        exitFullscreen
                      );
                    } else {
                      removeCallback(
                        _this,
                        'event:exitFullscreen',
                        exitFullscreen
                      );
                    }
                    // eslint-disable-next-line
                    _this.ready().then(function () {
                      postMessage(
                        _this,
                        'fullscreenchange',
                        screenfull.isFullscreen
                      );
                    });
                  };
                  screenfull.on(
                    'fullscreenchange',
                    this.fullscreenchangeHandler
                  );
                }
                return this;
              }

              /**
               * Get a promise for a method.
               *
               * @param {string} name The API method to call.
               * @param {Object} [args={}] Arguments to send via postMessage.
               * @return {Promise}
               */
              _createClass(Player, [
                {
                  key: 'callMethod',
                  value: function callMethod(name) {
                    var _this2 = this;
                    var args =
                      arguments.length > 1 &&
                      arguments[1] !== undefined
                        ? arguments[1]
                        : {};
                    return new npo_src(function (resolve, reject) {
                      // We are storing the resolve/reject handlers to call later, so we
                      // can’t return here.
                      // eslint-disable-next-line promise/always-return
                      return _this2
                        .ready()
                        .then(function () {
                          storeCallback(_this2, name, {
                            resolve: resolve,
                            reject: reject,
                          });
                          postMessage(_this2, name, args);
                        })
                        .catch(reject);
                    });
                  },
                  /**
                   * Get a promise for the value of a player property.
                   *
                   * @param {string} name The property name
                   * @return {Promise}
                   */
                },
                {
                  key: 'get',
                  value: function get(name) {
                    var _this3 = this;
                    return new npo_src(function (resolve, reject) {
                      name = getMethodName(name, 'get');

                      // We are storing the resolve/reject handlers to call later, so we
                      // can’t return here.
                      // eslint-disable-next-line promise/always-return
                      return _this3
                        .ready()
                        .then(function () {
                          storeCallback(_this3, name, {
                            resolve: resolve,
                            reject: reject,
                          });
                          postMessage(_this3, name);
                        })
                        .catch(reject);
                    });
                  },
                  /**
                   * Get a promise for setting the value of a player property.
                   *
                   * @param {string} name The API method to call.
                   * @param {mixed} value The value to set.
                   * @return {Promise}
                   */
                },
                {
                  key: 'set',
                  value: function set(name, value) {
                    var _this4 = this;
                    return new npo_src(function (resolve, reject) {
                      name = getMethodName(name, 'set');
                      if (value === undefined || value === null) {
                        throw new TypeError(
                          'There must be a value to set.'
                        );
                      }

                      // We are storing the resolve/reject handlers to call later, so we
                      // can’t return here.
                      // eslint-disable-next-line promise/always-return
                      return _this4
                        .ready()
                        .then(function () {
                          storeCallback(_this4, name, {
                            resolve: resolve,
                            reject: reject,
                          });
                          postMessage(_this4, name, value);
                        })
                        .catch(reject);
                    });
                  },
                  /**
                   * Add an event listener for the specified event. Will call the
                   * callback with a single parameter, `data`, that contains the data for
                   * that event.
                   *
                   * @param {string} eventName The name of the event.
                   * @param {function(*)} callback The function to call when the event fires.
                   * @return {void}
                   */
                },
                {
                  key: 'on',
                  value: function on(eventName, callback) {
                    if (!eventName) {
                      throw new TypeError(
                        'You must pass an event name.'
                      );
                    }
                    if (!callback) {
                      throw new TypeError(
                        'You must pass a callback function.'
                      );
                    }
                    if (typeof callback !== 'function') {
                      throw new TypeError(
                        'The callback must be a function.'
                      );
                    }
                    var callbacks = getCallbacks(
                      this,
                      'event:'.concat(eventName)
                    );
                    if (callbacks.length === 0) {
                      this.callMethod(
                        'addEventListener',
                        eventName
                      ).catch(function () {
                        // Ignore the error. There will be an error event fired that
                        // will trigger the error callback if they are listening.
                      });
                    }
                    storeCallback(
                      this,
                      'event:'.concat(eventName),
                      callback
                    );
                  },
                  /**
                   * Remove an event listener for the specified event. Will remove all
                   * listeners for that event if a `callback` isn’t passed, or only that
                   * specific callback if it is passed.
                   *
                   * @param {string} eventName The name of the event.
                   * @param {function} [callback] The specific callback to remove.
                   * @return {void}
                   */
                },
                {
                  key: 'off',
                  value: function off(eventName, callback) {
                    if (!eventName) {
                      throw new TypeError(
                        'You must pass an event name.'
                      );
                    }
                    if (callback && typeof callback !== 'function') {
                      throw new TypeError(
                        'The callback must be a function.'
                      );
                    }
                    var lastCallback = removeCallback(
                      this,
                      'event:'.concat(eventName),
                      callback
                    );

                    // If there are no callbacks left, remove the listener
                    if (lastCallback) {
                      this.callMethod(
                        'removeEventListener',
                        eventName
                      ).catch(function (e) {
                        // Ignore the error. There will be an error event fired that
                        // will trigger the error callback if they are listening.
                      });
                    }
                  },
                  /**
                   * A promise to load a new video.
                   *
                   * @promise LoadVideoPromise
                   * @fulfill {number} The video with this id or url successfully loaded.
                   * @reject {TypeError} The id was not a number.
                   */
                  /**
                   * Load a new video into this embed. The promise will be resolved if
                   * the video is successfully loaded, or it will be rejected if it could
                   * not be loaded.
                   *
                   * @param {number|string|object} options The id of the video, the url of the video, or an object with embed options.
                   * @return {LoadVideoPromise}
                   */
                },
                {
                  key: 'loadVideo',
                  value: function loadVideo(options) {
                    return this.callMethod('loadVideo', options);
                  },
                  /**
                   * A promise to perform an action when the Player is ready.
                   *
                   * @todo document errors
                   * @promise LoadVideoPromise
                   * @fulfill {void}
                   */
                  /**
                   * Trigger a function when the player iframe has initialized. You do not
                   * need to wait for `ready` to trigger to begin adding event listeners
                   * or calling other methods.
                   *
                   * @return {ReadyPromise}
                   */
                },
                {
                  key: 'ready',
                  value: function ready() {
                    var readyPromise =
                      readyMap.get(this) ||
                      new npo_src(function (resolve, reject) {
                        reject(
                          new Error(
                            'Unknown player. Probably unloaded.'
                          )
                        );
                      });
                    return npo_src.resolve(readyPromise);
                  },
                  /**
                   * A promise to add a cue point to the player.
                   *
                   * @promise AddCuePointPromise
                   * @fulfill {string} The id of the cue point to use for removeCuePoint.
                   * @reject {RangeError} the time was less than 0 or greater than the
                   *         video’s duration.
                   * @reject {UnsupportedError} Cue points are not supported with the current
                   *         player or browser.
                   */
                  /**
                   * Add a cue point to the player.
                   *
                   * @param {number} time The time for the cue point.
                   * @param {object} [data] Arbitrary data to be returned with the cue point.
                   * @return {AddCuePointPromise}
                   */
                },
                {
                  key: 'addCuePoint',
                  value: function addCuePoint(time) {
                    var data =
                      arguments.length > 1 &&
                      arguments[1] !== undefined
                        ? arguments[1]
                        : {};
                    return this.callMethod('addCuePoint', {
                      time: time,
                      data: data,
                    });
                  },
                  /**
                   * A promise to remove a cue point from the player.
                   *
                   * @promise AddCuePointPromise
                   * @fulfill {string} The id of the cue point that was removed.
                   * @reject {InvalidCuePoint} The cue point with the specified id was not
                   *         found.
                   * @reject {UnsupportedError} Cue points are not supported with the current
                   *         player or browser.
                   */
                  /**
                   * Remove a cue point from the video.
                   *
                   * @param {string} id The id of the cue point to remove.
                   * @return {RemoveCuePointPromise}
                   */
                },
                {
                  key: 'removeCuePoint',
                  value: function removeCuePoint(id) {
                    return this.callMethod('removeCuePoint', id);
                  },
                  /**
                   * A representation of a text track on a video.
                   *
                   * @typedef {Object} VimeoTextTrack
                   * @property {string} language The ISO language code.
                   * @property {string} kind The kind of track it is (captions or subtitles).
                   * @property {string} label The human‐readable label for the track.
                   */
                  /**
                   * A promise to enable a text track.
                   *
                   * @promise EnableTextTrackPromise
                   * @fulfill {VimeoTextTrack} The text track that was enabled.
                   * @reject {InvalidTrackLanguageError} No track was available with the
                   *         specified language.
                   * @reject {InvalidTrackError} No track was available with the specified
                   *         language and kind.
                   */
                  /**
                   * Enable the text track with the specified language, and optionally the
                   * specified kind (captions or subtitles).
                   *
                   * When set via the API, the track language will not change the viewer’s
                   * stored preference.
                   *
                   * @param {string} language The two‐letter language code.
                   * @param {string} [kind] The kind of track to enable (captions or subtitles).
                   * @return {EnableTextTrackPromise}
                   */
                },
                {
                  key: 'enableTextTrack',
                  value: function enableTextTrack(language, kind) {
                    if (!language) {
                      throw new TypeError(
                        'You must pass a language.'
                      );
                    }
                    return this.callMethod('enableTextTrack', {
                      language: language,
                      kind: kind,
                    });
                  },
                  /**
                   * A promise to disable the active text track.
                   *
                   * @promise DisableTextTrackPromise
                   * @fulfill {void} The track was disabled.
                   */
                  /**
                   * Disable the currently-active text track.
                   *
                   * @return {DisableTextTrackPromise}
                   */
                },
                {
                  key: 'disableTextTrack',
                  value: function disableTextTrack() {
                    return this.callMethod('disableTextTrack');
                  },
                  /**
                   * A promise to pause the video.
                   *
                   * @promise PausePromise
                   * @fulfill {void} The video was paused.
                   */
                  /**
                   * Pause the video if it’s playing.
                   *
                   * @return {PausePromise}
                   */
                },
                {
                  key: 'pause',
                  value: function pause() {
                    return this.callMethod('pause');
                  },
                  /**
                   * A promise to play the video.
                   *
                   * @promise PlayPromise
                   * @fulfill {void} The video was played.
                   */
                  /**
                   * Play the video if it’s paused. **Note:** on iOS and some other
                   * mobile devices, you cannot programmatically trigger play. Once the
                   * viewer has tapped on the play button in the player, however, you
                   * will be able to use this function.
                   *
                   * @return {PlayPromise}
                   */
                },
                {
                  key: 'play',
                  value: function play() {
                    return this.callMethod('play');
                  },
                  /**
                   * Request that the player enters fullscreen.
                   * @return {Promise}
                   */
                },
                {
                  key: 'requestFullscreen',
                  value: function requestFullscreen() {
                    if (screenfull.isEnabled) {
                      return screenfull.request(this.element);
                    }
                    return this.callMethod('requestFullscreen');
                  },
                  /**
                   * Request that the player exits fullscreen.
                   * @return {Promise}
                   */
                },
                {
                  key: 'exitFullscreen',
                  value: function exitFullscreen() {
                    if (screenfull.isEnabled) {
                      return screenfull.exit();
                    }
                    return this.callMethod('exitFullscreen');
                  },
                  /**
                   * Returns true if the player is currently fullscreen.
                   * @return {Promise}
                   */
                },
                {
                  key: 'getFullscreen',
                  value: function getFullscreen() {
                    if (screenfull.isEnabled) {
                      return npo_src.resolve(screenfull.isFullscreen);
                    }
                    return this.get('fullscreen');
                  },
                  /**
                   * Request that the player enters picture-in-picture.
                   * @return {Promise}
                   */
                },
                {
                  key: 'requestPictureInPicture',
                  value: function requestPictureInPicture() {
                    return this.callMethod('requestPictureInPicture');
                  },
                  /**
                   * Request that the player exits picture-in-picture.
                   * @return {Promise}
                   */
                },
                {
                  key: 'exitPictureInPicture',
                  value: function exitPictureInPicture() {
                    return this.callMethod('exitPictureInPicture');
                  },
                  /**
                   * Returns true if the player is currently picture-in-picture.
                   * @return {Promise}
                   */
                },
                {
                  key: 'getPictureInPicture',
                  value: function getPictureInPicture() {
                    return this.get('pictureInPicture');
                  },
                  /**
                   * A promise to prompt the viewer to initiate remote playback.
                   *
                   * @promise RemotePlaybackPromptPromise
                   * @fulfill {void}
                   * @reject {NotFoundError} No remote playback device is available.
                   */
                  /**
                   * Request to prompt the user to initiate remote playback.
                   *
                   * @return {RemotePlaybackPromptPromise}
                   */
                },
                {
                  key: 'remotePlaybackPrompt',
                  value: function remotePlaybackPrompt() {
                    return this.callMethod('remotePlaybackPrompt');
                  },
                  /**
                   * A promise to unload the video.
                   *
                   * @promise UnloadPromise
                   * @fulfill {void} The video was unloaded.
                   */
                  /**
                   * Return the player to its initial state.
                   *
                   * @return {UnloadPromise}
                   */
                },
                {
                  key: 'unload',
                  value: function unload() {
                    return this.callMethod('unload');
                  },
                  /**
                   * Cleanup the player and remove it from the DOM
                   *
                   * It won't be usable and a new one should be constructed
                   *  in order to do any operations.
                   *
                   * @return {Promise}
                   */
                },
                {
                  key: 'destroy',
                  value: function destroy() {
                    var _this5 = this;
                    return new npo_src(function (resolve) {
                      readyMap.delete(_this5);
                      playerMap.delete(_this5.element);
                      if (_this5._originalElement) {
                        playerMap.delete(_this5._originalElement);
                        _this5._originalElement.removeAttribute(
                          'data-vimeo-initialized'
                        );
                      }
                      if (
                        _this5.element &&
                        _this5.element.nodeName === 'IFRAME' &&
                        _this5.element.parentNode
                      ) {
                        // If we've added an additional wrapper div, remove that from the DOM.
                        // If not, just remove the iframe element.
                        if (
                          _this5.element.parentNode.parentNode &&
                          _this5._originalElement &&
                          _this5._originalElement !==
                            _this5.element.parentNode
                        ) {
                          _this5.element.parentNode.parentNode.removeChild(
                            _this5.element.parentNode
                          );
                        } else {
                          _this5.element.parentNode.removeChild(
                            _this5.element
                          );
                        }
                      }

                      // If the clip is private there is a case where the element stays the
                      // div element. Destroy should reset the div and remove the iframe child.
                      if (
                        _this5.element &&
                        _this5.element.nodeName === 'DIV' &&
                        _this5.element.parentNode
                      ) {
                        _this5.element.removeAttribute(
                          'data-vimeo-initialized'
                        );
                        var iframe =
                          _this5.element.querySelector('iframe');
                        if (iframe && iframe.parentNode) {
                          // If we've added an additional wrapper div, remove that from the DOM.
                          // If not, just remove the iframe element.
                          if (
                            iframe.parentNode.parentNode &&
                            _this5._originalElement &&
                            _this5._originalElement !==
                              iframe.parentNode
                          ) {
                            iframe.parentNode.parentNode.removeChild(
                              iframe.parentNode
                            );
                          } else {
                            iframe.parentNode.removeChild(iframe);
                          }
                        }
                      }
                      _this5._window.removeEventListener(
                        'message',
                        _this5._onMessage
                      );
                      if (screenfull.isEnabled) {
                        screenfull.off(
                          'fullscreenchange',
                          _this5.fullscreenchangeHandler
                        );
                      }
                      resolve();
                    });
                  },
                  /**
                   * A promise to get the autopause behavior of the video.
                   *
                   * @promise GetAutopausePromise
                   * @fulfill {boolean} Whether autopause is turned on or off.
                   * @reject {UnsupportedError} Autopause is not supported with the current
                   *         player or browser.
                   */
                  /**
                   * Get the autopause behavior for this player.
                   *
                   * @return {GetAutopausePromise}
                   */
                },
                {
                  key: 'getAutopause',
                  value: function getAutopause() {
                    return this.get('autopause');
                  },
                  /**
                   * A promise to set the autopause behavior of the video.
                   *
                   * @promise SetAutopausePromise
                   * @fulfill {boolean} Whether autopause is turned on or off.
                   * @reject {UnsupportedError} Autopause is not supported with the current
                   *         player or browser.
                   */
                  /**
                   * Enable or disable the autopause behavior of this player.
                   *
                   * By default, when another video is played in the same browser, this
                   * player will automatically pause. Unless you have a specific reason
                   * for doing so, we recommend that you leave autopause set to the
                   * default (`true`).
                   *
                   * @param {boolean} autopause
                   * @return {SetAutopausePromise}
                   */
                },
                {
                  key: 'setAutopause',
                  value: function setAutopause(autopause) {
                    return this.set('autopause', autopause);
                  },
                  /**
                   * A promise to get the buffered property of the video.
                   *
                   * @promise GetBufferedPromise
                   * @fulfill {Array} Buffered Timeranges converted to an Array.
                   */
                  /**
                   * Get the buffered property of the video.
                   *
                   * @return {GetBufferedPromise}
                   */
                },
                {
                  key: 'getBuffered',
                  value: function getBuffered() {
                    return this.get('buffered');
                  },
                  /**
                   * @typedef {Object} CameraProperties
                   * @prop {number} props.yaw - Number between 0 and 360.
                   * @prop {number} props.pitch - Number between -90 and 90.
                   * @prop {number} props.roll - Number between -180 and 180.
                   * @prop {number} props.fov - The field of view in degrees.
                   */
                  /**
                   * A promise to get the camera properties of the player.
                   *
                   * @promise GetCameraPromise
                   * @fulfill {CameraProperties} The camera properties.
                   */
                  /**
                   * For 360° videos get the camera properties for this player.
                   *
                   * @return {GetCameraPromise}
                   */
                },
                {
                  key: 'getCameraProps',
                  value: function getCameraProps() {
                    return this.get('cameraProps');
                  },
                  /**
                   * A promise to set the camera properties of the player.
                   *
                   * @promise SetCameraPromise
                   * @fulfill {Object} The camera was successfully set.
                   * @reject {RangeError} The range was out of bounds.
                   */
                  /**
                   * For 360° videos set the camera properties for this player.
                   *
                   * @param {CameraProperties} camera The camera properties
                   * @return {SetCameraPromise}
                   */
                },
                {
                  key: 'setCameraProps',
                  value: function setCameraProps(camera) {
                    return this.set('cameraProps', camera);
                  },
                  /**
                   * A representation of a chapter.
                   *
                   * @typedef {Object} VimeoChapter
                   * @property {number} startTime The start time of the chapter.
                   * @property {object} title The title of the chapter.
                   * @property {number} index The place in the order of Chapters. Starts at 1.
                   */
                  /**
                   * A promise to get chapters for the video.
                   *
                   * @promise GetChaptersPromise
                   * @fulfill {VimeoChapter[]} The chapters for the video.
                   */
                  /**
                   * Get an array of all the chapters for the video.
                   *
                   * @return {GetChaptersPromise}
                   */
                },
                {
                  key: 'getChapters',
                  value: function getChapters() {
                    return this.get('chapters');
                  },
                  /**
                   * A promise to get the currently active chapter.
                   *
                   * @promise GetCurrentChaptersPromise
                   * @fulfill {VimeoChapter|undefined} The current chapter for the video.
                   */
                  /**
                   * Get the currently active chapter for the video.
                   *
                   * @return {GetCurrentChaptersPromise}
                   */
                },
                {
                  key: 'getCurrentChapter',
                  value: function getCurrentChapter() {
                    return this.get('currentChapter');
                  },
                  /**
                   * A promise to get the accent color of the player.
                   *
                   * @promise GetColorPromise
                   * @fulfill {string} The hex color of the player.
                   */
                  /**
                   * Get the accent color for this player. Note this is deprecated in place of `getColorTwo`.
                   *
                   * @return {GetColorPromise}
                   */
                },
                {
                  key: 'getColor',
                  value: function getColor() {
                    return this.get('color');
                  },
                  /**
                   * A promise to get all colors for the player in an array.
                   *
                   * @promise GetColorsPromise
                   * @fulfill {string[]} The hex colors of the player.
                   */
                  /**
                   * Get all the colors for this player in an array: [colorOne, colorTwo, colorThree, colorFour]
                   *
                   * @return {GetColorPromise}
                   */
                },
                {
                  key: 'getColors',
                  value: function getColors() {
                    return npo_src.all([
                      this.get('colorOne'),
                      this.get('colorTwo'),
                      this.get('colorThree'),
                      this.get('colorFour'),
                    ]);
                  },
                  /**
                   * A promise to set the accent color of the player.
                   *
                   * @promise SetColorPromise
                   * @fulfill {string} The color was successfully set.
                   * @reject {TypeError} The string was not a valid hex or rgb color.
                   * @reject {ContrastError} The color was set, but the contrast is
                   *         outside of the acceptable range.
                   * @reject {EmbedSettingsError} The owner of the player has chosen to
                   *         use a specific color.
                   */
                  /**
                   * Set the accent color of this player to a hex or rgb string. Setting the
                   * color may fail if the owner of the video has set their embed
                   * preferences to force a specific color.
                   * Note this is deprecated in place of `setColorTwo`.
                   *
                   * @param {string} color The hex or rgb color string to set.
                   * @return {SetColorPromise}
                   */
                },
                {
                  key: 'setColor',
                  value: function setColor(color) {
                    return this.set('color', color);
                  },
                  /**
                   * A promise to set all colors for the player.
                   *
                   * @promise SetColorsPromise
                   * @fulfill {string[]} The colors were successfully set.
                   * @reject {TypeError} The string was not a valid hex or rgb color.
                   * @reject {ContrastError} The color was set, but the contrast is
                   *         outside of the acceptable range.
                   * @reject {EmbedSettingsError} The owner of the player has chosen to
                   *         use a specific color.
                   */
                  /**
                   * Set the colors of this player to a hex or rgb string. Setting the
                   * color may fail if the owner of the video has set their embed
                   * preferences to force a specific color.
                   * The colors should be passed in as an array: [colorOne, colorTwo, colorThree, colorFour].
                   * If a color should not be set, the index in the array can be left as null.
                   *
                   * @param {string[]} colors Array of the hex or rgb color strings to set.
                   * @return {SetColorsPromise}
                   */
                },
                {
                  key: 'setColors',
                  value: function setColors(colors) {
                    if (!Array.isArray(colors)) {
                      return new npo_src(function (resolve, reject) {
                        return reject(
                          new TypeError('Argument must be an array.')
                        );
                      });
                    }
                    var nullPromise = new npo_src(function (resolve) {
                      return resolve(null);
                    });
                    var colorPromises = [
                      colors[0]
                        ? this.set('colorOne', colors[0])
                        : nullPromise,
                      colors[1]
                        ? this.set('colorTwo', colors[1])
                        : nullPromise,
                      colors[2]
                        ? this.set('colorThree', colors[2])
                        : nullPromise,
                      colors[3]
                        ? this.set('colorFour', colors[3])
                        : nullPromise,
                    ];
                    return npo_src.all(colorPromises);
                  },
                  /**
                   * A representation of a cue point.
                   *
                   * @typedef {Object} VimeoCuePoint
                   * @property {number} time The time of the cue point.
                   * @property {object} data The data passed when adding the cue point.
                   * @property {string} id The unique id for use with removeCuePoint.
                   */
                  /**
                   * A promise to get the cue points of a video.
                   *
                   * @promise GetCuePointsPromise
                   * @fulfill {VimeoCuePoint[]} The cue points added to the video.
                   * @reject {UnsupportedError} Cue points are not supported with the current
                   *         player or browser.
                   */
                  /**
                   * Get an array of the cue points added to the video.
                   *
                   * @return {GetCuePointsPromise}
                   */
                },
                {
                  key: 'getCuePoints',
                  value: function getCuePoints() {
                    return this.get('cuePoints');
                  },
                  /**
                   * A promise to get the current time of the video.
                   *
                   * @promise GetCurrentTimePromise
                   * @fulfill {number} The current time in seconds.
                   */
                  /**
                   * Get the current playback position in seconds.
                   *
                   * @return {GetCurrentTimePromise}
                   */
                },
                {
                  key: 'getCurrentTime',
                  value: function getCurrentTime() {
                    return this.get('currentTime');
                  },
                  /**
                   * A promise to set the current time of the video.
                   *
                   * @promise SetCurrentTimePromise
                   * @fulfill {number} The actual current time that was set.
                   * @reject {RangeError} the time was less than 0 or greater than the
                   *         video’s duration.
                   */
                  /**
                   * Set the current playback position in seconds. If the player was
                   * paused, it will remain paused. Likewise, if the player was playing,
                   * it will resume playing once the video has buffered.
                   *
                   * You can provide an accurate time and the player will attempt to seek
                   * to as close to that time as possible. The exact time will be the
                   * fulfilled value of the promise.
                   *
                   * @param {number} currentTime
                   * @return {SetCurrentTimePromise}
                   */
                },
                {
                  key: 'setCurrentTime',
                  value: function setCurrentTime(currentTime) {
                    return this.set('currentTime', currentTime);
                  },
                  /**
                   * A promise to get the duration of the video.
                   *
                   * @promise GetDurationPromise
                   * @fulfill {number} The duration in seconds.
                   */
                  /**
                   * Get the duration of the video in seconds. It will be rounded to the
                   * nearest second before playback begins, and to the nearest thousandth
                   * of a second after playback begins.
                   *
                   * @return {GetDurationPromise}
                   */
                },
                {
                  key: 'getDuration',
                  value: function getDuration() {
                    return this.get('duration');
                  },
                  /**
                   * A promise to get the ended state of the video.
                   *
                   * @promise GetEndedPromise
                   * @fulfill {boolean} Whether or not the video has ended.
                   */
                  /**
                   * Get the ended state of the video. The video has ended if
                   * `currentTime === duration`.
                   *
                   * @return {GetEndedPromise}
                   */
                },
                {
                  key: 'getEnded',
                  value: function getEnded() {
                    return this.get('ended');
                  },
                  /**
                   * A promise to get the loop state of the player.
                   *
                   * @promise GetLoopPromise
                   * @fulfill {boolean} Whether or not the player is set to loop.
                   */
                  /**
                   * Get the loop state of the player.
                   *
                   * @return {GetLoopPromise}
                   */
                },
                {
                  key: 'getLoop',
                  value: function getLoop() {
                    return this.get('loop');
                  },
                  /**
                   * A promise to set the loop state of the player.
                   *
                   * @promise SetLoopPromise
                   * @fulfill {boolean} The loop state that was set.
                   */
                  /**
                   * Set the loop state of the player. When set to `true`, the player
                   * will start over immediately once playback ends.
                   *
                   * @param {boolean} loop
                   * @return {SetLoopPromise}
                   */
                },
                {
                  key: 'setLoop',
                  value: function setLoop(loop) {
                    return this.set('loop', loop);
                  },
                  /**
                   * A promise to set the muted state of the player.
                   *
                   * @promise SetMutedPromise
                   * @fulfill {boolean} The muted state that was set.
                   */
                  /**
                   * Set the muted state of the player. When set to `true`, the player
                   * volume will be muted.
                   *
                   * @param {boolean} muted
                   * @return {SetMutedPromise}
                   */
                },
                {
                  key: 'setMuted',
                  value: function setMuted(muted) {
                    return this.set('muted', muted);
                  },
                  /**
                   * A promise to get the muted state of the player.
                   *
                   * @promise GetMutedPromise
                   * @fulfill {boolean} Whether or not the player is muted.
                   */
                  /**
                   * Get the muted state of the player.
                   *
                   * @return {GetMutedPromise}
                   */
                },
                {
                  key: 'getMuted',
                  value: function getMuted() {
                    return this.get('muted');
                  },
                  /**
                   * A promise to get the paused state of the player.
                   *
                   * @promise GetLoopPromise
                   * @fulfill {boolean} Whether or not the video is paused.
                   */
                  /**
                   * Get the paused state of the player.
                   *
                   * @return {GetLoopPromise}
                   */
                },
                {
                  key: 'getPaused',
                  value: function getPaused() {
                    return this.get('paused');
                  },
                  /**
                   * A promise to get the playback rate of the player.
                   *
                   * @promise GetPlaybackRatePromise
                   * @fulfill {number} The playback rate of the player on a scale from 0 to 2.
                   */
                  /**
                   * Get the playback rate of the player on a scale from `0` to `2`.
                   *
                   * @return {GetPlaybackRatePromise}
                   */
                },
                {
                  key: 'getPlaybackRate',
                  value: function getPlaybackRate() {
                    return this.get('playbackRate');
                  },
                  /**
                   * A promise to set the playbackrate of the player.
                   *
                   * @promise SetPlaybackRatePromise
                   * @fulfill {number} The playback rate was set.
                   * @reject {RangeError} The playback rate was less than 0 or greater than 2.
                   */
                  /**
                   * Set the playback rate of the player on a scale from `0` to `2`. When set
                   * via the API, the playback rate will not be synchronized to other
                   * players or stored as the viewer's preference.
                   *
                   * @param {number} playbackRate
                   * @return {SetPlaybackRatePromise}
                   */
                },
                {
                  key: 'setPlaybackRate',
                  value: function setPlaybackRate(playbackRate) {
                    return this.set('playbackRate', playbackRate);
                  },
                  /**
                   * A promise to get the played property of the video.
                   *
                   * @promise GetPlayedPromise
                   * @fulfill {Array} Played Timeranges converted to an Array.
                   */
                  /**
                   * Get the played property of the video.
                   *
                   * @return {GetPlayedPromise}
                   */
                },
                {
                  key: 'getPlayed',
                  value: function getPlayed() {
                    return this.get('played');
                  },
                  /**
                   * A promise to get the qualities available of the current video.
                   *
                   * @promise GetQualitiesPromise
                   * @fulfill {Array} The qualities of the video.
                   */
                  /**
                   * Get the qualities of the current video.
                   *
                   * @return {GetQualitiesPromise}
                   */
                },
                {
                  key: 'getQualities',
                  value: function getQualities() {
                    return this.get('qualities');
                  },
                  /**
                   * A promise to get the current set quality of the video.
                   *
                   * @promise GetQualityPromise
                   * @fulfill {string} The current set quality.
                   */
                  /**
                   * Get the current set quality of the video.
                   *
                   * @return {GetQualityPromise}
                   */
                },
                {
                  key: 'getQuality',
                  value: function getQuality() {
                    return this.get('quality');
                  },
                  /**
                   * A promise to set the video quality.
                   *
                   * @promise SetQualityPromise
                   * @fulfill {number} The quality was set.
                   * @reject {RangeError} The quality is not available.
                   */
                  /**
                   * Set a video quality.
                   *
                   * @param {string} quality
                   * @return {SetQualityPromise}
                   */
                },
                {
                  key: 'setQuality',
                  value: function setQuality(quality) {
                    return this.set('quality', quality);
                  },
                  /**
                   * A promise to get the remote playback availability.
                   *
                   * @promise RemotePlaybackAvailabilityPromise
                   * @fulfill {boolean} Whether remote playback is available.
                   */
                  /**
                   * Get the availability of remote playback.
                   *
                   * @return {RemotePlaybackAvailabilityPromise}
                   */
                },
                {
                  key: 'getRemotePlaybackAvailability',
                  value: function getRemotePlaybackAvailability() {
                    return this.get('remotePlaybackAvailability');
                  },
                  /**
                   * A promise to get the current remote playback state.
                   *
                   * @promise RemotePlaybackStatePromise
                   * @fulfill {string} The state of the remote playback: connecting, connected, or disconnected.
                   */
                  /**
                   * Get the current remote playback state.
                   *
                   * @return {RemotePlaybackStatePromise}
                   */
                },
                {
                  key: 'getRemotePlaybackState',
                  value: function getRemotePlaybackState() {
                    return this.get('remotePlaybackState');
                  },
                  /**
                   * A promise to get the seekable property of the video.
                   *
                   * @promise GetSeekablePromise
                   * @fulfill {Array} Seekable Timeranges converted to an Array.
                   */
                  /**
                   * Get the seekable property of the video.
                   *
                   * @return {GetSeekablePromise}
                   */
                },
                {
                  key: 'getSeekable',
                  value: function getSeekable() {
                    return this.get('seekable');
                  },
                  /**
                   * A promise to get the seeking property of the player.
                   *
                   * @promise GetSeekingPromise
                   * @fulfill {boolean} Whether or not the player is currently seeking.
                   */
                  /**
                   * Get if the player is currently seeking.
                   *
                   * @return {GetSeekingPromise}
                   */
                },
                {
                  key: 'getSeeking',
                  value: function getSeeking() {
                    return this.get('seeking');
                  },
                  /**
                   * A promise to get the text tracks of a video.
                   *
                   * @promise GetTextTracksPromise
                   * @fulfill {VimeoTextTrack[]} The text tracks associated with the video.
                   */
                  /**
                   * Get an array of the text tracks that exist for the video.
                   *
                   * @return {GetTextTracksPromise}
                   */
                },
                {
                  key: 'getTextTracks',
                  value: function getTextTracks() {
                    return this.get('textTracks');
                  },
                  /**
                   * A promise to get the embed code for the video.
                   *
                   * @promise GetVideoEmbedCodePromise
                   * @fulfill {string} The `<iframe>` embed code for the video.
                   */
                  /**
                   * Get the `<iframe>` embed code for the video.
                   *
                   * @return {GetVideoEmbedCodePromise}
                   */
                },
                {
                  key: 'getVideoEmbedCode',
                  value: function getVideoEmbedCode() {
                    return this.get('videoEmbedCode');
                  },
                  /**
                   * A promise to get the id of the video.
                   *
                   * @promise GetVideoIdPromise
                   * @fulfill {number} The id of the video.
                   */
                  /**
                   * Get the id of the video.
                   *
                   * @return {GetVideoIdPromise}
                   */
                },
                {
                  key: 'getVideoId',
                  value: function getVideoId() {
                    return this.get('videoId');
                  },
                  /**
                   * A promise to get the title of the video.
                   *
                   * @promise GetVideoTitlePromise
                   * @fulfill {number} The title of the video.
                   */
                  /**
                   * Get the title of the video.
                   *
                   * @return {GetVideoTitlePromise}
                   */
                },
                {
                  key: 'getVideoTitle',
                  value: function getVideoTitle() {
                    return this.get('videoTitle');
                  },
                  /**
                   * A promise to get the native width of the video.
                   *
                   * @promise GetVideoWidthPromise
                   * @fulfill {number} The native width of the video.
                   */
                  /**
                   * Get the native width of the currently‐playing video. The width of
                   * the highest‐resolution available will be used before playback begins.
                   *
                   * @return {GetVideoWidthPromise}
                   */
                },
                {
                  key: 'getVideoWidth',
                  value: function getVideoWidth() {
                    return this.get('videoWidth');
                  },
                  /**
                   * A promise to get the native height of the video.
                   *
                   * @promise GetVideoHeightPromise
                   * @fulfill {number} The native height of the video.
                   */
                  /**
                   * Get the native height of the currently‐playing video. The height of
                   * the highest‐resolution available will be used before playback begins.
                   *
                   * @return {GetVideoHeightPromise}
                   */
                },
                {
                  key: 'getVideoHeight',
                  value: function getVideoHeight() {
                    return this.get('videoHeight');
                  },
                  /**
                   * A promise to get the vimeo.com url for the video.
                   *
                   * @promise GetVideoUrlPromise
                   * @fulfill {number} The vimeo.com url for the video.
                   * @reject {PrivacyError} The url isn’t available because of the video’s privacy setting.
                   */
                  /**
                   * Get the vimeo.com url for the video.
                   *
                   * @return {GetVideoUrlPromise}
                   */
                },
                {
                  key: 'getVideoUrl',
                  value: function getVideoUrl() {
                    return this.get('videoUrl');
                  },
                  /**
                   * A promise to get the volume level of the player.
                   *
                   * @promise GetVolumePromise
                   * @fulfill {number} The volume level of the player on a scale from 0 to 1.
                   */
                  /**
                   * Get the current volume level of the player on a scale from `0` to `1`.
                   *
                   * Most mobile devices do not support an independent volume from the
                   * system volume. In those cases, this method will always return `1`.
                   *
                   * @return {GetVolumePromise}
                   */
                },
                {
                  key: 'getVolume',
                  value: function getVolume() {
                    return this.get('volume');
                  },
                  /**
                   * A promise to set the volume level of the player.
                   *
                   * @promise SetVolumePromise
                   * @fulfill {number} The volume was set.
                   * @reject {RangeError} The volume was less than 0 or greater than 1.
                   */
                  /**
                   * Set the volume of the player on a scale from `0` to `1`. When set
                   * via the API, the volume level will not be synchronized to other
                   * players or stored as the viewer’s preference.
                   *
                   * Most mobile devices do not support setting the volume. An error will
                   * *not* be triggered in that situation.
                   *
                   * @param {number} volume
                   * @return {SetVolumePromise}
                   */
                },
                {
                  key: 'setVolume',
                  value: function setVolume(volume) {
                    return this.set('volume', volume);
                  },
                  /** @typedef {import('./lib/timing-object.types').TimingObject} TimingObject */
                  /** @typedef {import('./lib/timing-src-connector.types').TimingSrcConnectorOptions} TimingSrcConnectorOptions */
                  /** @typedef {import('./lib/timing-src-connector').TimingSrcConnector} TimingSrcConnector */

                  /**
                   * Connects a TimingObject to the video player (https://webtiming.github.io/timingobject/)
                   *
                   * @param {TimingObject} timingObject
                   * @param {TimingSrcConnectorOptions} options
                   *
                   * @return {Promise<TimingSrcConnector>}
                   */
                },
                {
                  key: 'setTimingSrc',
                  value: (function () {
                    var _setTimingSrc = _asyncToGenerator(
                      /*#__PURE__*/
                      _regeneratorRuntime().mark(function _callee(
                        timingObject,
                        options
                      ) {
                        var _this6 = this;
                        var connector;
                        return _regeneratorRuntime().wrap(
                          function _callee$(_context) {
                            while (1)
                              switch (
                                (_context.prev = _context.next)
                              ) {
                                case 0:
                                  if (timingObject) {
                                    _context.next = 2;
                                    break;
                                  }
                                  throw new TypeError(
                                    'A Timing Object must be provided.'
                                  );
                                case 2:
                                  _context.next = 4;
                                  return this.ready();
                                case 4:
                                  connector = new TimingSrcConnector(
                                    this,
                                    timingObject,
                                    options
                                  );
                                  postMessage(
                                    this,
                                    'notifyTimingObjectConnect'
                                  );
                                  connector.addEventListener(
                                    'disconnect',
                                    function () {
                                      return postMessage(
                                        _this6,
                                        'notifyTimingObjectDisconnect'
                                      );
                                    }
                                  );
                                  return _context.abrupt(
                                    'return',
                                    connector
                                  );
                                case 8:
                                case 'end':
                                  return _context.stop();
                              }
                          },
                          _callee,
                          this
                        );
                      })
                    );
                    function setTimingSrc(_x, _x2) {
                      return _setTimingSrc.apply(this, arguments);
                    }
                    return setTimingSrc;
                  })(),
                },
              ]);
              return Player;
            })();
          // Setup embed only if this is not a node environment
          if (!isNode) {
            screenfull = initializeScreenfull();
            initializeEmbeds();
            resizeEmbeds();
            initAppendVideoMetadata();
            checkUrlTimeParam();
          }

          /* harmony default export */
          __webpack_exports__['default'] = Player;

          /* WEBPACK VAR INJECTION */
        }).call(
          this,
          __webpack_require__(
            /*! ./../../../webpack/buildin/global.js */
            './node_modules/webpack/buildin/global.js'
          ),
          __webpack_require__(
            /*! ./../../../timers-browserify/main.js */
            './node_modules/timers-browserify/main.js'
          ).setImmediate
        );

        /***/
      },

    /***/
    /*!******************************************************!*\
  !*** ./node_modules/core-js/internals/a-callable.js ***!
  \******************************************************/
    './node_modules/core-js/internals/a-callable.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var isCallable = __webpack_require__(
          /*! ../internals/is-callable */
          './node_modules/core-js/internals/is-callable.js'
        );
        var tryToString = __webpack_require__(
          /*! ../internals/try-to-string */
          './node_modules/core-js/internals/try-to-string.js'
        );

        var $TypeError = TypeError;

        // `Assert: IsCallable(argument) is true`
        module.exports = function (argument) {
          if (isCallable(argument)) return argument;
          throw new $TypeError(
            tryToString(argument) + ' is not a function'
          );
        };

        /***/
      },

    /***/
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/a-constructor.js ***!
  \*********************************************************/
    './node_modules/core-js/internals/a-constructor.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var isConstructor = __webpack_require__(
          /*! ../internals/is-constructor */
          './node_modules/core-js/internals/is-constructor.js'
        );
        var tryToString = __webpack_require__(
          /*! ../internals/try-to-string */
          './node_modules/core-js/internals/try-to-string.js'
        );

        var $TypeError = TypeError;

        // `Assert: IsConstructor(argument) is true`
        module.exports = function (argument) {
          if (isConstructor(argument)) return argument;
          throw new $TypeError(
            tryToString(argument) + ' is not a constructor'
          );
        };

        /***/
      },

    /***/
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/a-possible-prototype.js ***!
  \****************************************************************/
    './node_modules/core-js/internals/a-possible-prototype.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var isPossiblePrototype = __webpack_require__(
          /*! ../internals/is-possible-prototype */
          './node_modules/core-js/internals/is-possible-prototype.js'
        );

        var $String = String;
        var $TypeError = TypeError;

        module.exports = function (argument) {
          if (isPossiblePrototype(argument)) return argument;
          throw new $TypeError(
            "Can't set " + $String(argument) + ' as a prototype'
          );
        };

        /***/
      },

    /***/
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/an-instance.js ***!
  \*******************************************************/
    './node_modules/core-js/internals/an-instance.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var isPrototypeOf = __webpack_require__(
          /*! ../internals/object-is-prototype-of */
          './node_modules/core-js/internals/object-is-prototype-of.js'
        );

        var $TypeError = TypeError;

        module.exports = function (it, Prototype) {
          if (isPrototypeOf(Prototype, it)) return it;
          throw new $TypeError('Incorrect invocation');
        };

        /***/
      },

    /***/
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/an-object.js ***!
  \*****************************************************/
    './node_modules/core-js/internals/an-object.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var isObject = __webpack_require__(
          /*! ../internals/is-object */
          './node_modules/core-js/internals/is-object.js'
        );

        var $String = String;
        var $TypeError = TypeError;

        // `Assert: Type(argument) is Object`
        module.exports = function (argument) {
          if (isObject(argument)) return argument;
          throw new $TypeError(
            $String(argument) + ' is not an object'
          );
        };

        /***/
      },

    /***/
    /*!******************************************************!*\
  !*** ./node_modules/core-js/internals/array-from.js ***!
  \******************************************************/
    './node_modules/core-js/internals/array-from.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var bind = __webpack_require__(
          /*! ../internals/function-bind-context */
          './node_modules/core-js/internals/function-bind-context.js'
        );
        var call = __webpack_require__(
          /*! ../internals/function-call */
          './node_modules/core-js/internals/function-call.js'
        );
        var toObject = __webpack_require__(
          /*! ../internals/to-object */
          './node_modules/core-js/internals/to-object.js'
        );
        var callWithSafeIterationClosing = __webpack_require__(
          /*! ../internals/call-with-safe-iteration-closing */
          './node_modules/core-js/internals/call-with-safe-iteration-closing.js'
        );
        var isArrayIteratorMethod = __webpack_require__(
          /*! ../internals/is-array-iterator-method */
          './node_modules/core-js/internals/is-array-iterator-method.js'
        );
        var isConstructor = __webpack_require__(
          /*! ../internals/is-constructor */
          './node_modules/core-js/internals/is-constructor.js'
        );
        var lengthOfArrayLike = __webpack_require__(
          /*! ../internals/length-of-array-like */
          './node_modules/core-js/internals/length-of-array-like.js'
        );
        var createProperty = __webpack_require__(
          /*! ../internals/create-property */
          './node_modules/core-js/internals/create-property.js'
        );
        var getIterator = __webpack_require__(
          /*! ../internals/get-iterator */
          './node_modules/core-js/internals/get-iterator.js'
        );
        var getIteratorMethod = __webpack_require__(
          /*! ../internals/get-iterator-method */
          './node_modules/core-js/internals/get-iterator-method.js'
        );

        var $Array = Array;

        // `Array.from` method implementation
        // https://tc39.es/ecma262/#sec-array.from
        module.exports = function from(
          arrayLike /* , mapfn = undefined, thisArg = undefined */
        ) {
          var O = toObject(arrayLike);
          var IS_CONSTRUCTOR = isConstructor(this);
          var argumentsLength = arguments.length;
          var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
          var mapping = mapfn !== undefined;
          if (mapping)
            mapfn = bind(
              mapfn,
              argumentsLength > 2 ? arguments[2] : undefined
            );
          var iteratorMethod = getIteratorMethod(O);
          var index = 0;
          var length, result, step, iterator, next, value;
          // if the target is not iterable or it's an array with the default iterator - use a simple case
          if (
            iteratorMethod &&
            !(
              this === $Array && isArrayIteratorMethod(iteratorMethod)
            )
          ) {
            result = IS_CONSTRUCTOR ? new this() : [];
            iterator = getIterator(O, iteratorMethod);
            next = iterator.next;
            for (; !(step = call(next, iterator)).done; index++) {
              value = mapping
                ? callWithSafeIterationClosing(
                    iterator,
                    mapfn,
                    [step.value, index],
                    true
                  )
                : step.value;
              createProperty(result, index, value);
            }
          } else {
            length = lengthOfArrayLike(O);
            result = IS_CONSTRUCTOR
              ? new this(length)
              : $Array(length);
            for (; length > index; index++) {
              value = mapping ? mapfn(O[index], index) : O[index];
              createProperty(result, index, value);
            }
          }
          result.length = index;
          return result;
        };

        /***/
      },

    /***/
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/array-includes.js ***!
  \**********************************************************/
    './node_modules/core-js/internals/array-includes.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var toIndexedObject = __webpack_require__(
          /*! ../internals/to-indexed-object */
          './node_modules/core-js/internals/to-indexed-object.js'
        );
        var toAbsoluteIndex = __webpack_require__(
          /*! ../internals/to-absolute-index */
          './node_modules/core-js/internals/to-absolute-index.js'
        );
        var lengthOfArrayLike = __webpack_require__(
          /*! ../internals/length-of-array-like */
          './node_modules/core-js/internals/length-of-array-like.js'
        );

        // `Array.prototype.{ indexOf, includes }` methods implementation
        var createMethod = function (IS_INCLUDES) {
          return function ($this, el, fromIndex) {
            var O = toIndexedObject($this);
            var length = lengthOfArrayLike(O);
            if (length === 0) return !IS_INCLUDES && -1;
            var index = toAbsoluteIndex(fromIndex, length);
            var value;
            // Array#includes uses SameValueZero equality algorithm
            // eslint-disable-next-line no-self-compare -- NaN check
            if (IS_INCLUDES && el !== el)
              while (length > index) {
                value = O[index++];
                // eslint-disable-next-line no-self-compare -- NaN check
                if (value !== value) return true;
                // Array#indexOf ignores holes, Array#includes - not
              }
            else
              for (; length > index; index++) {
                if ((IS_INCLUDES || index in O) && O[index] === el)
                  return IS_INCLUDES || index || 0;
              }
            return !IS_INCLUDES && -1;
          };
        };

        module.exports = {
          // `Array.prototype.includes` method
          // https://tc39.es/ecma262/#sec-array.prototype.includes
          includes: createMethod(true),
          // `Array.prototype.indexOf` method
          // https://tc39.es/ecma262/#sec-array.prototype.indexof
          indexOf: createMethod(false),
        };

        /***/
      },

    /***/
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/array-iteration.js ***!
  \***********************************************************/
    './node_modules/core-js/internals/array-iteration.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var bind = __webpack_require__(
          /*! ../internals/function-bind-context */
          './node_modules/core-js/internals/function-bind-context.js'
        );
        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this */
          './node_modules/core-js/internals/function-uncurry-this.js'
        );
        var IndexedObject = __webpack_require__(
          /*! ../internals/indexed-object */
          './node_modules/core-js/internals/indexed-object.js'
        );
        var toObject = __webpack_require__(
          /*! ../internals/to-object */
          './node_modules/core-js/internals/to-object.js'
        );
        var lengthOfArrayLike = __webpack_require__(
          /*! ../internals/length-of-array-like */
          './node_modules/core-js/internals/length-of-array-like.js'
        );
        var arraySpeciesCreate = __webpack_require__(
          /*! ../internals/array-species-create */
          './node_modules/core-js/internals/array-species-create.js'
        );

        var push = uncurryThis([].push);

        // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
        var createMethod = function (TYPE) {
          var IS_MAP = TYPE === 1;
          var IS_FILTER = TYPE === 2;
          var IS_SOME = TYPE === 3;
          var IS_EVERY = TYPE === 4;
          var IS_FIND_INDEX = TYPE === 6;
          var IS_FILTER_REJECT = TYPE === 7;
          var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;
          return function ($this, callbackfn, that, specificCreate) {
            var O = toObject($this);
            var self = IndexedObject(O);
            var length = lengthOfArrayLike(self);
            var boundFunction = bind(callbackfn, that);
            var index = 0;
            var create = specificCreate || arraySpeciesCreate;
            var target = IS_MAP
              ? create($this, length)
              : IS_FILTER || IS_FILTER_REJECT
              ? create($this, 0)
              : undefined;
            var value, result;
            for (; length > index; index++)
              if (NO_HOLES || index in self) {
                value = self[index];
                result = boundFunction(value, index, O);
                if (TYPE) {
                  if (IS_MAP) target[index] = result;
                  // map
                  else if (result)
                    switch (TYPE) {
                      case 3:
                        return true;
                      // some
                      case 5:
                        return value;
                      // find
                      case 6:
                        return index;
                      // findIndex
                      case 2:
                        push(target, value);
                      // filter
                    }
                  else
                    switch (TYPE) {
                      case 4:
                        return false;
                      // every
                      case 7:
                        push(target, value);
                      // filterReject
                    }
                }
              }
            return IS_FIND_INDEX
              ? -1
              : IS_SOME || IS_EVERY
              ? IS_EVERY
              : target;
          };
        };

        module.exports = {
          // `Array.prototype.forEach` method
          // https://tc39.es/ecma262/#sec-array.prototype.foreach
          forEach: createMethod(0),
          // `Array.prototype.map` method
          // https://tc39.es/ecma262/#sec-array.prototype.map
          map: createMethod(1),
          // `Array.prototype.filter` method
          // https://tc39.es/ecma262/#sec-array.prototype.filter
          filter: createMethod(2),
          // `Array.prototype.some` method
          // https://tc39.es/ecma262/#sec-array.prototype.some
          some: createMethod(3),
          // `Array.prototype.every` method
          // https://tc39.es/ecma262/#sec-array.prototype.every
          every: createMethod(4),
          // `Array.prototype.find` method
          // https://tc39.es/ecma262/#sec-array.prototype.find
          find: createMethod(5),
          // `Array.prototype.findIndex` method
          // https://tc39.es/ecma262/#sec-array.prototype.findIndex
          findIndex: createMethod(6),
          // `Array.prototype.filterReject` method
          // https://github.com/tc39/proposal-array-filtering
          filterReject: createMethod(7),
        };

        /***/
      },

    /***/
    /*!****************************************************************************!*\
  !*** ./node_modules/core-js/internals/array-method-has-species-support.js ***!
  \****************************************************************************/
    './node_modules/core-js/internals/array-method-has-species-support.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var fails = __webpack_require__(
          /*! ../internals/fails */
          './node_modules/core-js/internals/fails.js'
        );
        var wellKnownSymbol = __webpack_require__(
          /*! ../internals/well-known-symbol */
          './node_modules/core-js/internals/well-known-symbol.js'
        );
        var V8_VERSION = __webpack_require__(
          /*! ../internals/engine-v8-version */
          './node_modules/core-js/internals/engine-v8-version.js'
        );

        var SPECIES = wellKnownSymbol('species');

        module.exports = function (METHOD_NAME) {
          // We can't use this feature detection in V8 since it causes
          // deoptimization and serious performance degradation
          // https://github.com/zloirock/core-js/issues/677
          return (
            V8_VERSION >= 51 ||
            !fails(function () {
              var array = [];
              var constructor = (array.constructor = {});
              constructor[SPECIES] = function () {
                return {
                  foo: 1,
                };
              };
              return array[METHOD_NAME](Boolean).foo !== 1;
            })
          );
        };

        /***/
      },

    /***/
    /*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/array-method-is-strict.js ***!
  \******************************************************************/
    './node_modules/core-js/internals/array-method-is-strict.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var fails = __webpack_require__(
          /*! ../internals/fails */
          './node_modules/core-js/internals/fails.js'
        );

        module.exports = function (METHOD_NAME, argument) {
          var method = [][METHOD_NAME];
          return (
            !!method &&
            fails(function () {
              // eslint-disable-next-line no-useless-call -- required for testing
              method.call(
                null,
                argument ||
                  function () {
                    return 1;
                  },
                1
              );
            })
          );
        };

        /***/
      },

    /***/
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/array-slice.js ***!
  \*******************************************************/
    './node_modules/core-js/internals/array-slice.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this */
          './node_modules/core-js/internals/function-uncurry-this.js'
        );

        module.exports = uncurryThis([].slice);

        /***/
      },

    /***/
    /*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-constructor.js ***!
  \*********************************************************************/
    './node_modules/core-js/internals/array-species-constructor.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var isArray = __webpack_require__(
          /*! ../internals/is-array */
          './node_modules/core-js/internals/is-array.js'
        );
        var isConstructor = __webpack_require__(
          /*! ../internals/is-constructor */
          './node_modules/core-js/internals/is-constructor.js'
        );
        var isObject = __webpack_require__(
          /*! ../internals/is-object */
          './node_modules/core-js/internals/is-object.js'
        );
        var wellKnownSymbol = __webpack_require__(
          /*! ../internals/well-known-symbol */
          './node_modules/core-js/internals/well-known-symbol.js'
        );

        var SPECIES = wellKnownSymbol('species');
        var $Array = Array;

        // a part of `ArraySpeciesCreate` abstract operation
        // https://tc39.es/ecma262/#sec-arrayspeciescreate
        module.exports = function (originalArray) {
          var C;
          if (isArray(originalArray)) {
            C = originalArray.constructor;
            // cross-realm fallback
            if (
              isConstructor(C) &&
              (C === $Array || isArray(C.prototype))
            )
              C = undefined;
            else if (isObject(C)) {
              C = C[SPECIES];
              if (C === null) C = undefined;
            }
          }
          return C === undefined ? $Array : C;
        };

        /***/
      },

    /***/
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-create.js ***!
  \****************************************************************/
    './node_modules/core-js/internals/array-species-create.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var arraySpeciesConstructor = __webpack_require__(
          /*! ../internals/array-species-constructor */
          './node_modules/core-js/internals/array-species-constructor.js'
        );

        // `ArraySpeciesCreate` abstract operation
        // https://tc39.es/ecma262/#sec-arrayspeciescreate
        module.exports = function (originalArray, length) {
          return new (arraySpeciesConstructor(originalArray))(
            length === 0 ? 0 : length
          );
        };

        /***/
      },

    /***/
    /*!****************************************************************************!*\
  !*** ./node_modules/core-js/internals/call-with-safe-iteration-closing.js ***!
  \****************************************************************************/
    './node_modules/core-js/internals/call-with-safe-iteration-closing.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var anObject = __webpack_require__(
          /*! ../internals/an-object */
          './node_modules/core-js/internals/an-object.js'
        );
        var iteratorClose = __webpack_require__(
          /*! ../internals/iterator-close */
          './node_modules/core-js/internals/iterator-close.js'
        );

        // call something on iterator step with safe closing on error
        module.exports = function (iterator, fn, value, ENTRIES) {
          try {
            return ENTRIES
              ? fn(anObject(value)[0], value[1])
              : fn(value);
          } catch (error) {
            iteratorClose(iterator, 'throw', error);
          }
        };

        /***/
      },

    /***/
    /*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/check-correctness-of-iteration.js ***!
  \**************************************************************************/
    './node_modules/core-js/internals/check-correctness-of-iteration.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var wellKnownSymbol = __webpack_require__(
          /*! ../internals/well-known-symbol */
          './node_modules/core-js/internals/well-known-symbol.js'
        );

        var ITERATOR = wellKnownSymbol('iterator');
        var SAFE_CLOSING = false;

        try {
          var called = 0;
          var iteratorWithReturn = {
            next: function () {
              return {
                done: !!called++,
              };
            },
            return: function () {
              SAFE_CLOSING = true;
            },
          };
          iteratorWithReturn[ITERATOR] = function () {
            return this;
          };
          // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
          Array.from(iteratorWithReturn, function () {
            throw 2;
          });
        } catch (error) {
          /* empty */
        }

        module.exports = function (exec, SKIP_CLOSING) {
          try {
            if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
          } catch (error) {
            return false;
          }
          // workaround of old WebKit + `eval` bug
          var ITERATION_SUPPORT = false;
          try {
            var object = {};
            object[ITERATOR] = function () {
              return {
                next: function () {
                  return {
                    done: (ITERATION_SUPPORT = true),
                  };
                },
              };
            };
            exec(object);
          } catch (error) {
            /* empty */
          }
          return ITERATION_SUPPORT;
        };

        /***/
      },

    /***/
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/classof-raw.js ***!
  \*******************************************************/
    './node_modules/core-js/internals/classof-raw.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this */
          './node_modules/core-js/internals/function-uncurry-this.js'
        );

        var toString = uncurryThis({}.toString);
        var stringSlice = uncurryThis(''.slice);

        module.exports = function (it) {
          return stringSlice(toString(it), 8, -1);
        };

        /***/
      },

    /***/
    /*!***************************************************!*\
  !*** ./node_modules/core-js/internals/classof.js ***!
  \***************************************************/
    './node_modules/core-js/internals/classof.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var TO_STRING_TAG_SUPPORT = __webpack_require__(
          /*! ../internals/to-string-tag-support */
          './node_modules/core-js/internals/to-string-tag-support.js'
        );
        var isCallable = __webpack_require__(
          /*! ../internals/is-callable */
          './node_modules/core-js/internals/is-callable.js'
        );
        var classofRaw = __webpack_require__(
          /*! ../internals/classof-raw */
          './node_modules/core-js/internals/classof-raw.js'
        );
        var wellKnownSymbol = __webpack_require__(
          /*! ../internals/well-known-symbol */
          './node_modules/core-js/internals/well-known-symbol.js'
        );

        var TO_STRING_TAG = wellKnownSymbol('toStringTag');
        var $Object = Object;

        // ES3 wrong here
        var CORRECT_ARGUMENTS =
          classofRaw(
            (function () {
              return arguments;
            })()
          ) === 'Arguments';

        // fallback for IE11 Script Access Denied error
        var tryGet = function (it, key) {
          try {
            return it[key];
          } catch (error) {
            /* empty */
          }
        };

        // getting tag from ES6+ `Object.prototype.toString`
        module.exports = TO_STRING_TAG_SUPPORT
          ? classofRaw
          : function (it) {
              var O, tag, result;
              return it === undefined
                ? 'Undefined'
                : it === null
                ? 'Null' // @@toStringTag case
                : typeof (tag = tryGet(
                    (O = $Object(it)),
                    TO_STRING_TAG
                  )) == 'string'
                ? tag // builtinTag case
                : CORRECT_ARGUMENTS
                ? classofRaw(O) // ES3 arguments fallback
                : (result = classofRaw(O)) === 'Object' &&
                  isCallable(O.callee)
                ? 'Arguments'
                : result;
            };

        /***/
      },

    /***/
    /*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/copy-constructor-properties.js ***!
  \***********************************************************************/
    './node_modules/core-js/internals/copy-constructor-properties.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var hasOwn = __webpack_require__(
          /*! ../internals/has-own-property */
          './node_modules/core-js/internals/has-own-property.js'
        );
        var ownKeys = __webpack_require__(
          /*! ../internals/own-keys */
          './node_modules/core-js/internals/own-keys.js'
        );
        var getOwnPropertyDescriptorModule = __webpack_require__(
          /*! ../internals/object-get-own-property-descriptor */
          './node_modules/core-js/internals/object-get-own-property-descriptor.js'
        );
        var definePropertyModule = __webpack_require__(
          /*! ../internals/object-define-property */
          './node_modules/core-js/internals/object-define-property.js'
        );

        module.exports = function (target, source, exceptions) {
          var keys = ownKeys(source);
          var defineProperty = definePropertyModule.f;
          var getOwnPropertyDescriptor =
            getOwnPropertyDescriptorModule.f;
          for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (
              !hasOwn(target, key) &&
              !(exceptions && hasOwn(exceptions, key))
            ) {
              defineProperty(
                target,
                key,
                getOwnPropertyDescriptor(source, key)
              );
            }
          }
        };

        /***/
      },

    /***/
    /*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/correct-is-regexp-logic.js ***!
  \*******************************************************************/
    './node_modules/core-js/internals/correct-is-regexp-logic.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var wellKnownSymbol = __webpack_require__(
          /*! ../internals/well-known-symbol */
          './node_modules/core-js/internals/well-known-symbol.js'
        );

        var MATCH = wellKnownSymbol('match');

        module.exports = function (METHOD_NAME) {
          var regexp = /./;
          try {
            '/./'[METHOD_NAME](regexp);
          } catch (error1) {
            try {
              regexp[MATCH] = false;
              return '/./'[METHOD_NAME](regexp);
            } catch (error2) {
              /* empty */
            }
          }
          return false;
        };

        /***/
      },

    /***/
    /*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/create-non-enumerable-property.js ***!
  \**************************************************************************/
    './node_modules/core-js/internals/create-non-enumerable-property.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var DESCRIPTORS = __webpack_require__(
          /*! ../internals/descriptors */
          './node_modules/core-js/internals/descriptors.js'
        );
        var definePropertyModule = __webpack_require__(
          /*! ../internals/object-define-property */
          './node_modules/core-js/internals/object-define-property.js'
        );
        var createPropertyDescriptor = __webpack_require__(
          /*! ../internals/create-property-descriptor */
          './node_modules/core-js/internals/create-property-descriptor.js'
        );

        module.exports = DESCRIPTORS
          ? function (object, key, value) {
              return definePropertyModule.f(
                object,
                key,
                createPropertyDescriptor(1, value)
              );
            }
          : function (object, key, value) {
              object[key] = value;
              return object;
            };

        /***/
      },

    /***/
    /*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-property-descriptor.js ***!
  \**********************************************************************/
    './node_modules/core-js/internals/create-property-descriptor.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        module.exports = function (bitmap, value) {
          return {
            enumerable: !(bitmap & 1),
            configurable: !(bitmap & 2),
            writable: !(bitmap & 4),
            value: value,
          };
        };

        /***/
      },

    /***/
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/create-property.js ***!
  \***********************************************************/
    './node_modules/core-js/internals/create-property.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var DESCRIPTORS = __webpack_require__(
          /*! ../internals/descriptors */
          './node_modules/core-js/internals/descriptors.js'
        );
        var definePropertyModule = __webpack_require__(
          /*! ../internals/object-define-property */
          './node_modules/core-js/internals/object-define-property.js'
        );
        var createPropertyDescriptor = __webpack_require__(
          /*! ../internals/create-property-descriptor */
          './node_modules/core-js/internals/create-property-descriptor.js'
        );

        module.exports = function (object, key, value) {
          if (DESCRIPTORS)
            definePropertyModule.f(
              object,
              key,
              createPropertyDescriptor(0, value)
            );
          else object[key] = value;
        };

        /***/
      },

    /***/
    /*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/define-built-in-accessor.js ***!
  \********************************************************************/
    './node_modules/core-js/internals/define-built-in-accessor.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var makeBuiltIn = __webpack_require__(
          /*! ../internals/make-built-in */
          './node_modules/core-js/internals/make-built-in.js'
        );
        var defineProperty = __webpack_require__(
          /*! ../internals/object-define-property */
          './node_modules/core-js/internals/object-define-property.js'
        );

        module.exports = function (target, name, descriptor) {
          if (descriptor.get)
            makeBuiltIn(descriptor.get, name, {
              getter: true,
            });
          if (descriptor.set)
            makeBuiltIn(descriptor.set, name, {
              setter: true,
            });
          return defineProperty.f(target, name, descriptor);
        };

        /***/
      },

    /***/
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/define-built-in.js ***!
  \***********************************************************/
    './node_modules/core-js/internals/define-built-in.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var isCallable = __webpack_require__(
          /*! ../internals/is-callable */
          './node_modules/core-js/internals/is-callable.js'
        );
        var definePropertyModule = __webpack_require__(
          /*! ../internals/object-define-property */
          './node_modules/core-js/internals/object-define-property.js'
        );
        var makeBuiltIn = __webpack_require__(
          /*! ../internals/make-built-in */
          './node_modules/core-js/internals/make-built-in.js'
        );
        var defineGlobalProperty = __webpack_require__(
          /*! ../internals/define-global-property */
          './node_modules/core-js/internals/define-global-property.js'
        );

        module.exports = function (O, key, value, options) {
          if (!options) options = {};
          var simple = options.enumerable;
          var name = options.name !== undefined ? options.name : key;
          if (isCallable(value)) makeBuiltIn(value, name, options);
          if (options.global) {
            if (simple) O[key] = value;
            else defineGlobalProperty(key, value);
          } else {
            try {
              if (!options.unsafe) delete O[key];
              else if (O[key]) simple = true;
            } catch (error) {
              /* empty */
            }
            if (simple) O[key] = value;
            else
              definePropertyModule.f(O, key, {
                value: value,
                enumerable: false,
                configurable: !options.nonConfigurable,
                writable: !options.nonWritable,
              });
          }
          return O;
        };

        /***/
      },

    /***/
    /*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/define-global-property.js ***!
  \******************************************************************/
    './node_modules/core-js/internals/define-global-property.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var global = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );

        // eslint-disable-next-line es/no-object-defineproperty -- safe
        var defineProperty = Object.defineProperty;

        module.exports = function (key, value) {
          try {
            defineProperty(global, key, {
              value: value,
              configurable: true,
              writable: true,
            });
          } catch (error) {
            global[key] = value;
          }
          return value;
        };

        /***/
      },

    /***/
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/descriptors.js ***!
  \*******************************************************/
    './node_modules/core-js/internals/descriptors.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var fails = __webpack_require__(
          /*! ../internals/fails */
          './node_modules/core-js/internals/fails.js'
        );

        // Detect IE8's incomplete defineProperty implementation
        module.exports = !fails(function () {
          // eslint-disable-next-line es/no-object-defineproperty -- required for testing
          return (
            Object.defineProperty({}, 1, {
              get: function () {
                return 7;
              },
            })[1] !== 7
          );
        });

        /***/
      },

    /***/
    /*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/document-create-element.js ***!
  \*******************************************************************/
    './node_modules/core-js/internals/document-create-element.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var global = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );
        var isObject = __webpack_require__(
          /*! ../internals/is-object */
          './node_modules/core-js/internals/is-object.js'
        );

        var document = global.document;
        // typeof document.createElement is 'object' in old IE
        var EXISTS =
          isObject(document) && isObject(document.createElement);

        module.exports = function (it) {
          return EXISTS ? document.createElement(it) : {};
        };

        /***/
      },

    /***/
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-browser.js ***!
  \*************************************************************/
    './node_modules/core-js/internals/engine-is-browser.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var IS_DENO = __webpack_require__(
          /*! ../internals/engine-is-deno */
          './node_modules/core-js/internals/engine-is-deno.js'
        );
        var IS_NODE = __webpack_require__(
          /*! ../internals/engine-is-node */
          './node_modules/core-js/internals/engine-is-node.js'
        );

        module.exports =
          !IS_DENO &&
          !IS_NODE &&
          typeof window == 'object' &&
          typeof document == 'object';

        /***/
      },

    /***/
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-deno.js ***!
  \**********************************************************/
    './node_modules/core-js/internals/engine-is-deno.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        /* global Deno -- Deno case */
        module.exports =
          typeof Deno == 'object' &&
          Deno &&
          typeof Deno.version == 'object';

        /***/
      },

    /***/
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-ios-pebble.js ***!
  \****************************************************************/
    './node_modules/core-js/internals/engine-is-ios-pebble.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var userAgent = __webpack_require__(
          /*! ../internals/engine-user-agent */
          './node_modules/core-js/internals/engine-user-agent.js'
        );

        module.exports =
          /ipad|iphone|ipod/i.test(userAgent) &&
          typeof Pebble != 'undefined';

        /***/
      },

    /***/
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-ios.js ***!
  \*********************************************************/
    './node_modules/core-js/internals/engine-is-ios.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var userAgent = __webpack_require__(
          /*! ../internals/engine-user-agent */
          './node_modules/core-js/internals/engine-user-agent.js'
        );

        // eslint-disable-next-line redos/no-vulnerable -- safe
        module.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(
          userAgent
        );

        /***/
      },

    /***/
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-node.js ***!
  \**********************************************************/
    './node_modules/core-js/internals/engine-is-node.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var global = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );
        var classof = __webpack_require__(
          /*! ../internals/classof-raw */
          './node_modules/core-js/internals/classof-raw.js'
        );

        module.exports = classof(global.process) === 'process';

        /***/
      },

    /***/
    /*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-webos-webkit.js ***!
  \******************************************************************/
    './node_modules/core-js/internals/engine-is-webos-webkit.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var userAgent = __webpack_require__(
          /*! ../internals/engine-user-agent */
          './node_modules/core-js/internals/engine-user-agent.js'
        );

        module.exports = /web0s(?!.*chrome)/i.test(userAgent);

        /***/
      },

    /***/
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-user-agent.js ***!
  \*************************************************************/
    './node_modules/core-js/internals/engine-user-agent.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        module.exports =
          (typeof navigator != 'undefined' &&
            String(navigator.userAgent)) ||
          '';

        /***/
      },

    /***/
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-v8-version.js ***!
  \*************************************************************/
    './node_modules/core-js/internals/engine-v8-version.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var global = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );
        var userAgent = __webpack_require__(
          /*! ../internals/engine-user-agent */
          './node_modules/core-js/internals/engine-user-agent.js'
        );

        var process = global.process;
        var Deno = global.Deno;
        var versions =
          (process && process.versions) || (Deno && Deno.version);
        var v8 = versions && versions.v8;
        var match, version;

        if (v8) {
          match = v8.split('.');
          // in old Chrome, versions of V8 isn't V8 = Chrome / 10
          // but their correct versions are not interesting for us
          version =
            match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
        }

        // BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
        // so check `userAgent` even if `.v8` exists, but 0
        if (!version && userAgent) {
          match = userAgent.match(/Edge\/(\d+)/);
          if (!match || match[1] >= 74) {
            match = userAgent.match(/Chrome\/(\d+)/);
            if (match) version = +match[1];
          }
        }

        module.exports = version;

        /***/
      },

    /***/
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/enum-bug-keys.js ***!
  \*********************************************************/
    './node_modules/core-js/internals/enum-bug-keys.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        // IE8- don't enum bug keys
        module.exports = [
          'constructor',
          'hasOwnProperty',
          'isPrototypeOf',
          'propertyIsEnumerable',
          'toLocaleString',
          'toString',
          'valueOf',
        ];

        /***/
      },

    /***/
    /*!**************************************************!*\
  !*** ./node_modules/core-js/internals/export.js ***!
  \**************************************************/
    './node_modules/core-js/internals/export.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var global = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );
        var getOwnPropertyDescriptor = __webpack_require__(
          /*! ../internals/object-get-own-property-descriptor */
          './node_modules/core-js/internals/object-get-own-property-descriptor.js'
        ).f;
        var createNonEnumerableProperty = __webpack_require__(
          /*! ../internals/create-non-enumerable-property */
          './node_modules/core-js/internals/create-non-enumerable-property.js'
        );
        var defineBuiltIn = __webpack_require__(
          /*! ../internals/define-built-in */
          './node_modules/core-js/internals/define-built-in.js'
        );
        var defineGlobalProperty = __webpack_require__(
          /*! ../internals/define-global-property */
          './node_modules/core-js/internals/define-global-property.js'
        );
        var copyConstructorProperties = __webpack_require__(
          /*! ../internals/copy-constructor-properties */
          './node_modules/core-js/internals/copy-constructor-properties.js'
        );
        var isForced = __webpack_require__(
          /*! ../internals/is-forced */
          './node_modules/core-js/internals/is-forced.js'
        );

        /*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
        module.exports = function (options, source) {
          var TARGET = options.target;
          var GLOBAL = options.global;
          var STATIC = options.stat;
          var FORCED,
            target,
            key,
            targetProperty,
            sourceProperty,
            descriptor;
          if (GLOBAL) {
            target = global;
          } else if (STATIC) {
            target =
              global[TARGET] || defineGlobalProperty(TARGET, {});
          } else {
            target = global[TARGET] && global[TARGET].prototype;
          }
          if (target)
            for (key in source) {
              sourceProperty = source[key];
              if (options.dontCallGetSet) {
                descriptor = getOwnPropertyDescriptor(target, key);
                targetProperty = descriptor && descriptor.value;
              } else targetProperty = target[key];
              FORCED = isForced(
                GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key,
                options.forced
              );
              // contained in target
              if (!FORCED && targetProperty !== undefined) {
                if (typeof sourceProperty == typeof targetProperty)
                  continue;
                copyConstructorProperties(
                  sourceProperty,
                  targetProperty
                );
              }
              // add a flag to not completely full polyfills
              if (
                options.sham ||
                (targetProperty && targetProperty.sham)
              ) {
                createNonEnumerableProperty(
                  sourceProperty,
                  'sham',
                  true
                );
              }
              defineBuiltIn(target, key, sourceProperty, options);
            }
        };

        /***/
      },

    /***/
    /*!*************************************************!*\
  !*** ./node_modules/core-js/internals/fails.js ***!
  \*************************************************/
    './node_modules/core-js/internals/fails.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        module.exports = function (exec) {
          try {
            return !!exec();
          } catch (error) {
            return true;
          }
        };

        /***/
      },

    /***/
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/function-apply.js ***!
  \**********************************************************/
    './node_modules/core-js/internals/function-apply.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var NATIVE_BIND = __webpack_require__(
          /*! ../internals/function-bind-native */
          './node_modules/core-js/internals/function-bind-native.js'
        );

        var FunctionPrototype = Function.prototype;
        var apply = FunctionPrototype.apply;
        var call = FunctionPrototype.call;

        // eslint-disable-next-line es/no-reflect -- safe
        module.exports =
          (typeof Reflect == 'object' && Reflect.apply) ||
          (NATIVE_BIND
            ? call.bind(apply)
            : function () {
                return call.apply(apply, arguments);
              });

        /***/
      },

    /***/
    /*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-context.js ***!
  \*****************************************************************/
    './node_modules/core-js/internals/function-bind-context.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this-clause */
          './node_modules/core-js/internals/function-uncurry-this-clause.js'
        );
        var aCallable = __webpack_require__(
          /*! ../internals/a-callable */
          './node_modules/core-js/internals/a-callable.js'
        );
        var NATIVE_BIND = __webpack_require__(
          /*! ../internals/function-bind-native */
          './node_modules/core-js/internals/function-bind-native.js'
        );

        var bind = uncurryThis(uncurryThis.bind);

        // optional / simple context binding
        module.exports = function (fn, that) {
          aCallable(fn);
          return that === undefined
            ? fn
            : NATIVE_BIND
            ? bind(fn, that)
            : function () /* ...args */
              {
                return fn.apply(that, arguments);
              };
        };

        /***/
      },

    /***/
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-native.js ***!
  \****************************************************************/
    './node_modules/core-js/internals/function-bind-native.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var fails = __webpack_require__(
          /*! ../internals/fails */
          './node_modules/core-js/internals/fails.js'
        );

        module.exports = !fails(function () {
          // eslint-disable-next-line es/no-function-prototype-bind -- safe
          var test = function () {
            /* empty */
          }.bind();
          // eslint-disable-next-line no-prototype-builtins -- safe
          return (
            typeof test != 'function' ||
            test.hasOwnProperty('prototype')
          );
        });

        /***/
      },

    /***/
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-call.js ***!
  \*********************************************************/
    './node_modules/core-js/internals/function-call.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var NATIVE_BIND = __webpack_require__(
          /*! ../internals/function-bind-native */
          './node_modules/core-js/internals/function-bind-native.js'
        );

        var call = Function.prototype.call;

        module.exports = NATIVE_BIND
          ? call.bind(call)
          : function () {
              return call.apply(call, arguments);
            };

        /***/
      },

    /***/
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-name.js ***!
  \*********************************************************/
    './node_modules/core-js/internals/function-name.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var DESCRIPTORS = __webpack_require__(
          /*! ../internals/descriptors */
          './node_modules/core-js/internals/descriptors.js'
        );
        var hasOwn = __webpack_require__(
          /*! ../internals/has-own-property */
          './node_modules/core-js/internals/has-own-property.js'
        );

        var FunctionPrototype = Function.prototype;
        // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
        var getDescriptor =
          DESCRIPTORS && Object.getOwnPropertyDescriptor;

        var EXISTS = hasOwn(FunctionPrototype, 'name');
        // additional protection from minified / mangled / dropped function names
        var PROPER =
          EXISTS &&
          function something() {
            /* empty */
          }.name === 'something';
        var CONFIGURABLE =
          EXISTS &&
          (!DESCRIPTORS ||
            (DESCRIPTORS &&
              getDescriptor(FunctionPrototype, 'name').configurable));

        module.exports = {
          EXISTS: EXISTS,
          PROPER: PROPER,
          CONFIGURABLE: CONFIGURABLE,
        };

        /***/
      },

    /***/
    /*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this-accessor.js ***!
  \**************************************************************************/
    './node_modules/core-js/internals/function-uncurry-this-accessor.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this */
          './node_modules/core-js/internals/function-uncurry-this.js'
        );
        var aCallable = __webpack_require__(
          /*! ../internals/a-callable */
          './node_modules/core-js/internals/a-callable.js'
        );

        module.exports = function (object, key, method) {
          try {
            // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
            return uncurryThis(
              aCallable(
                Object.getOwnPropertyDescriptor(object, key)[method]
              )
            );
          } catch (error) {
            /* empty */
          }
        };

        /***/
      },

    /***/
    /*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this-clause.js ***!
  \************************************************************************/
    './node_modules/core-js/internals/function-uncurry-this-clause.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var classofRaw = __webpack_require__(
          /*! ../internals/classof-raw */
          './node_modules/core-js/internals/classof-raw.js'
        );
        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this */
          './node_modules/core-js/internals/function-uncurry-this.js'
        );

        module.exports = function (fn) {
          // Nashorn bug:
          //   https://github.com/zloirock/core-js/issues/1128
          //   https://github.com/zloirock/core-js/issues/1130
          if (classofRaw(fn) === 'Function') return uncurryThis(fn);
        };

        /***/
      },

    /***/
    /*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this.js ***!
  \*****************************************************************/
    './node_modules/core-js/internals/function-uncurry-this.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var NATIVE_BIND = __webpack_require__(
          /*! ../internals/function-bind-native */
          './node_modules/core-js/internals/function-bind-native.js'
        );

        var FunctionPrototype = Function.prototype;
        var call = FunctionPrototype.call;
        var uncurryThisWithBind =
          NATIVE_BIND && FunctionPrototype.bind.bind(call, call);

        module.exports = NATIVE_BIND
          ? uncurryThisWithBind
          : function (fn) {
              return function () {
                return call.apply(fn, arguments);
              };
            };

        /***/
      },

    /***/
    /*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-built-in.js ***!
  \********************************************************/
    './node_modules/core-js/internals/get-built-in.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var global = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );
        var isCallable = __webpack_require__(
          /*! ../internals/is-callable */
          './node_modules/core-js/internals/is-callable.js'
        );

        var aFunction = function (argument) {
          return isCallable(argument) ? argument : undefined;
        };

        module.exports = function (namespace, method) {
          return arguments.length < 2
            ? aFunction(global[namespace])
            : global[namespace] && global[namespace][method];
        };

        /***/
      },

    /***/
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/get-iterator-method.js ***!
  \***************************************************************/
    './node_modules/core-js/internals/get-iterator-method.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var classof = __webpack_require__(
          /*! ../internals/classof */
          './node_modules/core-js/internals/classof.js'
        );
        var getMethod = __webpack_require__(
          /*! ../internals/get-method */
          './node_modules/core-js/internals/get-method.js'
        );
        var isNullOrUndefined = __webpack_require__(
          /*! ../internals/is-null-or-undefined */
          './node_modules/core-js/internals/is-null-or-undefined.js'
        );
        var Iterators = __webpack_require__(
          /*! ../internals/iterators */
          './node_modules/core-js/internals/iterators.js'
        );
        var wellKnownSymbol = __webpack_require__(
          /*! ../internals/well-known-symbol */
          './node_modules/core-js/internals/well-known-symbol.js'
        );

        var ITERATOR = wellKnownSymbol('iterator');

        module.exports = function (it) {
          if (!isNullOrUndefined(it))
            return (
              getMethod(it, ITERATOR) ||
              getMethod(it, '@@iterator') ||
              Iterators[classof(it)]
            );
        };

        /***/
      },

    /***/
    /*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-iterator.js ***!
  \********************************************************/
    './node_modules/core-js/internals/get-iterator.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var call = __webpack_require__(
          /*! ../internals/function-call */
          './node_modules/core-js/internals/function-call.js'
        );
        var aCallable = __webpack_require__(
          /*! ../internals/a-callable */
          './node_modules/core-js/internals/a-callable.js'
        );
        var anObject = __webpack_require__(
          /*! ../internals/an-object */
          './node_modules/core-js/internals/an-object.js'
        );
        var tryToString = __webpack_require__(
          /*! ../internals/try-to-string */
          './node_modules/core-js/internals/try-to-string.js'
        );
        var getIteratorMethod = __webpack_require__(
          /*! ../internals/get-iterator-method */
          './node_modules/core-js/internals/get-iterator-method.js'
        );

        var $TypeError = TypeError;

        module.exports = function (argument, usingIterator) {
          var iteratorMethod =
            arguments.length < 2
              ? getIteratorMethod(argument)
              : usingIterator;
          if (aCallable(iteratorMethod))
            return anObject(call(iteratorMethod, argument));
          throw new $TypeError(
            tryToString(argument) + ' is not iterable'
          );
        };

        /***/
      },

    /***/
    /*!******************************************************!*\
  !*** ./node_modules/core-js/internals/get-method.js ***!
  \******************************************************/
    './node_modules/core-js/internals/get-method.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var aCallable = __webpack_require__(
          /*! ../internals/a-callable */
          './node_modules/core-js/internals/a-callable.js'
        );
        var isNullOrUndefined = __webpack_require__(
          /*! ../internals/is-null-or-undefined */
          './node_modules/core-js/internals/is-null-or-undefined.js'
        );

        // `GetMethod` abstract operation
        // https://tc39.es/ecma262/#sec-getmethod
        module.exports = function (V, P) {
          var func = V[P];
          return isNullOrUndefined(func)
            ? undefined
            : aCallable(func);
        };

        /***/
      },

    /***/
    /*!**************************************************!*\
  !*** ./node_modules/core-js/internals/global.js ***!
  \**************************************************/
    './node_modules/core-js/internals/global.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */
        (function (global) {
          var check = function (it) {
            return it && it.Math === Math && it;
          };

          // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
          module.exports = // eslint-disable-next-line es/no-global-this -- safe
            check(typeof globalThis == 'object' && globalThis) ||
            check(typeof window == 'object' && window) || // eslint-disable-next-line no-restricted-globals -- safe
            check(typeof self == 'object' && self) ||
            check(typeof global == 'object' && global) ||
            check(typeof this == 'object' && this) || // eslint-disable-next-line no-new-func -- fallback
            (function () {
              return this;
            })() ||
            Function('return this')();

          /* WEBPACK VAR INJECTION */
        }).call(
          this,
          __webpack_require__(
            /*! ./../../webpack/buildin/global.js */
            './node_modules/webpack/buildin/global.js'
          )
        );

        /***/
      },

    /***/
    /*!************************************************************!*\
  !*** ./node_modules/core-js/internals/has-own-property.js ***!
  \************************************************************/
    './node_modules/core-js/internals/has-own-property.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this */
          './node_modules/core-js/internals/function-uncurry-this.js'
        );
        var toObject = __webpack_require__(
          /*! ../internals/to-object */
          './node_modules/core-js/internals/to-object.js'
        );

        var hasOwnProperty = uncurryThis({}.hasOwnProperty);

        // `HasOwnProperty` abstract operation
        // https://tc39.es/ecma262/#sec-hasownproperty
        // eslint-disable-next-line es/no-object-hasown -- safe
        module.exports =
          Object.hasOwn ||
          function hasOwn(it, key) {
            return hasOwnProperty(toObject(it), key);
          };

        /***/
      },

    /***/
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/hidden-keys.js ***!
  \*******************************************************/
    './node_modules/core-js/internals/hidden-keys.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        module.exports = {};

        /***/
      },

    /***/
    /*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/host-report-errors.js ***!
  \**************************************************************/
    './node_modules/core-js/internals/host-report-errors.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        module.exports = function (a, b) {
          try {
            // eslint-disable-next-line no-console -- safe
            arguments.length === 1
              ? console.error(a)
              : console.error(a, b);
          } catch (error) {
            /* empty */
          }
        };

        /***/
      },

    /***/
    /*!************************************************!*\
  !*** ./node_modules/core-js/internals/html.js ***!
  \************************************************/
    './node_modules/core-js/internals/html.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var getBuiltIn = __webpack_require__(
          /*! ../internals/get-built-in */
          './node_modules/core-js/internals/get-built-in.js'
        );

        module.exports = getBuiltIn('document', 'documentElement');

        /***/
      },

    /***/
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/ie8-dom-define.js ***!
  \**********************************************************/
    './node_modules/core-js/internals/ie8-dom-define.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var DESCRIPTORS = __webpack_require__(
          /*! ../internals/descriptors */
          './node_modules/core-js/internals/descriptors.js'
        );
        var fails = __webpack_require__(
          /*! ../internals/fails */
          './node_modules/core-js/internals/fails.js'
        );
        var createElement = __webpack_require__(
          /*! ../internals/document-create-element */
          './node_modules/core-js/internals/document-create-element.js'
        );

        // Thanks to IE8 for its funny defineProperty
        module.exports =
          !DESCRIPTORS &&
          !fails(function () {
            // eslint-disable-next-line es/no-object-defineproperty -- required for testing
            return (
              Object.defineProperty(createElement('div'), 'a', {
                get: function () {
                  return 7;
                },
              }).a !== 7
            );
          });

        /***/
      },

    /***/
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/indexed-object.js ***!
  \**********************************************************/
    './node_modules/core-js/internals/indexed-object.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this */
          './node_modules/core-js/internals/function-uncurry-this.js'
        );
        var fails = __webpack_require__(
          /*! ../internals/fails */
          './node_modules/core-js/internals/fails.js'
        );
        var classof = __webpack_require__(
          /*! ../internals/classof-raw */
          './node_modules/core-js/internals/classof-raw.js'
        );

        var $Object = Object;
        var split = uncurryThis(''.split);

        // fallback for non-array-like ES3 and non-enumerable old V8 strings
        module.exports = fails(function () {
          // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
          // eslint-disable-next-line no-prototype-builtins -- safe
          return !$Object('z').propertyIsEnumerable(0);
        })
          ? function (it) {
              return classof(it) === 'String'
                ? split(it, '')
                : $Object(it);
            }
          : $Object;

        /***/
      },

    /***/
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/inspect-source.js ***!
  \**********************************************************/
    './node_modules/core-js/internals/inspect-source.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this */
          './node_modules/core-js/internals/function-uncurry-this.js'
        );
        var isCallable = __webpack_require__(
          /*! ../internals/is-callable */
          './node_modules/core-js/internals/is-callable.js'
        );
        var store = __webpack_require__(
          /*! ../internals/shared-store */
          './node_modules/core-js/internals/shared-store.js'
        );

        var functionToString = uncurryThis(Function.toString);

        // this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
        if (!isCallable(store.inspectSource)) {
          store.inspectSource = function (it) {
            return functionToString(it);
          };
        }

        module.exports = store.inspectSource;

        /***/
      },

    /***/
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/internal-state.js ***!
  \**********************************************************/
    './node_modules/core-js/internals/internal-state.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var NATIVE_WEAK_MAP = __webpack_require__(
          /*! ../internals/weak-map-basic-detection */
          './node_modules/core-js/internals/weak-map-basic-detection.js'
        );
        var global = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );
        var isObject = __webpack_require__(
          /*! ../internals/is-object */
          './node_modules/core-js/internals/is-object.js'
        );
        var createNonEnumerableProperty = __webpack_require__(
          /*! ../internals/create-non-enumerable-property */
          './node_modules/core-js/internals/create-non-enumerable-property.js'
        );
        var hasOwn = __webpack_require__(
          /*! ../internals/has-own-property */
          './node_modules/core-js/internals/has-own-property.js'
        );
        var shared = __webpack_require__(
          /*! ../internals/shared-store */
          './node_modules/core-js/internals/shared-store.js'
        );
        var sharedKey = __webpack_require__(
          /*! ../internals/shared-key */
          './node_modules/core-js/internals/shared-key.js'
        );
        var hiddenKeys = __webpack_require__(
          /*! ../internals/hidden-keys */
          './node_modules/core-js/internals/hidden-keys.js'
        );

        var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
        var TypeError = global.TypeError;
        var WeakMap = global.WeakMap;
        var set, get, has;

        var enforce = function (it) {
          return has(it) ? get(it) : set(it, {});
        };

        var getterFor = function (TYPE) {
          return function (it) {
            var state;
            if (!isObject(it) || (state = get(it)).type !== TYPE) {
              throw new TypeError(
                'Incompatible receiver, ' + TYPE + ' required'
              );
            }
            return state;
          };
        };

        if (NATIVE_WEAK_MAP || shared.state) {
          var store = shared.state || (shared.state = new WeakMap());
          /* eslint-disable no-self-assign -- prototype methods protection */
          store.get = store.get;
          store.has = store.has;
          store.set = store.set;
          /* eslint-enable no-self-assign -- prototype methods protection */
          set = function (it, metadata) {
            if (store.has(it))
              throw new TypeError(OBJECT_ALREADY_INITIALIZED);
            metadata.facade = it;
            store.set(it, metadata);
            return metadata;
          };
          get = function (it) {
            return store.get(it) || {};
          };
          has = function (it) {
            return store.has(it);
          };
        } else {
          var STATE = sharedKey('state');
          hiddenKeys[STATE] = true;
          set = function (it, metadata) {
            if (hasOwn(it, STATE))
              throw new TypeError(OBJECT_ALREADY_INITIALIZED);
            metadata.facade = it;
            createNonEnumerableProperty(it, STATE, metadata);
            return metadata;
          };
          get = function (it) {
            return hasOwn(it, STATE) ? it[STATE] : {};
          };
          has = function (it) {
            return hasOwn(it, STATE);
          };
        }

        module.exports = {
          set: set,
          get: get,
          has: has,
          enforce: enforce,
          getterFor: getterFor,
        };

        /***/
      },

    /***/
    /*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/is-array-iterator-method.js ***!
  \********************************************************************/
    './node_modules/core-js/internals/is-array-iterator-method.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var wellKnownSymbol = __webpack_require__(
          /*! ../internals/well-known-symbol */
          './node_modules/core-js/internals/well-known-symbol.js'
        );
        var Iterators = __webpack_require__(
          /*! ../internals/iterators */
          './node_modules/core-js/internals/iterators.js'
        );

        var ITERATOR = wellKnownSymbol('iterator');
        var ArrayPrototype = Array.prototype;

        // check on default Array iterator
        module.exports = function (it) {
          return (
            it !== undefined &&
            (Iterators.Array === it ||
              ArrayPrototype[ITERATOR] === it)
          );
        };

        /***/
      },

    /***/
    /*!****************************************************!*\
  !*** ./node_modules/core-js/internals/is-array.js ***!
  \****************************************************/
    './node_modules/core-js/internals/is-array.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var classof = __webpack_require__(
          /*! ../internals/classof-raw */
          './node_modules/core-js/internals/classof-raw.js'
        );

        // `IsArray` abstract operation
        // https://tc39.es/ecma262/#sec-isarray
        // eslint-disable-next-line es/no-array-isarray -- safe
        module.exports =
          Array.isArray ||
          function isArray(argument) {
            return classof(argument) === 'Array';
          };

        /***/
      },

    /***/
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/is-callable.js ***!
  \*******************************************************/
    './node_modules/core-js/internals/is-callable.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        // https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
        var documentAll = typeof document == 'object' && document.all;

        // `IsCallable` abstract operation
        // https://tc39.es/ecma262/#sec-iscallable
        // eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
        module.exports =
          typeof documentAll == 'undefined' &&
          documentAll !== undefined
            ? function (argument) {
                return (
                  typeof argument == 'function' ||
                  argument === documentAll
                );
              }
            : function (argument) {
                return typeof argument == 'function';
              };

        /***/
      },

    /***/
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/is-constructor.js ***!
  \**********************************************************/
    './node_modules/core-js/internals/is-constructor.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this */
          './node_modules/core-js/internals/function-uncurry-this.js'
        );
        var fails = __webpack_require__(
          /*! ../internals/fails */
          './node_modules/core-js/internals/fails.js'
        );
        var isCallable = __webpack_require__(
          /*! ../internals/is-callable */
          './node_modules/core-js/internals/is-callable.js'
        );
        var classof = __webpack_require__(
          /*! ../internals/classof */
          './node_modules/core-js/internals/classof.js'
        );
        var getBuiltIn = __webpack_require__(
          /*! ../internals/get-built-in */
          './node_modules/core-js/internals/get-built-in.js'
        );
        var inspectSource = __webpack_require__(
          /*! ../internals/inspect-source */
          './node_modules/core-js/internals/inspect-source.js'
        );

        var noop = function () {
          /* empty */
        };
        var construct = getBuiltIn('Reflect', 'construct');
        var constructorRegExp = /^\s*(?:class|function)\b/;
        var exec = uncurryThis(constructorRegExp.exec);
        var INCORRECT_TO_STRING = !constructorRegExp.test(noop);

        var isConstructorModern = function isConstructor(argument) {
          if (!isCallable(argument)) return false;
          try {
            construct(noop, [], argument);
            return true;
          } catch (error) {
            return false;
          }
        };

        var isConstructorLegacy = function isConstructor(argument) {
          if (!isCallable(argument)) return false;
          switch (classof(argument)) {
            case 'AsyncFunction':
            case 'GeneratorFunction':
            case 'AsyncGeneratorFunction':
              return false;
          }
          try {
            // we can't check .prototype since constructors produced by .bind haven't it
            // `Function#toString` throws on some built-it function in some legacy engines
            // (for example, `DOMQuad` and similar in FF41-)
            return (
              INCORRECT_TO_STRING ||
              !!exec(constructorRegExp, inspectSource(argument))
            );
          } catch (error) {
            return true;
          }
        };

        isConstructorLegacy.sham = true;

        // `IsConstructor` abstract operation
        // https://tc39.es/ecma262/#sec-isconstructor
        module.exports =
          !construct ||
          fails(function () {
            var called;
            return (
              isConstructorModern(isConstructorModern.call) ||
              !isConstructorModern(Object) ||
              !isConstructorModern(function () {
                called = true;
              }) ||
              called
            );
          })
            ? isConstructorLegacy
            : isConstructorModern;

        /***/
      },

    /***/
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-forced.js ***!
  \*****************************************************/
    './node_modules/core-js/internals/is-forced.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var fails = __webpack_require__(
          /*! ../internals/fails */
          './node_modules/core-js/internals/fails.js'
        );
        var isCallable = __webpack_require__(
          /*! ../internals/is-callable */
          './node_modules/core-js/internals/is-callable.js'
        );

        var replacement = /#|\.prototype\./;

        var isForced = function (feature, detection) {
          var value = data[normalize(feature)];
          return value === POLYFILL
            ? true
            : value === NATIVE
            ? false
            : isCallable(detection)
            ? fails(detection)
            : !!detection;
        };

        var normalize = (isForced.normalize = function (string) {
          return String(string)
            .replace(replacement, '.')
            .toLowerCase();
        });
        var data = (isForced.data = {});
        var NATIVE = (isForced.NATIVE = 'N');
        var POLYFILL = (isForced.POLYFILL = 'P');

        module.exports = isForced;

        /***/
      },

    /***/
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/is-null-or-undefined.js ***!
  \****************************************************************/
    './node_modules/core-js/internals/is-null-or-undefined.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        // we can't use just `it == null` since of `document.all` special case
        // https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
        module.exports = function (it) {
          return it === null || it === undefined;
        };

        /***/
      },

    /***/
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-object.js ***!
  \*****************************************************/
    './node_modules/core-js/internals/is-object.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var isCallable = __webpack_require__(
          /*! ../internals/is-callable */
          './node_modules/core-js/internals/is-callable.js'
        );

        module.exports = function (it) {
          return typeof it == 'object' ? it !== null : isCallable(it);
        };

        /***/
      },

    /***/
    /*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/is-possible-prototype.js ***!
  \*****************************************************************/
    './node_modules/core-js/internals/is-possible-prototype.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var isObject = __webpack_require__(
          /*! ../internals/is-object */
          './node_modules/core-js/internals/is-object.js'
        );

        module.exports = function (argument) {
          return isObject(argument) || argument === null;
        };

        /***/
      },

    /***/
    /*!***************************************************!*\
  !*** ./node_modules/core-js/internals/is-pure.js ***!
  \***************************************************/
    './node_modules/core-js/internals/is-pure.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        module.exports = false;

        /***/
      },

    /***/
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-regexp.js ***!
  \*****************************************************/
    './node_modules/core-js/internals/is-regexp.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var isObject = __webpack_require__(
          /*! ../internals/is-object */
          './node_modules/core-js/internals/is-object.js'
        );
        var classof = __webpack_require__(
          /*! ../internals/classof-raw */
          './node_modules/core-js/internals/classof-raw.js'
        );
        var wellKnownSymbol = __webpack_require__(
          /*! ../internals/well-known-symbol */
          './node_modules/core-js/internals/well-known-symbol.js'
        );

        var MATCH = wellKnownSymbol('match');

        // `IsRegExp` abstract operation
        // https://tc39.es/ecma262/#sec-isregexp
        module.exports = function (it) {
          var isRegExp;
          return (
            isObject(it) &&
            ((isRegExp = it[MATCH]) !== undefined
              ? !!isRegExp
              : classof(it) === 'RegExp')
          );
        };

        /***/
      },

    /***/
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-symbol.js ***!
  \*****************************************************/
    './node_modules/core-js/internals/is-symbol.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var getBuiltIn = __webpack_require__(
          /*! ../internals/get-built-in */
          './node_modules/core-js/internals/get-built-in.js'
        );
        var isCallable = __webpack_require__(
          /*! ../internals/is-callable */
          './node_modules/core-js/internals/is-callable.js'
        );
        var isPrototypeOf = __webpack_require__(
          /*! ../internals/object-is-prototype-of */
          './node_modules/core-js/internals/object-is-prototype-of.js'
        );
        var USE_SYMBOL_AS_UID = __webpack_require__(
          /*! ../internals/use-symbol-as-uid */
          './node_modules/core-js/internals/use-symbol-as-uid.js'
        );

        var $Object = Object;

        module.exports = USE_SYMBOL_AS_UID
          ? function (it) {
              return typeof it == 'symbol';
            }
          : function (it) {
              var $Symbol = getBuiltIn('Symbol');
              return (
                isCallable($Symbol) &&
                isPrototypeOf($Symbol.prototype, $Object(it))
              );
            };

        /***/
      },

    /***/
    /*!***************************************************!*\
  !*** ./node_modules/core-js/internals/iterate.js ***!
  \***************************************************/
    './node_modules/core-js/internals/iterate.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var bind = __webpack_require__(
          /*! ../internals/function-bind-context */
          './node_modules/core-js/internals/function-bind-context.js'
        );
        var call = __webpack_require__(
          /*! ../internals/function-call */
          './node_modules/core-js/internals/function-call.js'
        );
        var anObject = __webpack_require__(
          /*! ../internals/an-object */
          './node_modules/core-js/internals/an-object.js'
        );
        var tryToString = __webpack_require__(
          /*! ../internals/try-to-string */
          './node_modules/core-js/internals/try-to-string.js'
        );
        var isArrayIteratorMethod = __webpack_require__(
          /*! ../internals/is-array-iterator-method */
          './node_modules/core-js/internals/is-array-iterator-method.js'
        );
        var lengthOfArrayLike = __webpack_require__(
          /*! ../internals/length-of-array-like */
          './node_modules/core-js/internals/length-of-array-like.js'
        );
        var isPrototypeOf = __webpack_require__(
          /*! ../internals/object-is-prototype-of */
          './node_modules/core-js/internals/object-is-prototype-of.js'
        );
        var getIterator = __webpack_require__(
          /*! ../internals/get-iterator */
          './node_modules/core-js/internals/get-iterator.js'
        );
        var getIteratorMethod = __webpack_require__(
          /*! ../internals/get-iterator-method */
          './node_modules/core-js/internals/get-iterator-method.js'
        );
        var iteratorClose = __webpack_require__(
          /*! ../internals/iterator-close */
          './node_modules/core-js/internals/iterator-close.js'
        );

        var $TypeError = TypeError;

        var Result = function (stopped, result) {
          this.stopped = stopped;
          this.result = result;
        };

        var ResultPrototype = Result.prototype;

        module.exports = function (
          iterable,
          unboundFunction,
          options
        ) {
          var that = options && options.that;
          var AS_ENTRIES = !!(options && options.AS_ENTRIES);
          var IS_RECORD = !!(options && options.IS_RECORD);
          var IS_ITERATOR = !!(options && options.IS_ITERATOR);
          var INTERRUPTED = !!(options && options.INTERRUPTED);
          var fn = bind(unboundFunction, that);
          var iterator, iterFn, index, length, result, next, step;

          var stop = function (condition) {
            if (iterator)
              iteratorClose(iterator, 'normal', condition);
            return new Result(true, condition);
          };

          var callFn = function (value) {
            if (AS_ENTRIES) {
              anObject(value);
              return INTERRUPTED
                ? fn(value[0], value[1], stop)
                : fn(value[0], value[1]);
            }
            return INTERRUPTED ? fn(value, stop) : fn(value);
          };

          if (IS_RECORD) {
            iterator = iterable.iterator;
          } else if (IS_ITERATOR) {
            iterator = iterable;
          } else {
            iterFn = getIteratorMethod(iterable);
            if (!iterFn)
              throw new $TypeError(
                tryToString(iterable) + ' is not iterable'
              );
            // optimisation for array iterators
            if (isArrayIteratorMethod(iterFn)) {
              for (
                index = 0, length = lengthOfArrayLike(iterable);
                length > index;
                index++
              ) {
                result = callFn(iterable[index]);
                if (result && isPrototypeOf(ResultPrototype, result))
                  return result;
              }
              return new Result(false);
            }
            iterator = getIterator(iterable, iterFn);
          }

          next = IS_RECORD ? iterable.next : iterator.next;
          while (!(step = call(next, iterator)).done) {
            try {
              result = callFn(step.value);
            } catch (error) {
              iteratorClose(iterator, 'throw', error);
            }
            if (
              typeof result == 'object' &&
              result &&
              isPrototypeOf(ResultPrototype, result)
            )
              return result;
          }
          return new Result(false);
        };

        /***/
      },

    /***/
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/iterator-close.js ***!
  \**********************************************************/
    './node_modules/core-js/internals/iterator-close.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var call = __webpack_require__(
          /*! ../internals/function-call */
          './node_modules/core-js/internals/function-call.js'
        );
        var anObject = __webpack_require__(
          /*! ../internals/an-object */
          './node_modules/core-js/internals/an-object.js'
        );
        var getMethod = __webpack_require__(
          /*! ../internals/get-method */
          './node_modules/core-js/internals/get-method.js'
        );

        module.exports = function (iterator, kind, value) {
          var innerResult, innerError;
          anObject(iterator);
          try {
            innerResult = getMethod(iterator, 'return');
            if (!innerResult) {
              if (kind === 'throw') throw value;
              return value;
            }
            innerResult = call(innerResult, iterator);
          } catch (error) {
            innerError = true;
            innerResult = error;
          }
          if (kind === 'throw') throw value;
          if (innerError) throw innerResult;
          anObject(innerResult);
          return value;
        };

        /***/
      },

    /***/
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/iterators.js ***!
  \*****************************************************/
    './node_modules/core-js/internals/iterators.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        module.exports = {};

        /***/
      },

    /***/
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/length-of-array-like.js ***!
  \****************************************************************/
    './node_modules/core-js/internals/length-of-array-like.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var toLength = __webpack_require__(
          /*! ../internals/to-length */
          './node_modules/core-js/internals/to-length.js'
        );

        // `LengthOfArrayLike` abstract operation
        // https://tc39.es/ecma262/#sec-lengthofarraylike
        module.exports = function (obj) {
          return toLength(obj.length);
        };

        /***/
      },

    /***/
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/make-built-in.js ***!
  \*********************************************************/
    './node_modules/core-js/internals/make-built-in.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this */
          './node_modules/core-js/internals/function-uncurry-this.js'
        );
        var fails = __webpack_require__(
          /*! ../internals/fails */
          './node_modules/core-js/internals/fails.js'
        );
        var isCallable = __webpack_require__(
          /*! ../internals/is-callable */
          './node_modules/core-js/internals/is-callable.js'
        );
        var hasOwn = __webpack_require__(
          /*! ../internals/has-own-property */
          './node_modules/core-js/internals/has-own-property.js'
        );
        var DESCRIPTORS = __webpack_require__(
          /*! ../internals/descriptors */
          './node_modules/core-js/internals/descriptors.js'
        );
        var CONFIGURABLE_FUNCTION_NAME = __webpack_require__(
          /*! ../internals/function-name */
          './node_modules/core-js/internals/function-name.js'
        ).CONFIGURABLE;
        var inspectSource = __webpack_require__(
          /*! ../internals/inspect-source */
          './node_modules/core-js/internals/inspect-source.js'
        );
        var InternalStateModule = __webpack_require__(
          /*! ../internals/internal-state */
          './node_modules/core-js/internals/internal-state.js'
        );

        var enforceInternalState = InternalStateModule.enforce;
        var getInternalState = InternalStateModule.get;
        var $String = String;
        // eslint-disable-next-line es/no-object-defineproperty -- safe
        var defineProperty = Object.defineProperty;
        var stringSlice = uncurryThis(''.slice);
        var replace = uncurryThis(''.replace);
        var join = uncurryThis([].join);

        var CONFIGURABLE_LENGTH =
          DESCRIPTORS &&
          !fails(function () {
            return (
              defineProperty(
                function () {
                  /* empty */
                },
                'length',
                {
                  value: 8,
                }
              ).length !== 8
            );
          });

        var TEMPLATE = String(String).split('String');

        var makeBuiltIn = (module.exports = function (
          value,
          name,
          options
        ) {
          if (stringSlice($String(name), 0, 7) === 'Symbol(') {
            name =
              '[' +
              replace($String(name), /^Symbol\(([^)]*)\).*$/, '$1') +
              ']';
          }
          if (options && options.getter) name = 'get ' + name;
          if (options && options.setter) name = 'set ' + name;
          if (
            !hasOwn(value, 'name') ||
            (CONFIGURABLE_FUNCTION_NAME && value.name !== name)
          ) {
            if (DESCRIPTORS)
              defineProperty(value, 'name', {
                value: name,
                configurable: true,
              });
            else value.name = name;
          }
          if (
            CONFIGURABLE_LENGTH &&
            options &&
            hasOwn(options, 'arity') &&
            value.length !== options.arity
          ) {
            defineProperty(value, 'length', {
              value: options.arity,
            });
          }
          try {
            if (
              options &&
              hasOwn(options, 'constructor') &&
              options.constructor
            ) {
              if (DESCRIPTORS)
                defineProperty(value, 'prototype', {
                  writable: false,
                });
              // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
            } else if (value.prototype) value.prototype = undefined;
          } catch (error) {
            /* empty */
          }
          var state = enforceInternalState(value);
          if (!hasOwn(state, 'source')) {
            state.source = join(
              TEMPLATE,
              typeof name == 'string' ? name : ''
            );
          }
          return value;
        });
        // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
        // eslint-disable-next-line no-extend-native -- required
        Function.prototype.toString = makeBuiltIn(
          function toString() {
            return (
              (isCallable(this) && getInternalState(this).source) ||
              inspectSource(this)
            );
          },
          'toString'
        );

        /***/
      },

    /***/
    /*!******************************************************!*\
  !*** ./node_modules/core-js/internals/math-trunc.js ***!
  \******************************************************/
    './node_modules/core-js/internals/math-trunc.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var ceil = Math.ceil;
        var floor = Math.floor;

        // `Math.trunc` method
        // https://tc39.es/ecma262/#sec-math.trunc
        // eslint-disable-next-line es/no-math-trunc -- safe
        module.exports =
          Math.trunc ||
          function trunc(x) {
            var n = +x;
            return (n > 0 ? floor : ceil)(n);
          };

        /***/
      },

    /***/
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/microtask.js ***!
  \*****************************************************/
    './node_modules/core-js/internals/microtask.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var global = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );
        var safeGetBuiltIn = __webpack_require__(
          /*! ../internals/safe-get-built-in */
          './node_modules/core-js/internals/safe-get-built-in.js'
        );
        var bind = __webpack_require__(
          /*! ../internals/function-bind-context */
          './node_modules/core-js/internals/function-bind-context.js'
        );
        var macrotask = __webpack_require__(
          /*! ../internals/task */
          './node_modules/core-js/internals/task.js'
        ).set;
        var Queue = __webpack_require__(
          /*! ../internals/queue */
          './node_modules/core-js/internals/queue.js'
        );
        var IS_IOS = __webpack_require__(
          /*! ../internals/engine-is-ios */
          './node_modules/core-js/internals/engine-is-ios.js'
        );
        var IS_IOS_PEBBLE = __webpack_require__(
          /*! ../internals/engine-is-ios-pebble */
          './node_modules/core-js/internals/engine-is-ios-pebble.js'
        );
        var IS_WEBOS_WEBKIT = __webpack_require__(
          /*! ../internals/engine-is-webos-webkit */
          './node_modules/core-js/internals/engine-is-webos-webkit.js'
        );
        var IS_NODE = __webpack_require__(
          /*! ../internals/engine-is-node */
          './node_modules/core-js/internals/engine-is-node.js'
        );

        var MutationObserver =
          global.MutationObserver || global.WebKitMutationObserver;
        var document = global.document;
        var process = global.process;
        var Promise = global.Promise;
        var microtask = safeGetBuiltIn('queueMicrotask');
        var notify, toggle, node, promise, then;

        // modern engines have queueMicrotask method
        if (!microtask) {
          var queue = new Queue();

          var flush = function () {
            var parent, fn;
            if (IS_NODE && (parent = process.domain)) parent.exit();
            while ((fn = queue.get()))
              try {
                fn();
              } catch (error) {
                if (queue.head) notify();
                throw error;
              }
            if (parent) parent.enter();
          };

          // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
          // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
          if (
            !IS_IOS &&
            !IS_NODE &&
            !IS_WEBOS_WEBKIT &&
            MutationObserver &&
            document
          ) {
            toggle = true;
            node = document.createTextNode('');
            new MutationObserver(flush).observe(node, {
              characterData: true,
            });
            notify = function () {
              node.data = toggle = !toggle;
            };
            // environments with maybe non-completely correct, but existent Promise
          } else if (!IS_IOS_PEBBLE && Promise && Promise.resolve) {
            // Promise.resolve without an argument throws an error in LG WebOS 2
            promise = Promise.resolve(undefined);
            // workaround of WebKit ~ iOS Safari 10.1 bug
            promise.constructor = Promise;
            then = bind(promise.then, promise);
            notify = function () {
              then(flush);
            };
            // Node.js without promises
          } else if (IS_NODE) {
            notify = function () {
              process.nextTick(flush);
            };
            // for other environments - macrotask based on:
            // - setImmediate
            // - MessageChannel
            // - window.postMessage
            // - onreadystatechange
            // - setTimeout
          } else {
            // `webpack` dev server bug on IE global methods - use bind(fn, global)
            macrotask = bind(macrotask, global);
            notify = function () {
              macrotask(flush);
            };
          }

          microtask = function (fn) {
            if (!queue.head) notify();
            queue.add(fn);
          };
        }

        module.exports = microtask;

        /***/
      },

    /***/
    /*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/new-promise-capability.js ***!
  \******************************************************************/
    './node_modules/core-js/internals/new-promise-capability.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var aCallable = __webpack_require__(
          /*! ../internals/a-callable */
          './node_modules/core-js/internals/a-callable.js'
        );

        var $TypeError = TypeError;

        var PromiseCapability = function (C) {
          var resolve, reject;
          this.promise = new C(function ($$resolve, $$reject) {
            if (resolve !== undefined || reject !== undefined)
              throw new $TypeError('Bad Promise constructor');
            resolve = $$resolve;
            reject = $$reject;
          });
          this.resolve = aCallable(resolve);
          this.reject = aCallable(reject);
        };

        // `NewPromiseCapability` abstract operation
        // https://tc39.es/ecma262/#sec-newpromisecapability
        module.exports.f = function (C) {
          return new PromiseCapability(C);
        };

        /***/
      },

    /***/
    /*!********************************************************!*\
  !*** ./node_modules/core-js/internals/not-a-regexp.js ***!
  \********************************************************/
    './node_modules/core-js/internals/not-a-regexp.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var isRegExp = __webpack_require__(
          /*! ../internals/is-regexp */
          './node_modules/core-js/internals/is-regexp.js'
        );

        var $TypeError = TypeError;

        module.exports = function (it) {
          if (isRegExp(it)) {
            throw new $TypeError(
              "The method doesn't accept regular expressions"
            );
          }
          return it;
        };

        /***/
      },

    /***/
    /*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-property.js ***!
  \******************************************************************/
    './node_modules/core-js/internals/object-define-property.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var DESCRIPTORS = __webpack_require__(
          /*! ../internals/descriptors */
          './node_modules/core-js/internals/descriptors.js'
        );
        var IE8_DOM_DEFINE = __webpack_require__(
          /*! ../internals/ie8-dom-define */
          './node_modules/core-js/internals/ie8-dom-define.js'
        );
        var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(
          /*! ../internals/v8-prototype-define-bug */
          './node_modules/core-js/internals/v8-prototype-define-bug.js'
        );
        var anObject = __webpack_require__(
          /*! ../internals/an-object */
          './node_modules/core-js/internals/an-object.js'
        );
        var toPropertyKey = __webpack_require__(
          /*! ../internals/to-property-key */
          './node_modules/core-js/internals/to-property-key.js'
        );

        var $TypeError = TypeError;
        // eslint-disable-next-line es/no-object-defineproperty -- safe
        var $defineProperty = Object.defineProperty;
        // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
        var $getOwnPropertyDescriptor =
          Object.getOwnPropertyDescriptor;
        var ENUMERABLE = 'enumerable';
        var CONFIGURABLE = 'configurable';
        var WRITABLE = 'writable';

        // `Object.defineProperty` method
        // https://tc39.es/ecma262/#sec-object.defineproperty
        exports.f = DESCRIPTORS
          ? V8_PROTOTYPE_DEFINE_BUG
            ? function defineProperty(O, P, Attributes) {
                anObject(O);
                P = toPropertyKey(P);
                anObject(Attributes);
                if (
                  typeof O === 'function' &&
                  P === 'prototype' &&
                  'value' in Attributes &&
                  WRITABLE in Attributes &&
                  !Attributes[WRITABLE]
                ) {
                  var current = $getOwnPropertyDescriptor(O, P);
                  if (current && current[WRITABLE]) {
                    O[P] = Attributes.value;
                    Attributes = {
                      configurable:
                        CONFIGURABLE in Attributes
                          ? Attributes[CONFIGURABLE]
                          : current[CONFIGURABLE],
                      enumerable:
                        ENUMERABLE in Attributes
                          ? Attributes[ENUMERABLE]
                          : current[ENUMERABLE],
                      writable: false,
                    };
                  }
                }
                return $defineProperty(O, P, Attributes);
              }
            : $defineProperty
          : function defineProperty(O, P, Attributes) {
              anObject(O);
              P = toPropertyKey(P);
              anObject(Attributes);
              if (IE8_DOM_DEFINE)
                try {
                  return $defineProperty(O, P, Attributes);
                } catch (error) {
                  /* empty */
                }
              if ('get' in Attributes || 'set' in Attributes)
                throw new $TypeError('Accessors not supported');
              if ('value' in Attributes) O[P] = Attributes.value;
              return O;
            };

        /***/
      },

    /***/
    /*!******************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-descriptor.js ***!
  \******************************************************************************/
    './node_modules/core-js/internals/object-get-own-property-descriptor.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var DESCRIPTORS = __webpack_require__(
          /*! ../internals/descriptors */
          './node_modules/core-js/internals/descriptors.js'
        );
        var call = __webpack_require__(
          /*! ../internals/function-call */
          './node_modules/core-js/internals/function-call.js'
        );
        var propertyIsEnumerableModule = __webpack_require__(
          /*! ../internals/object-property-is-enumerable */
          './node_modules/core-js/internals/object-property-is-enumerable.js'
        );
        var createPropertyDescriptor = __webpack_require__(
          /*! ../internals/create-property-descriptor */
          './node_modules/core-js/internals/create-property-descriptor.js'
        );
        var toIndexedObject = __webpack_require__(
          /*! ../internals/to-indexed-object */
          './node_modules/core-js/internals/to-indexed-object.js'
        );
        var toPropertyKey = __webpack_require__(
          /*! ../internals/to-property-key */
          './node_modules/core-js/internals/to-property-key.js'
        );
        var hasOwn = __webpack_require__(
          /*! ../internals/has-own-property */
          './node_modules/core-js/internals/has-own-property.js'
        );
        var IE8_DOM_DEFINE = __webpack_require__(
          /*! ../internals/ie8-dom-define */
          './node_modules/core-js/internals/ie8-dom-define.js'
        );

        // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
        var $getOwnPropertyDescriptor =
          Object.getOwnPropertyDescriptor;

        // `Object.getOwnPropertyDescriptor` method
        // https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
        exports.f = DESCRIPTORS
          ? $getOwnPropertyDescriptor
          : function getOwnPropertyDescriptor(O, P) {
              O = toIndexedObject(O);
              P = toPropertyKey(P);
              if (IE8_DOM_DEFINE)
                try {
                  return $getOwnPropertyDescriptor(O, P);
                } catch (error) {
                  /* empty */
                }
              if (hasOwn(O, P))
                return createPropertyDescriptor(
                  !call(propertyIsEnumerableModule.f, O, P),
                  O[P]
                );
            };

        /***/
      },

    /***/
    /*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-names.js ***!
  \*************************************************************************/
    './node_modules/core-js/internals/object-get-own-property-names.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var internalObjectKeys = __webpack_require__(
          /*! ../internals/object-keys-internal */
          './node_modules/core-js/internals/object-keys-internal.js'
        );
        var enumBugKeys = __webpack_require__(
          /*! ../internals/enum-bug-keys */
          './node_modules/core-js/internals/enum-bug-keys.js'
        );

        var hiddenKeys = enumBugKeys.concat('length', 'prototype');

        // `Object.getOwnPropertyNames` method
        // https://tc39.es/ecma262/#sec-object.getownpropertynames
        // eslint-disable-next-line es/no-object-getownpropertynames -- safe
        exports.f =
          Object.getOwnPropertyNames ||
          function getOwnPropertyNames(O) {
            return internalObjectKeys(O, hiddenKeys);
          };

        /***/
      },

    /***/
    /*!***************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-symbols.js ***!
  \***************************************************************************/
    './node_modules/core-js/internals/object-get-own-property-symbols.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        // eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
        exports.f = Object.getOwnPropertySymbols;

        /***/
      },

    /***/
    /*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-is-prototype-of.js ***!
  \******************************************************************/
    './node_modules/core-js/internals/object-is-prototype-of.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this */
          './node_modules/core-js/internals/function-uncurry-this.js'
        );

        module.exports = uncurryThis({}.isPrototypeOf);

        /***/
      },

    /***/
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys-internal.js ***!
  \****************************************************************/
    './node_modules/core-js/internals/object-keys-internal.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this */
          './node_modules/core-js/internals/function-uncurry-this.js'
        );
        var hasOwn = __webpack_require__(
          /*! ../internals/has-own-property */
          './node_modules/core-js/internals/has-own-property.js'
        );
        var toIndexedObject = __webpack_require__(
          /*! ../internals/to-indexed-object */
          './node_modules/core-js/internals/to-indexed-object.js'
        );
        var indexOf = __webpack_require__(
          /*! ../internals/array-includes */
          './node_modules/core-js/internals/array-includes.js'
        ).indexOf;
        var hiddenKeys = __webpack_require__(
          /*! ../internals/hidden-keys */
          './node_modules/core-js/internals/hidden-keys.js'
        );

        var push = uncurryThis([].push);

        module.exports = function (object, names) {
          var O = toIndexedObject(object);
          var i = 0;
          var result = [];
          var key;
          for (key in O)
            !hasOwn(hiddenKeys, key) &&
              hasOwn(O, key) &&
              push(result, key);
          // Don't enum bug & hidden keys
          while (names.length > i)
            if (hasOwn(O, (key = names[i++]))) {
              ~indexOf(result, key) || push(result, key);
            }
          return result;
        };

        /***/
      },

    /***/
    /*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-property-is-enumerable.js ***!
  \*************************************************************************/
    './node_modules/core-js/internals/object-property-is-enumerable.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var $propertyIsEnumerable = {}.propertyIsEnumerable;
        // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
        var getOwnPropertyDescriptor =
          Object.getOwnPropertyDescriptor;

        // Nashorn ~ JDK8 bug
        var NASHORN_BUG =
          getOwnPropertyDescriptor &&
          !$propertyIsEnumerable.call(
            {
              1: 2,
            },
            1
          );

        // `Object.prototype.propertyIsEnumerable` method implementation
        // https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
        exports.f = NASHORN_BUG
          ? function propertyIsEnumerable(V) {
              var descriptor = getOwnPropertyDescriptor(this, V);
              return !!descriptor && descriptor.enumerable;
            }
          : $propertyIsEnumerable;

        /***/
      },

    /***/
    /*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-set-prototype-of.js ***!
  \*******************************************************************/
    './node_modules/core-js/internals/object-set-prototype-of.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        /* eslint-disable no-proto -- safe */
        var uncurryThisAccessor = __webpack_require__(
          /*! ../internals/function-uncurry-this-accessor */
          './node_modules/core-js/internals/function-uncurry-this-accessor.js'
        );
        var isObject = __webpack_require__(
          /*! ../internals/is-object */
          './node_modules/core-js/internals/is-object.js'
        );
        var requireObjectCoercible = __webpack_require__(
          /*! ../internals/require-object-coercible */
          './node_modules/core-js/internals/require-object-coercible.js'
        );
        var aPossiblePrototype = __webpack_require__(
          /*! ../internals/a-possible-prototype */
          './node_modules/core-js/internals/a-possible-prototype.js'
        );

        // `Object.setPrototypeOf` method
        // https://tc39.es/ecma262/#sec-object.setprototypeof
        // Works with __proto__ only. Old v8 can't work with null proto objects.
        // eslint-disable-next-line es/no-object-setprototypeof -- safe
        module.exports =
          Object.setPrototypeOf ||
          ('__proto__' in {}
            ? (function () {
                var CORRECT_SETTER = false;
                var test = {};
                var setter;
                try {
                  setter = uncurryThisAccessor(
                    Object.prototype,
                    '__proto__',
                    'set'
                  );
                  setter(test, []);
                  CORRECT_SETTER = test instanceof Array;
                } catch (error) {
                  /* empty */
                }
                return function setPrototypeOf(O, proto) {
                  requireObjectCoercible(O);
                  aPossiblePrototype(proto);
                  if (!isObject(O)) return O;
                  if (CORRECT_SETTER) setter(O, proto);
                  else O.__proto__ = proto;
                  return O;
                };
              })()
            : undefined);

        /***/
      },

    /***/
    /*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/ordinary-to-primitive.js ***!
  \*****************************************************************/
    './node_modules/core-js/internals/ordinary-to-primitive.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var call = __webpack_require__(
          /*! ../internals/function-call */
          './node_modules/core-js/internals/function-call.js'
        );
        var isCallable = __webpack_require__(
          /*! ../internals/is-callable */
          './node_modules/core-js/internals/is-callable.js'
        );
        var isObject = __webpack_require__(
          /*! ../internals/is-object */
          './node_modules/core-js/internals/is-object.js'
        );

        var $TypeError = TypeError;

        // `OrdinaryToPrimitive` abstract operation
        // https://tc39.es/ecma262/#sec-ordinarytoprimitive
        module.exports = function (input, pref) {
          var fn, val;
          if (
            pref === 'string' &&
            isCallable((fn = input.toString)) &&
            !isObject((val = call(fn, input)))
          )
            return val;
          if (
            isCallable((fn = input.valueOf)) &&
            !isObject((val = call(fn, input)))
          )
            return val;
          if (
            pref !== 'string' &&
            isCallable((fn = input.toString)) &&
            !isObject((val = call(fn, input)))
          )
            return val;
          throw new $TypeError(
            "Can't convert object to primitive value"
          );
        };

        /***/
      },

    /***/
    /*!****************************************************!*\
  !*** ./node_modules/core-js/internals/own-keys.js ***!
  \****************************************************/
    './node_modules/core-js/internals/own-keys.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var getBuiltIn = __webpack_require__(
          /*! ../internals/get-built-in */
          './node_modules/core-js/internals/get-built-in.js'
        );
        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this */
          './node_modules/core-js/internals/function-uncurry-this.js'
        );
        var getOwnPropertyNamesModule = __webpack_require__(
          /*! ../internals/object-get-own-property-names */
          './node_modules/core-js/internals/object-get-own-property-names.js'
        );
        var getOwnPropertySymbolsModule = __webpack_require__(
          /*! ../internals/object-get-own-property-symbols */
          './node_modules/core-js/internals/object-get-own-property-symbols.js'
        );
        var anObject = __webpack_require__(
          /*! ../internals/an-object */
          './node_modules/core-js/internals/an-object.js'
        );

        var concat = uncurryThis([].concat);

        // all object keys, includes non-enumerable and symbols
        module.exports =
          getBuiltIn('Reflect', 'ownKeys') ||
          function ownKeys(it) {
            var keys = getOwnPropertyNamesModule.f(anObject(it));
            var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
            return getOwnPropertySymbols
              ? concat(keys, getOwnPropertySymbols(it))
              : keys;
          };

        /***/
      },

    /***/
    /*!***************************************************!*\
  !*** ./node_modules/core-js/internals/perform.js ***!
  \***************************************************/
    './node_modules/core-js/internals/perform.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        module.exports = function (exec) {
          try {
            return {
              error: false,
              value: exec(),
            };
          } catch (error) {
            return {
              error: true,
              value: error,
            };
          }
        };

        /***/
      },

    /***/
    /*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/promise-constructor-detection.js ***!
  \*************************************************************************/
    './node_modules/core-js/internals/promise-constructor-detection.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var global = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );
        var NativePromiseConstructor = __webpack_require__(
          /*! ../internals/promise-native-constructor */
          './node_modules/core-js/internals/promise-native-constructor.js'
        );
        var isCallable = __webpack_require__(
          /*! ../internals/is-callable */
          './node_modules/core-js/internals/is-callable.js'
        );
        var isForced = __webpack_require__(
          /*! ../internals/is-forced */
          './node_modules/core-js/internals/is-forced.js'
        );
        var inspectSource = __webpack_require__(
          /*! ../internals/inspect-source */
          './node_modules/core-js/internals/inspect-source.js'
        );
        var wellKnownSymbol = __webpack_require__(
          /*! ../internals/well-known-symbol */
          './node_modules/core-js/internals/well-known-symbol.js'
        );
        var IS_BROWSER = __webpack_require__(
          /*! ../internals/engine-is-browser */
          './node_modules/core-js/internals/engine-is-browser.js'
        );
        var IS_DENO = __webpack_require__(
          /*! ../internals/engine-is-deno */
          './node_modules/core-js/internals/engine-is-deno.js'
        );
        var IS_PURE = __webpack_require__(
          /*! ../internals/is-pure */
          './node_modules/core-js/internals/is-pure.js'
        );
        var V8_VERSION = __webpack_require__(
          /*! ../internals/engine-v8-version */
          './node_modules/core-js/internals/engine-v8-version.js'
        );

        var NativePromisePrototype =
          NativePromiseConstructor &&
          NativePromiseConstructor.prototype;
        var SPECIES = wellKnownSymbol('species');
        var SUBCLASSING = false;
        var NATIVE_PROMISE_REJECTION_EVENT = isCallable(
          global.PromiseRejectionEvent
        );

        var FORCED_PROMISE_CONSTRUCTOR = isForced(
          'Promise',
          function () {
            var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(
              NativePromiseConstructor
            );
            var GLOBAL_CORE_JS_PROMISE =
              PROMISE_CONSTRUCTOR_SOURCE !==
              String(NativePromiseConstructor);
            // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
            // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
            // We can't detect it synchronously, so just check versions
            if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66)
              return true;
            // We need Promise#{ catch, finally } in the pure version for preventing prototype pollution
            if (
              IS_PURE &&
              !(
                NativePromisePrototype['catch'] &&
                NativePromisePrototype['finally']
              )
            )
              return true;
            // We can't use @@species feature detection in V8 since it causes
            // deoptimization and performance degradation
            // https://github.com/zloirock/core-js/issues/679
            if (
              !V8_VERSION ||
              V8_VERSION < 51 ||
              !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)
            ) {
              // Detect correctness of subclassing with @@species support
              var promise = new NativePromiseConstructor(function (
                resolve
              ) {
                resolve(1);
              });
              var FakePromise = function (exec) {
                exec(
                  function () {
                    /* empty */
                  },
                  function () {
                    /* empty */
                  }
                );
              };
              var constructor = (promise.constructor = {});
              constructor[SPECIES] = FakePromise;
              SUBCLASSING =
                promise.then(function () {
                  /* empty */
                }) instanceof FakePromise;
              if (!SUBCLASSING) return true;
              // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
            }
            return (
              !GLOBAL_CORE_JS_PROMISE &&
              (IS_BROWSER || IS_DENO) &&
              !NATIVE_PROMISE_REJECTION_EVENT
            );
          }
        );

        module.exports = {
          CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR,
          REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT,
          SUBCLASSING: SUBCLASSING,
        };

        /***/
      },

    /***/
    /*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/promise-native-constructor.js ***!
  \**********************************************************************/
    './node_modules/core-js/internals/promise-native-constructor.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var global = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );

        module.exports = global.Promise;

        /***/
      },

    /***/
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/promise-resolve.js ***!
  \***********************************************************/
    './node_modules/core-js/internals/promise-resolve.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var anObject = __webpack_require__(
          /*! ../internals/an-object */
          './node_modules/core-js/internals/an-object.js'
        );
        var isObject = __webpack_require__(
          /*! ../internals/is-object */
          './node_modules/core-js/internals/is-object.js'
        );
        var newPromiseCapability = __webpack_require__(
          /*! ../internals/new-promise-capability */
          './node_modules/core-js/internals/new-promise-capability.js'
        );

        module.exports = function (C, x) {
          anObject(C);
          if (isObject(x) && x.constructor === C) return x;
          var promiseCapability = newPromiseCapability.f(C);
          var resolve = promiseCapability.resolve;
          resolve(x);
          return promiseCapability.promise;
        };

        /***/
      },

    /***/
    /*!*******************************************************************************!*\
  !*** ./node_modules/core-js/internals/promise-statics-incorrect-iteration.js ***!
  \*******************************************************************************/
    './node_modules/core-js/internals/promise-statics-incorrect-iteration.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var NativePromiseConstructor = __webpack_require__(
          /*! ../internals/promise-native-constructor */
          './node_modules/core-js/internals/promise-native-constructor.js'
        );
        var checkCorrectnessOfIteration = __webpack_require__(
          /*! ../internals/check-correctness-of-iteration */
          './node_modules/core-js/internals/check-correctness-of-iteration.js'
        );
        var FORCED_PROMISE_CONSTRUCTOR = __webpack_require__(
          /*! ../internals/promise-constructor-detection */
          './node_modules/core-js/internals/promise-constructor-detection.js'
        ).CONSTRUCTOR;

        module.exports =
          FORCED_PROMISE_CONSTRUCTOR ||
          !checkCorrectnessOfIteration(function (iterable) {
            NativePromiseConstructor.all(iterable).then(
              undefined,
              function () {
                /* empty */
              }
            );
          });

        /***/
      },

    /***/
    /*!*************************************************!*\
  !*** ./node_modules/core-js/internals/queue.js ***!
  \*************************************************/
    './node_modules/core-js/internals/queue.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var Queue = function () {
          this.head = null;
          this.tail = null;
        };

        Queue.prototype = {
          add: function (item) {
            var entry = {
              item: item,
              next: null,
            };
            var tail = this.tail;
            if (tail) tail.next = entry;
            else this.head = entry;
            this.tail = entry;
          },
          get: function () {
            var entry = this.head;
            if (entry) {
              var next = (this.head = entry.next);
              if (next === null) this.tail = null;
              return entry.item;
            }
          },
        };

        module.exports = Queue;

        /***/
      },

    /***/
    /*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/require-object-coercible.js ***!
  \********************************************************************/
    './node_modules/core-js/internals/require-object-coercible.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var isNullOrUndefined = __webpack_require__(
          /*! ../internals/is-null-or-undefined */
          './node_modules/core-js/internals/is-null-or-undefined.js'
        );

        var $TypeError = TypeError;

        // `RequireObjectCoercible` abstract operation
        // https://tc39.es/ecma262/#sec-requireobjectcoercible
        module.exports = function (it) {
          if (isNullOrUndefined(it))
            throw new $TypeError("Can't call method on " + it);
          return it;
        };

        /***/
      },

    /***/
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/safe-get-built-in.js ***!
  \*************************************************************/
    './node_modules/core-js/internals/safe-get-built-in.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var global = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );
        var DESCRIPTORS = __webpack_require__(
          /*! ../internals/descriptors */
          './node_modules/core-js/internals/descriptors.js'
        );

        // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
        var getOwnPropertyDescriptor =
          Object.getOwnPropertyDescriptor;

        // Avoid NodeJS experimental warning
        module.exports = function (name) {
          if (!DESCRIPTORS) return global[name];
          var descriptor = getOwnPropertyDescriptor(global, name);
          return descriptor && descriptor.value;
        };

        /***/
      },

    /***/
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/set-species.js ***!
  \*******************************************************/
    './node_modules/core-js/internals/set-species.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var getBuiltIn = __webpack_require__(
          /*! ../internals/get-built-in */
          './node_modules/core-js/internals/get-built-in.js'
        );
        var defineBuiltInAccessor = __webpack_require__(
          /*! ../internals/define-built-in-accessor */
          './node_modules/core-js/internals/define-built-in-accessor.js'
        );
        var wellKnownSymbol = __webpack_require__(
          /*! ../internals/well-known-symbol */
          './node_modules/core-js/internals/well-known-symbol.js'
        );
        var DESCRIPTORS = __webpack_require__(
          /*! ../internals/descriptors */
          './node_modules/core-js/internals/descriptors.js'
        );

        var SPECIES = wellKnownSymbol('species');

        module.exports = function (CONSTRUCTOR_NAME) {
          var Constructor = getBuiltIn(CONSTRUCTOR_NAME);

          if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
            defineBuiltInAccessor(Constructor, SPECIES, {
              configurable: true,
              get: function () {
                return this;
              },
            });
          }
        };

        /***/
      },

    /***/
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/set-to-string-tag.js ***!
  \*************************************************************/
    './node_modules/core-js/internals/set-to-string-tag.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var defineProperty = __webpack_require__(
          /*! ../internals/object-define-property */
          './node_modules/core-js/internals/object-define-property.js'
        ).f;
        var hasOwn = __webpack_require__(
          /*! ../internals/has-own-property */
          './node_modules/core-js/internals/has-own-property.js'
        );
        var wellKnownSymbol = __webpack_require__(
          /*! ../internals/well-known-symbol */
          './node_modules/core-js/internals/well-known-symbol.js'
        );

        var TO_STRING_TAG = wellKnownSymbol('toStringTag');

        module.exports = function (target, TAG, STATIC) {
          if (target && !STATIC) target = target.prototype;
          if (target && !hasOwn(target, TO_STRING_TAG)) {
            defineProperty(target, TO_STRING_TAG, {
              configurable: true,
              value: TAG,
            });
          }
        };

        /***/
      },

    /***/
    /*!******************************************************!*\
  !*** ./node_modules/core-js/internals/shared-key.js ***!
  \******************************************************/
    './node_modules/core-js/internals/shared-key.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var shared = __webpack_require__(
          /*! ../internals/shared */
          './node_modules/core-js/internals/shared.js'
        );
        var uid = __webpack_require__(
          /*! ../internals/uid */
          './node_modules/core-js/internals/uid.js'
        );

        var keys = shared('keys');

        module.exports = function (key) {
          return keys[key] || (keys[key] = uid(key));
        };

        /***/
      },

    /***/
    /*!********************************************************!*\
  !*** ./node_modules/core-js/internals/shared-store.js ***!
  \********************************************************/
    './node_modules/core-js/internals/shared-store.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var IS_PURE = __webpack_require__(
          /*! ../internals/is-pure */
          './node_modules/core-js/internals/is-pure.js'
        );
        var globalThis = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );
        var defineGlobalProperty = __webpack_require__(
          /*! ../internals/define-global-property */
          './node_modules/core-js/internals/define-global-property.js'
        );

        var SHARED = '__core-js_shared__';
        var store = (module.exports =
          globalThis[SHARED] || defineGlobalProperty(SHARED, {}));

        (store.versions || (store.versions = [])).push({
          version: '3.36.1',
          mode: IS_PURE ? 'pure' : 'global',
          copyright: '© 2014-2024 Denis Pushkarev (zloirock.ru)',
          license:
            'https://github.com/zloirock/core-js/blob/v3.36.1/LICENSE',
          source: 'https://github.com/zloirock/core-js',
        });

        /***/
      },

    /***/
    /*!**************************************************!*\
  !*** ./node_modules/core-js/internals/shared.js ***!
  \**************************************************/
    './node_modules/core-js/internals/shared.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var store = __webpack_require__(
          /*! ../internals/shared-store */
          './node_modules/core-js/internals/shared-store.js'
        );

        module.exports = function (key, value) {
          return store[key] || (store[key] = value || {});
        };

        /***/
      },

    /***/
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/species-constructor.js ***!
  \***************************************************************/
    './node_modules/core-js/internals/species-constructor.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var anObject = __webpack_require__(
          /*! ../internals/an-object */
          './node_modules/core-js/internals/an-object.js'
        );
        var aConstructor = __webpack_require__(
          /*! ../internals/a-constructor */
          './node_modules/core-js/internals/a-constructor.js'
        );
        var isNullOrUndefined = __webpack_require__(
          /*! ../internals/is-null-or-undefined */
          './node_modules/core-js/internals/is-null-or-undefined.js'
        );
        var wellKnownSymbol = __webpack_require__(
          /*! ../internals/well-known-symbol */
          './node_modules/core-js/internals/well-known-symbol.js'
        );

        var SPECIES = wellKnownSymbol('species');

        // `SpeciesConstructor` abstract operation
        // https://tc39.es/ecma262/#sec-speciesconstructor
        module.exports = function (O, defaultConstructor) {
          var C = anObject(O).constructor;
          var S;
          return C === undefined ||
            isNullOrUndefined((S = anObject(C)[SPECIES]))
            ? defaultConstructor
            : aConstructor(S);
        };

        /***/
      },

    /***/
    /*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/symbol-constructor-detection.js ***!
  \************************************************************************/
    './node_modules/core-js/internals/symbol-constructor-detection.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        /* eslint-disable es/no-symbol -- required for testing */
        var V8_VERSION = __webpack_require__(
          /*! ../internals/engine-v8-version */
          './node_modules/core-js/internals/engine-v8-version.js'
        );
        var fails = __webpack_require__(
          /*! ../internals/fails */
          './node_modules/core-js/internals/fails.js'
        );
        var global = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );

        var $String = global.String;

        // eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
        module.exports =
          !!Object.getOwnPropertySymbols &&
          !fails(function () {
            var symbol = Symbol('symbol detection');
            // Chrome 38 Symbol has incorrect toString conversion
            // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
            // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
            // of course, fail.
            return (
              !$String(symbol) ||
              !(Object(symbol) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
              (!Symbol.sham && V8_VERSION && V8_VERSION < 41)
            );
          });

        /***/
      },

    /***/
    /*!************************************************!*\
  !*** ./node_modules/core-js/internals/task.js ***!
  \************************************************/
    './node_modules/core-js/internals/task.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var global = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );
        var apply = __webpack_require__(
          /*! ../internals/function-apply */
          './node_modules/core-js/internals/function-apply.js'
        );
        var bind = __webpack_require__(
          /*! ../internals/function-bind-context */
          './node_modules/core-js/internals/function-bind-context.js'
        );
        var isCallable = __webpack_require__(
          /*! ../internals/is-callable */
          './node_modules/core-js/internals/is-callable.js'
        );
        var hasOwn = __webpack_require__(
          /*! ../internals/has-own-property */
          './node_modules/core-js/internals/has-own-property.js'
        );
        var fails = __webpack_require__(
          /*! ../internals/fails */
          './node_modules/core-js/internals/fails.js'
        );
        var html = __webpack_require__(
          /*! ../internals/html */
          './node_modules/core-js/internals/html.js'
        );
        var arraySlice = __webpack_require__(
          /*! ../internals/array-slice */
          './node_modules/core-js/internals/array-slice.js'
        );
        var createElement = __webpack_require__(
          /*! ../internals/document-create-element */
          './node_modules/core-js/internals/document-create-element.js'
        );
        var validateArgumentsLength = __webpack_require__(
          /*! ../internals/validate-arguments-length */
          './node_modules/core-js/internals/validate-arguments-length.js'
        );
        var IS_IOS = __webpack_require__(
          /*! ../internals/engine-is-ios */
          './node_modules/core-js/internals/engine-is-ios.js'
        );
        var IS_NODE = __webpack_require__(
          /*! ../internals/engine-is-node */
          './node_modules/core-js/internals/engine-is-node.js'
        );

        var set = global.setImmediate;
        var clear = global.clearImmediate;
        var process = global.process;
        var Dispatch = global.Dispatch;
        var Function = global.Function;
        var MessageChannel = global.MessageChannel;
        var String = global.String;
        var counter = 0;
        var queue = {};
        var ONREADYSTATECHANGE = 'onreadystatechange';
        var $location, defer, channel, port;

        fails(function () {
          // Deno throws a ReferenceError on `location` access without `--location` flag
          $location = global.location;
        });

        var run = function (id) {
          if (hasOwn(queue, id)) {
            var fn = queue[id];
            delete queue[id];
            fn();
          }
        };

        var runner = function (id) {
          return function () {
            run(id);
          };
        };

        var eventListener = function (event) {
          run(event.data);
        };

        var globalPostMessageDefer = function (id) {
          // old engines have not location.origin
          global.postMessage(
            String(id),
            $location.protocol + '//' + $location.host
          );
        };

        // Node.js 0.9+ & IE10+ has setImmediate, otherwise:
        if (!set || !clear) {
          set = function setImmediate(handler) {
            validateArgumentsLength(arguments.length, 1);
            var fn = isCallable(handler)
              ? handler
              : Function(handler);
            var args = arraySlice(arguments, 1);
            queue[++counter] = function () {
              apply(fn, undefined, args);
            };
            defer(counter);
            return counter;
          };
          clear = function clearImmediate(id) {
            delete queue[id];
          };
          // Node.js 0.8-
          if (IS_NODE) {
            defer = function (id) {
              process.nextTick(runner(id));
            };
            // Sphere (JS game engine) Dispatch API
          } else if (Dispatch && Dispatch.now) {
            defer = function (id) {
              Dispatch.now(runner(id));
            };
            // Browsers with MessageChannel, includes WebWorkers
            // except iOS - https://github.com/zloirock/core-js/issues/624
          } else if (MessageChannel && !IS_IOS) {
            channel = new MessageChannel();
            port = channel.port2;
            channel.port1.onmessage = eventListener;
            defer = bind(port.postMessage, port);
            // Browsers with postMessage, skip WebWorkers
            // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
          } else if (
            global.addEventListener &&
            isCallable(global.postMessage) &&
            !global.importScripts &&
            $location &&
            $location.protocol !== 'file:' &&
            !fails(globalPostMessageDefer)
          ) {
            defer = globalPostMessageDefer;
            global.addEventListener('message', eventListener, false);
            // IE8-
          } else if (ONREADYSTATECHANGE in createElement('script')) {
            defer = function (id) {
              html.appendChild(createElement('script'))[
                ONREADYSTATECHANGE
              ] = function () {
                html.removeChild(this);
                run(id);
              };
            };
            // Rest old browsers
          } else {
            defer = function (id) {
              setTimeout(runner(id), 0);
            };
          }
        }

        module.exports = {
          set: set,
          clear: clear,
        };

        /***/
      },

    /***/
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-absolute-index.js ***!
  \*************************************************************/
    './node_modules/core-js/internals/to-absolute-index.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var toIntegerOrInfinity = __webpack_require__(
          /*! ../internals/to-integer-or-infinity */
          './node_modules/core-js/internals/to-integer-or-infinity.js'
        );

        var max = Math.max;
        var min = Math.min;

        // Helper for a popular repeating case of the spec:
        // Let integer be ? ToInteger(index).
        // If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
        module.exports = function (index, length) {
          var integer = toIntegerOrInfinity(index);
          return integer < 0
            ? max(integer + length, 0)
            : min(integer, length);
        };

        /***/
      },

    /***/
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-indexed-object.js ***!
  \*************************************************************/
    './node_modules/core-js/internals/to-indexed-object.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        // toObject with fallback for non-array-like ES3 strings
        var IndexedObject = __webpack_require__(
          /*! ../internals/indexed-object */
          './node_modules/core-js/internals/indexed-object.js'
        );
        var requireObjectCoercible = __webpack_require__(
          /*! ../internals/require-object-coercible */
          './node_modules/core-js/internals/require-object-coercible.js'
        );

        module.exports = function (it) {
          return IndexedObject(requireObjectCoercible(it));
        };

        /***/
      },

    /***/
    /*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/to-integer-or-infinity.js ***!
  \******************************************************************/
    './node_modules/core-js/internals/to-integer-or-infinity.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var trunc = __webpack_require__(
          /*! ../internals/math-trunc */
          './node_modules/core-js/internals/math-trunc.js'
        );

        // `ToIntegerOrInfinity` abstract operation
        // https://tc39.es/ecma262/#sec-tointegerorinfinity
        module.exports = function (argument) {
          var number = +argument;
          // eslint-disable-next-line no-self-compare -- NaN check
          return number !== number || number === 0
            ? 0
            : trunc(number);
        };

        /***/
      },

    /***/
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-length.js ***!
  \*****************************************************/
    './node_modules/core-js/internals/to-length.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var toIntegerOrInfinity = __webpack_require__(
          /*! ../internals/to-integer-or-infinity */
          './node_modules/core-js/internals/to-integer-or-infinity.js'
        );

        var min = Math.min;

        // `ToLength` abstract operation
        // https://tc39.es/ecma262/#sec-tolength
        module.exports = function (argument) {
          var len = toIntegerOrInfinity(argument);
          return len > 0 ? min(len, 0x1fffffffffffff) : 0;
          // 2 ** 53 - 1 == 9007199254740991
        };

        /***/
      },

    /***/
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-object.js ***!
  \*****************************************************/
    './node_modules/core-js/internals/to-object.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var requireObjectCoercible = __webpack_require__(
          /*! ../internals/require-object-coercible */
          './node_modules/core-js/internals/require-object-coercible.js'
        );

        var $Object = Object;

        // `ToObject` abstract operation
        // https://tc39.es/ecma262/#sec-toobject
        module.exports = function (argument) {
          return $Object(requireObjectCoercible(argument));
        };

        /***/
      },

    /***/
    /*!********************************************************!*\
  !*** ./node_modules/core-js/internals/to-primitive.js ***!
  \********************************************************/
    './node_modules/core-js/internals/to-primitive.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var call = __webpack_require__(
          /*! ../internals/function-call */
          './node_modules/core-js/internals/function-call.js'
        );
        var isObject = __webpack_require__(
          /*! ../internals/is-object */
          './node_modules/core-js/internals/is-object.js'
        );
        var isSymbol = __webpack_require__(
          /*! ../internals/is-symbol */
          './node_modules/core-js/internals/is-symbol.js'
        );
        var getMethod = __webpack_require__(
          /*! ../internals/get-method */
          './node_modules/core-js/internals/get-method.js'
        );
        var ordinaryToPrimitive = __webpack_require__(
          /*! ../internals/ordinary-to-primitive */
          './node_modules/core-js/internals/ordinary-to-primitive.js'
        );
        var wellKnownSymbol = __webpack_require__(
          /*! ../internals/well-known-symbol */
          './node_modules/core-js/internals/well-known-symbol.js'
        );

        var $TypeError = TypeError;
        var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

        // `ToPrimitive` abstract operation
        // https://tc39.es/ecma262/#sec-toprimitive
        module.exports = function (input, pref) {
          if (!isObject(input) || isSymbol(input)) return input;
          var exoticToPrim = getMethod(input, TO_PRIMITIVE);
          var result;
          if (exoticToPrim) {
            if (pref === undefined) pref = 'default';
            result = call(exoticToPrim, input, pref);
            if (!isObject(result) || isSymbol(result)) return result;
            throw new $TypeError(
              "Can't convert object to primitive value"
            );
          }
          if (pref === undefined) pref = 'number';
          return ordinaryToPrimitive(input, pref);
        };

        /***/
      },

    /***/
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/to-property-key.js ***!
  \***********************************************************/
    './node_modules/core-js/internals/to-property-key.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var toPrimitive = __webpack_require__(
          /*! ../internals/to-primitive */
          './node_modules/core-js/internals/to-primitive.js'
        );
        var isSymbol = __webpack_require__(
          /*! ../internals/is-symbol */
          './node_modules/core-js/internals/is-symbol.js'
        );

        // `ToPropertyKey` abstract operation
        // https://tc39.es/ecma262/#sec-topropertykey
        module.exports = function (argument) {
          var key = toPrimitive(argument, 'string');
          return isSymbol(key) ? key : key + '';
        };

        /***/
      },

    /***/
    /*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/to-string-tag-support.js ***!
  \*****************************************************************/
    './node_modules/core-js/internals/to-string-tag-support.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var wellKnownSymbol = __webpack_require__(
          /*! ../internals/well-known-symbol */
          './node_modules/core-js/internals/well-known-symbol.js'
        );

        var TO_STRING_TAG = wellKnownSymbol('toStringTag');
        var test = {};

        test[TO_STRING_TAG] = 'z';

        module.exports = String(test) === '[object z]';

        /***/
      },

    /***/
    /*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-string.js ***!
  \*****************************************************/
    './node_modules/core-js/internals/to-string.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var classof = __webpack_require__(
          /*! ../internals/classof */
          './node_modules/core-js/internals/classof.js'
        );

        var $String = String;

        module.exports = function (argument) {
          if (classof(argument) === 'Symbol')
            throw new TypeError(
              'Cannot convert a Symbol value to a string'
            );
          return $String(argument);
        };

        /***/
      },

    /***/
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/try-to-string.js ***!
  \*********************************************************/
    './node_modules/core-js/internals/try-to-string.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var $String = String;

        module.exports = function (argument) {
          try {
            return $String(argument);
          } catch (error) {
            return 'Object';
          }
        };

        /***/
      },

    /***/
    /*!***********************************************!*\
  !*** ./node_modules/core-js/internals/uid.js ***!
  \***********************************************/
    './node_modules/core-js/internals/uid.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this */
          './node_modules/core-js/internals/function-uncurry-this.js'
        );

        var id = 0;
        var postfix = Math.random();
        var toString = uncurryThis((1.0).toString);

        module.exports = function (key) {
          return (
            'Symbol(' +
            (key === undefined ? '' : key) +
            ')_' +
            toString(++id + postfix, 36)
          );
        };

        /***/
      },

    /***/
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/use-symbol-as-uid.js ***!
  \*************************************************************/
    './node_modules/core-js/internals/use-symbol-as-uid.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        /* eslint-disable es/no-symbol -- required for testing */
        var NATIVE_SYMBOL = __webpack_require__(
          /*! ../internals/symbol-constructor-detection */
          './node_modules/core-js/internals/symbol-constructor-detection.js'
        );

        module.exports =
          NATIVE_SYMBOL &&
          !Symbol.sham &&
          typeof Symbol.iterator == 'symbol';

        /***/
      },

    /***/
    /*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/v8-prototype-define-bug.js ***!
  \*******************************************************************/
    './node_modules/core-js/internals/v8-prototype-define-bug.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var DESCRIPTORS = __webpack_require__(
          /*! ../internals/descriptors */
          './node_modules/core-js/internals/descriptors.js'
        );
        var fails = __webpack_require__(
          /*! ../internals/fails */
          './node_modules/core-js/internals/fails.js'
        );

        // V8 ~ Chrome 36-
        // https://bugs.chromium.org/p/v8/issues/detail?id=3334
        module.exports =
          DESCRIPTORS &&
          fails(function () {
            // eslint-disable-next-line es/no-object-defineproperty -- required for testing
            return (
              Object.defineProperty(
                function () {
                  /* empty */
                },
                'prototype',
                {
                  value: 42,
                  writable: false,
                }
              ).prototype !== 42
            );
          });

        /***/
      },

    /***/
    /*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/validate-arguments-length.js ***!
  \*********************************************************************/
    './node_modules/core-js/internals/validate-arguments-length.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var $TypeError = TypeError;

        module.exports = function (passed, required) {
          if (passed < required)
            throw new $TypeError('Not enough arguments');
          return passed;
        };

        /***/
      },

    /***/
    /*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/weak-map-basic-detection.js ***!
  \********************************************************************/
    './node_modules/core-js/internals/weak-map-basic-detection.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var global = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );
        var isCallable = __webpack_require__(
          /*! ../internals/is-callable */
          './node_modules/core-js/internals/is-callable.js'
        );

        var WeakMap = global.WeakMap;

        module.exports =
          isCallable(WeakMap) && /native code/.test(String(WeakMap));

        /***/
      },

    /***/
    /*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/well-known-symbol.js ***!
  \*************************************************************/
    './node_modules/core-js/internals/well-known-symbol.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var global = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );
        var shared = __webpack_require__(
          /*! ../internals/shared */
          './node_modules/core-js/internals/shared.js'
        );
        var hasOwn = __webpack_require__(
          /*! ../internals/has-own-property */
          './node_modules/core-js/internals/has-own-property.js'
        );
        var uid = __webpack_require__(
          /*! ../internals/uid */
          './node_modules/core-js/internals/uid.js'
        );
        var NATIVE_SYMBOL = __webpack_require__(
          /*! ../internals/symbol-constructor-detection */
          './node_modules/core-js/internals/symbol-constructor-detection.js'
        );
        var USE_SYMBOL_AS_UID = __webpack_require__(
          /*! ../internals/use-symbol-as-uid */
          './node_modules/core-js/internals/use-symbol-as-uid.js'
        );

        var Symbol = global.Symbol;
        var WellKnownSymbolsStore = shared('wks');
        var createWellKnownSymbol = USE_SYMBOL_AS_UID
          ? Symbol['for'] || Symbol
          : (Symbol && Symbol.withoutSetter) || uid;

        module.exports = function (name) {
          if (!hasOwn(WellKnownSymbolsStore, name)) {
            WellKnownSymbolsStore[name] =
              NATIVE_SYMBOL && hasOwn(Symbol, name)
                ? Symbol[name]
                : createWellKnownSymbol('Symbol.' + name);
          }
          return WellKnownSymbolsStore[name];
        };

        /***/
      },

    /***/
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.filter.js ***!
  \*********************************************************/
    './node_modules/core-js/modules/es.array.filter.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var $ = __webpack_require__(
          /*! ../internals/export */
          './node_modules/core-js/internals/export.js'
        );
        var $filter = __webpack_require__(
          /*! ../internals/array-iteration */
          './node_modules/core-js/internals/array-iteration.js'
        ).filter;
        var arrayMethodHasSpeciesSupport = __webpack_require__(
          /*! ../internals/array-method-has-species-support */
          './node_modules/core-js/internals/array-method-has-species-support.js'
        );

        var HAS_SPECIES_SUPPORT =
          arrayMethodHasSpeciesSupport('filter');

        // `Array.prototype.filter` method
        // https://tc39.es/ecma262/#sec-array.prototype.filter
        // with adding support of @@species
        $(
          {
            target: 'Array',
            proto: true,
            forced: !HAS_SPECIES_SUPPORT,
          },
          {
            filter: function filter(callbackfn /* , thisArg */) {
              return $filter(
                this,
                callbackfn,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
          }
        );

        /***/
      },

    /***/
    /*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.from.js ***!
  \*******************************************************/
    './node_modules/core-js/modules/es.array.from.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var $ = __webpack_require__(
          /*! ../internals/export */
          './node_modules/core-js/internals/export.js'
        );
        var from = __webpack_require__(
          /*! ../internals/array-from */
          './node_modules/core-js/internals/array-from.js'
        );
        var checkCorrectnessOfIteration = __webpack_require__(
          /*! ../internals/check-correctness-of-iteration */
          './node_modules/core-js/internals/check-correctness-of-iteration.js'
        );

        var INCORRECT_ITERATION = !checkCorrectnessOfIteration(
          function (iterable) {
            // eslint-disable-next-line es/no-array-from -- required for testing
            Array.from(iterable);
          }
        );

        // `Array.from` method
        // https://tc39.es/ecma262/#sec-array.from
        $(
          {
            target: 'Array',
            stat: true,
            forced: INCORRECT_ITERATION,
          },
          {
            from: from,
          }
        );

        /***/
      },

    /***/
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.index-of.js ***!
  \***********************************************************/
    './node_modules/core-js/modules/es.array.index-of.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        /* eslint-disable es/no-array-prototype-indexof -- required for testing */
        var $ = __webpack_require__(
          /*! ../internals/export */
          './node_modules/core-js/internals/export.js'
        );
        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this-clause */
          './node_modules/core-js/internals/function-uncurry-this-clause.js'
        );
        var $indexOf = __webpack_require__(
          /*! ../internals/array-includes */
          './node_modules/core-js/internals/array-includes.js'
        ).indexOf;
        var arrayMethodIsStrict = __webpack_require__(
          /*! ../internals/array-method-is-strict */
          './node_modules/core-js/internals/array-method-is-strict.js'
        );

        var nativeIndexOf = uncurryThis([].indexOf);

        var NEGATIVE_ZERO =
          !!nativeIndexOf && 1 / nativeIndexOf([1], 1, -0) < 0;
        var FORCED = NEGATIVE_ZERO || !arrayMethodIsStrict('indexOf');

        // `Array.prototype.indexOf` method
        // https://tc39.es/ecma262/#sec-array.prototype.indexof
        $(
          {
            target: 'Array',
            proto: true,
            forced: FORCED,
          },
          {
            indexOf: function indexOf(
              searchElement /* , fromIndex = 0 */
            ) {
              var fromIndex =
                arguments.length > 1 ? arguments[1] : undefined;
              return NEGATIVE_ZERO // convert -0 to +0
                ? nativeIndexOf(this, searchElement, fromIndex) || 0
                : $indexOf(this, searchElement, fromIndex);
            },
          }
        );

        /***/
      },

    /***/
    /*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.all.js ***!
  \********************************************************/
    './node_modules/core-js/modules/es.promise.all.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var $ = __webpack_require__(
          /*! ../internals/export */
          './node_modules/core-js/internals/export.js'
        );
        var call = __webpack_require__(
          /*! ../internals/function-call */
          './node_modules/core-js/internals/function-call.js'
        );
        var aCallable = __webpack_require__(
          /*! ../internals/a-callable */
          './node_modules/core-js/internals/a-callable.js'
        );
        var newPromiseCapabilityModule = __webpack_require__(
          /*! ../internals/new-promise-capability */
          './node_modules/core-js/internals/new-promise-capability.js'
        );
        var perform = __webpack_require__(
          /*! ../internals/perform */
          './node_modules/core-js/internals/perform.js'
        );
        var iterate = __webpack_require__(
          /*! ../internals/iterate */
          './node_modules/core-js/internals/iterate.js'
        );
        var PROMISE_STATICS_INCORRECT_ITERATION = __webpack_require__(
          /*! ../internals/promise-statics-incorrect-iteration */
          './node_modules/core-js/internals/promise-statics-incorrect-iteration.js'
        );

        // `Promise.all` method
        // https://tc39.es/ecma262/#sec-promise.all
        $(
          {
            target: 'Promise',
            stat: true,
            forced: PROMISE_STATICS_INCORRECT_ITERATION,
          },
          {
            all: function all(iterable) {
              var C = this;
              var capability = newPromiseCapabilityModule.f(C);
              var resolve = capability.resolve;
              var reject = capability.reject;
              var result = perform(function () {
                var $promiseResolve = aCallable(C.resolve);
                var values = [];
                var counter = 0;
                var remaining = 1;
                iterate(iterable, function (promise) {
                  var index = counter++;
                  var alreadyCalled = false;
                  remaining++;
                  call($promiseResolve, C, promise).then(function (
                    value
                  ) {
                    if (alreadyCalled) return;
                    alreadyCalled = true;
                    values[index] = value;
                    --remaining || resolve(values);
                  },
                  reject);
                });
                --remaining || resolve(values);
              });
              if (result.error) reject(result.value);
              return capability.promise;
            },
          }
        );

        /***/
      },

    /***/
    /*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.catch.js ***!
  \**********************************************************/
    './node_modules/core-js/modules/es.promise.catch.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var $ = __webpack_require__(
          /*! ../internals/export */
          './node_modules/core-js/internals/export.js'
        );
        var IS_PURE = __webpack_require__(
          /*! ../internals/is-pure */
          './node_modules/core-js/internals/is-pure.js'
        );
        var FORCED_PROMISE_CONSTRUCTOR = __webpack_require__(
          /*! ../internals/promise-constructor-detection */
          './node_modules/core-js/internals/promise-constructor-detection.js'
        ).CONSTRUCTOR;
        var NativePromiseConstructor = __webpack_require__(
          /*! ../internals/promise-native-constructor */
          './node_modules/core-js/internals/promise-native-constructor.js'
        );
        var getBuiltIn = __webpack_require__(
          /*! ../internals/get-built-in */
          './node_modules/core-js/internals/get-built-in.js'
        );
        var isCallable = __webpack_require__(
          /*! ../internals/is-callable */
          './node_modules/core-js/internals/is-callable.js'
        );
        var defineBuiltIn = __webpack_require__(
          /*! ../internals/define-built-in */
          './node_modules/core-js/internals/define-built-in.js'
        );

        var NativePromisePrototype =
          NativePromiseConstructor &&
          NativePromiseConstructor.prototype;

        // `Promise.prototype.catch` method
        // https://tc39.es/ecma262/#sec-promise.prototype.catch
        $(
          {
            target: 'Promise',
            proto: true,
            forced: FORCED_PROMISE_CONSTRUCTOR,
            real: true,
          },
          {
            catch: function (onRejected) {
              return this.then(undefined, onRejected);
            },
          }
        );

        // makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`
        if (!IS_PURE && isCallable(NativePromiseConstructor)) {
          var method = getBuiltIn('Promise').prototype['catch'];
          if (NativePromisePrototype['catch'] !== method) {
            defineBuiltIn(NativePromisePrototype, 'catch', method, {
              unsafe: true,
            });
          }
        }

        /***/
      },

    /***/
    /*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.constructor.js ***!
  \****************************************************************/
    './node_modules/core-js/modules/es.promise.constructor.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var $ = __webpack_require__(
          /*! ../internals/export */
          './node_modules/core-js/internals/export.js'
        );
        var IS_PURE = __webpack_require__(
          /*! ../internals/is-pure */
          './node_modules/core-js/internals/is-pure.js'
        );
        var IS_NODE = __webpack_require__(
          /*! ../internals/engine-is-node */
          './node_modules/core-js/internals/engine-is-node.js'
        );
        var global = __webpack_require__(
          /*! ../internals/global */
          './node_modules/core-js/internals/global.js'
        );
        var call = __webpack_require__(
          /*! ../internals/function-call */
          './node_modules/core-js/internals/function-call.js'
        );
        var defineBuiltIn = __webpack_require__(
          /*! ../internals/define-built-in */
          './node_modules/core-js/internals/define-built-in.js'
        );
        var setPrototypeOf = __webpack_require__(
          /*! ../internals/object-set-prototype-of */
          './node_modules/core-js/internals/object-set-prototype-of.js'
        );
        var setToStringTag = __webpack_require__(
          /*! ../internals/set-to-string-tag */
          './node_modules/core-js/internals/set-to-string-tag.js'
        );
        var setSpecies = __webpack_require__(
          /*! ../internals/set-species */
          './node_modules/core-js/internals/set-species.js'
        );
        var aCallable = __webpack_require__(
          /*! ../internals/a-callable */
          './node_modules/core-js/internals/a-callable.js'
        );
        var isCallable = __webpack_require__(
          /*! ../internals/is-callable */
          './node_modules/core-js/internals/is-callable.js'
        );
        var isObject = __webpack_require__(
          /*! ../internals/is-object */
          './node_modules/core-js/internals/is-object.js'
        );
        var anInstance = __webpack_require__(
          /*! ../internals/an-instance */
          './node_modules/core-js/internals/an-instance.js'
        );
        var speciesConstructor = __webpack_require__(
          /*! ../internals/species-constructor */
          './node_modules/core-js/internals/species-constructor.js'
        );
        var task = __webpack_require__(
          /*! ../internals/task */
          './node_modules/core-js/internals/task.js'
        ).set;
        var microtask = __webpack_require__(
          /*! ../internals/microtask */
          './node_modules/core-js/internals/microtask.js'
        );
        var hostReportErrors = __webpack_require__(
          /*! ../internals/host-report-errors */
          './node_modules/core-js/internals/host-report-errors.js'
        );
        var perform = __webpack_require__(
          /*! ../internals/perform */
          './node_modules/core-js/internals/perform.js'
        );
        var Queue = __webpack_require__(
          /*! ../internals/queue */
          './node_modules/core-js/internals/queue.js'
        );
        var InternalStateModule = __webpack_require__(
          /*! ../internals/internal-state */
          './node_modules/core-js/internals/internal-state.js'
        );
        var NativePromiseConstructor = __webpack_require__(
          /*! ../internals/promise-native-constructor */
          './node_modules/core-js/internals/promise-native-constructor.js'
        );
        var PromiseConstructorDetection = __webpack_require__(
          /*! ../internals/promise-constructor-detection */
          './node_modules/core-js/internals/promise-constructor-detection.js'
        );
        var newPromiseCapabilityModule = __webpack_require__(
          /*! ../internals/new-promise-capability */
          './node_modules/core-js/internals/new-promise-capability.js'
        );

        var PROMISE = 'Promise';
        var FORCED_PROMISE_CONSTRUCTOR =
          PromiseConstructorDetection.CONSTRUCTOR;
        var NATIVE_PROMISE_REJECTION_EVENT =
          PromiseConstructorDetection.REJECTION_EVENT;
        var NATIVE_PROMISE_SUBCLASSING =
          PromiseConstructorDetection.SUBCLASSING;
        var getInternalPromiseState =
          InternalStateModule.getterFor(PROMISE);
        var setInternalState = InternalStateModule.set;
        var NativePromisePrototype =
          NativePromiseConstructor &&
          NativePromiseConstructor.prototype;
        var PromiseConstructor = NativePromiseConstructor;
        var PromisePrototype = NativePromisePrototype;
        var TypeError = global.TypeError;
        var document = global.document;
        var process = global.process;
        var newPromiseCapability = newPromiseCapabilityModule.f;
        var newGenericPromiseCapability = newPromiseCapability;

        var DISPATCH_EVENT = !!(
          document &&
          document.createEvent &&
          global.dispatchEvent
        );
        var UNHANDLED_REJECTION = 'unhandledrejection';
        var REJECTION_HANDLED = 'rejectionhandled';
        var PENDING = 0;
        var FULFILLED = 1;
        var REJECTED = 2;
        var HANDLED = 1;
        var UNHANDLED = 2;

        var Internal,
          OwnPromiseCapability,
          PromiseWrapper,
          nativeThen;

        // helpers
        var isThenable = function (it) {
          var then;
          return isObject(it) && isCallable((then = it.then))
            ? then
            : false;
        };

        var callReaction = function (reaction, state) {
          var value = state.value;
          var ok = state.state === FULFILLED;
          var handler = ok ? reaction.ok : reaction.fail;
          var resolve = reaction.resolve;
          var reject = reaction.reject;
          var domain = reaction.domain;
          var result, then, exited;
          try {
            if (handler) {
              if (!ok) {
                if (state.rejection === UNHANDLED)
                  onHandleUnhandled(state);
                state.rejection = HANDLED;
              }
              if (handler === true) result = value;
              else {
                if (domain) domain.enter();
                result = handler(value);
                // can throw
                if (domain) {
                  domain.exit();
                  exited = true;
                }
              }
              if (result === reaction.promise) {
                reject(new TypeError('Promise-chain cycle'));
              } else if ((then = isThenable(result))) {
                call(then, result, resolve, reject);
              } else resolve(result);
            } else reject(value);
          } catch (error) {
            if (domain && !exited) domain.exit();
            reject(error);
          }
        };

        var notify = function (state, isReject) {
          if (state.notified) return;
          state.notified = true;
          microtask(function () {
            var reactions = state.reactions;
            var reaction;
            while ((reaction = reactions.get())) {
              callReaction(reaction, state);
            }
            state.notified = false;
            if (isReject && !state.rejection) onUnhandled(state);
          });
        };

        var dispatchEvent = function (name, promise, reason) {
          var event, handler;
          if (DISPATCH_EVENT) {
            event = document.createEvent('Event');
            event.promise = promise;
            event.reason = reason;
            event.initEvent(name, false, true);
            global.dispatchEvent(event);
          } else
            event = {
              promise: promise,
              reason: reason,
            };
          if (
            !NATIVE_PROMISE_REJECTION_EVENT &&
            (handler = global['on' + name])
          )
            handler(event);
          else if (name === UNHANDLED_REJECTION)
            hostReportErrors('Unhandled promise rejection', reason);
        };

        var onUnhandled = function (state) {
          call(task, global, function () {
            var promise = state.facade;
            var value = state.value;
            var IS_UNHANDLED = isUnhandled(state);
            var result;
            if (IS_UNHANDLED) {
              result = perform(function () {
                if (IS_NODE) {
                  process.emit('unhandledRejection', value, promise);
                } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
              });
              // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
              state.rejection =
                IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
              if (result.error) throw result.value;
            }
          });
        };

        var isUnhandled = function (state) {
          return state.rejection !== HANDLED && !state.parent;
        };

        var onHandleUnhandled = function (state) {
          call(task, global, function () {
            var promise = state.facade;
            if (IS_NODE) {
              process.emit('rejectionHandled', promise);
            } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
          });
        };

        var bind = function (fn, state, unwrap) {
          return function (value) {
            fn(state, value, unwrap);
          };
        };

        var internalReject = function (state, value, unwrap) {
          if (state.done) return;
          state.done = true;
          if (unwrap) state = unwrap;
          state.value = value;
          state.state = REJECTED;
          notify(state, true);
        };

        var internalResolve = function (state, value, unwrap) {
          if (state.done) return;
          state.done = true;
          if (unwrap) state = unwrap;
          try {
            if (state.facade === value)
              throw new TypeError("Promise can't be resolved itself");
            var then = isThenable(value);
            if (then) {
              microtask(function () {
                var wrapper = {
                  done: false,
                };
                try {
                  call(
                    then,
                    value,
                    bind(internalResolve, wrapper, state),
                    bind(internalReject, wrapper, state)
                  );
                } catch (error) {
                  internalReject(wrapper, error, state);
                }
              });
            } else {
              state.value = value;
              state.state = FULFILLED;
              notify(state, false);
            }
          } catch (error) {
            internalReject(
              {
                done: false,
              },
              error,
              state
            );
          }
        };

        // constructor polyfill
        if (FORCED_PROMISE_CONSTRUCTOR) {
          // 25.4.3.1 Promise(executor)
          PromiseConstructor = function Promise(executor) {
            anInstance(this, PromisePrototype);
            aCallable(executor);
            call(Internal, this);
            var state = getInternalPromiseState(this);
            try {
              executor(
                bind(internalResolve, state),
                bind(internalReject, state)
              );
            } catch (error) {
              internalReject(state, error);
            }
          };

          PromisePrototype = PromiseConstructor.prototype;

          // eslint-disable-next-line no-unused-vars -- required for `.length`
          Internal = function Promise(executor) {
            setInternalState(this, {
              type: PROMISE,
              done: false,
              notified: false,
              parent: false,
              reactions: new Queue(),
              rejection: false,
              state: PENDING,
              value: undefined,
            });
          };

          // `Promise.prototype.then` method
          // https://tc39.es/ecma262/#sec-promise.prototype.then
          Internal.prototype = defineBuiltIn(
            PromisePrototype,
            'then',
            function then(onFulfilled, onRejected) {
              var state = getInternalPromiseState(this);
              var reaction = newPromiseCapability(
                speciesConstructor(this, PromiseConstructor)
              );
              state.parent = true;
              reaction.ok = isCallable(onFulfilled)
                ? onFulfilled
                : true;
              reaction.fail = isCallable(onRejected) && onRejected;
              reaction.domain = IS_NODE ? process.domain : undefined;
              if (state.state === PENDING)
                state.reactions.add(reaction);
              else
                microtask(function () {
                  callReaction(reaction, state);
                });
              return reaction.promise;
            }
          );

          OwnPromiseCapability = function () {
            var promise = new Internal();
            var state = getInternalPromiseState(promise);
            this.promise = promise;
            this.resolve = bind(internalResolve, state);
            this.reject = bind(internalReject, state);
          };

          newPromiseCapabilityModule.f = newPromiseCapability =
            function (C) {
              return C === PromiseConstructor || C === PromiseWrapper
                ? new OwnPromiseCapability(C)
                : newGenericPromiseCapability(C);
            };

          if (
            !IS_PURE &&
            isCallable(NativePromiseConstructor) &&
            NativePromisePrototype !== Object.prototype
          ) {
            nativeThen = NativePromisePrototype.then;

            if (!NATIVE_PROMISE_SUBCLASSING) {
              // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
              defineBuiltIn(
                NativePromisePrototype,
                'then',
                function then(onFulfilled, onRejected) {
                  var that = this;
                  return new PromiseConstructor(function (
                    resolve,
                    reject
                  ) {
                    call(nativeThen, that, resolve, reject);
                  }).then(onFulfilled, onRejected);
                  // https://github.com/zloirock/core-js/issues/640
                },
                {
                  unsafe: true,
                }
              );
            }

            // make `.constructor === Promise` work for native promise-based APIs
            try {
              delete NativePromisePrototype.constructor;
            } catch (error) {
              /* empty */
            }

            // make `instanceof Promise` work for native promise-based APIs
            if (setPrototypeOf) {
              setPrototypeOf(
                NativePromisePrototype,
                PromisePrototype
              );
            }
          }
        }

        $(
          {
            global: true,
            constructor: true,
            wrap: true,
            forced: FORCED_PROMISE_CONSTRUCTOR,
          },
          {
            Promise: PromiseConstructor,
          }
        );

        setToStringTag(PromiseConstructor, PROMISE, false, true);
        setSpecies(PROMISE);

        /***/
      },

    /***/
    /*!****************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.js ***!
  \****************************************************/
    './node_modules/core-js/modules/es.promise.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        // TODO: Remove this module from `core-js@4` since it's split to modules listed below
        __webpack_require__(
          /*! ../modules/es.promise.constructor */
          './node_modules/core-js/modules/es.promise.constructor.js'
        );
        __webpack_require__(
          /*! ../modules/es.promise.all */
          './node_modules/core-js/modules/es.promise.all.js'
        );
        __webpack_require__(
          /*! ../modules/es.promise.catch */
          './node_modules/core-js/modules/es.promise.catch.js'
        );
        __webpack_require__(
          /*! ../modules/es.promise.race */
          './node_modules/core-js/modules/es.promise.race.js'
        );
        __webpack_require__(
          /*! ../modules/es.promise.reject */
          './node_modules/core-js/modules/es.promise.reject.js'
        );
        __webpack_require__(
          /*! ../modules/es.promise.resolve */
          './node_modules/core-js/modules/es.promise.resolve.js'
        );

        /***/
      },

    /***/
    /*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.race.js ***!
  \*********************************************************/
    './node_modules/core-js/modules/es.promise.race.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var $ = __webpack_require__(
          /*! ../internals/export */
          './node_modules/core-js/internals/export.js'
        );
        var call = __webpack_require__(
          /*! ../internals/function-call */
          './node_modules/core-js/internals/function-call.js'
        );
        var aCallable = __webpack_require__(
          /*! ../internals/a-callable */
          './node_modules/core-js/internals/a-callable.js'
        );
        var newPromiseCapabilityModule = __webpack_require__(
          /*! ../internals/new-promise-capability */
          './node_modules/core-js/internals/new-promise-capability.js'
        );
        var perform = __webpack_require__(
          /*! ../internals/perform */
          './node_modules/core-js/internals/perform.js'
        );
        var iterate = __webpack_require__(
          /*! ../internals/iterate */
          './node_modules/core-js/internals/iterate.js'
        );
        var PROMISE_STATICS_INCORRECT_ITERATION = __webpack_require__(
          /*! ../internals/promise-statics-incorrect-iteration */
          './node_modules/core-js/internals/promise-statics-incorrect-iteration.js'
        );

        // `Promise.race` method
        // https://tc39.es/ecma262/#sec-promise.race
        $(
          {
            target: 'Promise',
            stat: true,
            forced: PROMISE_STATICS_INCORRECT_ITERATION,
          },
          {
            race: function race(iterable) {
              var C = this;
              var capability = newPromiseCapabilityModule.f(C);
              var reject = capability.reject;
              var result = perform(function () {
                var $promiseResolve = aCallable(C.resolve);
                iterate(iterable, function (promise) {
                  call($promiseResolve, C, promise).then(
                    capability.resolve,
                    reject
                  );
                });
              });
              if (result.error) reject(result.value);
              return capability.promise;
            },
          }
        );

        /***/
      },

    /***/
    /*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.reject.js ***!
  \***********************************************************/
    './node_modules/core-js/modules/es.promise.reject.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var $ = __webpack_require__(
          /*! ../internals/export */
          './node_modules/core-js/internals/export.js'
        );
        var newPromiseCapabilityModule = __webpack_require__(
          /*! ../internals/new-promise-capability */
          './node_modules/core-js/internals/new-promise-capability.js'
        );
        var FORCED_PROMISE_CONSTRUCTOR = __webpack_require__(
          /*! ../internals/promise-constructor-detection */
          './node_modules/core-js/internals/promise-constructor-detection.js'
        ).CONSTRUCTOR;

        // `Promise.reject` method
        // https://tc39.es/ecma262/#sec-promise.reject
        $(
          {
            target: 'Promise',
            stat: true,
            forced: FORCED_PROMISE_CONSTRUCTOR,
          },
          {
            reject: function reject(r) {
              var capability = newPromiseCapabilityModule.f(this);
              var capabilityReject = capability.reject;
              capabilityReject(r);
              return capability.promise;
            },
          }
        );

        /***/
      },

    /***/
    /*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.resolve.js ***!
  \************************************************************/
    './node_modules/core-js/modules/es.promise.resolve.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var $ = __webpack_require__(
          /*! ../internals/export */
          './node_modules/core-js/internals/export.js'
        );
        var getBuiltIn = __webpack_require__(
          /*! ../internals/get-built-in */
          './node_modules/core-js/internals/get-built-in.js'
        );
        var IS_PURE = __webpack_require__(
          /*! ../internals/is-pure */
          './node_modules/core-js/internals/is-pure.js'
        );
        var NativePromiseConstructor = __webpack_require__(
          /*! ../internals/promise-native-constructor */
          './node_modules/core-js/internals/promise-native-constructor.js'
        );
        var FORCED_PROMISE_CONSTRUCTOR = __webpack_require__(
          /*! ../internals/promise-constructor-detection */
          './node_modules/core-js/internals/promise-constructor-detection.js'
        ).CONSTRUCTOR;
        var promiseResolve = __webpack_require__(
          /*! ../internals/promise-resolve */
          './node_modules/core-js/internals/promise-resolve.js'
        );

        var PromiseConstructorWrapper = getBuiltIn('Promise');
        var CHECK_WRAPPER = IS_PURE && !FORCED_PROMISE_CONSTRUCTOR;

        // `Promise.resolve` method
        // https://tc39.es/ecma262/#sec-promise.resolve
        $(
          {
            target: 'Promise',
            stat: true,
            forced: IS_PURE || FORCED_PROMISE_CONSTRUCTOR,
          },
          {
            resolve: function resolve(x) {
              return promiseResolve(
                CHECK_WRAPPER && this === PromiseConstructorWrapper
                  ? NativePromiseConstructor
                  : this,
                x
              );
            },
          }
        );

        /***/
      },

    /***/
    /*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.starts-with.js ***!
  \***************************************************************/
    './node_modules/core-js/modules/es.string.starts-with.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        'use strict';

        var $ = __webpack_require__(
          /*! ../internals/export */
          './node_modules/core-js/internals/export.js'
        );
        var uncurryThis = __webpack_require__(
          /*! ../internals/function-uncurry-this-clause */
          './node_modules/core-js/internals/function-uncurry-this-clause.js'
        );
        var getOwnPropertyDescriptor = __webpack_require__(
          /*! ../internals/object-get-own-property-descriptor */
          './node_modules/core-js/internals/object-get-own-property-descriptor.js'
        ).f;
        var toLength = __webpack_require__(
          /*! ../internals/to-length */
          './node_modules/core-js/internals/to-length.js'
        );
        var toString = __webpack_require__(
          /*! ../internals/to-string */
          './node_modules/core-js/internals/to-string.js'
        );
        var notARegExp = __webpack_require__(
          /*! ../internals/not-a-regexp */
          './node_modules/core-js/internals/not-a-regexp.js'
        );
        var requireObjectCoercible = __webpack_require__(
          /*! ../internals/require-object-coercible */
          './node_modules/core-js/internals/require-object-coercible.js'
        );
        var correctIsRegExpLogic = __webpack_require__(
          /*! ../internals/correct-is-regexp-logic */
          './node_modules/core-js/internals/correct-is-regexp-logic.js'
        );
        var IS_PURE = __webpack_require__(
          /*! ../internals/is-pure */
          './node_modules/core-js/internals/is-pure.js'
        );

        var stringSlice = uncurryThis(''.slice);
        var min = Math.min;

        var CORRECT_IS_REGEXP_LOGIC =
          correctIsRegExpLogic('startsWith');
        // https://github.com/zloirock/core-js/pull/702
        var MDN_POLYFILL_BUG =
          !IS_PURE &&
          !CORRECT_IS_REGEXP_LOGIC &&
          !!(function () {
            var descriptor = getOwnPropertyDescriptor(
              String.prototype,
              'startsWith'
            );
            return descriptor && !descriptor.writable;
          })();

        // `String.prototype.startsWith` method
        // https://tc39.es/ecma262/#sec-string.prototype.startswith
        $(
          {
            target: 'String',
            proto: true,
            forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC,
          },
          {
            startsWith: function startsWith(
              searchString /* , position = 0 */
            ) {
              var that = toString(requireObjectCoercible(this));
              notARegExp(searchString);
              var index = toLength(
                min(
                  arguments.length > 1 ? arguments[1] : undefined,
                  that.length
                )
              );
              var search = toString(searchString);
              return (
                stringSlice(that, index, index + search.length) ===
                search
              );
            },
          }
        );

        /***/
      },

    /***/
    /*!********************************************************************!*\
  !*** ./node_modules/desandro-matches-selector/matches-selector.js ***!
  \********************************************************************/
    './node_modules/desandro-matches-selector/matches-selector.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /**
         * matchesSelector v2.0.2
         * matchesSelector( element, '.selector' )
         * MIT license
         */

        /*jshint browser: true, strict: true, undef: true, unused: true */

        (function (window, factory) {
          /*global define: false, module: false */
          'use strict';
          // universal module definition
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
            (__WEBPACK_AMD_DEFINE_RESULT__ =
              typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function'
                ? __WEBPACK_AMD_DEFINE_FACTORY__.call(
                    exports,
                    __webpack_require__,
                    exports,
                    module
                  )
                : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory() {
          'use strict';

          var matchesMethod = (function () {
            var ElemProto = window.Element.prototype;
            // check for the standard method name first
            if (ElemProto.matches) {
              return 'matches';
            }
            // check un-prefixed
            if (ElemProto.matchesSelector) {
              return 'matchesSelector';
            }
            // check vendor prefixes
            var prefixes = ['webkit', 'moz', 'ms', 'o'];

            for (var i = 0; i < prefixes.length; i++) {
              var prefix = prefixes[i];
              var method = prefix + 'MatchesSelector';
              if (ElemProto[method]) {
                return method;
              }
            }
          })();

          return function matchesSelector(elem, selector) {
            return elem[matchesMethod](selector);
          };
        });

        /***/
      },

    /***/
    /*!***********************************************!*\
  !*** ./node_modules/ev-emitter/ev-emitter.js ***!
  \***********************************************/
    './node_modules/ev-emitter/ev-emitter.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /**
         * EvEmitter v1.1.0
         * Lil' event emitter
         * MIT License
         */

        /* jshint unused: true, undef: true, strict: true */

        (function (global, factory) {
          // universal module definition
          /* jshint strict: false */
          /* globals define, module, window */
          if (true) {
            // AMD - RequireJS
            !((__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
            (__WEBPACK_AMD_DEFINE_RESULT__ =
              typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function'
                ? __WEBPACK_AMD_DEFINE_FACTORY__.call(
                    exports,
                    __webpack_require__,
                    exports,
                    module
                  )
                : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(typeof window != 'undefined' ? window : this, function () {
          'use strict';

          function EvEmitter() {}

          var proto = EvEmitter.prototype;

          proto.on = function (eventName, listener) {
            if (!eventName || !listener) {
              return;
            }
            // set events hash
            var events = (this._events = this._events || {});
            // set listeners array
            var listeners = (events[eventName] =
              events[eventName] || []);
            // only add once
            if (listeners.indexOf(listener) == -1) {
              listeners.push(listener);
            }

            return this;
          };

          proto.once = function (eventName, listener) {
            if (!eventName || !listener) {
              return;
            }
            // add event
            this.on(eventName, listener);
            // set once flag
            // set onceEvents hash
            var onceEvents = (this._onceEvents =
              this._onceEvents || {});
            // set onceListeners object
            var onceListeners = (onceEvents[eventName] =
              onceEvents[eventName] || {});
            // set flag
            onceListeners[listener] = true;

            return this;
          };

          proto.off = function (eventName, listener) {
            var listeners = this._events && this._events[eventName];
            if (!listeners || !listeners.length) {
              return;
            }
            var index = listeners.indexOf(listener);
            if (index != -1) {
              listeners.splice(index, 1);
            }

            return this;
          };

          proto.emitEvent = function (eventName, args) {
            var listeners = this._events && this._events[eventName];
            if (!listeners || !listeners.length) {
              return;
            }
            // copy over to avoid interference if .off() in listener
            listeners = listeners.slice(0);
            args = args || [];
            // once stuff
            var onceListeners =
              this._onceEvents && this._onceEvents[eventName];

            for (var i = 0; i < listeners.length; i++) {
              var listener = listeners[i];
              var isOnce = onceListeners && onceListeners[listener];
              if (isOnce) {
                // remove listener
                // remove before trigger to prevent recursion
                this.off(eventName, listener);
                // unset once flag
                delete onceListeners[listener];
              }
              // trigger listener
              listener.apply(this, args);
            }

            return this;
          };

          proto.allOff = function () {
            delete this._events;
            delete this._onceEvents;
          };

          return EvEmitter;
        });

        /***/
      },

    /***/
    /*!**********************************************!*\
  !*** ./node_modules/fizzy-ui-utils/utils.js ***!
  \**********************************************/
    './node_modules/fizzy-ui-utils/utils.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /**
         * Fizzy UI utils v2.0.7
         * MIT license
         */

        /*jshint browser: true, undef: true, unused: true, strict: true */

        (function (window, factory) {
          // universal module definition
          /*jshint strict: false */
          /*globals define, module, require */

          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! desandro-matches-selector/matches-selector */
                './node_modules/desandro-matches-selector/matches-selector.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function (
              matchesSelector
            ) {
              return factory(window, matchesSelector);
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(window, matchesSelector) {
          'use strict';

          var utils = {};

          // ----- extend ----- //

          // extends objects
          utils.extend = function (a, b) {
            for (var prop in b) {
              a[prop] = b[prop];
            }
            return a;
          };

          // ----- modulo ----- //

          utils.modulo = function (num, div) {
            return ((num % div) + div) % div;
          };

          // ----- makeArray ----- //

          var arraySlice = Array.prototype.slice;

          // turn element or nodeList into an array
          utils.makeArray = function (obj) {
            if (Array.isArray(obj)) {
              // use object if already an array
              return obj;
            }
            // return empty array if undefined or null. #6
            if (obj === null || obj === undefined) {
              return [];
            }

            var isArrayLike =
              typeof obj == 'object' && typeof obj.length == 'number';
            if (isArrayLike) {
              // convert nodeList to array
              return arraySlice.call(obj);
            }

            // array of single index
            return [obj];
          };

          // ----- removeFrom ----- //

          utils.removeFrom = function (ary, obj) {
            var index = ary.indexOf(obj);
            if (index != -1) {
              ary.splice(index, 1);
            }
          };

          // ----- getParent ----- //

          utils.getParent = function (elem, selector) {
            while (elem.parentNode && elem != document.body) {
              elem = elem.parentNode;
              if (matchesSelector(elem, selector)) {
                return elem;
              }
            }
          };

          // ----- getQueryElement ----- //

          // use element as selector string
          utils.getQueryElement = function (elem) {
            if (typeof elem == 'string') {
              return document.querySelector(elem);
            }
            return elem;
          };

          // ----- handleEvent ----- //

          // enable .ontype to trigger from .addEventListener( elem, 'type' )
          utils.handleEvent = function (event) {
            var method = 'on' + event.type;
            if (this[method]) {
              this[method](event);
            }
          };

          // ----- filterFindElements ----- //

          utils.filterFindElements = function (elems, selector) {
            // make array of elems
            elems = utils.makeArray(elems);
            var ffElems = [];

            elems.forEach(function (elem) {
              // check that elem is an actual element
              if (!(elem instanceof HTMLElement)) {
                return;
              }
              // add elem if no selector
              if (!selector) {
                ffElems.push(elem);
                return;
              }
              // filter & find items if we have a selector
              // filter
              if (matchesSelector(elem, selector)) {
                ffElems.push(elem);
              }
              // find children
              var childElems = elem.querySelectorAll(selector);
              // concat childElems to filterFound array
              for (var i = 0; i < childElems.length; i++) {
                ffElems.push(childElems[i]);
              }
            });

            return ffElems;
          };

          // ----- debounceMethod ----- //

          utils.debounceMethod = function (
            _class,
            methodName,
            threshold
          ) {
            threshold = threshold || 100;
            // original method
            var method = _class.prototype[methodName];
            var timeoutName = methodName + 'Timeout';

            _class.prototype[methodName] = function () {
              var timeout = this[timeoutName];
              clearTimeout(timeout);

              var args = arguments;
              var _this = this;
              this[timeoutName] = setTimeout(function () {
                method.apply(_this, args);
                delete _this[timeoutName];
              }, threshold);
            };
          };

          // ----- docReady ----- //

          utils.docReady = function (callback) {
            var readyState = document.readyState;
            if (
              readyState == 'complete' ||
              readyState == 'interactive'
            ) {
              // do async to allow for other scripts to run. metafizzy/flickity#441
              setTimeout(callback);
            } else {
              document.addEventListener('DOMContentLoaded', callback);
            }
          };

          // ----- htmlInit ----- //

          // http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/
          utils.toDashed = function (str) {
            return str
              .replace(/(.)([A-Z])/g, function (match, $1, $2) {
                return $1 + '-' + $2;
              })
              .toLowerCase();
          };

          var console = window.console;
          /**
           * allow user to initialize classes via [data-namespace] or .js-namespace class
           * htmlInit( Widget, 'widgetName' )
           * options are parsed from data-namespace-options
           */
          utils.htmlInit = function (WidgetClass, namespace) {
            utils.docReady(function () {
              var dashedNamespace = utils.toDashed(namespace);
              var dataAttr = 'data-' + dashedNamespace;
              var dataAttrElems = document.querySelectorAll(
                '[' + dataAttr + ']'
              );
              var jsDashElems = document.querySelectorAll(
                '.js-' + dashedNamespace
              );
              var elems = utils
                .makeArray(dataAttrElems)
                .concat(utils.makeArray(jsDashElems));
              var dataOptionsAttr = dataAttr + '-options';
              var jQuery = window.jQuery;

              elems.forEach(function (elem) {
                var attr =
                  elem.getAttribute(dataAttr) ||
                  elem.getAttribute(dataOptionsAttr);
                var options;
                try {
                  options = attr && JSON.parse(attr);
                } catch (error) {
                  // log error, do not initialize
                  if (console) {
                    console.error(
                      'Error parsing ' +
                        dataAttr +
                        ' on ' +
                        elem.className +
                        ': ' +
                        error
                    );
                  }
                  return;
                }
                // initialize
                var instance = new WidgetClass(elem, options);
                // make available via $().data('namespace')
                if (jQuery) {
                  jQuery.data(elem, namespace, instance);
                }
              });
            });
          };

          // -----  ----- //

          return utils;
        });

        /***/
      },

    /***/
    /*!*****************************************************!*\
  !*** ./node_modules/flickity-fade/flickity-fade.js ***!
  \*****************************************************/
    './node_modules/flickity-fade/flickity-fade.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__,
          __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /**
         * Flickity fade v1.0.0
         * Fade between Flickity slides
         */

        /* jshint browser: true, undef: true, unused: true */

        (function (window, factory) {
          // universal module definition
          /*globals define, module, require */
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! flickity/js/index */
                './node_modules/flickity/js/index.js'
              ),
              __webpack_require__(
                /*! fizzy-ui-utils/utils */
                './node_modules/fizzy-ui-utils/utils.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
            (__WEBPACK_AMD_DEFINE_RESULT__ =
              typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function'
                ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(
                    exports,
                    __WEBPACK_AMD_DEFINE_ARRAY__
                  )
                : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(this, function factory(Flickity, utils) {
          // ---- Slide ---- //

          var Slide = Flickity.Slide;

          var slideUpdateTarget = Slide.prototype.updateTarget;
          Slide.prototype.updateTarget = function () {
            slideUpdateTarget.apply(this, arguments);
            if (!this.parent.options.fade) {
              return;
            }
            // position cells at selected target
            var slideTargetX = this.target - this.x;
            var firstCellX = this.cells[0].x;
            this.cells.forEach(function (cell) {
              var targetX = cell.x - firstCellX - slideTargetX;
              cell.renderPosition(targetX);
            });
          };

          Slide.prototype.setOpacity = function (alpha) {
            this.cells.forEach(function (cell) {
              cell.element.style.opacity = alpha;
            });
          };

          // ---- Flickity ---- //

          var proto = Flickity.prototype;

          Flickity.createMethods.push('_createFade');

          proto._createFade = function () {
            this.fadeIndex = this.selectedIndex;
            this.prevSelectedIndex = this.selectedIndex;
            this.on('select', this.onSelectFade);
            this.on('dragEnd', this.onDragEndFade);
            this.on('settle', this.onSettleFade);
            this.on('activate', this.onActivateFade);
            this.on('deactivate', this.onDeactivateFade);
          };

          var updateSlides = proto.updateSlides;
          proto.updateSlides = function () {
            updateSlides.apply(this, arguments);
            if (!this.options.fade) {
              return;
            }
            // set initial opacity
            this.slides.forEach(function (slide, i) {
              var alpha = i == this.selectedIndex ? 1 : 0;
              slide.setOpacity(alpha);
            }, this);
          };

          /* ---- events ---- */

          proto.onSelectFade = function () {
            // in case of resize, keep fadeIndex within current count
            this.fadeIndex = Math.min(
              this.prevSelectedIndex,
              this.slides.length - 1
            );
            this.prevSelectedIndex = this.selectedIndex;
          };

          proto.onSettleFade = function () {
            delete this.didDragEnd;
            if (!this.options.fade) {
              return;
            }
            // set full and 0 opacity on selected & faded slides
            this.selectedSlide.setOpacity(1);
            var fadedSlide = this.slides[this.fadeIndex];
            if (fadedSlide && this.fadeIndex != this.selectedIndex) {
              this.slides[this.fadeIndex].setOpacity(0);
            }
          };

          proto.onDragEndFade = function () {
            // set flag
            this.didDragEnd = true;
          };

          proto.onActivateFade = function () {
            if (this.options.fade) {
              this.element.classList.add('is-fade');
            }
          };

          proto.onDeactivateFade = function () {
            if (!this.options.fade) {
              return;
            }
            this.element.classList.remove('is-fade');
            // reset opacity
            this.slides.forEach(function (slide) {
              slide.setOpacity('');
            });
          };

          /* ---- position & fading ---- */

          var positionSlider = proto.positionSlider;
          proto.positionSlider = function () {
            if (!this.options.fade) {
              positionSlider.apply(this, arguments);
              return;
            }

            this.fadeSlides();
            this.dispatchScrollEvent();
          };

          var positionSliderAtSelected =
            proto.positionSliderAtSelected;
          proto.positionSliderAtSelected = function () {
            if (this.options.fade) {
              // position fade slider at origin
              this.setTranslateX(0);
            }
            positionSliderAtSelected.apply(this, arguments);
          };

          proto.fadeSlides = function () {
            if (this.slides.length < 2) {
              return;
            }
            // get slides to fade-in & fade-out
            var indexes = this.getFadeIndexes();
            var fadeSlideA = this.slides[indexes.a];
            var fadeSlideB = this.slides[indexes.b];
            var distance = this.wrapDifference(
              fadeSlideA.target,
              fadeSlideB.target
            );
            var progress = this.wrapDifference(
              fadeSlideA.target,
              -this.x
            );
            progress = progress / distance;

            fadeSlideA.setOpacity(1 - progress);
            fadeSlideB.setOpacity(progress);

            // hide previous slide
            var fadeHideIndex = indexes.a;
            if (this.isDragging) {
              fadeHideIndex = progress > 0.5 ? indexes.a : indexes.b;
            }
            var isNewHideIndex =
              this.fadeHideIndex != undefined &&
              this.fadeHideIndex != fadeHideIndex &&
              this.fadeHideIndex != indexes.a &&
              this.fadeHideIndex != indexes.b;
            if (isNewHideIndex) {
              // new fadeHideSlide set, hide previous
              this.slides[this.fadeHideIndex].setOpacity(0);
            }
            this.fadeHideIndex = fadeHideIndex;
          };

          proto.getFadeIndexes = function () {
            if (!this.isDragging && !this.didDragEnd) {
              return {
                a: this.fadeIndex,
                b: this.selectedIndex,
              };
            }
            if (this.options.wrapAround) {
              return this.getFadeDragWrapIndexes();
            } else {
              return this.getFadeDragLimitIndexes();
            }
          };

          proto.getFadeDragWrapIndexes = function () {
            var distances = this.slides.map(function (slide, i) {
              return this.getSlideDistance(-this.x, i);
            }, this);
            var absDistances = distances.map(function (distance) {
              return Math.abs(distance);
            });
            var minDistance = Math.min.apply(Math, absDistances);
            var closestIndex = absDistances.indexOf(minDistance);
            var distance = distances[closestIndex];
            var len = this.slides.length;

            var delta = distance >= 0 ? 1 : -1;
            return {
              a: closestIndex,
              b: utils.modulo(closestIndex + delta, len),
            };
          };

          proto.getFadeDragLimitIndexes = function () {
            // calculate closest previous slide
            var dragIndex = 0;
            for (var i = 0; i < this.slides.length - 1; i++) {
              var slide = this.slides[i];
              if (-this.x < slide.target) {
                break;
              }
              dragIndex = i;
            }
            return {
              a: dragIndex,
              b: dragIndex + 1,
            };
          };

          proto.wrapDifference = function (a, b) {
            var diff = b - a;

            if (!this.options.wrapAround) {
              return diff;
            }

            var diffPlus = diff + this.slideableWidth;
            var diffMinus = diff - this.slideableWidth;
            if (Math.abs(diffPlus) < Math.abs(diff)) {
              diff = diffPlus;
            }
            if (Math.abs(diffMinus) < Math.abs(diff)) {
              diff = diffMinus;
            }
            return diff;
          };

          // ---- wrapAround ---- //

          var _getWrapShiftCells = proto._getWrapShiftCells;
          proto._getWrapShiftCells = function () {
            if (!this.options.fade) {
              _getWrapShiftCells.apply(this, arguments);
            }
          };

          var shiftWrapCells = proto.shiftWrapCells;
          proto.shiftWrapCells = function () {
            if (!this.options.fade) {
              shiftWrapCells.apply(this, arguments);
            }
          };

          return Flickity;
        });

        /***/
      },

    /***/
    /*!*****************************************************!*\
  !*** ./node_modules/flickity/js/add-remove-cell.js ***!
  \*****************************************************/
    './node_modules/flickity/js/add-remove-cell.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        // add, remove cell
        (function (window, factory) {
          // universal module definition
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! ./flickity */
                './node_modules/flickity/js/flickity.js'
              ),
              __webpack_require__(
                /*! fizzy-ui-utils/utils */
                './node_modules/fizzy-ui-utils/utils.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function (
              Flickity,
              utils
            ) {
              return factory(window, Flickity, utils);
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(window, Flickity, utils) {
          'use strict';

          // append cells to a document fragment
          function getCellsFragment(cells) {
            var fragment = document.createDocumentFragment();
            cells.forEach(function (cell) {
              fragment.appendChild(cell.element);
            });
            return fragment;
          }

          // -------------------------- add/remove cell prototype -------------------------- //

          var proto = Flickity.prototype;

          /**
           * Insert, prepend, or append cells
           * @param {[Element, Array, NodeList]} elems - Elements to insert
           * @param {Integer} index - Zero-based number to insert
           */
          proto.insert = function (elems, index) {
            var cells = this._makeCells(elems);
            if (!cells || !cells.length) {
              return;
            }
            var len = this.cells.length;
            // default to append
            index = index === undefined ? len : index;
            // add cells with document fragment
            var fragment = getCellsFragment(cells);
            // append to slider
            var isAppend = index == len;
            if (isAppend) {
              this.slider.appendChild(fragment);
            } else {
              var insertCellElement = this.cells[index].element;
              this.slider.insertBefore(fragment, insertCellElement);
            }
            // add to this.cells
            if (index === 0) {
              // prepend, add to start
              this.cells = cells.concat(this.cells);
            } else if (isAppend) {
              // append, add to end
              this.cells = this.cells.concat(cells);
            } else {
              // insert in this.cells
              var endCells = this.cells.splice(index, len - index);
              this.cells = this.cells.concat(cells).concat(endCells);
            }

            this._sizeCells(cells);
            this.cellChange(index, true);
          };

          proto.append = function (elems) {
            this.insert(elems, this.cells.length);
          };

          proto.prepend = function (elems) {
            this.insert(elems, 0);
          };

          /**
           * Remove cells
           * @param {[Element, Array, NodeList]} elems - ELements to remove
           */
          proto.remove = function (elems) {
            var cells = this.getCells(elems);
            if (!cells || !cells.length) {
              return;
            }

            var minCellIndex = this.cells.length - 1;
            // remove cells from collection & DOM
            cells.forEach(function (cell) {
              cell.remove();
              var index = this.cells.indexOf(cell);
              minCellIndex = Math.min(index, minCellIndex);
              utils.removeFrom(this.cells, cell);
            }, this);

            this.cellChange(minCellIndex, true);
          };

          /**
           * logic to be run after a cell's size changes
           * @param {Element} elem - cell's element
           */
          proto.cellSizeChange = function (elem) {
            var cell = this.getCell(elem);
            if (!cell) {
              return;
            }
            cell.getSize();

            var index = this.cells.indexOf(cell);
            this.cellChange(index);
          };

          /**
           * logic any time a cell is changed: added, removed, or size changed
           * @param {Integer} changedCellIndex - index of the changed cell, optional
           * @param {Boolean} isPositioningSlider - Positions slider after selection
           */
          proto.cellChange = function (
            changedCellIndex,
            isPositioningSlider
          ) {
            var prevSelectedElem = this.selectedElement;
            this._positionCells(changedCellIndex);
            this._getWrapShiftCells();
            this.setGallerySize();
            // update selectedIndex
            // try to maintain position & select previous selected element
            var cell = this.getCell(prevSelectedElem);
            if (cell) {
              this.selectedIndex = this.getCellSlideIndex(cell);
            }
            this.selectedIndex = Math.min(
              this.slides.length - 1,
              this.selectedIndex
            );

            this.emitEvent('cellChange', [changedCellIndex]);
            // position slider
            this.select(this.selectedIndex);
            // do not position slider after lazy load
            if (isPositioningSlider) {
              this.positionSliderAtSelected();
            }
          };

          // -----  ----- //

          return Flickity;
        });

        /***/
      },

    /***/
    /*!*********************************************!*\
  !*** ./node_modules/flickity/js/animate.js ***!
  \*********************************************/
    './node_modules/flickity/js/animate.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        // animate
        (function (window, factory) {
          // universal module definition
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! fizzy-ui-utils/utils */
                './node_modules/fizzy-ui-utils/utils.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function (utils) {
              return factory(window, utils);
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(window, utils) {
          'use strict';

          // -------------------------- animate -------------------------- //

          var proto = {};

          proto.startAnimation = function () {
            if (this.isAnimating) {
              return;
            }

            this.isAnimating = true;
            this.restingFrames = 0;
            this.animate();
          };

          proto.animate = function () {
            this.applyDragForce();
            this.applySelectedAttraction();

            var previousX = this.x;

            this.integratePhysics();
            this.positionSlider();
            this.settle(previousX);
            // animate next frame
            if (this.isAnimating) {
              var _this = this;
              requestAnimationFrame(function animateFrame() {
                _this.animate();
              });
            }
          };

          proto.positionSlider = function () {
            var x = this.x;
            // wrap position around
            if (this.options.wrapAround && this.cells.length > 1) {
              x = utils.modulo(x, this.slideableWidth);
              x -= this.slideableWidth;
              this.shiftWrapCells(x);
            }

            this.setTranslateX(x, this.isAnimating);
            this.dispatchScrollEvent();
          };

          proto.setTranslateX = function (x, is3d) {
            x += this.cursorPosition;
            // reverse if right-to-left and using transform
            x = this.options.rightToLeft ? -x : x;
            var translateX = this.getPositionValue(x);
            // use 3D transforms for hardware acceleration on iOS
            // but use 2D when settled, for better font-rendering
            this.slider.style.transform = is3d
              ? 'translate3d(' + translateX + ',0,0)'
              : 'translateX(' + translateX + ')';
          };

          proto.dispatchScrollEvent = function () {
            var firstSlide = this.slides[0];
            if (!firstSlide) {
              return;
            }
            var positionX = -this.x - firstSlide.target;
            var progress = positionX / this.slidesWidth;
            this.dispatchEvent('scroll', null, [progress, positionX]);
          };

          proto.positionSliderAtSelected = function () {
            if (!this.cells.length) {
              return;
            }
            this.x = -this.selectedSlide.target;
            this.velocity = 0;
            // stop wobble
            this.positionSlider();
          };

          proto.getPositionValue = function (position) {
            if (this.options.percentPosition) {
              // percent position, round to 2 digits, like 12.34%
              return (
                Math.round(
                  (position / this.size.innerWidth) * 10000
                ) *
                  0.01 +
                '%'
              );
            } else {
              // pixel positioning
              return Math.round(position) + 'px';
            }
          };

          proto.settle = function (previousX) {
            // keep track of frames where x hasn't moved
            var isResting =
              !this.isPointerDown &&
              Math.round(this.x * 100) == Math.round(previousX * 100);
            if (isResting) {
              this.restingFrames++;
            }
            // stop animating if resting for 3 or more frames
            if (this.restingFrames > 2) {
              this.isAnimating = false;
              delete this.isFreeScrolling;
              // render position with translateX when settled
              this.positionSlider();
              this.dispatchEvent('settle', null, [
                this.selectedIndex,
              ]);
            }
          };

          proto.shiftWrapCells = function (x) {
            // shift before cells
            var beforeGap = this.cursorPosition + x;
            this._shiftCells(this.beforeShiftCells, beforeGap, -1);
            // shift after cells
            var afterGap =
              this.size.innerWidth -
              (x + this.slideableWidth + this.cursorPosition);
            this._shiftCells(this.afterShiftCells, afterGap, 1);
          };

          proto._shiftCells = function (cells, gap, shift) {
            for (var i = 0; i < cells.length; i++) {
              var cell = cells[i];
              var cellShift = gap > 0 ? shift : 0;
              cell.wrapShift(cellShift);
              gap -= cell.size.outerWidth;
            }
          };

          proto._unshiftCells = function (cells) {
            if (!cells || !cells.length) {
              return;
            }
            for (var i = 0; i < cells.length; i++) {
              cells[i].wrapShift(0);
            }
          };

          // -------------------------- physics -------------------------- //

          proto.integratePhysics = function () {
            this.x += this.velocity;
            this.velocity *= this.getFrictionFactor();
          };

          proto.applyForce = function (force) {
            this.velocity += force;
          };

          proto.getFrictionFactor = function () {
            return (
              1 -
              this.options[
                this.isFreeScrolling
                  ? 'freeScrollFriction'
                  : 'friction'
              ]
            );
          };

          proto.getRestingPosition = function () {
            // my thanks to Steven Wittens, who simplified this math greatly
            return (
              this.x + this.velocity / (1 - this.getFrictionFactor())
            );
          };

          proto.applyDragForce = function () {
            if (!this.isDraggable || !this.isPointerDown) {
              return;
            }
            // change the position to drag position by applying force
            var dragVelocity = this.dragX - this.x;
            var dragForce = dragVelocity - this.velocity;
            this.applyForce(dragForce);
          };

          proto.applySelectedAttraction = function () {
            // do not attract if pointer down or no slides
            var dragDown = this.isDraggable && this.isPointerDown;
            if (
              dragDown ||
              this.isFreeScrolling ||
              !this.slides.length
            ) {
              return;
            }
            var distance = this.selectedSlide.target * -1 - this.x;
            var force = distance * this.options.selectedAttraction;
            this.applyForce(force);
          };

          return proto;
        });

        /***/
      },

    /***/
    /*!******************************************!*\
  !*** ./node_modules/flickity/js/cell.js ***!
  \******************************************/
    './node_modules/flickity/js/cell.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        // Flickity.Cell
        (function (window, factory) {
          // universal module definition
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! get-size/get-size */
                './node_modules/get-size/get-size.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function (getSize) {
              return factory(window, getSize);
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(window, getSize) {
          'use strict';

          function Cell(elem, parent) {
            this.element = elem;
            this.parent = parent;

            this.create();
          }

          var proto = Cell.prototype;

          proto.create = function () {
            this.element.style.position = 'absolute';
            this.element.setAttribute('aria-hidden', 'true');
            this.x = 0;
            this.shift = 0;
            this.element.style[this.parent.originSide] = 0;
          };

          proto.destroy = function () {
            // reset style
            this.unselect();
            this.element.style.position = '';
            var side = this.parent.originSide;
            this.element.style[side] = '';
            this.element.style.transform = '';
            this.element.removeAttribute('aria-hidden');
          };

          proto.getSize = function () {
            this.size = getSize(this.element);
          };

          proto.setPosition = function (x) {
            this.x = x;
            this.updateTarget();
            this.renderPosition(x);
          };

          // setDefaultTarget v1 method, backwards compatibility, remove in v3
          proto.updateTarget = proto.setDefaultTarget = function () {
            var marginProperty =
              this.parent.originSide == 'left'
                ? 'marginLeft'
                : 'marginRight';
            this.target =
              this.x +
              this.size[marginProperty] +
              this.size.width * this.parent.cellAlign;
          };

          proto.renderPosition = function (x) {
            // render position of cell with in slider
            var sideOffset =
              this.parent.originSide === 'left' ? 1 : -1;

            var adjustedX = this.parent.options.percentPosition
              ? x *
                sideOffset *
                (this.parent.size.innerWidth / this.size.width)
              : x * sideOffset;

            this.element.style.transform =
              'translateX(' +
              this.parent.getPositionValue(adjustedX) +
              ')';
          };

          proto.select = function () {
            this.element.classList.add('is-selected');
            this.element.removeAttribute('aria-hidden');
          };

          proto.unselect = function () {
            this.element.classList.remove('is-selected');
            this.element.setAttribute('aria-hidden', 'true');
          };

          /**
           * @param {Integer} shift - 0, 1, or -1
           */
          proto.wrapShift = function (shift) {
            this.shift = shift;
            this.renderPosition(
              this.x + this.parent.slideableWidth * shift
            );
          };

          proto.remove = function () {
            this.element.parentNode.removeChild(this.element);
          };

          return Cell;
        });

        /***/
      },

    /***/
    /*!******************************************!*\
  !*** ./node_modules/flickity/js/drag.js ***!
  \******************************************/
    './node_modules/flickity/js/drag.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        // drag
        (function (window, factory) {
          // universal module definition
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! ./flickity */
                './node_modules/flickity/js/flickity.js'
              ),
              __webpack_require__(
                /*! unidragger/unidragger */
                './node_modules/unidragger/unidragger.js'
              ),
              __webpack_require__(
                /*! fizzy-ui-utils/utils */
                './node_modules/fizzy-ui-utils/utils.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function (
              Flickity,
              Unidragger,
              utils
            ) {
              return factory(window, Flickity, Unidragger, utils);
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(
          window,
          function factory(window, Flickity, Unidragger, utils) {
            'use strict';

            // ----- defaults ----- //

            utils.extend(Flickity.defaults, {
              draggable: '>1',
              dragThreshold: 3,
            });

            // ----- create ----- //

            Flickity.createMethods.push('_createDrag');

            // -------------------------- drag prototype -------------------------- //

            var proto = Flickity.prototype;
            utils.extend(proto, Unidragger.prototype);
            proto._touchActionValue = 'pan-y';

            // --------------------------  -------------------------- //

            proto._createDrag = function () {
              this.on('activate', this.onActivateDrag);
              this.on('uiChange', this._uiChangeDrag);
              this.on('deactivate', this.onDeactivateDrag);
              this.on('cellChange', this.updateDraggable);
              // TODO updateDraggable on resize? if groupCells & slides change
            };

            proto.onActivateDrag = function () {
              this.handles = [this.viewport];
              this.bindHandles();
              this.updateDraggable();
            };

            proto.onDeactivateDrag = function () {
              this.unbindHandles();
              this.element.classList.remove('is-draggable');
            };

            proto.updateDraggable = function () {
              // disable dragging if less than 2 slides. #278
              if (this.options.draggable == '>1') {
                this.isDraggable = this.slides.length > 1;
              } else {
                this.isDraggable = this.options.draggable;
              }
              if (this.isDraggable) {
                this.element.classList.add('is-draggable');
              } else {
                this.element.classList.remove('is-draggable');
              }
            };

            // backwards compatibility
            proto.bindDrag = function () {
              this.options.draggable = true;
              this.updateDraggable();
            };

            proto.unbindDrag = function () {
              this.options.draggable = false;
              this.updateDraggable();
            };

            proto._uiChangeDrag = function () {
              delete this.isFreeScrolling;
            };

            // -------------------------- pointer events -------------------------- //

            proto.pointerDown = function (event, pointer) {
              if (!this.isDraggable) {
                this._pointerDownDefault(event, pointer);
                return;
              }
              var isOkay = this.okayPointerDown(event);
              if (!isOkay) {
                return;
              }

              this._pointerDownPreventDefault(event);
              this.pointerDownFocus(event);
              // blur
              if (document.activeElement != this.element) {
                // do not blur if already focused
                this.pointerDownBlur();
              }

              // stop if it was moving
              this.dragX = this.x;
              this.viewport.classList.add('is-pointer-down');
              // track scrolling
              this.pointerDownScroll = getScrollPosition();
              window.addEventListener('scroll', this);

              this._pointerDownDefault(event, pointer);
            };

            // default pointerDown logic, used for staticClick
            proto._pointerDownDefault = function (event, pointer) {
              // track start event position
              // Safari 9 overrides pageX and pageY. These values needs to be copied. #779
              this.pointerDownPointer = {
                pageX: pointer.pageX,
                pageY: pointer.pageY,
              };
              // bind move and end events
              this._bindPostStartEvents(event);
              this.dispatchEvent('pointerDown', event, [pointer]);
            };

            var focusNodes = {
              INPUT: true,
              TEXTAREA: true,
              SELECT: true,
            };

            proto.pointerDownFocus = function (event) {
              var isFocusNode = focusNodes[event.target.nodeName];
              if (!isFocusNode) {
                this.focus();
              }
            };

            proto._pointerDownPreventDefault = function (event) {
              var isTouchStart = event.type == 'touchstart';
              var isTouchPointer = event.pointerType == 'touch';
              var isFocusNode = focusNodes[event.target.nodeName];
              if (!isTouchStart && !isTouchPointer && !isFocusNode) {
                event.preventDefault();
              }
            };

            // ----- move ----- //

            proto.hasDragStarted = function (moveVector) {
              return (
                Math.abs(moveVector.x) > this.options.dragThreshold
              );
            };

            // ----- up ----- //

            proto.pointerUp = function (event, pointer) {
              delete this.isTouchScrolling;
              this.viewport.classList.remove('is-pointer-down');
              this.dispatchEvent('pointerUp', event, [pointer]);
              this._dragPointerUp(event, pointer);
            };

            proto.pointerDone = function () {
              window.removeEventListener('scroll', this);
              delete this.pointerDownScroll;
            };

            // -------------------------- dragging -------------------------- //

            proto.dragStart = function (event, pointer) {
              if (!this.isDraggable) {
                return;
              }
              this.dragStartPosition = this.x;
              this.startAnimation();
              window.removeEventListener('scroll', this);
              this.dispatchEvent('dragStart', event, [pointer]);
            };

            proto.pointerMove = function (event, pointer) {
              var moveVector = this._dragPointerMove(event, pointer);
              this.dispatchEvent('pointerMove', event, [
                pointer,
                moveVector,
              ]);
              this._dragMove(event, pointer, moveVector);
            };

            proto.dragMove = function (event, pointer, moveVector) {
              if (!this.isDraggable) {
                return;
              }
              event.preventDefault();

              this.previousDragX = this.dragX;
              // reverse if right-to-left
              var direction = this.options.rightToLeft ? -1 : 1;
              if (this.options.wrapAround) {
                // wrap around move. #589
                moveVector.x %= this.slideableWidth;
              }
              var dragX =
                this.dragStartPosition + moveVector.x * direction;

              if (!this.options.wrapAround && this.slides.length) {
                // slow drag
                var originBound = Math.max(
                  -this.slides[0].target,
                  this.dragStartPosition
                );
                dragX =
                  dragX > originBound
                    ? (dragX + originBound) * 0.5
                    : dragX;
                var endBound = Math.min(
                  -this.getLastSlide().target,
                  this.dragStartPosition
                );
                dragX =
                  dragX < endBound ? (dragX + endBound) * 0.5 : dragX;
              }

              this.dragX = dragX;

              this.dragMoveTime = new Date();
              this.dispatchEvent('dragMove', event, [
                pointer,
                moveVector,
              ]);
            };

            proto.dragEnd = function (event, pointer) {
              if (!this.isDraggable) {
                return;
              }
              if (this.options.freeScroll) {
                this.isFreeScrolling = true;
              }
              // set selectedIndex based on where flick will end up
              var index = this.dragEndRestingSelect();

              if (
                this.options.freeScroll &&
                !this.options.wrapAround
              ) {
                // if free-scroll & not wrap around
                // do not free-scroll if going outside of bounding slides
                // so bounding slides can attract slider, and keep it in bounds
                var restingX = this.getRestingPosition();
                this.isFreeScrolling =
                  -restingX > this.slides[0].target &&
                  -restingX < this.getLastSlide().target;
              } else if (
                !this.options.freeScroll &&
                index == this.selectedIndex
              ) {
                // boost selection if selected index has not changed
                index += this.dragEndBoostSelect();
              }
              delete this.previousDragX;
              // apply selection
              // TODO refactor this, selecting here feels weird
              // HACK, set flag so dragging stays in correct direction
              this.isDragSelect = this.options.wrapAround;
              this.select(index);
              delete this.isDragSelect;
              this.dispatchEvent('dragEnd', event, [pointer]);
            };

            proto.dragEndRestingSelect = function () {
              var restingX = this.getRestingPosition();
              // how far away from selected slide
              var distance = Math.abs(
                this.getSlideDistance(-restingX, this.selectedIndex)
              );
              // get closet resting going up and going down
              var positiveResting = this._getClosestResting(
                restingX,
                distance,
                1
              );
              var negativeResting = this._getClosestResting(
                restingX,
                distance,
                -1
              );
              // use closer resting for wrap-around
              var index =
                positiveResting.distance < negativeResting.distance
                  ? positiveResting.index
                  : negativeResting.index;
              return index;
            };

            /**
             * given resting X and distance to selected cell
             * get the distance and index of the closest cell
             * @param {Number} restingX - estimated post-flick resting position
             * @param {Number} distance - distance to selected cell
             * @param {Integer} increment - +1 or -1, going up or down
             * @returns {Object} - { distance: {Number}, index: {Integer} }
             */
            proto._getClosestResting = function (
              restingX,
              distance,
              increment
            ) {
              var index = this.selectedIndex;
              var minDistance = Infinity;
              var condition =
                this.options.contain && !this.options.wrapAround // if contain, keep going if distance is equal to minDistance
                  ? function (dist, minDist) {
                      return dist <= minDist;
                    }
                  : function (dist, minDist) {
                      return dist < minDist;
                    };
              while (condition(distance, minDistance)) {
                // measure distance to next cell
                index += increment;
                minDistance = distance;
                distance = this.getSlideDistance(-restingX, index);
                if (distance === null) {
                  break;
                }
                distance = Math.abs(distance);
              }
              return {
                distance: minDistance,
                // selected was previous index
                index: index - increment,
              };
            };

            /**
             * measure distance between x and a slide target
             * @param {Number} x - horizontal position
             * @param {Integer} index - slide index
             * @returns {Number} - slide distance
             */
            proto.getSlideDistance = function (x, index) {
              var len = this.slides.length;
              // wrap around if at least 2 slides
              var isWrapAround = this.options.wrapAround && len > 1;
              var slideIndex = isWrapAround
                ? utils.modulo(index, len)
                : index;
              var slide = this.slides[slideIndex];
              if (!slide) {
                return null;
              }
              // add distance for wrap-around slides
              var wrap = isWrapAround
                ? this.slideableWidth * Math.floor(index / len)
                : 0;
              return x - (slide.target + wrap);
            };

            proto.dragEndBoostSelect = function () {
              // do not boost if no previousDragX or dragMoveTime
              if (
                this.previousDragX === undefined ||
                !this.dragMoveTime || // or if drag was held for 100 ms
                new Date() - this.dragMoveTime > 100
              ) {
                return 0;
              }

              var distance = this.getSlideDistance(
                -this.dragX,
                this.selectedIndex
              );
              var delta = this.previousDragX - this.dragX;
              if (distance > 0 && delta > 0) {
                // boost to next if moving towards the right, and positive velocity
                return 1;
              } else if (distance < 0 && delta < 0) {
                // boost to previous if moving towards the left, and negative velocity
                return -1;
              }
              return 0;
            };

            // ----- staticClick ----- //

            proto.staticClick = function (event, pointer) {
              // get clickedCell, if cell was clicked
              var clickedCell = this.getParentCell(event.target);
              var cellElem = clickedCell && clickedCell.element;
              var cellIndex =
                clickedCell && this.cells.indexOf(clickedCell);
              this.dispatchEvent('staticClick', event, [
                pointer,
                cellElem,
                cellIndex,
              ]);
            };

            // ----- scroll ----- //

            proto.onscroll = function () {
              var scroll = getScrollPosition();
              var scrollMoveX = this.pointerDownScroll.x - scroll.x;
              var scrollMoveY = this.pointerDownScroll.y - scroll.y;
              // cancel click/tap if scroll is too much
              if (
                Math.abs(scrollMoveX) > 3 ||
                Math.abs(scrollMoveY) > 3
              ) {
                this._pointerDone();
              }
            };

            // ----- utils ----- //

            function getScrollPosition() {
              return {
                x: window.pageXOffset,
                y: window.pageYOffset,
              };
            }

            // -----  ----- //

            return Flickity;
          }
        );

        /***/
      },

    /***/
    /*!**********************************************!*\
  !*** ./node_modules/flickity/js/flickity.js ***!
  \**********************************************/
    './node_modules/flickity/js/flickity.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        // Flickity main
        /* eslint-disable max-params */
        (function (window, factory) {
          // universal module definition
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! ev-emitter/ev-emitter */
                './node_modules/ev-emitter/ev-emitter.js'
              ),
              __webpack_require__(
                /*! get-size/get-size */
                './node_modules/get-size/get-size.js'
              ),
              __webpack_require__(
                /*! fizzy-ui-utils/utils */
                './node_modules/fizzy-ui-utils/utils.js'
              ),
              __webpack_require__(
                /*! ./cell */
                './node_modules/flickity/js/cell.js'
              ),
              __webpack_require__(
                /*! ./slide */
                './node_modules/flickity/js/slide.js'
              ),
              __webpack_require__(
                /*! ./animate */
                './node_modules/flickity/js/animate.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function (
              EvEmitter,
              getSize,
              utils,
              Cell,
              Slide,
              animatePrototype
            ) {
              return factory(
                window,
                EvEmitter,
                getSize,
                utils,
                Cell,
                Slide,
                animatePrototype
              );
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
            var _Flickity;
          }
        })(
          window,
          function factory(
            window,
            EvEmitter,
            getSize,
            utils,
            Cell,
            Slide,
            animatePrototype
          ) {
            /* eslint-enable max-params */
            'use strict';

            // vars
            var jQuery = window.jQuery;
            var getComputedStyle = window.getComputedStyle;
            var console = window.console;

            function moveElements(elems, toElem) {
              elems = utils.makeArray(elems);
              while (elems.length) {
                toElem.appendChild(elems.shift());
              }
            }

            // -------------------------- Flickity -------------------------- //

            // globally unique identifiers
            var GUID = 0;
            // internal store of all Flickity intances
            var instances = {};

            function Flickity(element, options) {
              var queryElement = utils.getQueryElement(element);
              if (!queryElement) {
                if (console) {
                  console.error(
                    'Bad element for Flickity: ' +
                      (queryElement || element)
                  );
                }
                return;
              }
              this.element = queryElement;
              // do not initialize twice on same element
              if (this.element.flickityGUID) {
                var instance = instances[this.element.flickityGUID];
                if (instance) instance.option(options);
                return instance;
              }

              // add jQuery
              if (jQuery) {
                this.$element = jQuery(this.element);
              }
              // options
              this.options = utils.extend(
                {},
                this.constructor.defaults
              );
              this.option(options);

              // kick things off
              this._create();
            }

            Flickity.defaults = {
              accessibility: true,
              // adaptiveHeight: false,
              cellAlign: 'center',
              // cellSelector: undefined,
              // contain: false,
              freeScrollFriction: 0.075,
              // friction when free-scrolling
              friction: 0.28,
              // friction when selecting
              namespaceJQueryEvents: true,
              // initialIndex: 0,
              percentPosition: true,
              resize: true,
              selectedAttraction: 0.025,
              setGallerySize: true,
              // watchCSS: false,
              // wrapAround: false
            };

            // hash of methods triggered on _create()
            Flickity.createMethods = [];

            var proto = Flickity.prototype;
            // inherit EventEmitter
            utils.extend(proto, EvEmitter.prototype);

            proto._create = function () {
              // add id for Flickity.data
              var id = (this.guid = ++GUID);
              this.element.flickityGUID = id;
              // expando
              instances[id] = this;
              // associate via id
              // initial properties
              this.selectedIndex = 0;
              // how many frames slider has been in same position
              this.restingFrames = 0;
              // initial physics properties
              this.x = 0;
              this.velocity = 0;
              this.originSide = this.options.rightToLeft
                ? 'right'
                : 'left';
              // create viewport & slider
              this.viewport = document.createElement('div');
              this.viewport.className = 'flickity-viewport';
              this._createSlider();

              if (this.options.resize || this.options.watchCSS) {
                window.addEventListener('resize', this);
              }

              // add listeners from on option
              for (var eventName in this.options.on) {
                var listener = this.options.on[eventName];
                this.on(eventName, listener);
              }

              Flickity.createMethods.forEach(function (method) {
                this[method]();
              }, this);

              if (this.options.watchCSS) {
                this.watchCSS();
              } else {
                this.activate();
              }
            };

            /**
             * set options
             * @param {Object} opts - options to extend
             */
            proto.option = function (opts) {
              utils.extend(this.options, opts);
            };

            proto.activate = function () {
              if (this.isActive) {
                return;
              }
              this.isActive = true;
              this.element.classList.add('flickity-enabled');
              if (this.options.rightToLeft) {
                this.element.classList.add('flickity-rtl');
              }

              this.getSize();
              // move initial cell elements so they can be loaded as cells
              var cellElems = this._filterFindCellElements(
                this.element.children
              );
              moveElements(cellElems, this.slider);
              this.viewport.appendChild(this.slider);
              this.element.appendChild(this.viewport);
              // get cells from children
              this.reloadCells();

              if (this.options.accessibility) {
                // allow element to focusable
                this.element.tabIndex = 0;
                // listen for key presses
                this.element.addEventListener('keydown', this);
              }

              this.emitEvent('activate');
              this.selectInitialIndex();
              // flag for initial activation, for using initialIndex
              this.isInitActivated = true;
              // ready event. #493
              this.dispatchEvent('ready');
            };

            // slider positions the cells
            proto._createSlider = function () {
              // slider element does all the positioning
              var slider = document.createElement('div');
              slider.className = 'flickity-slider';
              slider.style[this.originSide] = 0;
              this.slider = slider;
            };

            proto._filterFindCellElements = function (elems) {
              return utils.filterFindElements(
                elems,
                this.options.cellSelector
              );
            };

            // goes through all children
            proto.reloadCells = function () {
              // collection of item elements
              this.cells = this._makeCells(this.slider.children);
              this.positionCells();
              this._getWrapShiftCells();
              this.setGallerySize();
            };

            /**
             * turn elements into Flickity.Cells
             * @param {[Array, NodeList, HTMLElement]} elems - elements to make into cells
             * @returns {Array} items - collection of new Flickity Cells
             */
            proto._makeCells = function (elems) {
              var cellElems = this._filterFindCellElements(elems);

              // create new Flickity for collection
              var cells = cellElems.map(function (cellElem) {
                return new Cell(cellElem, this);
              }, this);

              return cells;
            };

            proto.getLastCell = function () {
              return this.cells[this.cells.length - 1];
            };

            proto.getLastSlide = function () {
              return this.slides[this.slides.length - 1];
            };

            // positions all cells
            proto.positionCells = function () {
              // size all cells
              this._sizeCells(this.cells);
              // position all cells
              this._positionCells(0);
            };

            /**
             * position certain cells
             * @param {Integer} index - which cell to start with
             */
            proto._positionCells = function (index) {
              index = index || 0;
              // also measure maxCellHeight
              // start 0 if positioning all cells
              this.maxCellHeight = index
                ? this.maxCellHeight || 0
                : 0;
              var cellX = 0;
              // get cellX
              if (index > 0) {
                var startCell = this.cells[index - 1];
                cellX = startCell.x + startCell.size.outerWidth;
              }
              var len = this.cells.length;
              for (var i = index; i < len; i++) {
                var cell = this.cells[i];
                cell.setPosition(cellX);
                cellX += cell.size.outerWidth;
                this.maxCellHeight = Math.max(
                  cell.size.outerHeight,
                  this.maxCellHeight
                );
              }
              // keep track of cellX for wrap-around
              this.slideableWidth = cellX;
              // slides
              this.updateSlides();
              // contain slides target
              this._containSlides();
              // update slidesWidth
              this.slidesWidth = len
                ? this.getLastSlide().target - this.slides[0].target
                : 0;
            };

            /**
             * cell.getSize() on multiple cells
             * @param {Array} cells - cells to size
             */
            proto._sizeCells = function (cells) {
              cells.forEach(function (cell) {
                cell.getSize();
              });
            };

            // --------------------------  -------------------------- //

            proto.updateSlides = function () {
              this.slides = [];
              if (!this.cells.length) {
                return;
              }

              var slide = new Slide(this);
              this.slides.push(slide);
              var isOriginLeft = this.originSide == 'left';
              var nextMargin = isOriginLeft
                ? 'marginRight'
                : 'marginLeft';

              var canCellFit = this._getCanCellFit();

              this.cells.forEach(function (cell, i) {
                // just add cell if first cell in slide
                if (!slide.cells.length) {
                  slide.addCell(cell);
                  return;
                }

                var slideWidth =
                  slide.outerWidth -
                  slide.firstMargin +
                  (cell.size.outerWidth - cell.size[nextMargin]);

                if (canCellFit.call(this, i, slideWidth)) {
                  slide.addCell(cell);
                } else {
                  // doesn't fit, new slide
                  slide.updateTarget();

                  slide = new Slide(this);
                  this.slides.push(slide);
                  slide.addCell(cell);
                }
              }, this);
              // last slide
              slide.updateTarget();
              // update .selectedSlide
              this.updateSelectedSlide();
            };

            proto._getCanCellFit = function () {
              var groupCells = this.options.groupCells;
              if (!groupCells) {
                return function () {
                  return false;
                };
              } else if (typeof groupCells == 'number') {
                // group by number. 3 -> [0,1,2], [3,4,5], ...
                var number = parseInt(groupCells, 10);
                return function (i) {
                  return i % number !== 0;
                };
              }
              // default, group by width of slide
              // parse '75%
              var percentMatch =
                typeof groupCells == 'string' &&
                groupCells.match(/^(\d+)%$/);
              var percent = percentMatch
                ? parseInt(percentMatch[1], 10) / 100
                : 1;
              return function (i, slideWidth) {
                /* eslint-disable-next-line no-invalid-this */
                return (
                  slideWidth <= (this.size.innerWidth + 1) * percent
                );
              };
            };

            // alias _init for jQuery plugin .flickity()
            proto._init = proto.reposition = function () {
              this.positionCells();
              this.positionSliderAtSelected();
            };

            proto.getSize = function () {
              this.size = getSize(this.element);
              this.setCellAlign();
              this.cursorPosition =
                this.size.innerWidth * this.cellAlign;
            };

            var cellAlignShorthands = {
              // cell align, then based on origin side
              center: {
                left: 0.5,
                right: 0.5,
              },
              left: {
                left: 0,
                right: 1,
              },
              right: {
                right: 0,
                left: 1,
              },
            };

            proto.setCellAlign = function () {
              var shorthand =
                cellAlignShorthands[this.options.cellAlign];
              this.cellAlign = shorthand
                ? shorthand[this.originSide]
                : this.options.cellAlign;
            };

            proto.setGallerySize = function () {
              if (this.options.setGallerySize) {
                var height =
                  this.options.adaptiveHeight && this.selectedSlide
                    ? this.selectedSlide.height
                    : this.maxCellHeight;
                this.viewport.style.height = height + 'px';
              }
            };

            proto._getWrapShiftCells = function () {
              // only for wrap-around
              if (!this.options.wrapAround) {
                return;
              }
              // unshift previous cells
              this._unshiftCells(this.beforeShiftCells);
              this._unshiftCells(this.afterShiftCells);
              // get before cells
              // initial gap
              var gapX = this.cursorPosition;
              var cellIndex = this.cells.length - 1;
              this.beforeShiftCells = this._getGapCells(
                gapX,
                cellIndex,
                -1
              );
              // get after cells
              // ending gap between last cell and end of gallery viewport
              gapX = this.size.innerWidth - this.cursorPosition;
              // start cloning at first cell, working forwards
              this.afterShiftCells = this._getGapCells(gapX, 0, 1);
            };

            proto._getGapCells = function (
              gapX,
              cellIndex,
              increment
            ) {
              // keep adding cells until the cover the initial gap
              var cells = [];
              while (gapX > 0) {
                var cell = this.cells[cellIndex];
                if (!cell) {
                  break;
                }
                cells.push(cell);
                cellIndex += increment;
                gapX -= cell.size.outerWidth;
              }
              return cells;
            };

            // ----- contain ----- //

            // contain cell targets so no excess sliding
            proto._containSlides = function () {
              if (
                !this.options.contain ||
                this.options.wrapAround ||
                !this.cells.length
              ) {
                return;
              }
              var isRightToLeft = this.options.rightToLeft;
              var beginMargin = isRightToLeft
                ? 'marginRight'
                : 'marginLeft';
              var endMargin = isRightToLeft
                ? 'marginLeft'
                : 'marginRight';
              var contentWidth =
                this.slideableWidth -
                this.getLastCell().size[endMargin];
              // content is less than gallery size
              var isContentSmaller =
                contentWidth < this.size.innerWidth;
              // bounds
              var beginBound =
                this.cursorPosition + this.cells[0].size[beginMargin];
              var endBound =
                contentWidth -
                this.size.innerWidth * (1 - this.cellAlign);
              // contain each cell target
              this.slides.forEach(function (slide) {
                if (isContentSmaller) {
                  // all cells fit inside gallery
                  slide.target = contentWidth * this.cellAlign;
                } else {
                  // contain to bounds
                  slide.target = Math.max(slide.target, beginBound);
                  slide.target = Math.min(slide.target, endBound);
                }
              }, this);
            };

            // -----  ----- //

            /**
             * emits events via eventEmitter and jQuery events
             * @param {String} type - name of event
             * @param {Event} event - original event
             * @param {Array} args - extra arguments
             */
            proto.dispatchEvent = function (type, event, args) {
              var emitArgs = event ? [event].concat(args) : args;
              this.emitEvent(type, emitArgs);

              if (jQuery && this.$element) {
                // default trigger with type if no event
                type += this.options.namespaceJQueryEvents
                  ? '.flickity'
                  : '';
                var $event = type;
                if (event) {
                  // create jQuery event
                  var jQEvent = new jQuery.Event(event);
                  jQEvent.type = type;
                  $event = jQEvent;
                }
                this.$element.trigger($event, args);
              }
            };

            // -------------------------- select -------------------------- //

            /**
             * @param {Integer} index - index of the slide
             * @param {Boolean} isWrap - will wrap-around to last/first if at the end
             * @param {Boolean} isInstant - will immediately set position at selected cell
             */
            proto.select = function (index, isWrap, isInstant) {
              if (!this.isActive) {
                return;
              }
              index = parseInt(index, 10);
              this._wrapSelect(index);

              if (this.options.wrapAround || isWrap) {
                index = utils.modulo(index, this.slides.length);
              }
              // bail if invalid index
              if (!this.slides[index]) {
                return;
              }
              var prevIndex = this.selectedIndex;
              this.selectedIndex = index;
              this.updateSelectedSlide();
              if (isInstant) {
                this.positionSliderAtSelected();
              } else {
                this.startAnimation();
              }
              if (this.options.adaptiveHeight) {
                this.setGallerySize();
              }
              // events
              this.dispatchEvent('select', null, [index]);
              // change event if new index
              if (index != prevIndex) {
                this.dispatchEvent('change', null, [index]);
              }
              // old v1 event name, remove in v3
              this.dispatchEvent('cellSelect');
            };

            // wraps position for wrapAround, to move to closest slide. #113
            proto._wrapSelect = function (index) {
              var len = this.slides.length;
              var isWrapping = this.options.wrapAround && len > 1;
              if (!isWrapping) {
                return index;
              }
              var wrapIndex = utils.modulo(index, len);
              // go to shortest
              var delta = Math.abs(wrapIndex - this.selectedIndex);
              var backWrapDelta = Math.abs(
                wrapIndex + len - this.selectedIndex
              );
              var forewardWrapDelta = Math.abs(
                wrapIndex - len - this.selectedIndex
              );
              if (!this.isDragSelect && backWrapDelta < delta) {
                index += len;
              } else if (
                !this.isDragSelect &&
                forewardWrapDelta < delta
              ) {
                index -= len;
              }
              // wrap position so slider is within normal area
              if (index < 0) {
                this.x -= this.slideableWidth;
              } else if (index >= len) {
                this.x += this.slideableWidth;
              }
            };

            proto.previous = function (isWrap, isInstant) {
              this.select(this.selectedIndex - 1, isWrap, isInstant);
            };

            proto.next = function (isWrap, isInstant) {
              this.select(this.selectedIndex + 1, isWrap, isInstant);
            };

            proto.updateSelectedSlide = function () {
              var slide = this.slides[this.selectedIndex];
              // selectedIndex could be outside of slides, if triggered before resize()
              if (!slide) {
                return;
              }
              // unselect previous selected slide
              this.unselectSelectedSlide();
              // update new selected slide
              this.selectedSlide = slide;
              slide.select();
              this.selectedCells = slide.cells;
              this.selectedElements = slide.getCellElements();
              // HACK: selectedCell & selectedElement is first cell in slide, backwards compatibility
              // Remove in v3?
              this.selectedCell = slide.cells[0];
              this.selectedElement = this.selectedElements[0];
            };

            proto.unselectSelectedSlide = function () {
              if (this.selectedSlide) {
                this.selectedSlide.unselect();
              }
            };

            proto.selectInitialIndex = function () {
              var initialIndex = this.options.initialIndex;
              // already activated, select previous selectedIndex
              if (this.isInitActivated) {
                this.select(this.selectedIndex, false, true);
                return;
              }
              // select with selector string
              if (initialIndex && typeof initialIndex == 'string') {
                var cell = this.queryCell(initialIndex);
                if (cell) {
                  this.selectCell(initialIndex, false, true);
                  return;
                }
              }

              var index = 0;
              // select with number
              if (initialIndex && this.slides[initialIndex]) {
                index = initialIndex;
              }
              // select instantly
              this.select(index, false, true);
            };

            /**
             * select slide from number or cell element
             * @param {[Element, Number]} value - zero-based index or element to select
             * @param {Boolean} isWrap - enables wrapping around for extra index
             * @param {Boolean} isInstant - disables slide animation
             */
            proto.selectCell = function (value, isWrap, isInstant) {
              // get cell
              var cell = this.queryCell(value);
              if (!cell) {
                return;
              }

              var index = this.getCellSlideIndex(cell);
              this.select(index, isWrap, isInstant);
            };

            proto.getCellSlideIndex = function (cell) {
              // get index of slides that has cell
              for (var i = 0; i < this.slides.length; i++) {
                var slide = this.slides[i];
                var index = slide.cells.indexOf(cell);
                if (index != -1) {
                  return i;
                }
              }
            };

            // -------------------------- get cells -------------------------- //

            /**
             * get Flickity.Cell, given an Element
             * @param {Element} elem - matching cell element
             * @returns {Flickity.Cell} cell - matching cell
             */
            proto.getCell = function (elem) {
              // loop through cells to get the one that matches
              for (var i = 0; i < this.cells.length; i++) {
                var cell = this.cells[i];
                if (cell.element == elem) {
                  return cell;
                }
              }
            };

            /**
             * get collection of Flickity.Cells, given Elements
             * @param {[Element, Array, NodeList]} elems - multiple elements
             * @returns {Array} cells - Flickity.Cells
             */
            proto.getCells = function (elems) {
              elems = utils.makeArray(elems);
              var cells = [];
              elems.forEach(function (elem) {
                var cell = this.getCell(elem);
                if (cell) {
                  cells.push(cell);
                }
              }, this);
              return cells;
            };

            /**
             * get cell elements
             * @returns {Array} cellElems
             */
            proto.getCellElements = function () {
              return this.cells.map(function (cell) {
                return cell.element;
              });
            };

            /**
             * get parent cell from an element
             * @param {Element} elem - child element
             * @returns {Flickit.Cell} cell - parent cell
             */
            proto.getParentCell = function (elem) {
              // first check if elem is cell
              var cell = this.getCell(elem);
              if (cell) {
                return cell;
              }
              // try to get parent cell elem
              elem = utils.getParent(elem, '.flickity-slider > *');
              return this.getCell(elem);
            };

            /**
             * get cells adjacent to a slide
             * @param {Integer} adjCount - number of adjacent slides
             * @param {Integer} index - index of slide to start
             * @returns {Array} cells - array of Flickity.Cells
             */
            proto.getAdjacentCellElements = function (
              adjCount,
              index
            ) {
              if (!adjCount) {
                return this.selectedSlide.getCellElements();
              }
              index =
                index === undefined ? this.selectedIndex : index;

              var len = this.slides.length;
              if (1 + adjCount * 2 >= len) {
                return this.getCellElements();
              }

              var cellElems = [];
              for (
                var i = index - adjCount;
                i <= index + adjCount;
                i++
              ) {
                var slideIndex = this.options.wrapAround
                  ? utils.modulo(i, len)
                  : i;
                var slide = this.slides[slideIndex];
                if (slide) {
                  cellElems = cellElems.concat(
                    slide.getCellElements()
                  );
                }
              }
              return cellElems;
            };

            /**
             * select slide from number or cell element
             * @param {[Element, String, Number]} selector - element, selector string, or index
             * @returns {Flickity.Cell} - matching cell
             */
            proto.queryCell = function (selector) {
              if (typeof selector == 'number') {
                // use number as index
                return this.cells[selector];
              }
              if (typeof selector == 'string') {
                // do not select invalid selectors from hash: #123, #/. #791
                if (selector.match(/^[#.]?[\d/]/)) {
                  return;
                }
                // use string as selector, get element
                selector = this.element.querySelector(selector);
              }
              // get cell from element
              return this.getCell(selector);
            };

            // -------------------------- events -------------------------- //

            proto.uiChange = function () {
              this.emitEvent('uiChange');
            };

            // keep focus on element when child UI elements are clicked
            proto.childUIPointerDown = function (event) {
              // HACK iOS does not allow touch events to bubble up?!
              if (event.type != 'touchstart') {
                event.preventDefault();
              }
              this.focus();
            };

            // ----- resize ----- //

            proto.onresize = function () {
              this.watchCSS();
              this.resize();
            };

            utils.debounceMethod(Flickity, 'onresize', 150);

            proto.resize = function () {
              // #1177 disable resize behavior when animating or dragging for iOS 15
              if (
                !this.isActive ||
                this.isAnimating ||
                this.isDragging
              ) {
                return;
              }
              this.getSize();
              // wrap values
              if (this.options.wrapAround) {
                this.x = utils.modulo(this.x, this.slideableWidth);
              }
              this.positionCells();
              this._getWrapShiftCells();
              this.setGallerySize();
              this.emitEvent('resize');
              // update selected index for group slides, instant
              // TODO: position can be lost between groups of various numbers
              var selectedElement =
                this.selectedElements && this.selectedElements[0];
              this.selectCell(selectedElement, false, true);
            };

            // watches the :after property, activates/deactivates
            proto.watchCSS = function () {
              var watchOption = this.options.watchCSS;
              if (!watchOption) {
                return;
              }

              var afterContent = getComputedStyle(
                this.element,
                ':after'
              ).content;
              // activate if :after { content: 'flickity' }
              if (afterContent.indexOf('flickity') != -1) {
                this.activate();
              } else {
                this.deactivate();
              }
            };

            // ----- keydown ----- //

            // go previous/next if left/right keys pressed
            proto.onkeydown = function (event) {
              // only work if element is in focus
              var isNotFocused =
                document.activeElement &&
                document.activeElement != this.element;
              if (!this.options.accessibility || isNotFocused) {
                return;
              }

              var handler = Flickity.keyboardHandlers[event.keyCode];
              if (handler) {
                handler.call(this);
              }
            };

            Flickity.keyboardHandlers = {
              // left arrow
              37: function () {
                var leftMethod = this.options.rightToLeft
                  ? 'next'
                  : 'previous';
                this.uiChange();
                this[leftMethod]();
              },
              // right arrow
              39: function () {
                var rightMethod = this.options.rightToLeft
                  ? 'previous'
                  : 'next';
                this.uiChange();
                this[rightMethod]();
              },
            };

            // ----- focus ----- //

            proto.focus = function () {
              // TODO remove scrollTo once focus options gets more support
              // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus ...
              //    #Browser_compatibility
              var prevScrollY = window.pageYOffset;
              this.element.focus({
                preventScroll: true,
              });
              // hack to fix scroll jump after focus, #76
              if (window.pageYOffset != prevScrollY) {
                window.scrollTo(window.pageXOffset, prevScrollY);
              }
            };

            // -------------------------- destroy -------------------------- //

            // deactivate all Flickity functionality, but keep stuff available
            proto.deactivate = function () {
              if (!this.isActive) {
                return;
              }
              this.element.classList.remove('flickity-enabled');
              this.element.classList.remove('flickity-rtl');
              this.unselectSelectedSlide();
              // destroy cells
              this.cells.forEach(function (cell) {
                cell.destroy();
              });
              this.element.removeChild(this.viewport);
              // move child elements back into element
              moveElements(this.slider.children, this.element);
              if (this.options.accessibility) {
                this.element.removeAttribute('tabIndex');
                this.element.removeEventListener('keydown', this);
              }
              // set flags
              this.isActive = false;
              this.emitEvent('deactivate');
            };

            proto.destroy = function () {
              this.deactivate();
              window.removeEventListener('resize', this);
              this.allOff();
              this.emitEvent('destroy');
              if (jQuery && this.$element) {
                jQuery.removeData(this.element, 'flickity');
              }
              delete this.element.flickityGUID;
              delete instances[this.guid];
            };

            // -------------------------- prototype -------------------------- //

            utils.extend(proto, animatePrototype);

            // -------------------------- extras -------------------------- //

            /**
             * get Flickity instance from element
             * @param {[Element, String]} elem - element or selector string
             * @returns {Flickity} - Flickity instance
             */
            Flickity.data = function (elem) {
              elem = utils.getQueryElement(elem);
              var id = elem && elem.flickityGUID;
              return id && instances[id];
            };

            utils.htmlInit(Flickity, 'flickity');

            if (jQuery && jQuery.bridget) {
              jQuery.bridget('flickity', Flickity);
            }

            // set internal jQuery, for Webpack + jQuery v3, #478
            Flickity.setJQuery = function (jq) {
              jQuery = jq;
            };

            Flickity.Cell = Cell;
            Flickity.Slide = Slide;

            return Flickity;
          }
        );

        /***/
      },

    /***/
    /*!*******************************************!*\
  !*** ./node_modules/flickity/js/index.js ***!
  \*******************************************/
    './node_modules/flickity/js/index.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__,
          __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /*!
         * Flickity v2.3.0
         * Touch, responsive, flickable carousels
         *
         * Licensed GPLv3 for open source use
         * or Flickity Commercial License for commercial use
         *
         * https://flickity.metafizzy.co
         * Copyright 2015-2021 Metafizzy
         */

        (function (window, factory) {
          // universal module definition
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! ./flickity */
                './node_modules/flickity/js/flickity.js'
              ),
              __webpack_require__(
                /*! ./drag */
                './node_modules/flickity/js/drag.js'
              ),
              __webpack_require__(
                /*! ./prev-next-button */
                './node_modules/flickity/js/prev-next-button.js'
              ),
              __webpack_require__(
                /*! ./page-dots */
                './node_modules/flickity/js/page-dots.js'
              ),
              __webpack_require__(
                /*! ./player */
                './node_modules/flickity/js/player.js'
              ),
              __webpack_require__(
                /*! ./add-remove-cell */
                './node_modules/flickity/js/add-remove-cell.js'
              ),
              __webpack_require__(
                /*! ./lazyload */
                './node_modules/flickity/js/lazyload.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
            (__WEBPACK_AMD_DEFINE_RESULT__ =
              typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function'
                ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(
                    exports,
                    __WEBPACK_AMD_DEFINE_ARRAY__
                  )
                : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(Flickity) {
          return Flickity;
        });

        /***/
      },

    /***/
    /*!**********************************************!*\
  !*** ./node_modules/flickity/js/lazyload.js ***!
  \**********************************************/
    './node_modules/flickity/js/lazyload.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        // lazyload
        (function (window, factory) {
          // universal module definition
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! ./flickity */
                './node_modules/flickity/js/flickity.js'
              ),
              __webpack_require__(
                /*! fizzy-ui-utils/utils */
                './node_modules/fizzy-ui-utils/utils.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function (
              Flickity,
              utils
            ) {
              return factory(window, Flickity, utils);
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(window, Flickity, utils) {
          'use strict';

          Flickity.createMethods.push('_createLazyload');
          var proto = Flickity.prototype;

          proto._createLazyload = function () {
            this.on('select', this.lazyLoad);
          };

          proto.lazyLoad = function () {
            var lazyLoad = this.options.lazyLoad;
            if (!lazyLoad) {
              return;
            }
            // get adjacent cells, use lazyLoad option for adjacent count
            var adjCount = typeof lazyLoad == 'number' ? lazyLoad : 0;
            var cellElems = this.getAdjacentCellElements(adjCount);
            // get lazy images in those cells
            var lazyImages = [];
            cellElems.forEach(function (cellElem) {
              var lazyCellImages = getCellLazyImages(cellElem);
              lazyImages = lazyImages.concat(lazyCellImages);
            });
            // load lazy images
            lazyImages.forEach(function (img) {
              new LazyLoader(img, this);
            }, this);
          };

          function getCellLazyImages(cellElem) {
            // check if cell element is lazy image
            if (cellElem.nodeName == 'IMG') {
              var lazyloadAttr = cellElem.getAttribute(
                'data-flickity-lazyload'
              );
              var srcAttr = cellElem.getAttribute(
                'data-flickity-lazyload-src'
              );
              var srcsetAttr = cellElem.getAttribute(
                'data-flickity-lazyload-srcset'
              );
              if (lazyloadAttr || srcAttr || srcsetAttr) {
                return [cellElem];
              }
            }
            // select lazy images in cell
            var lazySelector =
              'img[data-flickity-lazyload], ' +
              'img[data-flickity-lazyload-src], img[data-flickity-lazyload-srcset]';
            var imgs = cellElem.querySelectorAll(lazySelector);
            return utils.makeArray(imgs);
          }

          // -------------------------- LazyLoader -------------------------- //

          /**
           * class to handle loading images
           * @param {Image} img - Image element
           * @param {Flickity} flickity - Flickity instance
           */
          function LazyLoader(img, flickity) {
            this.img = img;
            this.flickity = flickity;
            this.load();
          }

          LazyLoader.prototype.handleEvent = utils.handleEvent;

          LazyLoader.prototype.load = function () {
            this.img.addEventListener('load', this);
            this.img.addEventListener('error', this);
            // get src & srcset
            var src =
              this.img.getAttribute('data-flickity-lazyload') ||
              this.img.getAttribute('data-flickity-lazyload-src');
            var srcset = this.img.getAttribute(
              'data-flickity-lazyload-srcset'
            );
            // set src & serset
            this.img.src = src;
            if (srcset) {
              this.img.setAttribute('srcset', srcset);
            }
            // remove attr
            this.img.removeAttribute('data-flickity-lazyload');
            this.img.removeAttribute('data-flickity-lazyload-src');
            this.img.removeAttribute('data-flickity-lazyload-srcset');
          };

          LazyLoader.prototype.onload = function (event) {
            this.complete(event, 'flickity-lazyloaded');
          };

          LazyLoader.prototype.onerror = function (event) {
            this.complete(event, 'flickity-lazyerror');
          };

          LazyLoader.prototype.complete = function (
            event,
            className
          ) {
            // unbind events
            this.img.removeEventListener('load', this);
            this.img.removeEventListener('error', this);

            var cell = this.flickity.getParentCell(this.img);
            var cellElem = cell && cell.element;
            this.flickity.cellSizeChange(cellElem);

            this.img.classList.add(className);
            this.flickity.dispatchEvent('lazyLoad', event, cellElem);
          };

          // -----  ----- //

          Flickity.LazyLoader = LazyLoader;

          return Flickity;
        });

        /***/
      },

    /***/
    /*!***********************************************!*\
  !*** ./node_modules/flickity/js/page-dots.js ***!
  \***********************************************/
    './node_modules/flickity/js/page-dots.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        // page dots
        (function (window, factory) {
          // universal module definition
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! ./flickity */
                './node_modules/flickity/js/flickity.js'
              ),
              __webpack_require__(
                /*! unipointer/unipointer */
                './node_modules/unipointer/unipointer.js'
              ),
              __webpack_require__(
                /*! fizzy-ui-utils/utils */
                './node_modules/fizzy-ui-utils/utils.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function (
              Flickity,
              Unipointer,
              utils
            ) {
              return factory(window, Flickity, Unipointer, utils);
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(
          window,
          function factory(window, Flickity, Unipointer, utils) {
            // -------------------------- PageDots -------------------------- //

            'use strict';

            function PageDots(parent) {
              this.parent = parent;
              this._create();
            }

            PageDots.prototype = Object.create(Unipointer.prototype);

            PageDots.prototype._create = function () {
              // create holder element
              this.holder = document.createElement('ol');
              this.holder.className = 'flickity-page-dots';
              // create dots, array of elements
              this.dots = [];
              // events
              this.handleClick = this.onClick.bind(this);
              this.on(
                'pointerDown',
                this.parent.childUIPointerDown.bind(this.parent)
              );
            };

            PageDots.prototype.activate = function () {
              this.setDots();
              this.holder.addEventListener('click', this.handleClick);
              this.bindStartEvent(this.holder);
              // add to DOM
              this.parent.element.appendChild(this.holder);
            };

            PageDots.prototype.deactivate = function () {
              this.holder.removeEventListener(
                'click',
                this.handleClick
              );
              this.unbindStartEvent(this.holder);
              // remove from DOM
              this.parent.element.removeChild(this.holder);
            };

            PageDots.prototype.setDots = function () {
              // get difference between number of slides and number of dots
              var delta =
                this.parent.slides.length - this.dots.length;
              if (delta > 0) {
                this.addDots(delta);
              } else if (delta < 0) {
                this.removeDots(-delta);
              }
            };

            PageDots.prototype.addDots = function (count) {
              var fragment = document.createDocumentFragment();
              var newDots = [];
              var length = this.dots.length;
              var max = length + count;

              for (var i = length; i < max; i++) {
                var dot = document.createElement('li');
                dot.className = 'dot';
                dot.setAttribute('aria-label', 'Page dot ' + (i + 1));
                fragment.appendChild(dot);
                newDots.push(dot);
              }

              this.holder.appendChild(fragment);
              this.dots = this.dots.concat(newDots);
            };

            PageDots.prototype.removeDots = function (count) {
              // remove from this.dots collection
              var removeDots = this.dots.splice(
                this.dots.length - count,
                count
              );
              // remove from DOM
              removeDots.forEach(function (dot) {
                this.holder.removeChild(dot);
              }, this);
            };

            PageDots.prototype.updateSelected = function () {
              // remove selected class on previous
              if (this.selectedDot) {
                this.selectedDot.className = 'dot';
                this.selectedDot.removeAttribute('aria-current');
              }
              // don't proceed if no dots
              if (!this.dots.length) {
                return;
              }
              this.selectedDot = this.dots[this.parent.selectedIndex];
              this.selectedDot.className = 'dot is-selected';
              this.selectedDot.setAttribute('aria-current', 'step');
            };

            PageDots.prototype.onTap = // old method name, backwards-compatible
              PageDots.prototype.onClick = function (event) {
                var target = event.target;
                // only care about dot clicks
                if (target.nodeName != 'LI') {
                  return;
                }

                this.parent.uiChange();
                var index = this.dots.indexOf(target);
                this.parent.select(index);
              };

            PageDots.prototype.destroy = function () {
              this.deactivate();
              this.allOff();
            };

            Flickity.PageDots = PageDots;

            // -------------------------- Flickity -------------------------- //

            utils.extend(Flickity.defaults, {
              pageDots: true,
            });

            Flickity.createMethods.push('_createPageDots');

            var proto = Flickity.prototype;

            proto._createPageDots = function () {
              if (!this.options.pageDots) {
                return;
              }
              this.pageDots = new PageDots(this);
              // events
              this.on('activate', this.activatePageDots);
              this.on('select', this.updateSelectedPageDots);
              this.on('cellChange', this.updatePageDots);
              this.on('resize', this.updatePageDots);
              this.on('deactivate', this.deactivatePageDots);
            };

            proto.activatePageDots = function () {
              this.pageDots.activate();
            };

            proto.updateSelectedPageDots = function () {
              this.pageDots.updateSelected();
            };

            proto.updatePageDots = function () {
              this.pageDots.setDots();
            };

            proto.deactivatePageDots = function () {
              this.pageDots.deactivate();
            };

            // -----  ----- //

            Flickity.PageDots = PageDots;

            return Flickity;
          }
        );

        /***/
      },

    /***/
    /*!********************************************!*\
  !*** ./node_modules/flickity/js/player.js ***!
  \********************************************/
    './node_modules/flickity/js/player.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        // player & autoPlay
        (function (window, factory) {
          // universal module definition
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! ev-emitter/ev-emitter */
                './node_modules/ev-emitter/ev-emitter.js'
              ),
              __webpack_require__(
                /*! fizzy-ui-utils/utils */
                './node_modules/fizzy-ui-utils/utils.js'
              ),
              __webpack_require__(
                /*! ./flickity */
                './node_modules/flickity/js/flickity.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function (
              EvEmitter,
              utils,
              Flickity
            ) {
              return factory(EvEmitter, utils, Flickity);
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(EvEmitter, utils, Flickity) {
          'use strict';

          // -------------------------- Player -------------------------- //

          function Player(parent) {
            this.parent = parent;
            this.state = 'stopped';
            // visibility change event handler
            this.onVisibilityChange =
              this.visibilityChange.bind(this);
            this.onVisibilityPlay = this.visibilityPlay.bind(this);
          }

          Player.prototype = Object.create(EvEmitter.prototype);

          // start play
          Player.prototype.play = function () {
            if (this.state == 'playing') {
              return;
            }
            // do not play if page is hidden, start playing when page is visible
            var isPageHidden = document.hidden;
            if (isPageHidden) {
              document.addEventListener(
                'visibilitychange',
                this.onVisibilityPlay
              );
              return;
            }

            this.state = 'playing';
            // listen to visibility change
            document.addEventListener(
              'visibilitychange',
              this.onVisibilityChange
            );
            // start ticking
            this.tick();
          };

          Player.prototype.tick = function () {
            // do not tick if not playing
            if (this.state != 'playing') {
              return;
            }

            var time = this.parent.options.autoPlay;
            // default to 3 seconds
            time = typeof time == 'number' ? time : 3000;
            var _this = this;
            // HACK: reset ticks if stopped and started within interval
            this.clear();
            this.timeout = setTimeout(function () {
              _this.parent.next(true);
              _this.tick();
            }, time);
          };

          Player.prototype.stop = function () {
            this.state = 'stopped';
            this.clear();
            // remove visibility change event
            document.removeEventListener(
              'visibilitychange',
              this.onVisibilityChange
            );
          };

          Player.prototype.clear = function () {
            clearTimeout(this.timeout);
          };

          Player.prototype.pause = function () {
            if (this.state == 'playing') {
              this.state = 'paused';
              this.clear();
            }
          };

          Player.prototype.unpause = function () {
            // re-start play if paused
            if (this.state == 'paused') {
              this.play();
            }
          };

          // pause if page visibility is hidden, unpause if visible
          Player.prototype.visibilityChange = function () {
            var isPageHidden = document.hidden;
            this[isPageHidden ? 'pause' : 'unpause']();
          };

          Player.prototype.visibilityPlay = function () {
            this.play();
            document.removeEventListener(
              'visibilitychange',
              this.onVisibilityPlay
            );
          };

          // -------------------------- Flickity -------------------------- //

          utils.extend(Flickity.defaults, {
            pauseAutoPlayOnHover: true,
          });

          Flickity.createMethods.push('_createPlayer');
          var proto = Flickity.prototype;

          proto._createPlayer = function () {
            this.player = new Player(this);

            this.on('activate', this.activatePlayer);
            this.on('uiChange', this.stopPlayer);
            this.on('pointerDown', this.stopPlayer);
            this.on('deactivate', this.deactivatePlayer);
          };

          proto.activatePlayer = function () {
            if (!this.options.autoPlay) {
              return;
            }
            this.player.play();
            this.element.addEventListener('mouseenter', this);
          };

          // Player API, don't hate the ... thanks I know where the door is

          proto.playPlayer = function () {
            this.player.play();
          };

          proto.stopPlayer = function () {
            this.player.stop();
          };

          proto.pausePlayer = function () {
            this.player.pause();
          };

          proto.unpausePlayer = function () {
            this.player.unpause();
          };

          proto.deactivatePlayer = function () {
            this.player.stop();
            this.element.removeEventListener('mouseenter', this);
          };

          // ----- mouseenter/leave ----- //

          // pause auto-play on hover
          proto.onmouseenter = function () {
            if (!this.options.pauseAutoPlayOnHover) {
              return;
            }
            this.player.pause();
            this.element.addEventListener('mouseleave', this);
          };

          // resume auto-play on hover off
          proto.onmouseleave = function () {
            this.player.unpause();
            this.element.removeEventListener('mouseleave', this);
          };

          // -----  ----- //

          Flickity.Player = Player;

          return Flickity;
        });

        /***/
      },

    /***/
    /*!******************************************************!*\
  !*** ./node_modules/flickity/js/prev-next-button.js ***!
  \******************************************************/
    './node_modules/flickity/js/prev-next-button.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        // prev/next buttons
        (function (window, factory) {
          // universal module definition
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! ./flickity */
                './node_modules/flickity/js/flickity.js'
              ),
              __webpack_require__(
                /*! unipointer/unipointer */
                './node_modules/unipointer/unipointer.js'
              ),
              __webpack_require__(
                /*! fizzy-ui-utils/utils */
                './node_modules/fizzy-ui-utils/utils.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function (
              Flickity,
              Unipointer,
              utils
            ) {
              return factory(window, Flickity, Unipointer, utils);
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(
          window,
          function factory(window, Flickity, Unipointer, utils) {
            'use strict';

            var svgURI = 'http://www.w3.org/2000/svg';

            // -------------------------- PrevNextButton -------------------------- //

            function PrevNextButton(direction, parent) {
              this.direction = direction;
              this.parent = parent;
              this._create();
            }

            PrevNextButton.prototype = Object.create(
              Unipointer.prototype
            );

            PrevNextButton.prototype._create = function () {
              // properties
              this.isEnabled = true;
              this.isPrevious = this.direction == -1;
              var leftDirection = this.parent.options.rightToLeft
                ? 1
                : -1;
              this.isLeft = this.direction == leftDirection;

              var element = (this.element =
                document.createElement('button'));
              element.className =
                'flickity-button flickity-prev-next-button';
              element.className += this.isPrevious
                ? ' previous'
                : ' next';
              // prevent button from submitting form http://stackoverflow.com/a/10836076/182183
              element.setAttribute('type', 'button');
              // init as disabled
              this.disable();

              element.setAttribute(
                'aria-label',
                this.isPrevious ? 'Previous' : 'Next'
              );

              // create arrow
              var svg = this.createSVG();
              element.appendChild(svg);
              // events
              this.parent.on('select', this.update.bind(this));
              this.on(
                'pointerDown',
                this.parent.childUIPointerDown.bind(this.parent)
              );
            };

            PrevNextButton.prototype.activate = function () {
              this.bindStartEvent(this.element);
              this.element.addEventListener('click', this);
              // add to DOM
              this.parent.element.appendChild(this.element);
            };

            PrevNextButton.prototype.deactivate = function () {
              // remove from DOM
              this.parent.element.removeChild(this.element);
              // click events
              this.unbindStartEvent(this.element);
              this.element.removeEventListener('click', this);
            };

            PrevNextButton.prototype.createSVG = function () {
              var svg = document.createElementNS(svgURI, 'svg');
              svg.setAttribute('class', 'flickity-button-icon');
              svg.setAttribute('viewBox', '0 0 100 100');
              var path = document.createElementNS(svgURI, 'path');
              var pathMovements = getArrowMovements(
                this.parent.options.arrowShape
              );
              path.setAttribute('d', pathMovements);
              path.setAttribute('class', 'arrow');
              // rotate arrow
              if (!this.isLeft) {
                path.setAttribute(
                  'transform',
                  'translate(100, 100) rotate(180) '
                );
              }
              svg.appendChild(path);
              return svg;
            };

            // get SVG path movmement
            function getArrowMovements(shape) {
              // use shape as movement if string
              if (typeof shape == 'string') {
                return shape;
              }
              // create movement string
              return (
                'M ' +
                shape.x0 +
                ',50' +
                ' L ' +
                shape.x1 +
                ',' +
                (shape.y1 + 50) +
                ' L ' +
                shape.x2 +
                ',' +
                (shape.y2 + 50) +
                ' L ' +
                shape.x3 +
                ',50 ' +
                ' L ' +
                shape.x2 +
                ',' +
                (50 - shape.y2) +
                ' L ' +
                shape.x1 +
                ',' +
                (50 - shape.y1) +
                ' Z'
              );
            }

            PrevNextButton.prototype.handleEvent = utils.handleEvent;

            PrevNextButton.prototype.onclick = function () {
              if (!this.isEnabled) {
                return;
              }
              this.parent.uiChange();
              var method = this.isPrevious ? 'previous' : 'next';
              this.parent[method]();
            };

            // -----  ----- //

            PrevNextButton.prototype.enable = function () {
              if (this.isEnabled) {
                return;
              }
              this.element.disabled = false;
              this.isEnabled = true;
            };

            PrevNextButton.prototype.disable = function () {
              if (!this.isEnabled) {
                return;
              }
              this.element.disabled = true;
              this.isEnabled = false;
            };

            PrevNextButton.prototype.update = function () {
              // index of first or last slide, if previous or next
              var slides = this.parent.slides;
              // enable is wrapAround and at least 2 slides
              if (
                this.parent.options.wrapAround &&
                slides.length > 1
              ) {
                this.enable();
                return;
              }
              var lastIndex = slides.length ? slides.length - 1 : 0;
              var boundIndex = this.isPrevious ? 0 : lastIndex;
              var method =
                this.parent.selectedIndex == boundIndex
                  ? 'disable'
                  : 'enable';
              this[method]();
            };

            PrevNextButton.prototype.destroy = function () {
              this.deactivate();
              this.allOff();
            };

            // -------------------------- Flickity prototype -------------------------- //

            utils.extend(Flickity.defaults, {
              prevNextButtons: true,
              arrowShape: {
                x0: 10,
                x1: 60,
                y1: 50,
                x2: 70,
                y2: 40,
                x3: 30,
              },
            });

            Flickity.createMethods.push('_createPrevNextButtons');
            var proto = Flickity.prototype;

            proto._createPrevNextButtons = function () {
              if (!this.options.prevNextButtons) {
                return;
              }

              this.prevButton = new PrevNextButton(-1, this);
              this.nextButton = new PrevNextButton(1, this);

              this.on('activate', this.activatePrevNextButtons);
            };

            proto.activatePrevNextButtons = function () {
              this.prevButton.activate();
              this.nextButton.activate();
              this.on('deactivate', this.deactivatePrevNextButtons);
            };

            proto.deactivatePrevNextButtons = function () {
              this.prevButton.deactivate();
              this.nextButton.deactivate();
              this.off('deactivate', this.deactivatePrevNextButtons);
            };

            // --------------------------  -------------------------- //

            Flickity.PrevNextButton = PrevNextButton;

            return Flickity;
          }
        );

        /***/
      },

    /***/
    /*!*******************************************!*\
  !*** ./node_modules/flickity/js/slide.js ***!
  \*******************************************/
    './node_modules/flickity/js/slide.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        // slide
        (function (window, factory) {
          // universal module definition
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
            (__WEBPACK_AMD_DEFINE_RESULT__ =
              typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function'
                ? __WEBPACK_AMD_DEFINE_FACTORY__.call(
                    exports,
                    __webpack_require__,
                    exports,
                    module
                  )
                : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory() {
          'use strict';

          function Slide(parent) {
            this.parent = parent;
            this.isOriginLeft = parent.originSide == 'left';
            this.cells = [];
            this.outerWidth = 0;
            this.height = 0;
          }

          var proto = Slide.prototype;

          proto.addCell = function (cell) {
            this.cells.push(cell);
            this.outerWidth += cell.size.outerWidth;
            this.height = Math.max(
              cell.size.outerHeight,
              this.height
            );
            // first cell stuff
            if (this.cells.length == 1) {
              this.x = cell.x;
              // x comes from first cell
              var beginMargin = this.isOriginLeft
                ? 'marginLeft'
                : 'marginRight';
              this.firstMargin = cell.size[beginMargin];
            }
          };

          proto.updateTarget = function () {
            var endMargin = this.isOriginLeft
              ? 'marginRight'
              : 'marginLeft';
            var lastCell = this.getLastCell();
            var lastMargin = lastCell ? lastCell.size[endMargin] : 0;
            var slideWidth =
              this.outerWidth - (this.firstMargin + lastMargin);
            this.target =
              this.x +
              this.firstMargin +
              slideWidth * this.parent.cellAlign;
          };

          proto.getLastCell = function () {
            return this.cells[this.cells.length - 1];
          };

          proto.select = function () {
            this.cells.forEach(function (cell) {
              cell.select();
            });
          };

          proto.unselect = function () {
            this.cells.forEach(function (cell) {
              cell.unselect();
            });
          };

          proto.getCellElements = function () {
            return this.cells.map(function (cell) {
              return cell.element;
            });
          };

          return Slide;
        });

        /***/
      },

    /***/
    /*!*******************************************!*\
  !*** ./node_modules/get-size/get-size.js ***!
  \*******************************************/
    './node_modules/get-size/get-size.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /*!
         * getSize v2.0.3
         * measure size of elements
         * MIT license
         */

        /* jshint browser: true, strict: true, undef: true, unused: true */
        /* globals console: false */

        (function (window, factory) {
          /* jshint strict: false */
          /* globals define, module */
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
            (__WEBPACK_AMD_DEFINE_RESULT__ =
              typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function'
                ? __WEBPACK_AMD_DEFINE_FACTORY__.call(
                    exports,
                    __webpack_require__,
                    exports,
                    module
                  )
                : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory() {
          'use strict';

          // -------------------------- helpers -------------------------- //

          // get a number from a string, not a percentage
          function getStyleSize(value) {
            var num = parseFloat(value);
            // not a percent like '100%', and a number
            var isValid = value.indexOf('%') == -1 && !isNaN(num);
            return isValid && num;
          }

          function noop() {}

          var logError =
            typeof console == 'undefined'
              ? noop
              : function (message) {
                  console.error(message);
                };
          // -------------------------- measurements -------------------------- //

          var measurements = [
            'paddingLeft',
            'paddingRight',
            'paddingTop',
            'paddingBottom',
            'marginLeft',
            'marginRight',
            'marginTop',
            'marginBottom',
            'borderLeftWidth',
            'borderRightWidth',
            'borderTopWidth',
            'borderBottomWidth',
          ];

          var measurementsLength = measurements.length;

          function getZeroSize() {
            var size = {
              width: 0,
              height: 0,
              innerWidth: 0,
              innerHeight: 0,
              outerWidth: 0,
              outerHeight: 0,
            };
            for (var i = 0; i < measurementsLength; i++) {
              var measurement = measurements[i];
              size[measurement] = 0;
            }
            return size;
          }

          // -------------------------- getStyle -------------------------- //

          /**
           * getStyle, get style of element, check for Firefox bug
           * https://bugzilla.mozilla.org/show_bug.cgi?id=548397
           */
          function getStyle(elem) {
            var style = getComputedStyle(elem);
            if (!style) {
              logError(
                'Style returned ' +
                  style +
                  '. Are you running this code in a hidden iframe on Firefox? ' +
                  'See https://bit.ly/getsizebug1'
              );
            }
            return style;
          }

          // -------------------------- setup -------------------------- //

          var isSetup = false;

          var isBoxSizeOuter;

          /**
           * setup
           * check isBoxSizerOuter
           * do on first getSize() rather than on page load for Firefox bug
           */
          function setup() {
            // setup once
            if (isSetup) {
              return;
            }
            isSetup = true;

            // -------------------------- box sizing -------------------------- //

            /**
             * Chrome & Safari measure the outer-width on style.width on border-box elems
             * IE11 & Firefox<29 measures the inner-width
             */
            var div = document.createElement('div');
            div.style.width = '200px';
            div.style.padding = '1px 2px 3px 4px';
            div.style.borderStyle = 'solid';
            div.style.borderWidth = '1px 2px 3px 4px';
            div.style.boxSizing = 'border-box';

            var body = document.body || document.documentElement;
            body.appendChild(div);
            var style = getStyle(div);
            // round value for browser zoom. desandro/masonry#928
            isBoxSizeOuter =
              Math.round(getStyleSize(style.width)) == 200;
            getSize.isBoxSizeOuter = isBoxSizeOuter;

            body.removeChild(div);
          }

          // -------------------------- getSize -------------------------- //

          function getSize(elem) {
            setup();

            // use querySeletor if elem is string
            if (typeof elem == 'string') {
              elem = document.querySelector(elem);
            }

            // do not proceed on non-objects
            if (!elem || typeof elem != 'object' || !elem.nodeType) {
              return;
            }

            var style = getStyle(elem);

            // if hidden, everything is 0
            if (style.display == 'none') {
              return getZeroSize();
            }

            var size = {};
            size.width = elem.offsetWidth;
            size.height = elem.offsetHeight;

            var isBorderBox = (size.isBorderBox =
              style.boxSizing == 'border-box');

            // get all measurements
            for (var i = 0; i < measurementsLength; i++) {
              var measurement = measurements[i];
              var value = style[measurement];
              var num = parseFloat(value);
              // any 'auto', 'medium' value will be 0
              size[measurement] = !isNaN(num) ? num : 0;
            }

            var paddingWidth = size.paddingLeft + size.paddingRight;
            var paddingHeight = size.paddingTop + size.paddingBottom;
            var marginWidth = size.marginLeft + size.marginRight;
            var marginHeight = size.marginTop + size.marginBottom;
            var borderWidth =
              size.borderLeftWidth + size.borderRightWidth;
            var borderHeight =
              size.borderTopWidth + size.borderBottomWidth;

            var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;

            // overwrite width and height if we can get it from style
            var styleWidth = getStyleSize(style.width);
            if (styleWidth !== false) {
              size.width =
                styleWidth + // add padding and border unless it's already including it
                (isBorderBoxSizeOuter
                  ? 0
                  : paddingWidth + borderWidth);
            }

            var styleHeight = getStyleSize(style.height);
            if (styleHeight !== false) {
              size.height =
                styleHeight + // add padding and border unless it's already including it
                (isBorderBoxSizeOuter
                  ? 0
                  : paddingHeight + borderHeight);
            }

            size.innerWidth =
              size.width - (paddingWidth + borderWidth);
            size.innerHeight =
              size.height - (paddingHeight + borderHeight);

            size.outerWidth = size.width + marginWidth;
            size.outerHeight = size.height + marginHeight;

            return size;
          }

          return getSize;
        });

        /***/
      },

    /***/
    /*!***************************************************!*\
  !*** ./node_modules/imagesloaded/imagesloaded.js ***!
  \***************************************************/
    './node_modules/imagesloaded/imagesloaded.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /*!
         * imagesLoaded v4.1.4
         * JavaScript is all like "You images are done yet or what?"
         * MIT License
         */

        (function (window, factory) {
          'use strict';
          // universal module definition

          /*global define: false, module: false, require: false */

          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! ev-emitter/ev-emitter */
                './node_modules/ev-emitter/ev-emitter.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function (EvEmitter) {
              return factory(window, EvEmitter);
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(
          typeof window !== 'undefined' ? window : this,
          // --------------------------  factory -------------------------- //

          function factory(window, EvEmitter) {
            'use strict';

            var $ = window.jQuery;
            var console = window.console;

            // -------------------------- helpers -------------------------- //

            // extend objects
            function extend(a, b) {
              for (var prop in b) {
                a[prop] = b[prop];
              }
              return a;
            }

            var arraySlice = Array.prototype.slice;

            // turn element or nodeList into an array
            function makeArray(obj) {
              if (Array.isArray(obj)) {
                // use object if already an array
                return obj;
              }

              var isArrayLike =
                typeof obj == 'object' &&
                typeof obj.length == 'number';
              if (isArrayLike) {
                // convert nodeList to array
                return arraySlice.call(obj);
              }

              // array of single index
              return [obj];
            }

            // -------------------------- imagesLoaded -------------------------- //

            /**
             * @param {Array, Element, NodeList, String} elem
             * @param {Object or Function} options - if function, use as callback
             * @param {Function} onAlways - callback function
             */
            function ImagesLoaded(elem, options, onAlways) {
              // coerce ImagesLoaded() without new, to be new ImagesLoaded()
              if (!(this instanceof ImagesLoaded)) {
                return new ImagesLoaded(elem, options, onAlways);
              }
              // use elem as selector string
              var queryElem = elem;
              if (typeof elem == 'string') {
                queryElem = document.querySelectorAll(elem);
              }
              // bail if bad element
              if (!queryElem) {
                console.error(
                  'Bad element for imagesLoaded ' +
                    (queryElem || elem)
                );
                return;
              }

              this.elements = makeArray(queryElem);
              this.options = extend({}, this.options);
              // shift arguments if no options set
              if (typeof options == 'function') {
                onAlways = options;
              } else {
                extend(this.options, options);
              }

              if (onAlways) {
                this.on('always', onAlways);
              }

              this.getImages();

              if ($) {
                // add jQuery Deferred object
                this.jqDeferred = new $.Deferred();
              }

              // HACK check async to allow time to bind listeners
              setTimeout(this.check.bind(this));
            }

            ImagesLoaded.prototype = Object.create(
              EvEmitter.prototype
            );

            ImagesLoaded.prototype.options = {};

            ImagesLoaded.prototype.getImages = function () {
              this.images = [];

              // filter & find items if we have an item selector
              this.elements.forEach(this.addElementImages, this);
            };

            /**
             * @param {Node} element
             */
            ImagesLoaded.prototype.addElementImages = function (
              elem
            ) {
              // filter siblings
              if (elem.nodeName == 'IMG') {
                this.addImage(elem);
              }
              // get background image on element
              if (this.options.background === true) {
                this.addElementBackgroundImages(elem);
              }

              // find children
              // no non-element nodes, #143
              var nodeType = elem.nodeType;
              if (!nodeType || !elementNodeTypes[nodeType]) {
                return;
              }
              var childImgs = elem.querySelectorAll('img');
              // concat childElems to filterFound array
              for (var i = 0; i < childImgs.length; i++) {
                var img = childImgs[i];
                this.addImage(img);
              }

              // get child background images
              if (typeof this.options.background == 'string') {
                var children = elem.querySelectorAll(
                  this.options.background
                );
                for (i = 0; i < children.length; i++) {
                  var child = children[i];
                  this.addElementBackgroundImages(child);
                }
              }
            };

            var elementNodeTypes = {
              1: true,
              9: true,
              11: true,
            };

            ImagesLoaded.prototype.addElementBackgroundImages =
              function (elem) {
                var style = getComputedStyle(elem);
                if (!style) {
                  // Firefox returns null if in a hidden iframe https://bugzil.la/548397
                  return;
                }
                // get url inside url("...")
                var reURL = /url\((['"])?(.*?)\1\)/gi;
                var matches = reURL.exec(style.backgroundImage);
                while (matches !== null) {
                  var url = matches && matches[2];
                  if (url) {
                    this.addBackground(url, elem);
                  }
                  matches = reURL.exec(style.backgroundImage);
                }
              };

            /**
             * @param {Image} img
             */
            ImagesLoaded.prototype.addImage = function (img) {
              var loadingImage = new LoadingImage(img);
              this.images.push(loadingImage);
            };

            ImagesLoaded.prototype.addBackground = function (
              url,
              elem
            ) {
              var background = new Background(url, elem);
              this.images.push(background);
            };

            ImagesLoaded.prototype.check = function () {
              var _this = this;
              this.progressedCount = 0;
              this.hasAnyBroken = false;
              // complete if no images
              if (!this.images.length) {
                this.complete();
                return;
              }

              function onProgress(image, elem, message) {
                // HACK - Chrome triggers event before object properties have changed. #83
                setTimeout(function () {
                  _this.progress(image, elem, message);
                });
              }

              this.images.forEach(function (loadingImage) {
                loadingImage.once('progress', onProgress);
                loadingImage.check();
              });
            };

            ImagesLoaded.prototype.progress = function (
              image,
              elem,
              message
            ) {
              this.progressedCount++;
              this.hasAnyBroken =
                this.hasAnyBroken || !image.isLoaded;
              // progress event
              this.emitEvent('progress', [this, image, elem]);
              if (this.jqDeferred && this.jqDeferred.notify) {
                this.jqDeferred.notify(this, image);
              }
              // check if completed
              if (this.progressedCount == this.images.length) {
                this.complete();
              }

              if (this.options.debug && console) {
                console.log('progress: ' + message, image, elem);
              }
            };

            ImagesLoaded.prototype.complete = function () {
              var eventName = this.hasAnyBroken ? 'fail' : 'done';
              this.isComplete = true;
              this.emitEvent(eventName, [this]);
              this.emitEvent('always', [this]);
              if (this.jqDeferred) {
                var jqMethod = this.hasAnyBroken
                  ? 'reject'
                  : 'resolve';
                this.jqDeferred[jqMethod](this);
              }
            };

            // --------------------------  -------------------------- //

            function LoadingImage(img) {
              this.img = img;
            }

            LoadingImage.prototype = Object.create(
              EvEmitter.prototype
            );

            LoadingImage.prototype.check = function () {
              // If complete is true and browser supports natural sizes,
              // try to check for image status manually.
              var isComplete = this.getIsImageComplete();
              if (isComplete) {
                // report based on naturalWidth
                this.confirm(
                  this.img.naturalWidth !== 0,
                  'naturalWidth'
                );
                return;
              }

              // If none of the checks above matched, simulate loading on detached element.
              this.proxyImage = new Image();
              this.proxyImage.addEventListener('load', this);
              this.proxyImage.addEventListener('error', this);
              // bind to image as well for Firefox. #191
              this.img.addEventListener('load', this);
              this.img.addEventListener('error', this);
              this.proxyImage.src = this.img.src;
            };

            LoadingImage.prototype.getIsImageComplete = function () {
              // check for non-zero, non-undefined naturalWidth
              // fixes Safari+InfiniteScroll+Masonry bug infinite-scroll#671
              return this.img.complete && this.img.naturalWidth;
            };

            LoadingImage.prototype.confirm = function (
              isLoaded,
              message
            ) {
              this.isLoaded = isLoaded;
              this.emitEvent('progress', [this, this.img, message]);
            };

            // ----- events ----- //

            // trigger specified handler for event type
            LoadingImage.prototype.handleEvent = function (event) {
              var method = 'on' + event.type;
              if (this[method]) {
                this[method](event);
              }
            };

            LoadingImage.prototype.onload = function () {
              this.confirm(true, 'onload');
              this.unbindEvents();
            };

            LoadingImage.prototype.onerror = function () {
              this.confirm(false, 'onerror');
              this.unbindEvents();
            };

            LoadingImage.prototype.unbindEvents = function () {
              this.proxyImage.removeEventListener('load', this);
              this.proxyImage.removeEventListener('error', this);
              this.img.removeEventListener('load', this);
              this.img.removeEventListener('error', this);
            };

            // -------------------------- Background -------------------------- //

            function Background(url, element) {
              this.url = url;
              this.element = element;
              this.img = new Image();
            }

            // inherit LoadingImage prototype
            Background.prototype = Object.create(
              LoadingImage.prototype
            );

            Background.prototype.check = function () {
              this.img.addEventListener('load', this);
              this.img.addEventListener('error', this);
              this.img.src = this.url;
              // check if image is already complete
              var isComplete = this.getIsImageComplete();
              if (isComplete) {
                this.confirm(
                  this.img.naturalWidth !== 0,
                  'naturalWidth'
                );
                this.unbindEvents();
              }
            };

            Background.prototype.unbindEvents = function () {
              this.img.removeEventListener('load', this);
              this.img.removeEventListener('error', this);
            };

            Background.prototype.confirm = function (
              isLoaded,
              message
            ) {
              this.isLoaded = isLoaded;
              this.emitEvent('progress', [
                this,
                this.element,
                message,
              ]);
            };

            // -------------------------- jQuery -------------------------- //

            ImagesLoaded.makeJQueryPlugin = function (jQuery) {
              jQuery = jQuery || window.jQuery;
              if (!jQuery) {
                return;
              }
              // set local variable
              $ = jQuery;
              // $().imagesLoaded()
              $.fn.imagesLoaded = function (options, callback) {
                var instance = new ImagesLoaded(
                  this,
                  options,
                  callback
                );
                return instance.jqDeferred.promise($(this));
              };
            };
            // try making plugin
            ImagesLoaded.makeJQueryPlugin();

            // --------------------------  -------------------------- //

            return ImagesLoaded;
          }
        );

        /***/
      },

    /***/
    /*!*******************************************************!*\
  !*** ./node_modules/isotope-horizontal/horizontal.js ***!
  \*******************************************************/
    './node_modules/isotope-horizontal/horizontal.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__,
          __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /*!
         * horizontal layout mode for Isotope
         * v2.0.1
         * https://isotope.metafizzy.co/layout-modes/horiz.html
         */

        (function (window, factory) {
          // universal module definition
          /* jshint strict: false */
          /*globals define, module, require */
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! isotope-layout/js/layout-mode */
                './node_modules/isotope-layout/js/layout-mode.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
            (__WEBPACK_AMD_DEFINE_RESULT__ =
              typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function'
                ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(
                    exports,
                    __WEBPACK_AMD_DEFINE_ARRAY__
                  )
                : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(LayoutMode) {
          'use strict';

          var Horiz = LayoutMode.create('horiz', {
            verticalAlignment: 0,
          });

          var proto = Horiz.prototype;

          proto._resetLayout = function () {
            this.x = 0;
          };

          proto._getItemLayoutPosition = function (item) {
            item.getSize();
            var y =
              (this.isotope.size.innerHeight -
                item.size.outerHeight) *
              this.options.verticalAlignment;
            var x = this.x;
            this.x += item.size.outerWidth;
            return {
              x: x,
              y: y,
            };
          };

          proto._getContainerSize = function () {
            return {
              width: this.x,
            };
          };

          proto.needsResizeLayout = function () {
            return this.needsVerticalResizeLayout();
          };

          return Horiz;
        });

        /***/
      },

    /***/
    /*!***************************************************!*\
  !*** ./node_modules/isotope-layout/js/isotope.js ***!
  \***************************************************/
    './node_modules/isotope-layout/js/isotope.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /*!
         * Isotope v3.0.6
         *
         * Licensed GPLv3 for open source use
         * or Isotope Commercial License for commercial use
         *
         * https://isotope.metafizzy.co
         * Copyright 2010-2018 Metafizzy
         */

        (function (window, factory) {
          // universal module definition
          /* jshint strict: false */
          /*globals define, module, require */
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! outlayer/outlayer */
                './node_modules/outlayer/outlayer.js'
              ),
              __webpack_require__(
                /*! get-size/get-size */
                './node_modules/get-size/get-size.js'
              ),
              __webpack_require__(
                /*! desandro-matches-selector/matches-selector */
                './node_modules/desandro-matches-selector/matches-selector.js'
              ),
              __webpack_require__(
                /*! fizzy-ui-utils/utils */
                './node_modules/fizzy-ui-utils/utils.js'
              ),
              __webpack_require__(
                /*! ./item */
                './node_modules/isotope-layout/js/item.js'
              ),
              __webpack_require__(
                /*! ./layout-mode */
                './node_modules/isotope-layout/js/layout-mode.js'
              ), // include default layout modes
              __webpack_require__(
                /*! ./layout-modes/masonry */
                './node_modules/isotope-layout/js/layout-modes/masonry.js'
              ),
              __webpack_require__(
                /*! ./layout-modes/fit-rows */
                './node_modules/isotope-layout/js/layout-modes/fit-rows.js'
              ),
              __webpack_require__(
                /*! ./layout-modes/vertical */
                './node_modules/isotope-layout/js/layout-modes/vertical.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function (
              Outlayer,
              getSize,
              matchesSelector,
              utils,
              Item,
              LayoutMode
            ) {
              return factory(
                window,
                Outlayer,
                getSize,
                matchesSelector,
                utils,
                Item,
                LayoutMode
              );
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(
          window,
          function factory(
            window,
            Outlayer,
            getSize,
            matchesSelector,
            utils,
            Item,
            LayoutMode
          ) {
            'use strict';

            // -------------------------- vars -------------------------- //

            var jQuery = window.jQuery;

            // -------------------------- helpers -------------------------- //

            var trim = String.prototype.trim
              ? function (str) {
                  return str.trim();
                }
              : function (str) {
                  return str.replace(/^\s+|\s+$/g, '');
                };
            // -------------------------- isotopeDefinition -------------------------- //

            // create an Outlayer layout class
            var Isotope = Outlayer.create('isotope', {
              layoutMode: 'masonry',
              isJQueryFiltering: true,
              sortAscending: true,
            });

            Isotope.Item = Item;
            Isotope.LayoutMode = LayoutMode;

            var proto = Isotope.prototype;

            proto._create = function () {
              this.itemGUID = 0;
              // functions that sort items
              this._sorters = {};
              this._getSorters();
              // call super
              Outlayer.prototype._create.call(this);

              // create layout modes
              this.modes = {};
              // start filteredItems with all items
              this.filteredItems = this.items;
              // keep of track of sortBys
              this.sortHistory = ['original-order'];
              // create from registered layout modes
              for (var name in LayoutMode.modes) {
                this._initLayoutMode(name);
              }
            };

            proto.reloadItems = function () {
              // reset item ID counter
              this.itemGUID = 0;
              // call super
              Outlayer.prototype.reloadItems.call(this);
            };

            proto._itemize = function () {
              var items = Outlayer.prototype._itemize.apply(
                this,
                arguments
              );
              // assign ID for original-order
              for (var i = 0; i < items.length; i++) {
                var item = items[i];
                item.id = this.itemGUID++;
              }
              this._updateItemsSortData(items);
              return items;
            };

            // -------------------------- layout -------------------------- //

            proto._initLayoutMode = function (name) {
              var Mode = LayoutMode.modes[name];
              // set mode options
              // HACK extend initial options, back-fill in default options
              var initialOpts = this.options[name] || {};
              this.options[name] = Mode.options
                ? utils.extend(Mode.options, initialOpts)
                : initialOpts;
              // init layout mode instance
              this.modes[name] = new Mode(this);
            };

            proto.layout = function () {
              // if first time doing layout, do all magic
              if (
                !this._isLayoutInited &&
                this._getOption('initLayout')
              ) {
                this.arrange();
                return;
              }
              this._layout();
            };

            // private method to be used in layout() & magic()
            proto._layout = function () {
              // don't animate first layout
              var isInstant = this._getIsInstant();
              // layout flow
              this._resetLayout();
              this._manageStamps();
              this.layoutItems(this.filteredItems, isInstant);

              // flag for initalized
              this._isLayoutInited = true;
            };

            // filter + sort + layout
            proto.arrange = function (opts) {
              // set any options pass
              this.option(opts);
              this._getIsInstant();
              // filter, sort, and layout

              // filter
              var filtered = this._filter(this.items);
              this.filteredItems = filtered.matches;

              this._bindArrangeComplete();

              if (this._isInstant) {
                this._noTransition(this._hideReveal, [filtered]);
              } else {
                this._hideReveal(filtered);
              }

              this._sort();
              this._layout();
            };
            // alias to _init for main plugin method
            proto._init = proto.arrange;

            proto._hideReveal = function (filtered) {
              this.reveal(filtered.needReveal);
              this.hide(filtered.needHide);
            };

            // HACK
            // Don't animate/transition first layout
            // Or don't animate/transition other layouts
            proto._getIsInstant = function () {
              var isLayoutInstant = this._getOption('layoutInstant');
              var isInstant =
                isLayoutInstant !== undefined
                  ? isLayoutInstant
                  : !this._isLayoutInited;
              this._isInstant = isInstant;
              return isInstant;
            };

            // listen for layoutComplete, hideComplete and revealComplete
            // to trigger arrangeComplete
            proto._bindArrangeComplete = function () {
              // listen for 3 events to trigger arrangeComplete
              var isLayoutComplete, isHideComplete, isRevealComplete;
              var _this = this;
              function arrangeParallelCallback() {
                if (
                  isLayoutComplete &&
                  isHideComplete &&
                  isRevealComplete
                ) {
                  _this.dispatchEvent('arrangeComplete', null, [
                    _this.filteredItems,
                  ]);
                }
              }
              this.once('layoutComplete', function () {
                isLayoutComplete = true;
                arrangeParallelCallback();
              });
              this.once('hideComplete', function () {
                isHideComplete = true;
                arrangeParallelCallback();
              });
              this.once('revealComplete', function () {
                isRevealComplete = true;
                arrangeParallelCallback();
              });
            };

            // -------------------------- filter -------------------------- //

            proto._filter = function (items) {
              var filter = this.options.filter;
              filter = filter || '*';
              var matches = [];
              var hiddenMatched = [];
              var visibleUnmatched = [];

              var test = this._getFilterTest(filter);

              // test each item
              for (var i = 0; i < items.length; i++) {
                var item = items[i];
                if (item.isIgnored) {
                  continue;
                }
                // add item to either matched or unmatched group
                var isMatched = test(item);
                // item.isFilterMatched = isMatched;
                // add to matches if its a match
                if (isMatched) {
                  matches.push(item);
                }
                // add to additional group if item needs to be hidden or revealed
                if (isMatched && item.isHidden) {
                  hiddenMatched.push(item);
                } else if (!isMatched && !item.isHidden) {
                  visibleUnmatched.push(item);
                }
              }

              // return collections of items to be manipulated
              return {
                matches: matches,
                needReveal: hiddenMatched,
                needHide: visibleUnmatched,
              };
            };

            // get a jQuery, function, or a matchesSelector test given the filter
            proto._getFilterTest = function (filter) {
              if (jQuery && this.options.isJQueryFiltering) {
                // use jQuery
                return function (item) {
                  return jQuery(item.element).is(filter);
                };
              }
              if (typeof filter == 'function') {
                // use filter as function
                return function (item) {
                  return filter(item.element);
                };
              }
              // default, use filter as selector string
              return function (item) {
                return matchesSelector(item.element, filter);
              };
            };

            // -------------------------- sorting -------------------------- //

            /**
             * @params {Array} elems
             * @public
             */
            proto.updateSortData = function (elems) {
              // get items
              var items;
              if (elems) {
                elems = utils.makeArray(elems);
                items = this.getItems(elems);
              } else {
                // update all items if no elems provided
                items = this.items;
              }

              this._getSorters();
              this._updateItemsSortData(items);
            };

            proto._getSorters = function () {
              var getSortData = this.options.getSortData;
              for (var key in getSortData) {
                var sorter = getSortData[key];
                this._sorters[key] = mungeSorter(sorter);
              }
            };

            /**
             * @params {Array} items - of Isotope.Items
             * @private
             */
            proto._updateItemsSortData = function (items) {
              // do not update if no items
              var len = items && items.length;

              for (var i = 0; len && i < len; i++) {
                var item = items[i];
                item.updateSortData();
              }
            };

            // ----- munge sorter ----- //

            // encapsulate this, as we just need mungeSorter
            // other functions in here are just for munging
            var mungeSorter = (function () {
              // add a magic layer to sorters for convienent shorthands
              // `.foo-bar` will use the text of .foo-bar querySelector
              // `[foo-bar]` will use attribute
              // you can also add parser
              // `.foo-bar parseInt` will parse that as a number
              function mungeSorter(sorter) {
                // if not a string, return function or whatever it is
                if (typeof sorter != 'string') {
                  return sorter;
                }
                // parse the sorter string
                var args = trim(sorter).split(' ');
                var query = args[0];
                // check if query looks like [an-attribute]
                var attrMatch = query.match(/^\[(.+)\]$/);
                var attr = attrMatch && attrMatch[1];
                var getValue = getValueGetter(attr, query);
                // use second argument as a parser
                var parser = Isotope.sortDataParsers[args[1]];
                // parse the value, if there was a parser
                sorter = parser
                  ? function (elem) {
                      return elem && parser(getValue(elem));
                    }
                  : // otherwise just return value
                    function (elem) {
                      return elem && getValue(elem);
                    };

                return sorter;
              }

              // get an attribute getter, or get text of the querySelector
              function getValueGetter(attr, query) {
                // if query looks like [foo-bar], get attribute
                if (attr) {
                  return function getAttribute(elem) {
                    return elem.getAttribute(attr);
                  };
                }

                // otherwise, assume its a querySelector, and get its text
                return function getChildText(elem) {
                  var child = elem.querySelector(query);
                  return child && child.textContent;
                };
              }

              return mungeSorter;
            })();

            // parsers used in getSortData shortcut strings
            Isotope.sortDataParsers = {
              parseInt: function (val) {
                return parseInt(val, 10);
              },
              parseFloat: function (val) {
                return parseFloat(val);
              },
            };

            // ----- sort method ----- //

            // sort filteredItem order
            proto._sort = function () {
              if (!this.options.sortBy) {
                return;
              }
              // keep track of sortBy History
              var sortBys = utils.makeArray(this.options.sortBy);
              if (!this._getIsSameSortBy(sortBys)) {
                // concat all sortBy and sortHistory, add to front, oldest goes in last
                this.sortHistory = sortBys.concat(this.sortHistory);
              }
              // sort magic
              var itemSorter = getItemSorter(
                this.sortHistory,
                this.options.sortAscending
              );
              this.filteredItems.sort(itemSorter);
            };

            // check if sortBys is same as start of sortHistory
            proto._getIsSameSortBy = function (sortBys) {
              for (var i = 0; i < sortBys.length; i++) {
                if (sortBys[i] != this.sortHistory[i]) {
                  return false;
                }
              }
              return true;
            };

            // returns a function used for sorting
            function getItemSorter(sortBys, sortAsc) {
              return function sorter(itemA, itemB) {
                // cycle through all sortKeys
                for (var i = 0; i < sortBys.length; i++) {
                  var sortBy = sortBys[i];
                  var a = itemA.sortData[sortBy];
                  var b = itemB.sortData[sortBy];
                  if (a > b || a < b) {
                    // if sortAsc is an object, use the value given the sortBy key
                    var isAscending =
                      sortAsc[sortBy] !== undefined
                        ? sortAsc[sortBy]
                        : sortAsc;
                    var direction = isAscending ? 1 : -1;
                    return (a > b ? 1 : -1) * direction;
                  }
                }
                return 0;
              };
            }

            // -------------------------- methods -------------------------- //

            // get layout mode
            proto._mode = function () {
              var layoutMode = this.options.layoutMode;
              var mode = this.modes[layoutMode];
              if (!mode) {
                // TODO console.error
                throw new Error('No layout mode: ' + layoutMode);
              }
              // HACK sync mode's options
              // any options set after init for layout mode need to be synced
              mode.options = this.options[layoutMode];
              return mode;
            };

            proto._resetLayout = function () {
              // trigger original reset layout
              Outlayer.prototype._resetLayout.call(this);
              this._mode()._resetLayout();
            };

            proto._getItemLayoutPosition = function (item) {
              return this._mode()._getItemLayoutPosition(item);
            };

            proto._manageStamp = function (stamp) {
              this._mode()._manageStamp(stamp);
            };

            proto._getContainerSize = function () {
              return this._mode()._getContainerSize();
            };

            proto.needsResizeLayout = function () {
              return this._mode().needsResizeLayout();
            };

            // -------------------------- adding & removing -------------------------- //

            // HEADS UP overwrites default Outlayer appended
            proto.appended = function (elems) {
              var items = this.addItems(elems);
              if (!items.length) {
                return;
              }
              // filter, layout, reveal new items
              var filteredItems = this._filterRevealAdded(items);
              // add to filteredItems
              this.filteredItems =
                this.filteredItems.concat(filteredItems);
            };

            // HEADS UP overwrites default Outlayer prepended
            proto.prepended = function (elems) {
              var items = this._itemize(elems);
              if (!items.length) {
                return;
              }
              // start new layout
              this._resetLayout();
              this._manageStamps();
              // filter, layout, reveal new items
              var filteredItems = this._filterRevealAdded(items);
              // layout previous items
              this.layoutItems(this.filteredItems);
              // add to items and filteredItems
              this.filteredItems = filteredItems.concat(
                this.filteredItems
              );
              this.items = items.concat(this.items);
            };

            proto._filterRevealAdded = function (items) {
              var filtered = this._filter(items);
              this.hide(filtered.needHide);
              // reveal all new items
              this.reveal(filtered.matches);
              // layout new items, no transition
              this.layoutItems(filtered.matches, true);
              return filtered.matches;
            };

            /**
             * Filter, sort, and layout newly-appended item elements
             * @param {Array or NodeList or Element} elems
             */
            proto.insert = function (elems) {
              var items = this.addItems(elems);
              if (!items.length) {
                return;
              }
              // append item elements
              var i, item;
              var len = items.length;
              for (i = 0; i < len; i++) {
                item = items[i];
                this.element.appendChild(item.element);
              }
              // filter new stuff
              var filteredInsertItems = this._filter(items).matches;
              // set flag
              for (i = 0; i < len; i++) {
                items[i].isLayoutInstant = true;
              }
              this.arrange();
              // reset flag
              for (i = 0; i < len; i++) {
                delete items[i].isLayoutInstant;
              }
              this.reveal(filteredInsertItems);
            };

            var _remove = proto.remove;
            proto.remove = function (elems) {
              elems = utils.makeArray(elems);
              var removeItems = this.getItems(elems);
              // do regular thing
              _remove.call(this, elems);
              // bail if no items to remove
              var len = removeItems && removeItems.length;
              // remove elems from filteredItems
              for (var i = 0; len && i < len; i++) {
                var item = removeItems[i];
                // remove item from collection
                utils.removeFrom(this.filteredItems, item);
              }
            };

            proto.shuffle = function () {
              // update random sortData
              for (var i = 0; i < this.items.length; i++) {
                var item = this.items[i];
                item.sortData.random = Math.random();
              }
              this.options.sortBy = 'random';
              this._sort();
              this._layout();
            };

            /**
             * trigger fn without transition
             * kind of hacky to have this in the first place
             * @param {Function} fn
             * @param {Array} args
             * @returns ret
             * @private
             */
            proto._noTransition = function (fn, args) {
              // save transitionDuration before disabling
              var transitionDuration =
                this.options.transitionDuration;
              // disable transition
              this.options.transitionDuration = 0;
              // do it
              var returnValue = fn.apply(this, args);
              // re-enable transition for reveal
              this.options.transitionDuration = transitionDuration;
              return returnValue;
            };

            // ----- helper methods ----- //

            /**
             * getter method for getting filtered item elements
             * @returns {Array} elems - collection of item elements
             */
            proto.getFilteredItemElements = function () {
              return this.filteredItems.map(function (item) {
                return item.element;
              });
            };

            // -----  ----- //

            return Isotope;
          }
        );

        /***/
      },

    /***/
    /*!************************************************!*\
  !*** ./node_modules/isotope-layout/js/item.js ***!
  \************************************************/
    './node_modules/isotope-layout/js/item.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__,
          __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /**
         * Isotope Item
         **/

        (function (window, factory) {
          // universal module definition
          /* jshint strict: false */
          /*globals define, module, require */
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! outlayer/outlayer */
                './node_modules/outlayer/outlayer.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
            (__WEBPACK_AMD_DEFINE_RESULT__ =
              typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function'
                ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(
                    exports,
                    __WEBPACK_AMD_DEFINE_ARRAY__
                  )
                : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(Outlayer) {
          'use strict';

          // -------------------------- Item -------------------------- //

          // sub-class Outlayer Item
          function Item() {
            Outlayer.Item.apply(this, arguments);
          }

          var proto = (Item.prototype = Object.create(
            Outlayer.Item.prototype
          ));

          var _create = proto._create;
          proto._create = function () {
            // assign id, used for original-order sorting
            this.id = this.layout.itemGUID++;
            _create.call(this);
            this.sortData = {};
          };

          proto.updateSortData = function () {
            if (this.isIgnored) {
              return;
            }
            // default sorters
            this.sortData.id = this.id;
            // for backward compatibility
            this.sortData['original-order'] = this.id;
            this.sortData.random = Math.random();
            // go thru getSortData obj and apply the sorters
            var getSortData = this.layout.options.getSortData;
            var sorters = this.layout._sorters;
            for (var key in getSortData) {
              var sorter = sorters[key];
              this.sortData[key] = sorter(this.element, this);
            }
          };

          var _destroy = proto.destroy;
          proto.destroy = function () {
            // call super
            _destroy.apply(this, arguments);
            // reset display, #741
            this.css({
              display: '',
            });
          };

          return Item;
        });

        /***/
      },

    /***/
    /*!*******************************************************!*\
  !*** ./node_modules/isotope-layout/js/layout-mode.js ***!
  \*******************************************************/
    './node_modules/isotope-layout/js/layout-mode.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__,
          __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /**
         * Isotope LayoutMode
         */

        (function (window, factory) {
          // universal module definition
          /* jshint strict: false */
          /*globals define, module, require */
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! get-size/get-size */
                './node_modules/get-size/get-size.js'
              ),
              __webpack_require__(
                /*! outlayer/outlayer */
                './node_modules/outlayer/outlayer.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
            (__WEBPACK_AMD_DEFINE_RESULT__ =
              typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function'
                ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(
                    exports,
                    __WEBPACK_AMD_DEFINE_ARRAY__
                  )
                : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(getSize, Outlayer) {
          'use strict';

          // layout mode class
          function LayoutMode(isotope) {
            this.isotope = isotope;
            // link properties
            if (isotope) {
              this.options = isotope.options[this.namespace];
              this.element = isotope.element;
              this.items = isotope.filteredItems;
              this.size = isotope.size;
            }
          }

          var proto = LayoutMode.prototype;

          /**
           * some methods should just defer to default Outlayer method
           * and reference the Isotope instance as `this`
           **/
          var facadeMethods = [
            '_resetLayout',
            '_getItemLayoutPosition',
            '_manageStamp',
            '_getContainerSize',
            '_getElementOffset',
            'needsResizeLayout',
            '_getOption',
          ];

          facadeMethods.forEach(function (methodName) {
            proto[methodName] = function () {
              return Outlayer.prototype[methodName].apply(
                this.isotope,
                arguments
              );
            };
          });

          // -----  ----- //

          // for horizontal layout modes, check vertical size
          proto.needsVerticalResizeLayout = function () {
            // don't trigger if size did not change
            var size = getSize(this.isotope.element);
            // check that this.size and size are there
            // IE8 triggers resize on body size change, so they might not be
            var hasSizes = this.isotope.size && size;
            return (
              hasSizes &&
              size.innerHeight != this.isotope.size.innerHeight
            );
          };

          // ----- measurements ----- //

          proto._getMeasurement = function () {
            this.isotope._getMeasurement.apply(this, arguments);
          };

          proto.getColumnWidth = function () {
            this.getSegmentSize('column', 'Width');
          };

          proto.getRowHeight = function () {
            this.getSegmentSize('row', 'Height');
          };

          /**
           * get columnWidth or rowHeight
           * segment: 'column' or 'row'
           * size 'Width' or 'Height'
           **/
          proto.getSegmentSize = function (segment, size) {
            var segmentName = segment + size;
            var outerSize = 'outer' + size;
            // columnWidth / outerWidth // rowHeight / outerHeight
            this._getMeasurement(segmentName, outerSize);
            // got rowHeight or columnWidth, we can chill
            if (this[segmentName]) {
              return;
            }
            // fall back to item of first element
            var firstItemSize = this.getFirstItemSize();
            this[segmentName] =
              (firstItemSize && firstItemSize[outerSize]) || // or size of container
              this.isotope.size['inner' + size];
          };

          proto.getFirstItemSize = function () {
            var firstItem = this.isotope.filteredItems[0];
            return (
              firstItem &&
              firstItem.element &&
              getSize(firstItem.element)
            );
          };

          // ----- methods that should reference isotope ----- //

          proto.layout = function () {
            this.isotope.layout.apply(this.isotope, arguments);
          };

          proto.getSize = function () {
            this.isotope.getSize();
            this.size = this.isotope.size;
          };

          // -------------------------- create -------------------------- //

          LayoutMode.modes = {};

          LayoutMode.create = function (namespace, options) {
            function Mode() {
              LayoutMode.apply(this, arguments);
            }

            Mode.prototype = Object.create(proto);
            Mode.prototype.constructor = Mode;

            // default options
            if (options) {
              Mode.options = options;
            }

            Mode.prototype.namespace = namespace;
            // register in Isotope
            LayoutMode.modes[namespace] = Mode;

            return Mode;
          };

          return LayoutMode;
        });

        /***/
      },

    /***/
    /*!*****************************************************************!*\
  !*** ./node_modules/isotope-layout/js/layout-modes/fit-rows.js ***!
  \*****************************************************************/
    './node_modules/isotope-layout/js/layout-modes/fit-rows.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__,
          __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /**
         * fitRows layout mode
         */

        (function (window, factory) {
          // universal module definition
          /* jshint strict: false */
          /*globals define, module, require */
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! ../layout-mode */
                './node_modules/isotope-layout/js/layout-mode.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
            (__WEBPACK_AMD_DEFINE_RESULT__ =
              typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function'
                ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(
                    exports,
                    __WEBPACK_AMD_DEFINE_ARRAY__
                  )
                : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(LayoutMode) {
          'use strict';

          var FitRows = LayoutMode.create('fitRows');

          var proto = FitRows.prototype;

          proto._resetLayout = function () {
            this.x = 0;
            this.y = 0;
            this.maxY = 0;
            this._getMeasurement('gutter', 'outerWidth');
          };

          proto._getItemLayoutPosition = function (item) {
            item.getSize();

            var itemWidth = item.size.outerWidth + this.gutter;
            // if this element cannot fit in the current row
            var containerWidth =
              this.isotope.size.innerWidth + this.gutter;
            if (this.x !== 0 && itemWidth + this.x > containerWidth) {
              this.x = 0;
              this.y = this.maxY;
            }

            var position = {
              x: this.x,
              y: this.y,
            };

            this.maxY = Math.max(
              this.maxY,
              this.y + item.size.outerHeight
            );
            this.x += itemWidth;

            return position;
          };

          proto._getContainerSize = function () {
            return {
              height: this.maxY,
            };
          };

          return FitRows;
        });

        /***/
      },

    /***/
    /*!****************************************************************!*\
  !*** ./node_modules/isotope-layout/js/layout-modes/masonry.js ***!
  \****************************************************************/
    './node_modules/isotope-layout/js/layout-modes/masonry.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__,
          __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /*!
         * Masonry layout mode
         * sub-classes Masonry
         * https://masonry.desandro.com
         */

        (function (window, factory) {
          // universal module definition
          /* jshint strict: false */
          /*globals define, module, require */
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! ../layout-mode */
                './node_modules/isotope-layout/js/layout-mode.js'
              ),
              __webpack_require__(
                /*! masonry-layout/masonry */
                './node_modules/masonry-layout/masonry.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
            (__WEBPACK_AMD_DEFINE_RESULT__ =
              typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function'
                ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(
                    exports,
                    __WEBPACK_AMD_DEFINE_ARRAY__
                  )
                : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(LayoutMode, Masonry) {
          'use strict';

          // -------------------------- masonryDefinition -------------------------- //

          // create an Outlayer layout class
          var MasonryMode = LayoutMode.create('masonry');

          var proto = MasonryMode.prototype;

          var keepModeMethods = {
            _getElementOffset: true,
            layout: true,
            _getMeasurement: true,
          };

          // inherit Masonry prototype
          for (var method in Masonry.prototype) {
            // do not inherit mode methods
            if (!keepModeMethods[method]) {
              proto[method] = Masonry.prototype[method];
            }
          }

          var measureColumns = proto.measureColumns;
          proto.measureColumns = function () {
            // set items, used if measuring first item
            this.items = this.isotope.filteredItems;
            measureColumns.call(this);
          };

          // point to mode options for fitWidth
          var _getOption = proto._getOption;
          proto._getOption = function (option) {
            if (option == 'fitWidth') {
              return this.options.isFitWidth !== undefined
                ? this.options.isFitWidth
                : this.options.fitWidth;
            }
            return _getOption.apply(this.isotope, arguments);
          };

          return MasonryMode;
        });

        /***/
      },

    /***/
    /*!*****************************************************************!*\
  !*** ./node_modules/isotope-layout/js/layout-modes/vertical.js ***!
  \*****************************************************************/
    './node_modules/isotope-layout/js/layout-modes/vertical.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__,
          __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /**
         * vertical layout mode
         */

        (function (window, factory) {
          // universal module definition
          /* jshint strict: false */
          /*globals define, module, require */
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! ../layout-mode */
                './node_modules/isotope-layout/js/layout-mode.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
            (__WEBPACK_AMD_DEFINE_RESULT__ =
              typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function'
                ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(
                    exports,
                    __WEBPACK_AMD_DEFINE_ARRAY__
                  )
                : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(LayoutMode) {
          'use strict';

          var Vertical = LayoutMode.create('vertical', {
            horizontalAlignment: 0,
          });

          var proto = Vertical.prototype;

          proto._resetLayout = function () {
            this.y = 0;
          };

          proto._getItemLayoutPosition = function (item) {
            item.getSize();
            var x =
              (this.isotope.size.innerWidth - item.size.outerWidth) *
              this.options.horizontalAlignment;
            var y = this.y;
            this.y += item.size.outerHeight;
            return {
              x: x,
              y: y,
            };
          };

          proto._getContainerSize = function () {
            return {
              height: this.y,
            };
          };

          return Vertical;
        });

        /***/
      },

    /***/
    /*!*********************************************!*\
  !*** ./node_modules/lazysizes/lazysizes.js ***!
  \*********************************************/
    './node_modules/lazysizes/lazysizes.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        (function (window, factory) {
          var lazySizes = factory(window, window.document, Date);
          window.lazySizes = lazySizes;
          if (true && module.exports) {
            module.exports = lazySizes;
          }
        })(
          typeof window != 'undefined' ? window : {},
          /**
           * import("./types/global")
           * @typedef { import("./types/lazysizes-config").LazySizesConfigPartial } LazySizesConfigPartial
           */ function l(window, document, Date) {
            // Pass in the window Date function also for SSR because the Date class can be lost
            'use strict';
            /*jshint eqnull:true */

            var lazysizes,
              /**
               * @type { LazySizesConfigPartial }
               */
              lazySizesCfg;

            (function () {
              var prop;

              var lazySizesDefaults = {
                lazyClass: 'lazyload',
                loadedClass: 'lazyloaded',
                loadingClass: 'lazyloading',
                preloadClass: 'lazypreload',
                errorClass: 'lazyerror',
                //strictClass: 'lazystrict',
                autosizesClass: 'lazyautosizes',
                fastLoadedClass: 'ls-is-cached',
                iframeLoadMode: 0,
                srcAttr: 'data-src',
                srcsetAttr: 'data-srcset',
                sizesAttr: 'data-sizes',
                //preloadAfterLoad: false,
                minSize: 40,
                customMedia: {},
                init: true,
                expFactor: 1.5,
                hFac: 0.8,
                loadMode: 2,
                loadHidden: true,
                ricTimeout: 0,
                throttleDelay: 125,
              };

              lazySizesCfg =
                window.lazySizesConfig ||
                window.lazysizesConfig ||
                {};

              for (prop in lazySizesDefaults) {
                if (!(prop in lazySizesCfg)) {
                  lazySizesCfg[prop] = lazySizesDefaults[prop];
                }
              }
            })();

            if (!document || !document.getElementsByClassName) {
              return {
                init: function () {},
                /**
                 * @type { LazySizesConfigPartial }
                 */
                cfg: lazySizesCfg,
                /**
                 * @type { true }
                 */
                noSupport: true,
              };
            }

            var docElem = document.documentElement;

            var supportPicture = window.HTMLPictureElement;

            var _addEventListener = 'addEventListener';

            var _getAttribute = 'getAttribute';

            /**
             * Update to bind to window because 'this' becomes null during SSR
             * builds.
             */
            var addEventListener =
              window[_addEventListener].bind(window);

            var setTimeout = window.setTimeout;

            var requestAnimationFrame =
              window.requestAnimationFrame || setTimeout;

            var requestIdleCallback = window.requestIdleCallback;

            var regPicture = /^picture$/i;

            var loadEvents = [
              'load',
              'error',
              'lazyincluded',
              '_lazyloaded',
            ];

            var regClassCache = {};

            var forEach = Array.prototype.forEach;

            /**
             * @param ele {Element}
             * @param cls {string}
             */
            var hasClass = function (ele, cls) {
              if (!regClassCache[cls]) {
                regClassCache[cls] = new RegExp(
                  '(\\s|^)' + cls + '(\\s|$)'
                );
              }
              return (
                regClassCache[cls].test(
                  ele[_getAttribute]('class') || ''
                ) && regClassCache[cls]
              );
            };

            /**
             * @param ele {Element}
             * @param cls {string}
             */
            var addClass = function (ele, cls) {
              if (!hasClass(ele, cls)) {
                ele.setAttribute(
                  'class',
                  (ele[_getAttribute]('class') || '').trim() +
                    ' ' +
                    cls
                );
              }
            };

            /**
             * @param ele {Element}
             * @param cls {string}
             */
            var removeClass = function (ele, cls) {
              var reg;
              if ((reg = hasClass(ele, cls))) {
                ele.setAttribute(
                  'class',
                  (ele[_getAttribute]('class') || '').replace(
                    reg,
                    ' '
                  )
                );
              }
            };

            var addRemoveLoadEvents = function (dom, fn, add) {
              var action = add
                ? _addEventListener
                : 'removeEventListener';
              if (add) {
                addRemoveLoadEvents(dom, fn);
              }
              loadEvents.forEach(function (evt) {
                dom[action](evt, fn);
              });
            };

            /**
             * @param elem { Element }
             * @param name { string }
             * @param detail { any }
             * @param noBubbles { boolean }
             * @param noCancelable { boolean }
             * @returns { CustomEvent }
             */
            var triggerEvent = function (
              elem,
              name,
              detail,
              noBubbles,
              noCancelable
            ) {
              var event = document.createEvent('Event');

              if (!detail) {
                detail = {};
              }

              detail.instance = lazysizes;

              event.initEvent(name, !noBubbles, !noCancelable);

              event.detail = detail;

              elem.dispatchEvent(event);
              return event;
            };

            var updatePolyfill = function (el, full) {
              var polyfill;
              if (
                !supportPicture &&
                (polyfill = window.picturefill || lazySizesCfg.pf)
              ) {
                if (
                  full &&
                  full.src &&
                  !el[_getAttribute]('srcset')
                ) {
                  el.setAttribute('srcset', full.src);
                }
                polyfill({
                  reevaluate: true,
                  elements: [el],
                });
              } else if (full && full.src) {
                el.src = full.src;
              }
            };

            var getCSS = function (elem, style) {
              return (getComputedStyle(elem, null) || {})[style];
            };

            /**
             *
             * @param elem { Element }
             * @param parent { Element }
             * @param [width] {number}
             * @returns {number}
             */
            var getWidth = function (elem, parent, width) {
              width = width || elem.offsetWidth;

              while (
                width < lazySizesCfg.minSize &&
                parent &&
                !elem._lazysizesWidth
              ) {
                width = parent.offsetWidth;
                parent = parent.parentNode;
              }

              return width;
            };

            var rAF = (function () {
              var running, waiting;
              var firstFns = [];
              var secondFns = [];
              var fns = firstFns;

              var run = function () {
                var runFns = fns;

                fns = firstFns.length ? secondFns : firstFns;

                running = true;
                waiting = false;

                while (runFns.length) {
                  runFns.shift()();
                }

                running = false;
              };

              var rafBatch = function (fn, queue) {
                if (running && !queue) {
                  fn.apply(this, arguments);
                } else {
                  fns.push(fn);

                  if (!waiting) {
                    waiting = true;
                    (document.hidden
                      ? setTimeout
                      : requestAnimationFrame)(run);
                  }
                }
              };

              rafBatch._lsFlush = run;

              return rafBatch;
            })();

            var rAFIt = function (fn, simple) {
              return simple
                ? function () {
                    rAF(fn);
                  }
                : function () {
                    var that = this;
                    var args = arguments;
                    rAF(function () {
                      fn.apply(that, args);
                    });
                  };
            };

            var throttle = function (fn) {
              var running;
              var lastTime = 0;
              var gDelay = lazySizesCfg.throttleDelay;
              var rICTimeout = lazySizesCfg.ricTimeout;
              var run = function () {
                running = false;
                lastTime = Date.now();
                fn();
              };
              var idleCallback =
                requestIdleCallback && rICTimeout > 49
                  ? function () {
                      requestIdleCallback(run, {
                        timeout: rICTimeout,
                      });

                      if (rICTimeout !== lazySizesCfg.ricTimeout) {
                        rICTimeout = lazySizesCfg.ricTimeout;
                      }
                    }
                  : rAFIt(function () {
                      setTimeout(run);
                    }, true);

              return function (isPriority) {
                var delay;

                if ((isPriority = isPriority === true)) {
                  rICTimeout = 33;
                }

                if (running) {
                  return;
                }

                running = true;

                delay = gDelay - (Date.now() - lastTime);

                if (delay < 0) {
                  delay = 0;
                }

                if (isPriority || delay < 9) {
                  idleCallback();
                } else {
                  setTimeout(idleCallback, delay);
                }
              };
            };

            //based on http://modernjavascript.blogspot.de/2013/08/building-better-debounce.html
            var debounce = function (func) {
              var timeout, timestamp;
              var wait = 99;
              var run = function () {
                timeout = null;
                func();
              };
              var later = function () {
                var last = Date.now() - timestamp;

                if (last < wait) {
                  setTimeout(later, wait - last);
                } else {
                  (requestIdleCallback || run)(run);
                }
              };

              return function () {
                timestamp = Date.now();

                if (!timeout) {
                  timeout = setTimeout(later, wait);
                }
              };
            };

            var loader = (function () {
              var preloadElems,
                isCompleted,
                resetPreloadingTimer,
                loadMode,
                started;

              var eLvW,
                elvH,
                eLtop,
                eLleft,
                eLright,
                eLbottom,
                isBodyHidden;

              var regImg = /^img$/i;
              var regIframe = /^iframe$/i;

              var supportScroll =
                'onscroll' in window &&
                !/(gle|ing)bot/.test(navigator.userAgent);

              var shrinkExpand = 0;
              var currentExpand = 0;

              var isLoading = 0;
              var lowRuns = -1;

              var resetPreloading = function (e) {
                isLoading--;
                if (!e || isLoading < 0 || !e.target) {
                  isLoading = 0;
                }
              };

              var isVisible = function (elem) {
                if (isBodyHidden == null) {
                  isBodyHidden =
                    getCSS(document.body, 'visibility') == 'hidden';
                }

                return (
                  isBodyHidden ||
                  !(
                    getCSS(elem.parentNode, 'visibility') ==
                      'hidden' &&
                    getCSS(elem, 'visibility') == 'hidden'
                  )
                );
              };

              var isNestedVisible = function (elem, elemExpand) {
                var outerRect;
                var parent = elem;
                var visible = isVisible(elem);

                eLtop -= elemExpand;
                eLbottom += elemExpand;
                eLleft -= elemExpand;
                eLright += elemExpand;

                while (
                  visible &&
                  (parent = parent.offsetParent) &&
                  parent != document.body &&
                  parent != docElem
                ) {
                  visible = (getCSS(parent, 'opacity') || 1) > 0;

                  if (
                    visible &&
                    getCSS(parent, 'overflow') != 'visible'
                  ) {
                    outerRect = parent.getBoundingClientRect();
                    visible =
                      eLright > outerRect.left &&
                      eLleft < outerRect.right &&
                      eLbottom > outerRect.top - 1 &&
                      eLtop < outerRect.bottom + 1;
                  }
                }

                return visible;
              };

              var checkElements = function () {
                var eLlen,
                  i,
                  rect,
                  autoLoadElem,
                  loadedSomething,
                  elemExpand,
                  elemNegativeExpand,
                  elemExpandVal,
                  beforeExpandVal,
                  defaultExpand,
                  preloadExpand,
                  hFac;
                var lazyloadElems = lazysizes.elements;

                if (
                  (loadMode = lazySizesCfg.loadMode) &&
                  isLoading < 8 &&
                  (eLlen = lazyloadElems.length)
                ) {
                  i = 0;

                  lowRuns++;

                  for (; i < eLlen; i++) {
                    if (
                      !lazyloadElems[i] ||
                      lazyloadElems[i]._lazyRace
                    ) {
                      continue;
                    }

                    if (
                      !supportScroll ||
                      (lazysizes.prematureUnveil &&
                        lazysizes.prematureUnveil(lazyloadElems[i]))
                    ) {
                      unveilElement(lazyloadElems[i]);
                      continue;
                    }

                    if (
                      !(elemExpandVal =
                        lazyloadElems[i][_getAttribute](
                          'data-expand'
                        )) ||
                      !(elemExpand = elemExpandVal * 1)
                    ) {
                      elemExpand = currentExpand;
                    }

                    if (!defaultExpand) {
                      defaultExpand =
                        !lazySizesCfg.expand ||
                        lazySizesCfg.expand < 1
                          ? docElem.clientHeight > 500 &&
                            docElem.clientWidth > 500
                            ? 500
                            : 370
                          : lazySizesCfg.expand;

                      lazysizes._defEx = defaultExpand;

                      preloadExpand =
                        defaultExpand * lazySizesCfg.expFactor;
                      hFac = lazySizesCfg.hFac;
                      isBodyHidden = null;

                      if (
                        currentExpand < preloadExpand &&
                        isLoading < 1 &&
                        lowRuns > 2 &&
                        loadMode > 2 &&
                        !document.hidden
                      ) {
                        currentExpand = preloadExpand;
                        lowRuns = 0;
                      } else if (
                        loadMode > 1 &&
                        lowRuns > 1 &&
                        isLoading < 6
                      ) {
                        currentExpand = defaultExpand;
                      } else {
                        currentExpand = shrinkExpand;
                      }
                    }

                    if (beforeExpandVal !== elemExpand) {
                      eLvW = innerWidth + elemExpand * hFac;
                      elvH = innerHeight + elemExpand;
                      elemNegativeExpand = elemExpand * -1;
                      beforeExpandVal = elemExpand;
                    }

                    rect = lazyloadElems[i].getBoundingClientRect();

                    if (
                      (eLbottom = rect.bottom) >=
                        elemNegativeExpand &&
                      (eLtop = rect.top) <= elvH &&
                      (eLright = rect.right) >=
                        elemNegativeExpand * hFac &&
                      (eLleft = rect.left) <= eLvW &&
                      (eLbottom || eLright || eLleft || eLtop) &&
                      (lazySizesCfg.loadHidden ||
                        isVisible(lazyloadElems[i])) &&
                      ((isCompleted &&
                        isLoading < 3 &&
                        !elemExpandVal &&
                        (loadMode < 3 || lowRuns < 4)) ||
                        isNestedVisible(lazyloadElems[i], elemExpand))
                    ) {
                      unveilElement(lazyloadElems[i]);
                      loadedSomething = true;
                      if (isLoading > 9) {
                        break;
                      }
                    } else if (
                      !loadedSomething &&
                      isCompleted &&
                      !autoLoadElem &&
                      isLoading < 4 &&
                      lowRuns < 4 &&
                      loadMode > 2 &&
                      (preloadElems[0] ||
                        lazySizesCfg.preloadAfterLoad) &&
                      (preloadElems[0] ||
                        (!elemExpandVal &&
                          (eLbottom ||
                            eLright ||
                            eLleft ||
                            eLtop ||
                            lazyloadElems[i][_getAttribute](
                              lazySizesCfg.sizesAttr
                            ) != 'auto')))
                    ) {
                      autoLoadElem =
                        preloadElems[0] || lazyloadElems[i];
                    }
                  }

                  if (autoLoadElem && !loadedSomething) {
                    unveilElement(autoLoadElem);
                  }
                }
              };

              var throttledCheckElements = throttle(checkElements);

              var switchLoadingClass = function (e) {
                var elem = e.target;

                if (elem._lazyCache) {
                  delete elem._lazyCache;
                  return;
                }

                resetPreloading(e);
                addClass(elem, lazySizesCfg.loadedClass);
                removeClass(elem, lazySizesCfg.loadingClass);
                addRemoveLoadEvents(elem, rafSwitchLoadingClass);
                triggerEvent(elem, 'lazyloaded');
              };
              var rafedSwitchLoadingClass = rAFIt(switchLoadingClass);
              var rafSwitchLoadingClass = function (e) {
                rafedSwitchLoadingClass({
                  target: e.target,
                });
              };

              var changeIframeSrc = function (elem, src) {
                var loadMode =
                  elem.getAttribute('data-load-mode') ||
                  lazySizesCfg.iframeLoadMode;

                // loadMode can be also a string!
                if (loadMode == 0) {
                  elem.contentWindow.location.replace(src);
                } else if (loadMode == 1) {
                  elem.src = src;
                }
              };

              var handleSources = function (source) {
                var customMedia;

                var sourceSrcset = source[_getAttribute](
                  lazySizesCfg.srcsetAttr
                );

                if (
                  (customMedia =
                    lazySizesCfg.customMedia[
                      source[_getAttribute]('data-media') ||
                        source[_getAttribute]('media')
                    ])
                ) {
                  source.setAttribute('media', customMedia);
                }

                if (sourceSrcset) {
                  source.setAttribute('srcset', sourceSrcset);
                }
              };

              var lazyUnveil = rAFIt(function (
                elem,
                detail,
                isAuto,
                sizes,
                isImg
              ) {
                var src, srcset, parent, isPicture, event, firesLoad;

                if (
                  !(event = triggerEvent(
                    elem,
                    'lazybeforeunveil',
                    detail
                  )).defaultPrevented
                ) {
                  if (sizes) {
                    if (isAuto) {
                      addClass(elem, lazySizesCfg.autosizesClass);
                    } else {
                      elem.setAttribute('sizes', sizes);
                    }
                  }

                  srcset = elem[_getAttribute](
                    lazySizesCfg.srcsetAttr
                  );
                  src = elem[_getAttribute](lazySizesCfg.srcAttr);

                  if (isImg) {
                    parent = elem.parentNode;
                    isPicture =
                      parent &&
                      regPicture.test(parent.nodeName || '');
                  }

                  firesLoad =
                    detail.firesLoad ||
                    ('src' in elem && (srcset || src || isPicture));

                  event = {
                    target: elem,
                  };

                  addClass(elem, lazySizesCfg.loadingClass);

                  if (firesLoad) {
                    clearTimeout(resetPreloadingTimer);
                    resetPreloadingTimer = setTimeout(
                      resetPreloading,
                      2500
                    );
                    addRemoveLoadEvents(
                      elem,
                      rafSwitchLoadingClass,
                      true
                    );
                  }

                  if (isPicture) {
                    forEach.call(
                      parent.getElementsByTagName('source'),
                      handleSources
                    );
                  }

                  if (srcset) {
                    elem.setAttribute('srcset', srcset);
                  } else if (src && !isPicture) {
                    if (regIframe.test(elem.nodeName)) {
                      changeIframeSrc(elem, src);
                    } else {
                      elem.src = src;
                    }
                  }

                  if (isImg && (srcset || isPicture)) {
                    updatePolyfill(elem, {
                      src: src,
                    });
                  }
                }

                if (elem._lazyRace) {
                  delete elem._lazyRace;
                }
                removeClass(elem, lazySizesCfg.lazyClass);

                rAF(function () {
                  // Part of this can be removed as soon as this fix is older: https://bugs.chromium.org/p/chromium/issues/detail?id=7731 (2015)
                  var isLoaded =
                    elem.complete && elem.naturalWidth > 1;

                  if (!firesLoad || isLoaded) {
                    if (isLoaded) {
                      addClass(elem, lazySizesCfg.fastLoadedClass);
                    }
                    switchLoadingClass(event);
                    elem._lazyCache = true;
                    setTimeout(function () {
                      if ('_lazyCache' in elem) {
                        delete elem._lazyCache;
                      }
                    }, 9);
                  }
                  if (elem.loading == 'lazy') {
                    isLoading--;
                  }
                }, true);
              });

              /**
               *
               * @param elem { Element }
               */
              var unveilElement = function (elem) {
                if (elem._lazyRace) {
                  return;
                }
                var detail;

                var isImg = regImg.test(elem.nodeName);

                //allow using sizes="auto", but don't use. it's invalid. Use data-sizes="auto" or a valid value for sizes instead (i.e.: sizes="80vw")
                var sizes =
                  isImg &&
                  (elem[_getAttribute](lazySizesCfg.sizesAttr) ||
                    elem[_getAttribute]('sizes'));
                var isAuto = sizes == 'auto';

                if (
                  (isAuto || !isCompleted) &&
                  isImg &&
                  (elem[_getAttribute]('src') || elem.srcset) &&
                  !elem.complete &&
                  !hasClass(elem, lazySizesCfg.errorClass) &&
                  hasClass(elem, lazySizesCfg.lazyClass)
                ) {
                  return;
                }

                detail = triggerEvent(elem, 'lazyunveilread').detail;

                if (isAuto) {
                  autoSizer.updateElem(elem, true, elem.offsetWidth);
                }

                elem._lazyRace = true;
                isLoading++;

                lazyUnveil(elem, detail, isAuto, sizes, isImg);
              };

              var afterScroll = debounce(function () {
                lazySizesCfg.loadMode = 3;
                throttledCheckElements();
              });

              var altLoadmodeScrollListner = function () {
                if (lazySizesCfg.loadMode == 3) {
                  lazySizesCfg.loadMode = 2;
                }
                afterScroll();
              };

              var onload = function () {
                if (isCompleted) {
                  return;
                }
                if (Date.now() - started < 999) {
                  setTimeout(onload, 999);
                  return;
                }

                isCompleted = true;

                lazySizesCfg.loadMode = 3;

                throttledCheckElements();

                addEventListener(
                  'scroll',
                  altLoadmodeScrollListner,
                  true
                );
              };

              return {
                _: function () {
                  started = Date.now();

                  lazysizes.elements =
                    document.getElementsByClassName(
                      lazySizesCfg.lazyClass
                    );
                  preloadElems = document.getElementsByClassName(
                    lazySizesCfg.lazyClass +
                      ' ' +
                      lazySizesCfg.preloadClass
                  );

                  addEventListener(
                    'scroll',
                    throttledCheckElements,
                    true
                  );

                  addEventListener(
                    'resize',
                    throttledCheckElements,
                    true
                  );

                  addEventListener('pageshow', function (e) {
                    if (e.persisted) {
                      var loadingElements = document.querySelectorAll(
                        '.' + lazySizesCfg.loadingClass
                      );

                      if (
                        loadingElements.length &&
                        loadingElements.forEach
                      ) {
                        requestAnimationFrame(function () {
                          loadingElements.forEach(function (img) {
                            if (img.complete) {
                              unveilElement(img);
                            }
                          });
                        });
                      }
                    }
                  });

                  if (window.MutationObserver) {
                    new MutationObserver(
                      throttledCheckElements
                    ).observe(docElem, {
                      childList: true,
                      subtree: true,
                      attributes: true,
                    });
                  } else {
                    docElem[_addEventListener](
                      'DOMNodeInserted',
                      throttledCheckElements,
                      true
                    );
                    docElem[_addEventListener](
                      'DOMAttrModified',
                      throttledCheckElements,
                      true
                    );
                    setInterval(throttledCheckElements, 999);
                  }

                  addEventListener(
                    'hashchange',
                    throttledCheckElements,
                    true
                  );

                  //, 'fullscreenchange'
                  [
                    'focus',
                    'mouseover',
                    'click',
                    'load',
                    'transitionend',
                    'animationend',
                  ].forEach(function (name) {
                    document[_addEventListener](
                      name,
                      throttledCheckElements,
                      true
                    );
                  });

                  if (/d$|^c/.test(document.readyState)) {
                    onload();
                  } else {
                    addEventListener('load', onload);
                    document[_addEventListener](
                      'DOMContentLoaded',
                      throttledCheckElements
                    );
                    setTimeout(onload, 20000);
                  }

                  if (lazysizes.elements.length) {
                    checkElements();
                    rAF._lsFlush();
                  } else {
                    throttledCheckElements();
                  }
                },
                checkElems: throttledCheckElements,
                unveil: unveilElement,
                _aLSL: altLoadmodeScrollListner,
              };
            })();

            var autoSizer = (function () {
              var autosizesElems;

              var sizeElement = rAFIt(function (
                elem,
                parent,
                event,
                width
              ) {
                var sources, i, len;
                elem._lazysizesWidth = width;
                width += 'px';

                elem.setAttribute('sizes', width);

                if (regPicture.test(parent.nodeName || '')) {
                  sources = parent.getElementsByTagName('source');
                  for (i = 0, len = sources.length; i < len; i++) {
                    sources[i].setAttribute('sizes', width);
                  }
                }

                if (!event.detail.dataAttr) {
                  updatePolyfill(elem, event.detail);
                }
              });
              /**
               *
               * @param elem {Element}
               * @param dataAttr
               * @param [width] { number }
               */
              var getSizeElement = function (elem, dataAttr, width) {
                var event;
                var parent = elem.parentNode;

                if (parent) {
                  width = getWidth(elem, parent, width);
                  event = triggerEvent(elem, 'lazybeforesizes', {
                    width: width,
                    dataAttr: !!dataAttr,
                  });

                  if (!event.defaultPrevented) {
                    width = event.detail.width;

                    if (width && width !== elem._lazysizesWidth) {
                      sizeElement(elem, parent, event, width);
                    }
                  }
                }
              };

              var updateElementsSizes = function () {
                var i;
                var len = autosizesElems.length;
                if (len) {
                  i = 0;

                  for (; i < len; i++) {
                    getSizeElement(autosizesElems[i]);
                  }
                }
              };

              var debouncedUpdateElementsSizes = debounce(
                updateElementsSizes
              );

              return {
                _: function () {
                  autosizesElems = document.getElementsByClassName(
                    lazySizesCfg.autosizesClass
                  );
                  addEventListener(
                    'resize',
                    debouncedUpdateElementsSizes
                  );
                },
                checkElems: debouncedUpdateElementsSizes,
                updateElem: getSizeElement,
              };
            })();

            var init = function () {
              if (!init.i && document.getElementsByClassName) {
                init.i = true;
                autoSizer._();
                loader._();
              }
            };

            setTimeout(function () {
              if (lazySizesCfg.init) {
                init();
              }
            });

            lazysizes = {
              /**
               * @type { LazySizesConfigPartial }
               */
              cfg: lazySizesCfg,
              autoSizer: autoSizer,
              loader: loader,
              init: init,
              uP: updatePolyfill,
              aC: addClass,
              rC: removeClass,
              hC: hasClass,
              fire: triggerEvent,
              gW: getWidth,
              rAF: rAF,
            };

            return lazysizes;
          }
        );

        /***/
      },

    /***/
    /*!**********************************************************************!*\
  !*** ./node_modules/lazysizes/plugins/unveilhooks/ls.unveilhooks.js ***!
  \**********************************************************************/
    './node_modules/lazysizes/plugins/unveilhooks/ls.unveilhooks.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__,
          __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /*
This plugin extends lazySizes to lazyLoad:
background images, videos/posters and scripts

Background-Image:
For background images, use data-bg attribute:
<div class="lazyload" data-bg="bg-img.jpg"></div>

 Video:
 For video/audio use data-poster and preload="none":
 <video class="lazyload" preload="none" data-poster="poster.jpg" src="src.mp4">
 <!-- sources -->
 </video>

 For video that plays automatically if in view:
 <video
	class="lazyload"
	preload="none"
	muted=""
	data-autoplay=""
	data-poster="poster.jpg"
	src="src.mp4">
</video>

 Scripts:
 For scripts use data-script:
 <div class="lazyload" data-script="module-name.js"></div>


 Script modules using require:
 For modules using require use data-require:
 <div class="lazyload" data-require="module-name"></div>
*/

        (function (window, factory) {
          var globalInstall = function () {
            factory(window.lazySizes);
            window.removeEventListener(
              'lazyunveilread',
              globalInstall,
              true
            );
          };

          factory = factory.bind(null, window, window.document);

          if (true && module.exports) {
            factory(
              __webpack_require__(
                /*! lazysizes */
                './node_modules/lazysizes/lazysizes.js'
              )
            );
          } else if (true) {
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! lazysizes */
                './node_modules/lazysizes/lazysizes.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
            (__WEBPACK_AMD_DEFINE_RESULT__ =
              typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function'
                ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(
                    exports,
                    __WEBPACK_AMD_DEFINE_ARRAY__
                  )
                : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function (window, document, lazySizes) {
          /*jshint eqnull:true */
          'use strict';
          var bgLoad, regBgUrlEscape;
          var uniqueUrls = {};

          if (document.addEventListener) {
            regBgUrlEscape = /\(|\)|\s|'/;

            bgLoad = function (url, cb) {
              var img = document.createElement('img');
              img.onload = function () {
                img.onload = null;
                img.onerror = null;
                img = null;
                cb();
              };
              img.onerror = img.onload;

              img.src = url;

              if (img && img.complete && img.onload) {
                img.onload();
              }
            };

            addEventListener(
              'lazybeforeunveil',
              function (e) {
                if (e.detail.instance != lazySizes) {
                  return;
                }

                var tmp, load, bg, poster;
                if (!e.defaultPrevented) {
                  var target = e.target;

                  if (target.preload == 'none') {
                    target.preload =
                      target.getAttribute('data-preload') || 'auto';
                  }

                  if (target.getAttribute('data-autoplay') != null) {
                    if (
                      target.getAttribute('data-expand') &&
                      !target.autoplay
                    ) {
                      try {
                        target.play();
                      } catch (er) {}
                    } else {
                      requestAnimationFrame(function () {
                        target.setAttribute('data-expand', '-10');
                        lazySizes.aC(target, lazySizes.cfg.lazyClass);
                      });
                    }
                  }

                  tmp = target.getAttribute('data-link');
                  if (tmp) {
                    addStyleScript(tmp, true);
                  }

                  // handle data-script
                  tmp = target.getAttribute('data-script');
                  if (tmp) {
                    e.detail.firesLoad = true;
                    load = function () {
                      e.detail.firesLoad = false;
                      lazySizes.fire(
                        target,
                        '_lazyloaded',
                        {},
                        true,
                        true
                      );
                    };
                    addStyleScript(tmp, null, load);
                  }

                  // handle data-require
                  tmp = target.getAttribute('data-require');
                  if (tmp) {
                    if (lazySizes.cfg.requireJs) {
                      lazySizes.cfg.requireJs([tmp]);
                    } else {
                      addStyleScript(tmp);
                    }
                  }

                  // handle data-bg
                  bg = target.getAttribute('data-bg');
                  if (bg) {
                    e.detail.firesLoad = true;
                    load = function () {
                      target.style.backgroundImage =
                        'url(' +
                        (regBgUrlEscape.test(bg)
                          ? JSON.stringify(bg)
                          : bg) +
                        ')';
                      e.detail.firesLoad = false;
                      lazySizes.fire(
                        target,
                        '_lazyloaded',
                        {},
                        true,
                        true
                      );
                    };

                    bgLoad(bg, load);
                  }

                  // handle data-poster
                  poster = target.getAttribute('data-poster');
                  if (poster) {
                    e.detail.firesLoad = true;
                    load = function () {
                      target.poster = poster;
                      e.detail.firesLoad = false;
                      lazySizes.fire(
                        target,
                        '_lazyloaded',
                        {},
                        true,
                        true
                      );
                    };

                    bgLoad(poster, load);
                  }
                }
              },
              false
            );
          }

          function addStyleScript(src, style, cb) {
            if (uniqueUrls[src]) {
              return;
            }
            var elem = document.createElement(
              style ? 'link' : 'script'
            );
            var insertElem =
              document.getElementsByTagName('script')[0];

            if (style) {
              elem.rel = 'stylesheet';
              elem.href = src;
            } else {
              elem.onload = function () {
                elem.onerror = null;
                elem.onload = null;
                cb();
              };
              elem.onerror = elem.onload;

              elem.src = src;
            }
            uniqueUrls[src] = true;
            uniqueUrls[elem.src || elem.href] = true;
            insertElem.parentNode.insertBefore(elem, insertElem);
          }
        });

        /***/
      },

    /***/
    /*!************************************************!*\
  !*** ./node_modules/masonry-layout/masonry.js ***!
  \************************************************/
    './node_modules/masonry-layout/masonry.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__,
          __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /*!
         * Masonry v4.2.2
         * Cascading grid layout library
         * https://masonry.desandro.com
         * MIT License
         * by David DeSandro
         */

        (function (window, factory) {
          // universal module definition
          /* jshint strict: false */
          /*globals define, module, require */
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! outlayer/outlayer */
                './node_modules/outlayer/outlayer.js'
              ),
              __webpack_require__(
                /*! get-size/get-size */
                './node_modules/get-size/get-size.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
            (__WEBPACK_AMD_DEFINE_RESULT__ =
              typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function'
                ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(
                    exports,
                    __WEBPACK_AMD_DEFINE_ARRAY__
                  )
                : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(Outlayer, getSize) {
          'use strict';

          // -------------------------- masonryDefinition -------------------------- //

          // create an Outlayer layout class
          var Masonry = Outlayer.create('masonry');
          // isFitWidth -> fitWidth
          Masonry.compatOptions.fitWidth = 'isFitWidth';

          var proto = Masonry.prototype;

          proto._resetLayout = function () {
            this.getSize();
            this._getMeasurement('columnWidth', 'outerWidth');
            this._getMeasurement('gutter', 'outerWidth');
            this.measureColumns();

            // reset column Y
            this.colYs = [];
            for (var i = 0; i < this.cols; i++) {
              this.colYs.push(0);
            }

            this.maxY = 0;
            this.horizontalColIndex = 0;
          };

          proto.measureColumns = function () {
            this.getContainerWidth();
            // if columnWidth is 0, default to outerWidth of first item
            if (!this.columnWidth) {
              var firstItem = this.items[0];
              var firstItemElem = firstItem && firstItem.element;
              // columnWidth fall back to item of first element
              this.columnWidth =
                (firstItemElem &&
                  getSize(firstItemElem).outerWidth) || // if first elem has no width, default to size of container
                this.containerWidth;
            }

            var columnWidth = (this.columnWidth += this.gutter);

            // calculate columns
            var containerWidth = this.containerWidth + this.gutter;
            var cols = containerWidth / columnWidth;
            // fix rounding errors, typically with gutters
            var excess = columnWidth - (containerWidth % columnWidth);
            // if overshoot is less than a pixel, round up, otherwise floor it
            var mathMethod = excess && excess < 1 ? 'round' : 'floor';
            cols = Math[mathMethod](cols);
            this.cols = Math.max(cols, 1);
          };

          proto.getContainerWidth = function () {
            // container is parent if fit width
            var isFitWidth = this._getOption('fitWidth');
            var container = isFitWidth
              ? this.element.parentNode
              : this.element;
            // check that this.size and size are there
            // IE8 triggers resize on body size change, so they might not be
            var size = getSize(container);
            this.containerWidth = size && size.innerWidth;
          };

          proto._getItemLayoutPosition = function (item) {
            item.getSize();
            // how many columns does this brick span
            var remainder = item.size.outerWidth % this.columnWidth;
            var mathMethod =
              remainder && remainder < 1 ? 'round' : 'ceil';
            // round if off by 1 pixel, otherwise use ceil
            var colSpan = Math[mathMethod](
              item.size.outerWidth / this.columnWidth
            );
            colSpan = Math.min(colSpan, this.cols);
            // use horizontal or top column position
            var colPosMethod = this.options.horizontalOrder
              ? '_getHorizontalColPosition'
              : '_getTopColPosition';
            var colPosition = this[colPosMethod](colSpan, item);
            // position the brick
            var position = {
              x: this.columnWidth * colPosition.col,
              y: colPosition.y,
            };
            // apply setHeight to necessary columns
            var setHeight = colPosition.y + item.size.outerHeight;
            var setMax = colSpan + colPosition.col;
            for (var i = colPosition.col; i < setMax; i++) {
              this.colYs[i] = setHeight;
            }

            return position;
          };

          proto._getTopColPosition = function (colSpan) {
            var colGroup = this._getTopColGroup(colSpan);
            // get the minimum Y value from the columns
            var minimumY = Math.min.apply(Math, colGroup);

            return {
              col: colGroup.indexOf(minimumY),
              y: minimumY,
            };
          };

          /**
           * @param {Number} colSpan - number of columns the element spans
           * @returns {Array} colGroup
           */
          proto._getTopColGroup = function (colSpan) {
            if (colSpan < 2) {
              // if brick spans only one column, use all the column Ys
              return this.colYs;
            }

            var colGroup = [];
            // how many different places could this brick fit horizontally
            var groupCount = this.cols + 1 - colSpan;
            // for each group potential horizontal position
            for (var i = 0; i < groupCount; i++) {
              colGroup[i] = this._getColGroupY(i, colSpan);
            }
            return colGroup;
          };

          proto._getColGroupY = function (col, colSpan) {
            if (colSpan < 2) {
              return this.colYs[col];
            }
            // make an array of colY values for that one group
            var groupColYs = this.colYs.slice(col, col + colSpan);
            // and get the max value of the array
            return Math.max.apply(Math, groupColYs);
          };

          // get column position based on horizontal index. #873
          proto._getHorizontalColPosition = function (colSpan, item) {
            var col = this.horizontalColIndex % this.cols;
            var isOver = colSpan > 1 && col + colSpan > this.cols;
            // shift to next row if item can't fit on current row
            col = isOver ? 0 : col;
            // don't let zero-size items take up space
            var hasSize =
              item.size.outerWidth && item.size.outerHeight;
            this.horizontalColIndex = hasSize
              ? col + colSpan
              : this.horizontalColIndex;

            return {
              col: col,
              y: this._getColGroupY(col, colSpan),
            };
          };

          proto._manageStamp = function (stamp) {
            var stampSize = getSize(stamp);
            var offset = this._getElementOffset(stamp);
            // get the columns that this stamp affects
            var isOriginLeft = this._getOption('originLeft');
            var firstX = isOriginLeft ? offset.left : offset.right;
            var lastX = firstX + stampSize.outerWidth;
            var firstCol = Math.floor(firstX / this.columnWidth);
            firstCol = Math.max(0, firstCol);
            var lastCol = Math.floor(lastX / this.columnWidth);
            // lastCol should not go over if multiple of columnWidth #425
            lastCol -= lastX % this.columnWidth ? 0 : 1;
            lastCol = Math.min(this.cols - 1, lastCol);
            // set colYs to bottom of the stamp

            var isOriginTop = this._getOption('originTop');
            var stampMaxY =
              (isOriginTop ? offset.top : offset.bottom) +
              stampSize.outerHeight;
            for (var i = firstCol; i <= lastCol; i++) {
              this.colYs[i] = Math.max(stampMaxY, this.colYs[i]);
            }
          };

          proto._getContainerSize = function () {
            this.maxY = Math.max.apply(Math, this.colYs);
            var size = {
              height: this.maxY,
            };

            if (this._getOption('fitWidth')) {
              size.width = this._getContainerFitWidth();
            }

            return size;
          };

          proto._getContainerFitWidth = function () {
            var unusedCols = 0;
            // count unused columns
            var i = this.cols;
            while (--i) {
              if (this.colYs[i] !== 0) {
                break;
              }
              unusedCols++;
            }
            // fit container to columns that have been used
            return (
              (this.cols - unusedCols) * this.columnWidth -
              this.gutter
            );
          };

          proto.needsResizeLayout = function () {
            var previousWidth = this.containerWidth;
            this.getContainerWidth();
            return previousWidth != this.containerWidth;
          };

          return Masonry;
        });

        /***/
      },

    /***/
    /*!******************************************!*\
  !*** ./node_modules/nanoevents/index.js ***!
  \******************************************/
    './node_modules/nanoevents/index.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        /**
         * Interface for event subscription.
         *
         * @example
         * var NanoEvents = require('nanoevents')
         *
         * class Ticker {
         *   constructor() {
         *     this.emitter = new NanoEvents()
         *   }
         *   on() {
         *     return this.emitter.on.apply(this.events, arguments)
         *   }
         *   tick() {
         *     this.emitter.emit('tick')
         *   }
         * }
         *
         * @alias NanoEvents
         * @class
         */
        (module.exports = function NanoEvents() {
          /**
           * Event names in keys and arrays with listeners in values.
           * @type {object}
           *
           * @example
           * Object.keys(ee.events)
           *
           * @alias NanoEvents#events
           */
          this.events = {};
        }).prototype = {
          /**
           * Calls each of the listeners registered for a given event.
           *
           * @param {string} event The event name.
           * @param {...*} arguments The arguments for listeners.
           *
           * @return {undefined}
           *
           * @example
           * ee.emit('tick', tickType, tickDuration)
           *
           * @alias NanoEvents#emit
           * @method
           */
          emit: function emit(event) {
            var args = [].slice.call(arguments, 1); // Array.prototype.call() returns empty array if context is not array-like
            [].slice
              .call(this.events[event] || [])
              .filter(function (i) {
                i.apply(null, args);
              });
          },

          /**
           * Add a listener for a given event.
           *
           * @param {string} event The event name.
           * @param {function} cb The listener function.
           *
           * @return {function} Unbind listener from event.
           *
           * @example
           * const unbind = ee.on('tick', (tickType, tickDuration) => {
           *   count += 1
           * })
           *
           * disable () {
           *   unbind()
           * }
           *
           * @alias NanoEvents#on
           * @method
           */
          on: function on(event, cb) {
            if (true && typeof cb !== 'function') {
              throw new Error('Listener must be a function');
            }

            (this.events[event] = this.events[event] || []).push(cb);

            return function () {
              this.events[event] = this.events[event].filter(
                function (i) {
                  return i !== cb;
                }
              );
            }.bind(this);
          },
        };

        /***/
      },

    /***/
    /*!***************************************!*\
  !*** ./node_modules/outlayer/item.js ***!
  \***************************************/
    './node_modules/outlayer/item.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__,
          __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /**
         * Outlayer Item
         */

        (function (window, factory) {
          // universal module definition
          /* jshint strict: false */
          /* globals define, module, require */
          if (true) {
            // AMD - RequireJS
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! ev-emitter/ev-emitter */
                './node_modules/ev-emitter/ev-emitter.js'
              ),
              __webpack_require__(
                /*! get-size/get-size */
                './node_modules/get-size/get-size.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
            (__WEBPACK_AMD_DEFINE_RESULT__ =
              typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function'
                ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(
                    exports,
                    __WEBPACK_AMD_DEFINE_ARRAY__
                  )
                : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(EvEmitter, getSize) {
          'use strict';

          // ----- helpers ----- //

          function isEmptyObj(obj) {
            for (var prop in obj) {
              return false;
            }
            prop = null;
            return true;
          }

          // -------------------------- CSS3 support -------------------------- //

          var docElemStyle = document.documentElement.style;

          var transitionProperty =
            typeof docElemStyle.transition == 'string'
              ? 'transition'
              : 'WebkitTransition';
          var transformProperty =
            typeof docElemStyle.transform == 'string'
              ? 'transform'
              : 'WebkitTransform';

          var transitionEndEvent = {
            WebkitTransition: 'webkitTransitionEnd',
            transition: 'transitionend',
          }[transitionProperty];

          // cache all vendor properties that could have vendor prefix
          var vendorProperties = {
            transform: transformProperty,
            transition: transitionProperty,
            transitionDuration: transitionProperty + 'Duration',
            transitionProperty: transitionProperty + 'Property',
            transitionDelay: transitionProperty + 'Delay',
          };

          // -------------------------- Item -------------------------- //

          function Item(element, layout) {
            if (!element) {
              return;
            }

            this.element = element;
            // parent layout class, i.e. Masonry, Isotope, or Packery
            this.layout = layout;
            this.position = {
              x: 0,
              y: 0,
            };

            this._create();
          }

          // inherit EvEmitter
          var proto = (Item.prototype = Object.create(
            EvEmitter.prototype
          ));
          proto.constructor = Item;

          proto._create = function () {
            // transition objects
            this._transn = {
              ingProperties: {},
              clean: {},
              onEnd: {},
            };

            this.css({
              position: 'absolute',
            });
          };

          // trigger specified handler for event type
          proto.handleEvent = function (event) {
            var method = 'on' + event.type;
            if (this[method]) {
              this[method](event);
            }
          };

          proto.getSize = function () {
            this.size = getSize(this.element);
          };

          /**
           * apply CSS styles to element
           * @param {Object} style
           */
          proto.css = function (style) {
            var elemStyle = this.element.style;

            for (var prop in style) {
              // use vendor property if available
              var supportedProp = vendorProperties[prop] || prop;
              elemStyle[supportedProp] = style[prop];
            }
          };

          // measure position, and sets it
          proto.getPosition = function () {
            var style = getComputedStyle(this.element);
            var isOriginLeft = this.layout._getOption('originLeft');
            var isOriginTop = this.layout._getOption('originTop');
            var xValue = style[isOriginLeft ? 'left' : 'right'];
            var yValue = style[isOriginTop ? 'top' : 'bottom'];
            var x = parseFloat(xValue);
            var y = parseFloat(yValue);
            // convert percent to pixels
            var layoutSize = this.layout.size;
            if (xValue.indexOf('%') != -1) {
              x = (x / 100) * layoutSize.width;
            }
            if (yValue.indexOf('%') != -1) {
              y = (y / 100) * layoutSize.height;
            }
            // clean up 'auto' or other non-integer values
            x = isNaN(x) ? 0 : x;
            y = isNaN(y) ? 0 : y;
            // remove padding from measurement
            x -= isOriginLeft
              ? layoutSize.paddingLeft
              : layoutSize.paddingRight;
            y -= isOriginTop
              ? layoutSize.paddingTop
              : layoutSize.paddingBottom;

            this.position.x = x;
            this.position.y = y;
          };

          // set settled position, apply padding
          proto.layoutPosition = function () {
            var layoutSize = this.layout.size;
            var style = {};
            var isOriginLeft = this.layout._getOption('originLeft');
            var isOriginTop = this.layout._getOption('originTop');

            // x
            var xPadding = isOriginLeft
              ? 'paddingLeft'
              : 'paddingRight';
            var xProperty = isOriginLeft ? 'left' : 'right';
            var xResetProperty = isOriginLeft ? 'right' : 'left';

            var x = this.position.x + layoutSize[xPadding];
            // set in percentage or pixels
            style[xProperty] = this.getXValue(x);
            // reset other property
            style[xResetProperty] = '';

            // y
            var yPadding = isOriginTop
              ? 'paddingTop'
              : 'paddingBottom';
            var yProperty = isOriginTop ? 'top' : 'bottom';
            var yResetProperty = isOriginTop ? 'bottom' : 'top';

            var y = this.position.y + layoutSize[yPadding];
            // set in percentage or pixels
            style[yProperty] = this.getYValue(y);
            // reset other property
            style[yResetProperty] = '';

            this.css(style);
            this.emitEvent('layout', [this]);
          };

          proto.getXValue = function (x) {
            var isHorizontal = this.layout._getOption('horizontal');
            return this.layout.options.percentPosition &&
              !isHorizontal
              ? (x / this.layout.size.width) * 100 + '%'
              : x + 'px';
          };

          proto.getYValue = function (y) {
            var isHorizontal = this.layout._getOption('horizontal');
            return this.layout.options.percentPosition && isHorizontal
              ? (y / this.layout.size.height) * 100 + '%'
              : y + 'px';
          };

          proto._transitionTo = function (x, y) {
            this.getPosition();
            // get current x & y from top/left
            var curX = this.position.x;
            var curY = this.position.y;

            var didNotMove =
              x == this.position.x && y == this.position.y;

            // save end position
            this.setPosition(x, y);

            // if did not move and not transitioning, just go to layout
            if (didNotMove && !this.isTransitioning) {
              this.layoutPosition();
              return;
            }

            var transX = x - curX;
            var transY = y - curY;
            var transitionStyle = {};
            transitionStyle.transform = this.getTranslate(
              transX,
              transY
            );

            this.transition({
              to: transitionStyle,
              onTransitionEnd: {
                transform: this.layoutPosition,
              },
              isCleaning: true,
            });
          };

          proto.getTranslate = function (x, y) {
            // flip cooridinates if origin on right or bottom
            var isOriginLeft = this.layout._getOption('originLeft');
            var isOriginTop = this.layout._getOption('originTop');
            x = isOriginLeft ? x : -x;
            y = isOriginTop ? y : -y;
            return 'translate3d(' + x + 'px, ' + y + 'px, 0)';
          };

          // non transition + transform support
          proto.goTo = function (x, y) {
            this.setPosition(x, y);
            this.layoutPosition();
          };

          proto.moveTo = proto._transitionTo;

          proto.setPosition = function (x, y) {
            this.position.x = parseFloat(x);
            this.position.y = parseFloat(y);
          };

          // ----- transition ----- //

          /**
           * @param {Object} style - CSS
           * @param {Function} onTransitionEnd
           */

          // non transition, just trigger callback
          proto._nonTransition = function (args) {
            this.css(args.to);
            if (args.isCleaning) {
              this._removeStyles(args.to);
            }
            for (var prop in args.onTransitionEnd) {
              args.onTransitionEnd[prop].call(this);
            }
          };

          /**
           * proper transition
           * @param {Object} args - arguments
           *   @param {Object} to - style to transition to
           *   @param {Object} from - style to start transition from
           *   @param {Boolean} isCleaning - removes transition styles after transition
           *   @param {Function} onTransitionEnd - callback
           */
          proto.transition = function (args) {
            // redirect to nonTransition if no transition duration
            if (!parseFloat(this.layout.options.transitionDuration)) {
              this._nonTransition(args);
              return;
            }

            var _transition = this._transn;
            // keep track of onTransitionEnd callback by css property
            for (var prop in args.onTransitionEnd) {
              _transition.onEnd[prop] = args.onTransitionEnd[prop];
            }
            // keep track of properties that are transitioning
            for (prop in args.to) {
              _transition.ingProperties[prop] = true;
              // keep track of properties to clean up when transition is done
              if (args.isCleaning) {
                _transition.clean[prop] = true;
              }
            }

            // set from styles
            if (args.from) {
              this.css(args.from);
              // force redraw. http://blog.alexmaccaw.com/css-transitions
              var h = this.element.offsetHeight;
              // hack for JSHint to hush about unused var
              h = null;
            }
            // enable transition
            this.enableTransition(args.to);
            // set styles that are transitioning
            this.css(args.to);

            this.isTransitioning = true;
          };

          // dash before all cap letters, including first for
          // WebkitTransform => -webkit-transform
          function toDashedAll(str) {
            return str.replace(/([A-Z])/g, function ($1) {
              return '-' + $1.toLowerCase();
            });
          }

          var transitionProps =
            'opacity,' + toDashedAll(transformProperty);

          proto.enableTransition = function () /* style */
          {
            // HACK changing transitionProperty during a transition
            // will cause transition to jump
            if (this.isTransitioning) {
              return;
            }

            // make `transition: foo, bar, baz` from style object
            // HACK un-comment this when enableTransition can work
            // while a transition is happening
            // var transitionValues = [];
            // for ( var prop in style ) {
            //   // dash-ify camelCased properties like WebkitTransition
            //   prop = vendorProperties[ prop ] || prop;
            //   transitionValues.push( toDashedAll( prop ) );
            // }
            // munge number to millisecond, to match stagger
            var duration = this.layout.options.transitionDuration;
            duration =
              typeof duration == 'number'
                ? duration + 'ms'
                : duration;
            // enable transition styles
            this.css({
              transitionProperty: transitionProps,
              transitionDuration: duration,
              transitionDelay: this.staggerDelay || 0,
            });
            // listen for transition end event
            this.element.addEventListener(
              transitionEndEvent,
              this,
              false
            );
          };

          // ----- events ----- //

          proto.onwebkitTransitionEnd = function (event) {
            this.ontransitionend(event);
          };

          proto.onotransitionend = function (event) {
            this.ontransitionend(event);
          };

          // properties that I munge to make my life easier
          var dashedVendorProperties = {
            '-webkit-transform': 'transform',
          };

          proto.ontransitionend = function (event) {
            // disregard bubbled events from children
            if (event.target !== this.element) {
              return;
            }
            var _transition = this._transn;
            // get property name of transitioned property, convert to prefix-free
            var propertyName =
              dashedVendorProperties[event.propertyName] ||
              event.propertyName;

            // remove property that has completed transitioning
            delete _transition.ingProperties[propertyName];
            // check if any properties are still transitioning
            if (isEmptyObj(_transition.ingProperties)) {
              // all properties have completed transitioning
              this.disableTransition();
            }
            // clean style
            if (propertyName in _transition.clean) {
              // clean up style
              this.element.style[event.propertyName] = '';
              delete _transition.clean[propertyName];
            }
            // trigger onTransitionEnd callback
            if (propertyName in _transition.onEnd) {
              var onTransitionEnd = _transition.onEnd[propertyName];
              onTransitionEnd.call(this);
              delete _transition.onEnd[propertyName];
            }

            this.emitEvent('transitionEnd', [this]);
          };

          proto.disableTransition = function () {
            this.removeTransitionStyles();
            this.element.removeEventListener(
              transitionEndEvent,
              this,
              false
            );
            this.isTransitioning = false;
          };

          /**
           * removes style property from element
           * @param {Object} style
           **/
          proto._removeStyles = function (style) {
            // clean up transition styles
            var cleanStyle = {};
            for (var prop in style) {
              cleanStyle[prop] = '';
            }
            this.css(cleanStyle);
          };

          var cleanTransitionStyle = {
            transitionProperty: '',
            transitionDuration: '',
            transitionDelay: '',
          };

          proto.removeTransitionStyles = function () {
            // remove transition
            this.css(cleanTransitionStyle);
          };

          // ----- stagger ----- //

          proto.stagger = function (delay) {
            delay = isNaN(delay) ? 0 : delay;
            this.staggerDelay = delay + 'ms';
          };

          // ----- show/hide/remove ----- //

          // remove element from DOM
          proto.removeElem = function () {
            this.element.parentNode.removeChild(this.element);
            // remove display: none
            this.css({
              display: '',
            });
            this.emitEvent('remove', [this]);
          };

          proto.remove = function () {
            // just remove element if no transition support or no transition
            if (
              !transitionProperty ||
              !parseFloat(this.layout.options.transitionDuration)
            ) {
              this.removeElem();
              return;
            }

            // start transition
            this.once('transitionEnd', function () {
              this.removeElem();
            });
            this.hide();
          };

          proto.reveal = function () {
            delete this.isHidden;
            // remove display: none
            this.css({
              display: '',
            });

            var options = this.layout.options;

            var onTransitionEnd = {};
            var transitionEndProperty =
              this.getHideRevealTransitionEndProperty('visibleStyle');
            onTransitionEnd[transitionEndProperty] =
              this.onRevealTransitionEnd;

            this.transition({
              from: options.hiddenStyle,
              to: options.visibleStyle,
              isCleaning: true,
              onTransitionEnd: onTransitionEnd,
            });
          };

          proto.onRevealTransitionEnd = function () {
            // check if still visible
            // during transition, item may have been hidden
            if (!this.isHidden) {
              this.emitEvent('reveal');
            }
          };

          /**
           * get style property use for hide/reveal transition end
           * @param {String} styleProperty - hiddenStyle/visibleStyle
           * @returns {String}
           */
          proto.getHideRevealTransitionEndProperty = function (
            styleProperty
          ) {
            var optionStyle = this.layout.options[styleProperty];
            // use opacity
            if (optionStyle.opacity) {
              return 'opacity';
            }
            // get first property
            for (var prop in optionStyle) {
              return prop;
            }
          };

          proto.hide = function () {
            // set flag
            this.isHidden = true;
            // remove display: none
            this.css({
              display: '',
            });

            var options = this.layout.options;

            var onTransitionEnd = {};
            var transitionEndProperty =
              this.getHideRevealTransitionEndProperty('hiddenStyle');
            onTransitionEnd[transitionEndProperty] =
              this.onHideTransitionEnd;

            this.transition({
              from: options.visibleStyle,
              to: options.hiddenStyle,
              // keep hidden stuff hidden
              isCleaning: true,
              onTransitionEnd: onTransitionEnd,
            });
          };

          proto.onHideTransitionEnd = function () {
            // check if still hidden
            // during transition, item may have been un-hidden
            if (this.isHidden) {
              this.css({
                display: 'none',
              });
              this.emitEvent('hide');
            }
          };

          proto.destroy = function () {
            this.css({
              position: '',
              left: '',
              right: '',
              top: '',
              bottom: '',
              transition: '',
              transform: '',
            });
          };

          return Item;
        });

        /***/
      },

    /***/
    /*!*******************************************!*\
  !*** ./node_modules/outlayer/outlayer.js ***!
  \*******************************************/
    './node_modules/outlayer/outlayer.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /*!
         * Outlayer v2.1.1
         * the brains and guts of a layout library
         * MIT license
         */

        (function (window, factory) {
          'use strict';
          // universal module definition
          /* jshint strict: false */
          /* globals define, module, require */
          if (true) {
            // AMD - RequireJS
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! ev-emitter/ev-emitter */
                './node_modules/ev-emitter/ev-emitter.js'
              ),
              __webpack_require__(
                /*! get-size/get-size */
                './node_modules/get-size/get-size.js'
              ),
              __webpack_require__(
                /*! fizzy-ui-utils/utils */
                './node_modules/fizzy-ui-utils/utils.js'
              ),
              __webpack_require__(
                /*! ./item */
                './node_modules/outlayer/item.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function (
              EvEmitter,
              getSize,
              utils,
              Item
            ) {
              return factory(window, EvEmitter, getSize, utils, Item);
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(
          window,
          function factory(window, EvEmitter, getSize, utils, Item) {
            'use strict';

            // ----- vars ----- //

            var console = window.console;
            var jQuery = window.jQuery;
            var noop = function () {};

            // -------------------------- Outlayer -------------------------- //

            // globally unique identifiers
            var GUID = 0;
            // internal store of all Outlayer intances
            var instances = {};

            /**
             * @param {Element, String} element
             * @param {Object} options
             * @constructor
             */
            function Outlayer(element, options) {
              var queryElement = utils.getQueryElement(element);
              if (!queryElement) {
                if (console) {
                  console.error(
                    'Bad element for ' +
                      this.constructor.namespace +
                      ': ' +
                      (queryElement || element)
                  );
                }
                return;
              }
              this.element = queryElement;
              // add jQuery
              if (jQuery) {
                this.$element = jQuery(this.element);
              }

              // options
              this.options = utils.extend(
                {},
                this.constructor.defaults
              );
              this.option(options);

              // add id for Outlayer.getFromElement
              var id = ++GUID;
              this.element.outlayerGUID = id;
              // expando
              instances[id] = this;
              // associate via id

              // kick it off
              this._create();

              var isInitLayout = this._getOption('initLayout');
              if (isInitLayout) {
                this.layout();
              }
            }

            // settings are for internal use only
            Outlayer.namespace = 'outlayer';
            Outlayer.Item = Item;

            // default options
            Outlayer.defaults = {
              containerStyle: {
                position: 'relative',
              },
              initLayout: true,
              originLeft: true,
              originTop: true,
              resize: true,
              resizeContainer: true,
              // item options
              transitionDuration: '0.4s',
              hiddenStyle: {
                opacity: 0,
                transform: 'scale(0.001)',
              },
              visibleStyle: {
                opacity: 1,
                transform: 'scale(1)',
              },
            };

            var proto = Outlayer.prototype;
            // inherit EvEmitter
            utils.extend(proto, EvEmitter.prototype);

            /**
             * set options
             * @param {Object} opts
             */
            proto.option = function (opts) {
              utils.extend(this.options, opts);
            };

            /**
             * get backwards compatible option value, check old name
             */
            proto._getOption = function (option) {
              var oldOption = this.constructor.compatOptions[option];
              return oldOption &&
                this.options[oldOption] !== undefined
                ? this.options[oldOption]
                : this.options[option];
            };

            Outlayer.compatOptions = {
              // currentName: oldName
              initLayout: 'isInitLayout',
              horizontal: 'isHorizontal',
              layoutInstant: 'isLayoutInstant',
              originLeft: 'isOriginLeft',
              originTop: 'isOriginTop',
              resize: 'isResizeBound',
              resizeContainer: 'isResizingContainer',
            };

            proto._create = function () {
              // get items from children
              this.reloadItems();
              // elements that affect layout, but are not laid out
              this.stamps = [];
              this.stamp(this.options.stamp);
              // set container style
              utils.extend(
                this.element.style,
                this.options.containerStyle
              );

              // bind resize method
              var canBindResize = this._getOption('resize');
              if (canBindResize) {
                this.bindResize();
              }
            };

            // goes through all children again and gets bricks in proper order
            proto.reloadItems = function () {
              // collection of item elements
              this.items = this._itemize(this.element.children);
            };

            /**
             * turn elements into Outlayer.Items to be used in layout
             * @param {Array or NodeList or HTMLElement} elems
             * @returns {Array} items - collection of new Outlayer Items
             */
            proto._itemize = function (elems) {
              var itemElems = this._filterFindItemElements(elems);
              var Item = this.constructor.Item;

              // create new Outlayer Items for collection
              var items = [];
              for (var i = 0; i < itemElems.length; i++) {
                var elem = itemElems[i];
                var item = new Item(elem, this);
                items.push(item);
              }

              return items;
            };

            /**
             * get item elements to be used in layout
             * @param {Array or NodeList or HTMLElement} elems
             * @returns {Array} items - item elements
             */
            proto._filterFindItemElements = function (elems) {
              return utils.filterFindElements(
                elems,
                this.options.itemSelector
              );
            };

            /**
             * getter method for getting item elements
             * @returns {Array} elems - collection of item elements
             */
            proto.getItemElements = function () {
              return this.items.map(function (item) {
                return item.element;
              });
            };

            // ----- init & layout ----- //

            /**
             * lays out all items
             */
            proto.layout = function () {
              this._resetLayout();
              this._manageStamps();

              // don't animate first layout
              var layoutInstant = this._getOption('layoutInstant');
              var isInstant =
                layoutInstant !== undefined
                  ? layoutInstant
                  : !this._isLayoutInited;
              this.layoutItems(this.items, isInstant);

              // flag for initalized
              this._isLayoutInited = true;
            };

            // _init is alias for layout
            proto._init = proto.layout;

            /**
             * logic before any new layout
             */
            proto._resetLayout = function () {
              this.getSize();
            };

            proto.getSize = function () {
              this.size = getSize(this.element);
            };

            /**
             * get measurement from option, for columnWidth, rowHeight, gutter
             * if option is String -> get element from selector string, & get size of element
             * if option is Element -> get size of element
             * else use option as a number
             *
             * @param {String} measurement
             * @param {String} size - width or height
             * @private
             */
            proto._getMeasurement = function (measurement, size) {
              var option = this.options[measurement];
              var elem;
              if (!option) {
                // default to 0
                this[measurement] = 0;
              } else {
                // use option as an element
                if (typeof option == 'string') {
                  elem = this.element.querySelector(option);
                } else if (option instanceof HTMLElement) {
                  elem = option;
                }
                // use size of element, if element
                this[measurement] = elem
                  ? getSize(elem)[size]
                  : option;
              }
            };

            /**
             * layout a collection of item elements
             * @api public
             */
            proto.layoutItems = function (items, isInstant) {
              items = this._getItemsForLayout(items);

              this._layoutItems(items, isInstant);

              this._postLayout();
            };

            /**
             * get the items to be laid out
             * you may want to skip over some items
             * @param {Array} items
             * @returns {Array} items
             */
            proto._getItemsForLayout = function (items) {
              return items.filter(function (item) {
                return !item.isIgnored;
              });
            };

            /**
             * layout items
             * @param {Array} items
             * @param {Boolean} isInstant
             */
            proto._layoutItems = function (items, isInstant) {
              this._emitCompleteOnItems('layout', items);

              if (!items || !items.length) {
                // no items, emit event with empty array
                return;
              }

              var queue = [];

              items.forEach(function (item) {
                // get x/y object from method
                var position = this._getItemLayoutPosition(item);
                // enqueue
                position.item = item;
                position.isInstant =
                  isInstant || item.isLayoutInstant;
                queue.push(position);
              }, this);

              this._processLayoutQueue(queue);
            };

            /**
             * get item layout position
             * @param {Outlayer.Item} item
             * @returns {Object} x and y position
             */
            proto._getItemLayoutPosition = function () /* item */
            {
              return {
                x: 0,
                y: 0,
              };
            };

            /**
             * iterate over array and position each item
             * Reason being - separating this logic prevents 'layout invalidation'
             * thx @paul_irish
             * @param {Array} queue
             */
            proto._processLayoutQueue = function (queue) {
              this.updateStagger();
              queue.forEach(function (obj, i) {
                this._positionItem(
                  obj.item,
                  obj.x,
                  obj.y,
                  obj.isInstant,
                  i
                );
              }, this);
            };

            // set stagger from option in milliseconds number
            proto.updateStagger = function () {
              var stagger = this.options.stagger;
              if (stagger === null || stagger === undefined) {
                this.stagger = 0;
                return;
              }
              this.stagger = getMilliseconds(stagger);
              return this.stagger;
            };

            /**
             * Sets position of item in DOM
             * @param {Outlayer.Item} item
             * @param {Number} x - horizontal position
             * @param {Number} y - vertical position
             * @param {Boolean} isInstant - disables transitions
             */
            proto._positionItem = function (
              item,
              x,
              y,
              isInstant,
              i
            ) {
              if (isInstant) {
                // if not transition, just set CSS
                item.goTo(x, y);
              } else {
                item.stagger(i * this.stagger);
                item.moveTo(x, y);
              }
            };

            /**
             * Any logic you want to do after each layout,
             * i.e. size the container
             */
            proto._postLayout = function () {
              this.resizeContainer();
            };

            proto.resizeContainer = function () {
              var isResizingContainer =
                this._getOption('resizeContainer');
              if (!isResizingContainer) {
                return;
              }
              var size = this._getContainerSize();
              if (size) {
                this._setContainerMeasure(size.width, true);
                this._setContainerMeasure(size.height, false);
              }
            };

            /**
             * Sets width or height of container if returned
             * @returns {Object} size
             *   @param {Number} width
             *   @param {Number} height
             */
            proto._getContainerSize = noop;

            /**
             * @param {Number} measure - size of width or height
             * @param {Boolean} isWidth
             */
            proto._setContainerMeasure = function (measure, isWidth) {
              if (measure === undefined) {
                return;
              }

              var elemSize = this.size;
              // add padding and border width if border box
              if (elemSize.isBorderBox) {
                measure += isWidth
                  ? elemSize.paddingLeft +
                    elemSize.paddingRight +
                    elemSize.borderLeftWidth +
                    elemSize.borderRightWidth
                  : elemSize.paddingBottom +
                    elemSize.paddingTop +
                    elemSize.borderTopWidth +
                    elemSize.borderBottomWidth;
              }

              measure = Math.max(measure, 0);
              this.element.style[isWidth ? 'width' : 'height'] =
                measure + 'px';
            };

            /**
             * emit eventComplete on a collection of items events
             * @param {String} eventName
             * @param {Array} items - Outlayer.Items
             */
            proto._emitCompleteOnItems = function (eventName, items) {
              var _this = this;
              function onComplete() {
                _this.dispatchEvent(eventName + 'Complete', null, [
                  items,
                ]);
              }

              var count = items.length;
              if (!items || !count) {
                onComplete();
                return;
              }

              var doneCount = 0;
              function tick() {
                doneCount++;
                if (doneCount == count) {
                  onComplete();
                }
              }

              // bind callback
              items.forEach(function (item) {
                item.once(eventName, tick);
              });
            };

            /**
             * emits events via EvEmitter and jQuery events
             * @param {String} type - name of event
             * @param {Event} event - original event
             * @param {Array} args - extra arguments
             */
            proto.dispatchEvent = function (type, event, args) {
              // add original event to arguments
              var emitArgs = event ? [event].concat(args) : args;
              this.emitEvent(type, emitArgs);

              if (jQuery) {
                // set this.$element
                this.$element = this.$element || jQuery(this.element);
                if (event) {
                  // create jQuery event
                  var $event = jQuery.Event(event);
                  $event.type = type;
                  this.$element.trigger($event, args);
                } else {
                  // just trigger with type if no event available
                  this.$element.trigger(type, args);
                }
              }
            };

            // -------------------------- ignore & stamps -------------------------- //

            /**
             * keep item in collection, but do not lay it out
             * ignored items do not get skipped in layout
             * @param {Element} elem
             */
            proto.ignore = function (elem) {
              var item = this.getItem(elem);
              if (item) {
                item.isIgnored = true;
              }
            };

            /**
             * return item to layout collection
             * @param {Element} elem
             */
            proto.unignore = function (elem) {
              var item = this.getItem(elem);
              if (item) {
                delete item.isIgnored;
              }
            };

            /**
             * adds elements to stamps
             * @param {NodeList, Array, Element, or String} elems
             */
            proto.stamp = function (elems) {
              elems = this._find(elems);
              if (!elems) {
                return;
              }

              this.stamps = this.stamps.concat(elems);
              // ignore
              elems.forEach(this.ignore, this);
            };

            /**
             * removes elements to stamps
             * @param {NodeList, Array, or Element} elems
             */
            proto.unstamp = function (elems) {
              elems = this._find(elems);
              if (!elems) {
                return;
              }

              elems.forEach(function (elem) {
                // filter out removed stamp elements
                utils.removeFrom(this.stamps, elem);
                this.unignore(elem);
              }, this);
            };

            /**
             * finds child elements
             * @param {NodeList, Array, Element, or String} elems
             * @returns {Array} elems
             */
            proto._find = function (elems) {
              if (!elems) {
                return;
              }
              // if string, use argument as selector string
              if (typeof elems == 'string') {
                elems = this.element.querySelectorAll(elems);
              }
              elems = utils.makeArray(elems);
              return elems;
            };

            proto._manageStamps = function () {
              if (!this.stamps || !this.stamps.length) {
                return;
              }

              this._getBoundingRect();

              this.stamps.forEach(this._manageStamp, this);
            };

            // update boundingLeft / Top
            proto._getBoundingRect = function () {
              // get bounding rect for container element
              var boundingRect = this.element.getBoundingClientRect();
              var size = this.size;
              this._boundingRect = {
                left:
                  boundingRect.left +
                  size.paddingLeft +
                  size.borderLeftWidth,
                top:
                  boundingRect.top +
                  size.paddingTop +
                  size.borderTopWidth,
                right:
                  boundingRect.right -
                  (size.paddingRight + size.borderRightWidth),
                bottom:
                  boundingRect.bottom -
                  (size.paddingBottom + size.borderBottomWidth),
              };
            };

            /**
             * @param {Element} stamp
             **/
            proto._manageStamp = noop;

            /**
             * get x/y position of element relative to container element
             * @param {Element} elem
             * @returns {Object} offset - has left, top, right, bottom
             */
            proto._getElementOffset = function (elem) {
              var boundingRect = elem.getBoundingClientRect();
              var thisRect = this._boundingRect;
              var size = getSize(elem);
              var offset = {
                left:
                  boundingRect.left - thisRect.left - size.marginLeft,
                top: boundingRect.top - thisRect.top - size.marginTop,
                right:
                  thisRect.right -
                  boundingRect.right -
                  size.marginRight,
                bottom:
                  thisRect.bottom -
                  boundingRect.bottom -
                  size.marginBottom,
              };
              return offset;
            };

            // -------------------------- resize -------------------------- //

            // enable event handlers for listeners
            // i.e. resize -> onresize
            proto.handleEvent = utils.handleEvent;

            /**
             * Bind layout to window resizing
             */
            proto.bindResize = function () {
              window.addEventListener('resize', this);
              this.isResizeBound = true;
            };

            /**
             * Unbind layout to window resizing
             */
            proto.unbindResize = function () {
              window.removeEventListener('resize', this);
              this.isResizeBound = false;
            };

            proto.onresize = function () {
              this.resize();
            };

            utils.debounceMethod(Outlayer, 'onresize', 100);

            proto.resize = function () {
              // don't trigger if size did not change
              // or if resize was unbound. See #9
              if (!this.isResizeBound || !this.needsResizeLayout()) {
                return;
              }

              this.layout();
            };

            /**
             * check if layout is needed post layout
             * @returns Boolean
             */
            proto.needsResizeLayout = function () {
              var size = getSize(this.element);
              // check that this.size and size are there
              // IE8 triggers resize on body size change, so they might not be
              var hasSizes = this.size && size;
              return (
                hasSizes && size.innerWidth !== this.size.innerWidth
              );
            };

            // -------------------------- methods -------------------------- //

            /**
             * add items to Outlayer instance
             * @param {Array or NodeList or Element} elems
             * @returns {Array} items - Outlayer.Items
             **/
            proto.addItems = function (elems) {
              var items = this._itemize(elems);
              // add items to collection
              if (items.length) {
                this.items = this.items.concat(items);
              }
              return items;
            };

            /**
             * Layout newly-appended item elements
             * @param {Array or NodeList or Element} elems
             */
            proto.appended = function (elems) {
              var items = this.addItems(elems);
              if (!items.length) {
                return;
              }
              // layout and reveal just the new items
              this.layoutItems(items, true);
              this.reveal(items);
            };

            /**
             * Layout prepended elements
             * @param {Array or NodeList or Element} elems
             */
            proto.prepended = function (elems) {
              var items = this._itemize(elems);
              if (!items.length) {
                return;
              }
              // add items to beginning of collection
              var previousItems = this.items.slice(0);
              this.items = items.concat(previousItems);
              // start new layout
              this._resetLayout();
              this._manageStamps();
              // layout new stuff without transition
              this.layoutItems(items, true);
              this.reveal(items);
              // layout previous items
              this.layoutItems(previousItems);
            };

            /**
             * reveal a collection of items
             * @param {Array of Outlayer.Items} items
             */
            proto.reveal = function (items) {
              this._emitCompleteOnItems('reveal', items);
              if (!items || !items.length) {
                return;
              }
              var stagger = this.updateStagger();
              items.forEach(function (item, i) {
                item.stagger(i * stagger);
                item.reveal();
              });
            };

            /**
             * hide a collection of items
             * @param {Array of Outlayer.Items} items
             */
            proto.hide = function (items) {
              this._emitCompleteOnItems('hide', items);
              if (!items || !items.length) {
                return;
              }
              var stagger = this.updateStagger();
              items.forEach(function (item, i) {
                item.stagger(i * stagger);
                item.hide();
              });
            };

            /**
             * reveal item elements
             * @param {Array}, {Element}, {NodeList} items
             */
            proto.revealItemElements = function (elems) {
              var items = this.getItems(elems);
              this.reveal(items);
            };

            /**
             * hide item elements
             * @param {Array}, {Element}, {NodeList} items
             */
            proto.hideItemElements = function (elems) {
              var items = this.getItems(elems);
              this.hide(items);
            };

            /**
             * get Outlayer.Item, given an Element
             * @param {Element} elem
             * @param {Function} callback
             * @returns {Outlayer.Item} item
             */
            proto.getItem = function (elem) {
              // loop through items to get the one that matches
              for (var i = 0; i < this.items.length; i++) {
                var item = this.items[i];
                if (item.element == elem) {
                  // return item
                  return item;
                }
              }
            };

            /**
             * get collection of Outlayer.Items, given Elements
             * @param {Array} elems
             * @returns {Array} items - Outlayer.Items
             */
            proto.getItems = function (elems) {
              elems = utils.makeArray(elems);
              var items = [];
              elems.forEach(function (elem) {
                var item = this.getItem(elem);
                if (item) {
                  items.push(item);
                }
              }, this);

              return items;
            };

            /**
             * remove element(s) from instance and DOM
             * @param {Array or NodeList or Element} elems
             */
            proto.remove = function (elems) {
              var removeItems = this.getItems(elems);

              this._emitCompleteOnItems('remove', removeItems);

              // bail if no items to remove
              if (!removeItems || !removeItems.length) {
                return;
              }

              removeItems.forEach(function (item) {
                item.remove();
                // remove item from collection
                utils.removeFrom(this.items, item);
              }, this);
            };

            // ----- destroy ----- //

            // remove and disable Outlayer instance
            proto.destroy = function () {
              // clean up dynamic styles
              var style = this.element.style;
              style.height = '';
              style.position = '';
              style.width = '';
              // destroy items
              this.items.forEach(function (item) {
                item.destroy();
              });

              this.unbindResize();

              var id = this.element.outlayerGUID;
              delete instances[id];
              // remove reference to instance by id
              delete this.element.outlayerGUID;
              // remove data for jQuery
              if (jQuery) {
                jQuery.removeData(
                  this.element,
                  this.constructor.namespace
                );
              }
            };

            // -------------------------- data -------------------------- //

            /**
             * get Outlayer instance from element
             * @param {Element} elem
             * @returns {Outlayer}
             */
            Outlayer.data = function (elem) {
              elem = utils.getQueryElement(elem);
              var id = elem && elem.outlayerGUID;
              return id && instances[id];
            };

            // -------------------------- create Outlayer class -------------------------- //

            /**
             * create a layout class
             * @param {String} namespace
             */
            Outlayer.create = function (namespace, options) {
              // sub-class Outlayer
              var Layout = subclass(Outlayer);
              // apply new options and compatOptions
              Layout.defaults = utils.extend({}, Outlayer.defaults);
              utils.extend(Layout.defaults, options);
              Layout.compatOptions = utils.extend(
                {},
                Outlayer.compatOptions
              );

              Layout.namespace = namespace;

              Layout.data = Outlayer.data;

              // sub-class Item
              Layout.Item = subclass(Item);

              // -------------------------- declarative -------------------------- //

              utils.htmlInit(Layout, namespace);

              // -------------------------- jQuery bridge -------------------------- //

              // make into jQuery plugin
              if (jQuery && jQuery.bridget) {
                jQuery.bridget(namespace, Layout);
              }

              return Layout;
            };

            function subclass(Parent) {
              function SubClass() {
                Parent.apply(this, arguments);
              }

              SubClass.prototype = Object.create(Parent.prototype);
              SubClass.prototype.constructor = SubClass;

              return SubClass;
            }

            // ----- helpers ----- //

            // how many milliseconds are in each unit
            var msUnits = {
              ms: 1,
              s: 1000,
            };

            // munge time-like parameter into millisecond number
            // '0.4s' -> 40
            function getMilliseconds(time) {
              if (typeof time == 'number') {
                return time;
              }
              var matches = time.match(/(^\d*\.?\d*)(\w*)/);
              var num = matches && matches[1];
              var unit = matches && matches[2];
              if (!num.length) {
                return 0;
              }
              num = parseFloat(num);
              var mult = msUnits[unit] || 1;
              return num * mult;
            }

            // ----- fin ----- //

            // back in global
            Outlayer.Item = Item;

            return Outlayer;
          }
        );

        /***/
      },

    /***/
    /*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
    './node_modules/process/browser.js':
      /*! no static exports found */
      /***/
      function (module, exports) {
        // shim for using process in browser
        var process = (module.exports = {});

        // cached from whatever global is present so that test runners that stub it
        // don't break things.  But we need to wrap it in a try catch in case it is
        // wrapped in strict mode code which doesn't define any globals.  It's inside a
        // function because try/catches deoptimize in certain engines.

        var cachedSetTimeout;
        var cachedClearTimeout;

        function defaultSetTimout() {
          throw new Error('setTimeout has not been defined');
        }
        function defaultClearTimeout() {
          throw new Error('clearTimeout has not been defined');
        }
        (function () {
          try {
            if (typeof setTimeout === 'function') {
              cachedSetTimeout = setTimeout;
            } else {
              cachedSetTimeout = defaultSetTimout;
            }
          } catch (e) {
            cachedSetTimeout = defaultSetTimout;
          }
          try {
            if (typeof clearTimeout === 'function') {
              cachedClearTimeout = clearTimeout;
            } else {
              cachedClearTimeout = defaultClearTimeout;
            }
          } catch (e) {
            cachedClearTimeout = defaultClearTimeout;
          }
        })();
        function runTimeout(fun) {
          if (cachedSetTimeout === setTimeout) {
            //normal enviroments in sane situations
            return setTimeout(fun, 0);
          }
          // if setTimeout wasn't available but was latter defined
          if (
            (cachedSetTimeout === defaultSetTimout ||
              !cachedSetTimeout) &&
            setTimeout
          ) {
            cachedSetTimeout = setTimeout;
            return setTimeout(fun, 0);
          }
          try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedSetTimeout(fun, 0);
          } catch (e) {
            try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
              return cachedSetTimeout.call(null, fun, 0);
            } catch (e) {
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
              return cachedSetTimeout.call(this, fun, 0);
            }
          }
        }
        function runClearTimeout(marker) {
          if (cachedClearTimeout === clearTimeout) {
            //normal enviroments in sane situations
            return clearTimeout(marker);
          }
          // if clearTimeout wasn't available but was latter defined
          if (
            (cachedClearTimeout === defaultClearTimeout ||
              !cachedClearTimeout) &&
            clearTimeout
          ) {
            cachedClearTimeout = clearTimeout;
            return clearTimeout(marker);
          }
          try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedClearTimeout(marker);
          } catch (e) {
            try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
              return cachedClearTimeout.call(null, marker);
            } catch (e) {
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
              // Some versions of I.E. have different rules for clearTimeout vs setTimeout
              return cachedClearTimeout.call(this, marker);
            }
          }
        }
        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;

        function cleanUpNextTick() {
          if (!draining || !currentQueue) {
            return;
          }
          draining = false;
          if (currentQueue.length) {
            queue = currentQueue.concat(queue);
          } else {
            queueIndex = -1;
          }
          if (queue.length) {
            drainQueue();
          }
        }

        function drainQueue() {
          if (draining) {
            return;
          }
          var timeout = runTimeout(cleanUpNextTick);
          draining = true;

          var len = queue.length;
          while (len) {
            currentQueue = queue;
            queue = [];
            while (++queueIndex < len) {
              if (currentQueue) {
                currentQueue[queueIndex].run();
              }
            }
            queueIndex = -1;
            len = queue.length;
          }
          currentQueue = null;
          draining = false;
          runClearTimeout(timeout);
        }

        process.nextTick = function (fun) {
          var args = new Array(arguments.length - 1);
          if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
              args[i - 1] = arguments[i];
            }
          }
          queue.push(new Item(fun, args));
          if (queue.length === 1 && !draining) {
            runTimeout(drainQueue);
          }
        };

        // v8 likes predictible objects
        function Item(fun, array) {
          this.fun = fun;
          this.array = array;
        }
        Item.prototype.run = function () {
          this.fun.apply(null, this.array);
        };
        process.title = 'browser';
        process.browser = true;
        process.env = {};
        process.argv = [];
        process.version = '';
        // empty string to avoid regexp issues
        process.versions = {};

        function noop() {}

        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;
        process.prependListener = noop;
        process.prependOnceListener = noop;

        process.listeners = function (name) {
          return [];
        };

        process.binding = function (name) {
          throw new Error('process.binding is not supported');
        };

        process.cwd = function () {
          return '/';
        };
        process.chdir = function (dir) {
          throw new Error('process.chdir is not supported');
        };
        process.umask = function () {
          return 0;
        };

        /***/
      },

    /***/
    /*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
    './node_modules/setimmediate/setImmediate.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */
        (function (global, process) {
          (function (global, undefined) {
            'use strict';

            if (global.setImmediate) {
              return;
            }

            var nextHandle = 1;
            // Spec says greater than zero
            var tasksByHandle = {};
            var currentlyRunningATask = false;
            var doc = global.document;
            var registerImmediate;

            function setImmediate(callback) {
              // Callback can either be a function or a string
              if (typeof callback !== 'function') {
                callback = new Function('' + callback);
              }
              // Copy function arguments
              var args = new Array(arguments.length - 1);
              for (var i = 0; i < args.length; i++) {
                args[i] = arguments[i + 1];
              }
              // Store and register the task
              var task = {
                callback: callback,
                args: args,
              };
              tasksByHandle[nextHandle] = task;
              registerImmediate(nextHandle);
              return nextHandle++;
            }

            function clearImmediate(handle) {
              delete tasksByHandle[handle];
            }

            function run(task) {
              var callback = task.callback;
              var args = task.args;
              switch (args.length) {
                case 0:
                  callback();
                  break;
                case 1:
                  callback(args[0]);
                  break;
                case 2:
                  callback(args[0], args[1]);
                  break;
                case 3:
                  callback(args[0], args[1], args[2]);
                  break;
                default:
                  callback.apply(undefined, args);
                  break;
              }
            }

            function runIfPresent(handle) {
              // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
              // So if we're currently running a task, we'll need to delay this invocation.
              if (currentlyRunningATask) {
                // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
                // "too much recursion" error.
                setTimeout(runIfPresent, 0, handle);
              } else {
                var task = tasksByHandle[handle];
                if (task) {
                  currentlyRunningATask = true;
                  try {
                    run(task);
                  } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                  }
                }
              }
            }

            function installNextTickImplementation() {
              registerImmediate = function (handle) {
                process.nextTick(function () {
                  runIfPresent(handle);
                });
              };
            }

            function canUsePostMessage() {
              // The test against `importScripts` prevents this implementation from being installed inside a web worker,
              // where `global.postMessage` means something completely different and can't be used for this purpose.
              if (global.postMessage && !global.importScripts) {
                var postMessageIsAsynchronous = true;
                var oldOnMessage = global.onmessage;
                global.onmessage = function () {
                  postMessageIsAsynchronous = false;
                };
                global.postMessage('', '*');
                global.onmessage = oldOnMessage;
                return postMessageIsAsynchronous;
              }
            }

            function installPostMessageImplementation() {
              // Installs an event handler on `global` for the `message` event: see
              // * https://developer.mozilla.org/en/DOM/window.postMessage
              // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

              var messagePrefix =
                'setImmediate$' + Math.random() + '$';
              var onGlobalMessage = function (event) {
                if (
                  event.source === global &&
                  typeof event.data === 'string' &&
                  event.data.indexOf(messagePrefix) === 0
                ) {
                  runIfPresent(
                    +event.data.slice(messagePrefix.length)
                  );
                }
              };

              if (global.addEventListener) {
                global.addEventListener(
                  'message',
                  onGlobalMessage,
                  false
                );
              } else {
                global.attachEvent('onmessage', onGlobalMessage);
              }

              registerImmediate = function (handle) {
                global.postMessage(messagePrefix + handle, '*');
              };
            }

            function installMessageChannelImplementation() {
              var channel = new MessageChannel();
              channel.port1.onmessage = function (event) {
                var handle = event.data;
                runIfPresent(handle);
              };

              registerImmediate = function (handle) {
                channel.port2.postMessage(handle);
              };
            }

            function installReadyStateChangeImplementation() {
              var html = doc.documentElement;
              registerImmediate = function (handle) {
                // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
                // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
                var script = doc.createElement('script');
                script.onreadystatechange = function () {
                  runIfPresent(handle);
                  script.onreadystatechange = null;
                  html.removeChild(script);
                  script = null;
                };
                html.appendChild(script);
              };
            }

            function installSetTimeoutImplementation() {
              registerImmediate = function (handle) {
                setTimeout(runIfPresent, 0, handle);
              };
            }

            // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
            var attachTo =
              Object.getPrototypeOf && Object.getPrototypeOf(global);
            attachTo =
              attachTo && attachTo.setTimeout ? attachTo : global;

            // Don't get fooled by e.g. browserify environments.
            if (
              {}.toString.call(global.process) === '[object process]'
            ) {
              // For Node.js before 0.9
              installNextTickImplementation();
            } else if (canUsePostMessage()) {
              // For non-IE10 modern browsers
              installPostMessageImplementation();
            } else if (global.MessageChannel) {
              // For web workers, where supported
              installMessageChannelImplementation();
            } else if (
              doc &&
              'onreadystatechange' in doc.createElement('script')
            ) {
              // For IE 6–8
              installReadyStateChangeImplementation();
            } else {
              // For older browsers
              installSetTimeoutImplementation();
            }

            attachTo.setImmediate = setImmediate;
            attachTo.clearImmediate = clearImmediate;
          })(
            typeof self === 'undefined'
              ? typeof global === 'undefined'
                ? this
                : global
              : self
          );

          /* WEBPACK VAR INJECTION */
        }).call(
          this,
          __webpack_require__(
            /*! ./../webpack/buildin/global.js */
            './node_modules/webpack/buildin/global.js'
          ),
          __webpack_require__(
            /*! ./../process/browser.js */
            './node_modules/process/browser.js'
          )
        );

        /***/
      },

    /***/
    /*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
    './node_modules/timers-browserify/main.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */
        (function (global) {
          var scope =
            (typeof global !== 'undefined' && global) ||
            (typeof self !== 'undefined' && self) ||
            window;
          var apply = Function.prototype.apply;

          // DOM APIs, for completeness

          exports.setTimeout = function () {
            return new Timeout(
              apply.call(setTimeout, scope, arguments),
              clearTimeout
            );
          };
          exports.setInterval = function () {
            return new Timeout(
              apply.call(setInterval, scope, arguments),
              clearInterval
            );
          };
          exports.clearTimeout = exports.clearInterval = function (
            timeout
          ) {
            if (timeout) {
              timeout.close();
            }
          };

          function Timeout(id, clearFn) {
            this._id = id;
            this._clearFn = clearFn;
          }
          Timeout.prototype.unref = Timeout.prototype.ref =
            function () {};
          Timeout.prototype.close = function () {
            this._clearFn.call(scope, this._id);
          };

          // Does not start the time, just sets up the members needed.
          exports.enroll = function (item, msecs) {
            clearTimeout(item._idleTimeoutId);
            item._idleTimeout = msecs;
          };

          exports.unenroll = function (item) {
            clearTimeout(item._idleTimeoutId);
            item._idleTimeout = -1;
          };

          exports._unrefActive = exports.active = function (item) {
            clearTimeout(item._idleTimeoutId);

            var msecs = item._idleTimeout;
            if (msecs >= 0) {
              item._idleTimeoutId = setTimeout(function onTimeout() {
                if (item._onTimeout) item._onTimeout();
              }, msecs);
            }
          };

          // setimmediate attaches itself to the global object
          __webpack_require__(
            /*! setimmediate */
            './node_modules/setimmediate/setImmediate.js'
          );
          // On some exotic environments, it's not clear which object `setimmediate` was
          // able to install onto.  Search each possibility in the same order as the
          // `setimmediate` library.
          exports.setImmediate =
            (typeof self !== 'undefined' && self.setImmediate) ||
            (typeof global !== 'undefined' && global.setImmediate) ||
            (this && this.setImmediate);
          exports.clearImmediate =
            (typeof self !== 'undefined' && self.clearImmediate) ||
            (typeof global !== 'undefined' &&
              global.clearImmediate) ||
            (this && this.clearImmediate);

          /* WEBPACK VAR INJECTION */
        }).call(
          this,
          __webpack_require__(
            /*! ./../webpack/buildin/global.js */
            './node_modules/webpack/buildin/global.js'
          )
        );

        /***/
      },

    /***/
    /*!***********************************************!*\
  !*** ./node_modules/unidragger/unidragger.js ***!
  \***********************************************/
    './node_modules/unidragger/unidragger.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /*!
         * Unidragger v2.4.0
         * Draggable base class
         * MIT license
         */

        /*jshint browser: true, unused: true, undef: true, strict: true */

        (function (window, factory) {
          // universal module definition
          /*jshint strict: false */
          /*globals define, module, require */

          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! unipointer/unipointer */
                './node_modules/unipointer/unipointer.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function (Unipointer) {
              return factory(window, Unipointer);
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(window, Unipointer) {
          'use strict';

          // -------------------------- Unidragger -------------------------- //

          function Unidragger() {}

          // inherit Unipointer & EvEmitter
          var proto = (Unidragger.prototype = Object.create(
            Unipointer.prototype
          ));

          // ----- bind start ----- //

          proto.bindHandles = function () {
            this._bindHandles(true);
          };

          proto.unbindHandles = function () {
            this._bindHandles(false);
          };

          /**
           * Add or remove start event
           * @param {Boolean} isAdd
           */
          proto._bindHandles = function (isAdd) {
            // munge isAdd, default to true
            isAdd = isAdd === undefined ? true : isAdd;
            // bind each handle
            var bindMethod = isAdd
              ? 'addEventListener'
              : 'removeEventListener';
            var touchAction = isAdd ? this._touchActionValue : '';
            for (var i = 0; i < this.handles.length; i++) {
              var handle = this.handles[i];
              this._bindStartEvent(handle, isAdd);
              handle[bindMethod]('click', this);
              // touch-action: none to override browser touch gestures. metafizzy/flickity#540
              if (window.PointerEvent) {
                handle.style.touchAction = touchAction;
              }
            }
          };

          // prototype so it can be overwriteable by Flickity
          proto._touchActionValue = 'none';

          // ----- start event ----- //

          /**
           * pointer start
           * @param {Event} event
           * @param {Event or Touch} pointer
           */
          proto.pointerDown = function (event, pointer) {
            var isOkay = this.okayPointerDown(event);
            if (!isOkay) {
              return;
            }
            // track start event position
            // Safari 9 overrides pageX and pageY. These values needs to be copied. flickity#842
            this.pointerDownPointer = {
              pageX: pointer.pageX,
              pageY: pointer.pageY,
            };

            event.preventDefault();
            this.pointerDownBlur();
            // bind move and end events
            this._bindPostStartEvents(event);
            this.emitEvent('pointerDown', [event, pointer]);
          };

          // nodes that have text fields
          var cursorNodes = {
            TEXTAREA: true,
            INPUT: true,
            SELECT: true,
            OPTION: true,
          };

          // input types that do not have text fields
          var clickTypes = {
            radio: true,
            checkbox: true,
            button: true,
            submit: true,
            image: true,
            file: true,
          };

          // dismiss inputs with text fields. flickity#403, flickity#404
          proto.okayPointerDown = function (event) {
            var isCursorNode = cursorNodes[event.target.nodeName];
            var isClickType = clickTypes[event.target.type];
            var isOkay = !isCursorNode || isClickType;
            if (!isOkay) {
              this._pointerReset();
            }
            return isOkay;
          };

          // kludge to blur previously focused input
          proto.pointerDownBlur = function () {
            var focused = document.activeElement;
            // do not blur body for IE10, metafizzy/flickity#117
            var canBlur =
              focused && focused.blur && focused != document.body;
            if (canBlur) {
              focused.blur();
            }
          };

          // ----- move event ----- //

          /**
           * drag move
           * @param {Event} event
           * @param {Event or Touch} pointer
           */
          proto.pointerMove = function (event, pointer) {
            var moveVector = this._dragPointerMove(event, pointer);
            this.emitEvent('pointerMove', [
              event,
              pointer,
              moveVector,
            ]);
            this._dragMove(event, pointer, moveVector);
          };

          // base pointer move logic
          proto._dragPointerMove = function (event, pointer) {
            var moveVector = {
              x: pointer.pageX - this.pointerDownPointer.pageX,
              y: pointer.pageY - this.pointerDownPointer.pageY,
            };
            // start drag if pointer has moved far enough to start drag
            if (!this.isDragging && this.hasDragStarted(moveVector)) {
              this._dragStart(event, pointer);
            }
            return moveVector;
          };

          // condition if pointer has moved far enough to start drag
          proto.hasDragStarted = function (moveVector) {
            return (
              Math.abs(moveVector.x) > 3 || Math.abs(moveVector.y) > 3
            );
          };

          // ----- end event ----- //

          /**
           * pointer up
           * @param {Event} event
           * @param {Event or Touch} pointer
           */
          proto.pointerUp = function (event, pointer) {
            this.emitEvent('pointerUp', [event, pointer]);
            this._dragPointerUp(event, pointer);
          };

          proto._dragPointerUp = function (event, pointer) {
            if (this.isDragging) {
              this._dragEnd(event, pointer);
            } else {
              // pointer didn't move enough for drag to start
              this._staticClick(event, pointer);
            }
          };

          // -------------------------- drag -------------------------- //

          // dragStart
          proto._dragStart = function (event, pointer) {
            this.isDragging = true;
            // prevent clicks
            this.isPreventingClicks = true;
            this.dragStart(event, pointer);
          };

          proto.dragStart = function (event, pointer) {
            this.emitEvent('dragStart', [event, pointer]);
          };

          // dragMove
          proto._dragMove = function (event, pointer, moveVector) {
            // do not drag if not dragging yet
            if (!this.isDragging) {
              return;
            }

            this.dragMove(event, pointer, moveVector);
          };

          proto.dragMove = function (event, pointer, moveVector) {
            event.preventDefault();
            this.emitEvent('dragMove', [event, pointer, moveVector]);
          };

          // dragEnd
          proto._dragEnd = function (event, pointer) {
            // set flags
            this.isDragging = false;
            // re-enable clicking async
            setTimeout(
              function () {
                delete this.isPreventingClicks;
              }.bind(this)
            );

            this.dragEnd(event, pointer);
          };

          proto.dragEnd = function (event, pointer) {
            this.emitEvent('dragEnd', [event, pointer]);
          };

          // ----- onclick ----- //

          // handle all clicks and prevent clicks when dragging
          proto.onclick = function (event) {
            if (this.isPreventingClicks) {
              event.preventDefault();
            }
          };

          // ----- staticClick ----- //

          // triggered after pointer down & up with no/tiny movement
          proto._staticClick = function (event, pointer) {
            // ignore emulated mouse up clicks
            if (this.isIgnoringMouseUp && event.type == 'mouseup') {
              return;
            }

            this.staticClick(event, pointer);

            // set flag for emulated clicks 300ms after touchend
            if (event.type != 'mouseup') {
              this.isIgnoringMouseUp = true;
              // reset flag after 300ms
              setTimeout(
                function () {
                  delete this.isIgnoringMouseUp;
                }.bind(this),
                400
              );
            }
          };

          proto.staticClick = function (event, pointer) {
            this.emitEvent('staticClick', [event, pointer]);
          };

          // ----- utils ----- //

          Unidragger.getPointerPoint = Unipointer.getPointerPoint;

          // -----  ----- //

          return Unidragger;
        });

        /***/
      },

    /***/
    /*!***********************************************!*\
  !*** ./node_modules/unipointer/unipointer.js ***!
  \***********************************************/
    './node_modules/unipointer/unipointer.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__;
        /*!
         * Unipointer v2.4.0
         * base class for doing one thing with pointer event
         * MIT license
         */

        /*jshint browser: true, undef: true, unused: true, strict: true */

        (function (window, factory) {
          // universal module definition
          /* jshint strict: false */
          /*global define, module, require */
          if (true) {
            // AMD
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = [
              __webpack_require__(
                /*! ev-emitter/ev-emitter */
                './node_modules/ev-emitter/ev-emitter.js'
              ),
            ]),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function (EvEmitter) {
              return factory(window, EvEmitter);
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(window, function factory(window, EvEmitter) {
          'use strict';

          function noop() {}

          function Unipointer() {}

          // inherit EvEmitter
          var proto = (Unipointer.prototype = Object.create(
            EvEmitter.prototype
          ));

          proto.bindStartEvent = function (elem) {
            this._bindStartEvent(elem, true);
          };

          proto.unbindStartEvent = function (elem) {
            this._bindStartEvent(elem, false);
          };

          /**
           * Add or remove start event
           * @param {Boolean} isAdd - remove if falsey
           */
          proto._bindStartEvent = function (elem, isAdd) {
            // munge isAdd, default to true
            isAdd = isAdd === undefined ? true : isAdd;
            var bindMethod = isAdd
              ? 'addEventListener'
              : 'removeEventListener';

            // default to mouse events
            var startEvent = 'mousedown';
            if ('ontouchstart' in window) {
              // HACK prefer Touch Events as you can preventDefault on touchstart to
              // disable scroll in iOS & mobile Chrome metafizzy/flickity#1177
              startEvent = 'touchstart';
            } else if (window.PointerEvent) {
              // Pointer Events
              startEvent = 'pointerdown';
            }
            elem[bindMethod](startEvent, this);
          };

          // trigger handler methods for events
          proto.handleEvent = function (event) {
            var method = 'on' + event.type;
            if (this[method]) {
              this[method](event);
            }
          };

          // returns the touch that we're keeping track of
          proto.getTouch = function (touches) {
            for (var i = 0; i < touches.length; i++) {
              var touch = touches[i];
              if (touch.identifier == this.pointerIdentifier) {
                return touch;
              }
            }
          };

          // ----- start event ----- //

          proto.onmousedown = function (event) {
            // dismiss clicks from right or middle buttons
            var button = event.button;
            if (button && button !== 0 && button !== 1) {
              return;
            }
            this._pointerDown(event, event);
          };

          proto.ontouchstart = function (event) {
            this._pointerDown(event, event.changedTouches[0]);
          };

          proto.onpointerdown = function (event) {
            this._pointerDown(event, event);
          };

          /**
           * pointer start
           * @param {Event} event
           * @param {Event or Touch} pointer
           */
          proto._pointerDown = function (event, pointer) {
            // dismiss right click and other pointers
            // button = 0 is okay, 1-4 not
            if (event.button || this.isPointerDown) {
              return;
            }

            this.isPointerDown = true;
            // save pointer identifier to match up touch events
            this.pointerIdentifier =
              pointer.pointerId !== undefined // pointerId for pointer events, touch.indentifier for touch events
                ? pointer.pointerId
                : pointer.identifier;

            this.pointerDown(event, pointer);
          };

          proto.pointerDown = function (event, pointer) {
            this._bindPostStartEvents(event);
            this.emitEvent('pointerDown', [event, pointer]);
          };

          // hash of events to be bound after start event
          var postStartEvents = {
            mousedown: ['mousemove', 'mouseup'],
            touchstart: ['touchmove', 'touchend', 'touchcancel'],
            pointerdown: [
              'pointermove',
              'pointerup',
              'pointercancel',
            ],
          };

          proto._bindPostStartEvents = function (event) {
            if (!event) {
              return;
            }
            // get proper events to match start event
            var events = postStartEvents[event.type];
            // bind events to node
            events.forEach(function (eventName) {
              window.addEventListener(eventName, this);
            }, this);
            // save these arguments
            this._boundPointerEvents = events;
          };

          proto._unbindPostStartEvents = function () {
            // check for _boundEvents, in case dragEnd triggered twice (old IE8 bug)
            if (!this._boundPointerEvents) {
              return;
            }
            this._boundPointerEvents.forEach(function (eventName) {
              window.removeEventListener(eventName, this);
            }, this);

            delete this._boundPointerEvents;
          };

          // ----- move event ----- //

          proto.onmousemove = function (event) {
            this._pointerMove(event, event);
          };

          proto.onpointermove = function (event) {
            if (event.pointerId == this.pointerIdentifier) {
              this._pointerMove(event, event);
            }
          };

          proto.ontouchmove = function (event) {
            var touch = this.getTouch(event.changedTouches);
            if (touch) {
              this._pointerMove(event, touch);
            }
          };

          /**
           * pointer move
           * @param {Event} event
           * @param {Event or Touch} pointer
           * @private
           */
          proto._pointerMove = function (event, pointer) {
            this.pointerMove(event, pointer);
          };

          // public
          proto.pointerMove = function (event, pointer) {
            this.emitEvent('pointerMove', [event, pointer]);
          };

          // ----- end event ----- //

          proto.onmouseup = function (event) {
            this._pointerUp(event, event);
          };

          proto.onpointerup = function (event) {
            if (event.pointerId == this.pointerIdentifier) {
              this._pointerUp(event, event);
            }
          };

          proto.ontouchend = function (event) {
            var touch = this.getTouch(event.changedTouches);
            if (touch) {
              this._pointerUp(event, touch);
            }
          };

          /**
           * pointer up
           * @param {Event} event
           * @param {Event or Touch} pointer
           * @private
           */
          proto._pointerUp = function (event, pointer) {
            this._pointerDone();
            this.pointerUp(event, pointer);
          };

          // public
          proto.pointerUp = function (event, pointer) {
            this.emitEvent('pointerUp', [event, pointer]);
          };

          // ----- pointer done ----- //

          // triggered on pointer up & pointer cancel
          proto._pointerDone = function () {
            this._pointerReset();
            this._unbindPostStartEvents();
            this.pointerDone();
          };

          proto._pointerReset = function () {
            // reset properties
            this.isPointerDown = false;
            delete this.pointerIdentifier;
          };

          proto.pointerDone = noop;

          // ----- pointer cancel ----- //

          proto.onpointercancel = function (event) {
            if (event.pointerId == this.pointerIdentifier) {
              this._pointerCancel(event, event);
            }
          };

          proto.ontouchcancel = function (event) {
            var touch = this.getTouch(event.changedTouches);
            if (touch) {
              this._pointerCancel(event, touch);
            }
          };

          /**
           * pointer cancel
           * @param {Event} event
           * @param {Event or Touch} pointer
           * @private
           */
          proto._pointerCancel = function (event, pointer) {
            this._pointerDone();
            this.pointerCancel(event, pointer);
          };

          // public
          proto.pointerCancel = function (event, pointer) {
            this.emitEvent('pointerCancel', [event, pointer]);
          };

          // -----  ----- //

          // utility function for getting x/y coords from event
          Unipointer.getPointerPoint = function (pointer) {
            return {
              x: pointer.pageX,
              y: pointer.pageY,
            };
          };

          // -----  ----- //

          return Unipointer;
        });

        /***/
      },

    /***/
    /*!************************************************************!*\
  !*** ./node_modules/vanilla-lazyload/dist/lazyload.min.js ***!
  \************************************************************/
    './node_modules/vanilla-lazyload/dist/lazyload.min.js':
      /*! no static exports found */
      /***/
      function (module, exports, __webpack_require__) {
        !(function (n, t) {
          true ? (module.exports = t()) : undefined;
        })(this, function () {
          'use strict';
          function n() {
            return (
              (n =
                Object.assign ||
                function (n) {
                  for (var t = 1; t < arguments.length; t++) {
                    var e = arguments[t];
                    for (var i in e)
                      Object.prototype.hasOwnProperty.call(e, i) &&
                        (n[i] = e[i]);
                  }
                  return n;
                }),
              n.apply(this, arguments)
            );
          }
          var t = 'undefined' != typeof window,
            e =
              (t && !('onscroll' in window)) ||
              ('undefined' != typeof navigator &&
                /(gle|ing|ro)bot|crawl|spider/i.test(
                  navigator.userAgent
                )),
            i = t && 'IntersectionObserver' in window,
            o = t && 'classList' in document.createElement('p'),
            a = t && window.devicePixelRatio > 1,
            r = {
              elements_selector: '.lazy',
              container: e || t ? document : null,
              threshold: 300,
              thresholds: null,
              data_src: 'src',
              data_srcset: 'srcset',
              data_sizes: 'sizes',
              data_bg: 'bg',
              data_bg_hidpi: 'bg-hidpi',
              data_bg_multi: 'bg-multi',
              data_bg_multi_hidpi: 'bg-multi-hidpi',
              data_bg_set: 'bg-set',
              data_poster: 'poster',
              class_applied: 'applied',
              class_loading: 'loading',
              class_loaded: 'loaded',
              class_error: 'error',
              class_entered: 'entered',
              class_exited: 'exited',
              unobserve_completed: !0,
              unobserve_entered: !1,
              cancel_on_exit: !0,
              callback_enter: null,
              callback_exit: null,
              callback_applied: null,
              callback_loading: null,
              callback_loaded: null,
              callback_error: null,
              callback_finish: null,
              callback_cancel: null,
              use_native: !1,
              restore_on_error: !1,
            },
            c = function (t) {
              return n({}, r, t);
            },
            l = function (n, t) {
              var e,
                i = 'LazyLoad::Initialized',
                o = new n(t);
              try {
                e = new CustomEvent(i, {
                  detail: {
                    instance: o,
                  },
                });
              } catch (n) {
                (e =
                  document.createEvent(
                    'CustomEvent'
                  )).initCustomEvent(i, !1, !1, {
                  instance: o,
                });
              }
              window.dispatchEvent(e);
            },
            u = 'src',
            s = 'srcset',
            d = 'sizes',
            f = 'poster',
            _ = 'llOriginalAttrs',
            g = 'data',
            v = 'loading',
            b = 'loaded',
            p = 'applied',
            m = 'error',
            h = 'native',
            E = 'data-',
            I = 'll-status',
            y = function (n, t) {
              return n.getAttribute(E + t);
            },
            k = function (n) {
              return y(n, I);
            },
            w = function (n, t) {
              return (function (n, t, e) {
                var i = 'data-ll-status';
                null !== e
                  ? n.setAttribute(i, e)
                  : n.removeAttribute(i);
              })(n, 0, t);
            },
            A = function (n) {
              return w(n, null);
            },
            L = function (n) {
              return null === k(n);
            },
            O = function (n) {
              return k(n) === h;
            },
            x = [v, b, p, m],
            C = function (n, t, e, i) {
              n &&
                'function' == typeof n &&
                (void 0 === i
                  ? void 0 === e
                    ? n(t)
                    : n(t, e)
                  : n(t, e, i));
            },
            N = function (n, t) {
              '' !== t &&
                (o
                  ? n.classList.add(t)
                  : (n.className += (n.className ? ' ' : '') + t));
            },
            M = function (n, t) {
              '' !== t &&
                (o
                  ? n.classList.remove(t)
                  : (n.className = n.className
                      .replace(
                        new RegExp('(^|\\s+)' + t + '(\\s+|$)'),
                        ' '
                      )
                      .replace(/^\s+/, '')
                      .replace(/\s+$/, '')));
            },
            z = function (n) {
              return n.llTempImage;
            },
            T = function (n, t) {
              if (t) {
                var e = t._observer;
                e && e.unobserve(n);
              }
            },
            R = function (n, t) {
              n && (n.loadingCount += t);
            },
            G = function (n, t) {
              n && (n.toLoadCount = t);
            },
            j = function (n) {
              for (var t, e = [], i = 0; (t = n.children[i]); i += 1)
                'SOURCE' === t.tagName && e.push(t);
              return e;
            },
            D = function (n, t) {
              var e = n.parentNode;
              e && 'PICTURE' === e.tagName && j(e).forEach(t);
            },
            H = function (n, t) {
              j(n).forEach(t);
            },
            V = [u],
            F = [u, f],
            B = [u, s, d],
            J = [g],
            P = function (n) {
              return !!n[_];
            },
            S = function (n) {
              return n[_];
            },
            U = function (n) {
              return delete n[_];
            },
            $ = function (n, t) {
              if (!P(n)) {
                var e = {};
                t.forEach(function (t) {
                  e[t] = n.getAttribute(t);
                }),
                  (n[_] = e);
              }
            },
            q = function (n, t) {
              if (P(n)) {
                var e = S(n);
                t.forEach(function (t) {
                  !(function (n, t, e) {
                    e ? n.setAttribute(t, e) : n.removeAttribute(t);
                  })(n, t, e[t]);
                });
              }
            },
            K = function (n, t, e) {
              N(n, t.class_applied),
                w(n, p),
                e &&
                  (t.unobserve_completed && T(n, t),
                  C(t.callback_applied, n, e));
            },
            Q = function (n, t, e) {
              N(n, t.class_loading),
                w(n, v),
                e && (R(e, 1), C(t.callback_loading, n, e));
            },
            W = function (n, t, e) {
              e && n.setAttribute(t, e);
            },
            X = function (n, t) {
              W(n, d, y(n, t.data_sizes)),
                W(n, s, y(n, t.data_srcset)),
                W(n, u, y(n, t.data_src));
            },
            Y = {
              IMG: function (n, t) {
                D(n, function (n) {
                  $(n, B), X(n, t);
                }),
                  $(n, B),
                  X(n, t);
              },
              IFRAME: function (n, t) {
                $(n, V), W(n, u, y(n, t.data_src));
              },
              VIDEO: function (n, t) {
                H(n, function (n) {
                  $(n, V), W(n, u, y(n, t.data_src));
                }),
                  $(n, F),
                  W(n, f, y(n, t.data_poster)),
                  W(n, u, y(n, t.data_src)),
                  n.load();
              },
              OBJECT: function (n, t) {
                $(n, J), W(n, g, y(n, t.data_src));
              },
            },
            Z = ['IMG', 'IFRAME', 'VIDEO', 'OBJECT'],
            nn = function (n, t) {
              !t ||
                (function (n) {
                  return n.loadingCount > 0;
                })(t) ||
                (function (n) {
                  return n.toLoadCount > 0;
                })(t) ||
                C(n.callback_finish, t);
            },
            tn = function (n, t, e) {
              n.addEventListener(t, e), (n.llEvLisnrs[t] = e);
            },
            en = function (n, t, e) {
              n.removeEventListener(t, e);
            },
            on = function (n) {
              return !!n.llEvLisnrs;
            },
            an = function (n) {
              if (on(n)) {
                var t = n.llEvLisnrs;
                for (var e in t) {
                  var i = t[e];
                  en(n, e, i);
                }
                delete n.llEvLisnrs;
              }
            },
            rn = function (n, t, e) {
              !(function (n) {
                delete n.llTempImage;
              })(n),
                R(e, -1),
                (function (n) {
                  n && (n.toLoadCount -= 1);
                })(e),
                M(n, t.class_loading),
                t.unobserve_completed && T(n, e);
            },
            cn = function (n, t, e) {
              var i = z(n) || n;
              on(i) ||
                (function (n, t, e) {
                  on(n) || (n.llEvLisnrs = {});
                  var i =
                    'VIDEO' === n.tagName ? 'loadeddata' : 'load';
                  tn(n, i, t), tn(n, 'error', e);
                })(
                  i,
                  function (o) {
                    !(function (n, t, e, i) {
                      var o = O(t);
                      rn(t, e, i),
                        N(t, e.class_loaded),
                        w(t, b),
                        C(e.callback_loaded, t, i),
                        o || nn(e, i);
                    })(0, n, t, e),
                      an(i);
                  },
                  function (o) {
                    !(function (n, t, e, i) {
                      var o = O(t);
                      rn(t, e, i),
                        N(t, e.class_error),
                        w(t, m),
                        C(e.callback_error, t, i),
                        e.restore_on_error && q(t, B),
                        o || nn(e, i);
                    })(0, n, t, e),
                      an(i);
                  }
                );
            },
            ln = function (n, t, e) {
              !(function (n) {
                return Z.indexOf(n.tagName) > -1;
              })(n)
                ? (function (n, t, e) {
                    !(function (n) {
                      n.llTempImage = document.createElement('IMG');
                    })(n),
                      cn(n, t, e),
                      (function (n) {
                        P(n) ||
                          (n[_] = {
                            backgroundImage: n.style.backgroundImage,
                          });
                      })(n),
                      (function (n, t, e) {
                        var i = y(n, t.data_bg),
                          o = y(n, t.data_bg_hidpi),
                          r = a && o ? o : i;
                        r &&
                          ((n.style.backgroundImage = 'url("'.concat(
                            r,
                            '")'
                          )),
                          z(n).setAttribute(u, r),
                          Q(n, t, e));
                      })(n, t, e),
                      (function (n, t, e) {
                        var i = y(n, t.data_bg_multi),
                          o = y(n, t.data_bg_multi_hidpi),
                          r = a && o ? o : i;
                        r &&
                          ((n.style.backgroundImage = r), K(n, t, e));
                      })(n, t, e),
                      (function (n, t, e) {
                        var i = y(n, t.data_bg_set);
                        if (i) {
                          var o = i.split('|'),
                            a = o.map(function (n) {
                              return 'image-set('.concat(n, ')');
                            });
                          (n.style.backgroundImage = a.join()),
                            '' === n.style.backgroundImage &&
                              ((a = o.map(function (n) {
                                return '-webkit-image-set('.concat(
                                  n,
                                  ')'
                                );
                              })),
                              (n.style.backgroundImage = a.join())),
                            K(n, t, e);
                        }
                      })(n, t, e);
                  })(n, t, e)
                : (function (n, t, e) {
                    cn(n, t, e),
                      (function (n, t, e) {
                        var i = Y[n.tagName];
                        i && (i(n, t), Q(n, t, e));
                      })(n, t, e);
                  })(n, t, e);
            },
            un = function (n) {
              n.removeAttribute(u),
                n.removeAttribute(s),
                n.removeAttribute(d);
            },
            sn = function (n) {
              D(n, function (n) {
                q(n, B);
              }),
                q(n, B);
            },
            dn = {
              IMG: sn,
              IFRAME: function (n) {
                q(n, V);
              },
              VIDEO: function (n) {
                H(n, function (n) {
                  q(n, V);
                }),
                  q(n, F),
                  n.load();
              },
              OBJECT: function (n) {
                q(n, J);
              },
            },
            fn = function (n, t) {
              (function (n) {
                var t = dn[n.tagName];
                t
                  ? t(n)
                  : (function (n) {
                      if (P(n)) {
                        var t = S(n);
                        n.style.backgroundImage = t.backgroundImage;
                      }
                    })(n);
              })(n),
                (function (n, t) {
                  L(n) ||
                    O(n) ||
                    (M(n, t.class_entered),
                    M(n, t.class_exited),
                    M(n, t.class_applied),
                    M(n, t.class_loading),
                    M(n, t.class_loaded),
                    M(n, t.class_error));
                })(n, t),
                A(n),
                U(n);
            },
            _n = ['IMG', 'IFRAME', 'VIDEO'],
            gn = function (n) {
              return (
                n.use_native &&
                'loading' in HTMLImageElement.prototype
              );
            },
            vn = function (n, t, e) {
              n.forEach(function (n) {
                return (function (n) {
                  return n.isIntersecting || n.intersectionRatio > 0;
                })(n)
                  ? (function (n, t, e, i) {
                      var o = (function (n) {
                        return x.indexOf(k(n)) >= 0;
                      })(n);
                      w(n, 'entered'),
                        N(n, e.class_entered),
                        M(n, e.class_exited),
                        (function (n, t, e) {
                          t.unobserve_entered && T(n, e);
                        })(n, e, i),
                        C(e.callback_enter, n, t, i),
                        o || ln(n, e, i);
                    })(n.target, n, t, e)
                  : (function (n, t, e, i) {
                      L(n) ||
                        (N(n, e.class_exited),
                        (function (n, t, e, i) {
                          e.cancel_on_exit &&
                            (function (n) {
                              return k(n) === v;
                            })(n) &&
                            'IMG' === n.tagName &&
                            (an(n),
                            (function (n) {
                              D(n, function (n) {
                                un(n);
                              }),
                                un(n);
                            })(n),
                            sn(n),
                            M(n, e.class_loading),
                            R(i, -1),
                            A(n),
                            C(e.callback_cancel, n, t, i));
                        })(n, t, e, i),
                        C(e.callback_exit, n, t, i));
                    })(n.target, n, t, e);
              });
            },
            bn = function (n) {
              return Array.prototype.slice.call(n);
            },
            pn = function (n) {
              return n.container.querySelectorAll(
                n.elements_selector
              );
            },
            mn = function (n) {
              return (function (n) {
                return k(n) === m;
              })(n);
            },
            hn = function (n, t) {
              return (function (n) {
                return bn(n).filter(L);
              })(n || pn(t));
            },
            En = function (n, e) {
              var o = c(n);
              (this._settings = o),
                (this.loadingCount = 0),
                (function (n, t) {
                  i &&
                    !gn(n) &&
                    (t._observer = new IntersectionObserver(
                      function (e) {
                        vn(e, n, t);
                      },
                      (function (n) {
                        return {
                          root:
                            n.container === document
                              ? null
                              : n.container,
                          rootMargin:
                            n.thresholds || n.threshold + 'px',
                        };
                      })(n)
                    ));
                })(o, this),
                (function (n, e) {
                  t &&
                    ((e._onlineHandler = function () {
                      !(function (n, t) {
                        var e;
                        ((e = pn(n)), bn(e).filter(mn)).forEach(
                          function (t) {
                            M(t, n.class_error), A(t);
                          }
                        ),
                          t.update();
                      })(n, e);
                    }),
                    window.addEventListener(
                      'online',
                      e._onlineHandler
                    ));
                })(o, this),
                this.update(e);
            };
          return (
            (En.prototype = {
              update: function (n) {
                var t,
                  o,
                  a = this._settings,
                  r = hn(n, a);
                G(this, r.length),
                  !e && i
                    ? gn(a)
                      ? (function (n, t, e) {
                          n.forEach(function (n) {
                            -1 !== _n.indexOf(n.tagName) &&
                              (function (n, t, e) {
                                n.setAttribute('loading', 'lazy'),
                                  cn(n, t, e),
                                  (function (n, t) {
                                    var e = Y[n.tagName];
                                    e && e(n, t);
                                  })(n, t),
                                  w(n, h);
                              })(n, t, e);
                          }),
                            G(e, 0);
                        })(r, a, this)
                      : ((o = r),
                        (function (n) {
                          n.disconnect();
                        })((t = this._observer)),
                        (function (n, t) {
                          t.forEach(function (t) {
                            n.observe(t);
                          });
                        })(t, o))
                    : this.loadAll(r);
              },
              destroy: function () {
                this._observer && this._observer.disconnect(),
                  t &&
                    window.removeEventListener(
                      'online',
                      this._onlineHandler
                    ),
                  pn(this._settings).forEach(function (n) {
                    U(n);
                  }),
                  delete this._observer,
                  delete this._settings,
                  delete this._onlineHandler,
                  delete this.loadingCount,
                  delete this.toLoadCount;
              },
              loadAll: function (n) {
                var t = this,
                  e = this._settings;
                hn(n, e).forEach(function (n) {
                  T(n, t), ln(n, e, t);
                });
              },
              restoreAll: function () {
                var n = this._settings;
                pn(n).forEach(function (t) {
                  fn(t, n);
                });
              },
            }),
            (En.load = function (n, t) {
              var e = c(t);
              ln(n, e);
            }),
            (En.resetStatus = function (n) {
              A(n);
            }),
            t &&
              (function (n, t) {
                if (t)
                  if (t.length)
                    for (var e, i = 0; (e = t[i]); i += 1) l(n, e);
                  else l(n, t);
              })(En, window.lazyLoadOptions),
            En
          );
        });

        /***/
      },

    /***/
    /*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
    './node_modules/webpack/buildin/global.js':
      /*! no static exports found */
      /***/
      function (module, exports) {
        var g;

        // This works in non-strict mode
        g = (function () {
          return this;
        })();

        try {
          // This works if eval is allowed (see CSP)
          g = g || new Function('return this')();
        } catch (e) {
          // This works if the window reference is available
          if (typeof window === 'object') g = window;
        }

        // g can still be undefined, but nothing to do about it...
        // We return undefined, instead of nothing here, so it's
        // easier to handle this case. if(!global) { ...}

        module.exports = g;

        /***/
      },

    /***/
    /*!**************************************************!*\
  !*** ./resources/assets/js/components/Layout.js ***!
  \**************************************************/
    './resources/assets/js/components/Layout.js':
      /*! exports provided: default */
      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */
        __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Layout;
          }
        );
        class Layout {
          constructor() {
            this.onResize();
            this.bindEvents();
          }
          bindEvents() {
            window.addEventListener('resize', () => {
              this.onResize();
            });
          }
          onResize() {
            this.isMobile = window.matchMedia(
              '(max-width: 767px)'
            ).matches;
            this.W = window.innerWidth;
            this.H = window.innerHeight;
          }
        }

        /***/
      },

    /***/
    /*!************************************************!*\
  !*** ./resources/assets/js/components/Logo.js ***!
  \************************************************/
    './resources/assets/js/components/Logo.js':
      /*! exports provided: default */
      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */
        __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Logo;
          }
        );
        /* harmony import */
        var core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! core-js/modules/es.string.starts-with.js */
            './node_modules/core-js/modules/es.string.starts-with.js'
          );
        /* harmony import */
        var core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/
          __webpack_require__.n(
            core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_0__
          );
        /* harmony import */
        var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! jquery */
          './node_modules/jquery/dist/jquery.js'
        );
        /* harmony import */
        var jquery__WEBPACK_IMPORTED_MODULE_1___default =
          /*#__PURE__*/
          __webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);
        /* harmony import */
        var _json_icons__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ../json/icons */
            './resources/assets/js/json/icons.json'
          );
        var _json_icons__WEBPACK_IMPORTED_MODULE_2___namespace =
          /*#__PURE__*/
          __webpack_require__.t(
            /*! ../json/icons */
            './resources/assets/js/json/icons.json',
            1
          );

        class Logo {
          constructor() {
            this.icons = [];
            this.icons['normal'] = [];
            this.icons['small'] = [];
            this.sortIcons(_json_icons__WEBPACK_IMPORTED_MODULE_2__);
            this.scramble(
              jquery__WEBPACK_IMPORTED_MODULE_1___default()(
                '.js-logo'
              )
            );
          }
          scramble($el) {
            $el.find('span').each((i, e) => {
              const $e =
                jquery__WEBPACK_IMPORTED_MODULE_1___default()(e);
              const size = $e.hasClass('I') ? 'small' : 'normal';
              setTimeout(() => {
                this.changeIcon($e, size);
              }, this.randomTimer() * 3);
            });
          }
          changeIcon($el, size) {
            let icon = '';
            if (size === 'small') {
              icon =
                this.icons['small'][
                  Math.floor(
                    Math.random() * this.icons['small'].length
                  )
                ];
            } else {
              icon =
                this.icons['normal'][
                  Math.floor(
                    Math.random() * this.icons['normal'].length
                  )
                ];
            }
            $el.html('<span class="und-' + icon.name + '"></span>');
            setTimeout(() => {
              this.changeIcon($el, size);
            }, this.randomTimer());
          }
          sortIcons(jsonIcons) {
            jsonIcons.selection.forEach((item) => {
              if (item.name.startsWith('i-')) {
                this.icons['small'].push(item);
              } else {
                this.icons['normal'].push(item);
              }
            });
          }
          randomTimer() {
            return Math.floor((Math.random() + 1) * 500);
          }
        }

        /***/
      },

    /***/
    /*!*****************************************************!*\
  !*** ./resources/assets/js/components/Selection.js ***!
  \*****************************************************/
    './resources/assets/js/components/Selection.js':
      /*! exports provided: default */
      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */
        __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Selection;
          }
        );
        class Selection {
          constructor() {
            const rainbow = [
              'rgba(255, 255, 0, .7)',
              'rgba(255, 0, 0, .7)',
              'rgba(0, 0, 255, .7)',
            ];
            let colorIndex = 0;
            document.addEventListener('selectstart', () => {
              colorIndex = colorIndex + 1;
              if (colorIndex >= rainbow.length) colorIndex = 0;
              document
                .querySelector('body')
                .style.setProperty(
                  '--select-bg',
                  `${rainbow[colorIndex]}`
                );
            });
          }
        }

        /***/
      },

    /***/
    /*!**************************************************!*\
  !*** ./resources/assets/js/components/Slider.js ***!
  \**************************************************/
    './resources/assets/js/components/Slider.js':
      /*! exports provided: default */
      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */
        __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Slider;
          }
        );
        /* harmony import */
        var flickity_fade__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! flickity-fade */
            './node_modules/flickity-fade/flickity-fade.js'
          );
        /* harmony import */
        var flickity_fade__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/
          __webpack_require__.n(
            flickity_fade__WEBPACK_IMPORTED_MODULE_0__
          );
        /* harmony import */
        var imagesloaded__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! imagesloaded */
            './node_modules/imagesloaded/imagesloaded.js'
          );
        /* harmony import */
        var imagesloaded__WEBPACK_IMPORTED_MODULE_1___default =
          /*#__PURE__*/
          __webpack_require__.n(
            imagesloaded__WEBPACK_IMPORTED_MODULE_1__
          );

        class Slider {
          constructor() {
            this.isFlickity = false;
            this.flkty = [];
            window.emitter.on('PageSwitch', (loading) => {
              // destroy flickity instances
              if (this.isFlickity == true) {
                this.flkty.forEach((flktyEl) => {
                  flktyEl.destroy();
                });
                this.isFlickity = !this.isFlickity;
              }
              this.init();
            });
          }
          init() {
            $('body')
              .find('.js-slider')
              .each((i, e) => {
                this.flickity(i, e);
              });
          }
          flickity(i, el) {
            const $meta = $(el).next().find('.js-slider-meta');
            const $current = $(el).next().find('.js-slider-current');
            const $containerSlider = $(el).parent();
            let $container = $(el);
            var $cellButtons = $container.find('.button');
            this.flkty[i] =
              new flickity_fade__WEBPACK_IMPORTED_MODULE_0___default.a(
                el,
                {
                  imagesLoaded: true,
                  percentPosition: false,
                  autoPlay: false,
                  pageDots: false,
                  cellAlign: 'center',
                  lazyLoad: 1,
                  fade: true,
                  wrapAround: true,
                  on: {
                    ready: () => {
                      this.isFlickity = true;
                    },
                    change: (e) => {
                      $meta.html(
                        $(el)
                          .find('.item-' + (e + 1))
                          .data('text')
                      );
                      $current.html(e + 1);
                    },
                  },
                }
              );
            let that = this;
            $containerSlider
              .find('.btn-prev-slider')
              .on('click', () => {
                this.flkty[i].previous();
              });
            $containerSlider
              .find('.btn-next-slider')
              .on('click', () => {
                this.flkty[i].next();
              });
            window.setTimeout(() => {
              this.flkty[i].resize();
            }, 50);
            imagesloaded__WEBPACK_IMPORTED_MODULE_1___default()(
              document.querySelector('body'),
              () => {
                this.flkty[i].resize();
              }
            );
          }
        }

        /***/
      },

    /***/
    /*!*********************************************!*\
  !*** ./resources/assets/js/json/icons.json ***!
  \*********************************************/
    './resources/assets/js/json/icons.json':
      /*! exports provided: selection, metadata, height, prevSize, icons, colorThemes, colorThemeIdx, preferences, IcoMoonType, default */
      /***/
      function (module) {
        module.exports = JSON.parse(
          '{"selection":[{"order":3,"name":"adobe-ud","prevSize":32},{"order":4,"name":"arab","prevSize":32},{"order":5,"name":"arrow","prevSize":32},{"order":6,"name":"ball","prevSize":32},{"order":7,"name":"bam-ii","prevSize":32},{"order":8,"name":"bam","prevSize":32},{"order":9,"name":"bancontact","prevSize":32},{"order":10,"name":"beach-ball-mac","prevSize":32},{"order":11,"name":"beach-ball","prevSize":32},{"order":12,"name":"black-hole","prevSize":32},{"order":13,"name":"brain","prevSize":32},{"order":14,"name":"bulleye","prevSize":32},{"order":15,"name":"chair","prevSize":32},{"order":16,"name":"computer","prevSize":32},{"order":17,"name":"corona","prevSize":32},{"order":18,"name":"dices","prevSize":32},{"order":19,"name":"ditto","prevSize":32},{"order":20,"name":"duck","prevSize":32},{"order":21,"name":"earth-wireframe","prevSize":32},{"order":22,"name":"earth","prevSize":32},{"order":23,"name":"eggs","prevSize":32},{"order":24,"name":"ekin","prevSize":32},{"order":25,"name":"electric-component","prevSize":32},{"order":26,"name":"electric-wire","prevSize":32},{"order":27,"name":"explosion","prevSize":32},{"order":28,"name":"eye","prevSize":32},{"order":29,"name":"fire","prevSize":32},{"order":30,"name":"flatten-the-curve","prevSize":32},{"order":31,"name":"fu","prevSize":32},{"order":32,"name":"funny-man","prevSize":32},{"order":33,"name":"glove","prevSize":32},{"order":34,"name":"highway","prevSize":32},{"order":35,"name":"hot-balls","prevSize":32},{"order":36,"name":"i-arrow","prevSize":32},{"order":37,"name":"i-crooked","prevSize":32},{"order":38,"name":"i-cross","prevSize":32},{"order":39,"name":"i-dna","prevSize":32},{"order":40,"name":"i-electricity","prevSize":32},{"order":41,"name":"i-lucifer-stroke","prevSize":32},{"order":42,"name":"i-lucifer","prevSize":32},{"order":43,"name":"i-paperclip","prevSize":32},{"order":44,"name":"i-snake","prevSize":32,"codes":[59689,59690,59691]},{"order":45,"name":"i-wicked-wire","prevSize":32},{"order":46,"name":"iris","prevSize":32},{"order":47,"name":"lightning","prevSize":32},{"order":48,"name":"mandala","prevSize":32},{"order":49,"name":"mcdonalds","prevSize":32},{"order":50,"name":"mouse-computer","prevSize":32},{"order":51,"name":"mouthmask","prevSize":32},{"order":52,"name":"new-europe","prevSize":32},{"order":53,"name":"noodles","prevSize":32},{"order":54,"name":"nuclear-factory","prevSize":32},{"order":55,"name":"olympics","prevSize":32},{"order":56,"name":"onder-stroom","prevSize":32},{"order":57,"name":"palm-tree","prevSize":32},{"order":58,"name":"paperclip","prevSize":32},{"order":59,"name":"piano","prevSize":32},{"order":60,"name":"planet-ring","prevSize":32},{"order":61,"name":"pyramid","prevSize":32},{"order":62,"name":"rainbow","prevSize":32},{"order":63,"name":"rainy-day","prevSize":32},{"order":64,"name":"rings","prevSize":32},{"order":65,"name":"sine-wave-small","prevSize":32},{"order":66,"name":"slippery","prevSize":32},{"order":67,"name":"smiley","prevSize":32},{"order":68,"name":"socks","prevSize":32},{"order":69,"name":"spiderweb","prevSize":32},{"order":70,"name":"stad-antwerpen-weird","prevSize":32},{"order":71,"name":"star","prevSize":32},{"order":72,"name":"stop","prevSize":32},{"order":73,"name":"sun","prevSize":32},{"order":74,"name":"sunny-day","prevSize":32},{"order":75,"name":"troath","prevSize":32},{"order":76,"name":"turkey-weird","prevSize":32},{"order":77,"name":"undefined","prevSize":32},{"order":78,"name":"vampire","prevSize":32},{"order":79,"name":"waves","prevSize":32},{"order":80,"name":"weird-mask-ii","prevSize":32},{"order":81,"name":"weird-mask","prevSize":32},{"order":82,"name":"weird-religion-ii","prevSize":32},{"order":83,"name":"weird-religion","prevSize":32},{"order":84,"name":"worm","prevSize":32},{"order":85,"name":"ying-yang","prevSize":32}],"metadata":{"name":"Untitled Set 2","importSize":{"width":1080,"height":1080},"iconsHash":1201387265},"height":1024,"prevSize":32,"icons":[{"paths":["M765.104 815.668c-20.122 0-40.244 0-60.366 0-46.153 0-92.305 0-138.458 0-51.701 0-103.4 0-155.101 0-36.897 0-73.794 0-110.692 0-6.259 0-12.518 0.040-18.777 0-30.749-0.193-59.347-19.739-69.339-49.149-3.787-11.147-4.040-22.185-4.040-33.696 0-12.568 0-25.135 0-37.703 0-44.172 0-88.345 0-132.517 0-52.268 0-104.534 0-156.802 0-39.616 0-79.233 0-118.849 0-8.72-0.007-17.441 0-26.161 0.018-23.33 9.711-45.398 28.368-59.88 14.473-11.234 31.57-15.275 49.506-15.275 10.488 0 20.977 0 31.465 0 41.689 0 83.378 0 125.067 0 52.387 0 104.773 0 157.16 0 42.329 0 84.658 0 126.987 0 10.916 0 21.832 0 32.747 0 1.794 0 3.589-0.011 5.383 0 14.659 0.095 28.683 4.304 40.921 12.407 20.848 13.803 32.388 37.431 32.427 62.138 0.012 8.225 0 16.45 0 24.676 0 39.145 0 78.291 0 117.437 0 52.054 0 104.11 0 156.164 0 44.556 0 89.112 0 133.668 0 13.117 0 26.232 0 39.349 0 10.222 0.166 20.193-2.561 30.207-8.644 31.748-37.975 53.732-70.698 53.989-12.197 0.096-12.225 19.059 0 18.963 39.057-0.307 73.959-25.097 87.089-61.881 4.57-12.805 5.132-25.987 5.132-39.354 0-32.741 0-65.484 0-98.225 0-51.312 0-102.624 0-153.936 0-48.99 0-97.979 0-146.969 0-24.799 0.050-49.599 0-74.397-0.060-29.835-13.842-57.51-37.777-75.348-17.075-12.726-37.451-17.848-58.463-17.848-28.934 0-57.866 0-86.8 0-50.471 0-100.943 0-151.414 0-50.155 0-100.31 0-150.465 0-28.934 0-57.866 0-86.8 0-21.012 0-41.387 5.124-58.463 17.848-23.981 17.87-37.72 45.569-37.777 75.447-0.047 24.766 0 49.532 0 74.299 0 48.99 0 97.979 0 146.969 0 51.579 0 103.159 0 154.738 0 32.474 0 64.949 0 97.423 0 13.79 0.644 27.39 5.564 40.535 13.53 36.147 48 60.428 86.658 60.699 20.557 0.144 41.119 0 61.676 0 46.964 0 93.926 0 140.89 0 52.425 0 104.849 0 157.274 0 36.066 0 72.132 0 108.198 0 5.159 0 10.317 0 15.476 0 12.204 0 12.224-18.963 0.002-18.963z","M347.397 377.684v140.327c0 41.954 15.915 63.293 44.124 63.293 28.933 0 44.847-20.253 44.847-63.293v-140.327h54.974v136.711c0 75.228-37.975 111.033-101.63 111.033-61.484 0-97.651-33.997-97.651-111.756v-135.987h55.336z","M539.079 380.939c20.253-3.255 46.656-5.063 74.504-5.063 46.293 0 76.313 8.318 99.821 26.040 25.317 18.807 41.23 48.826 41.23 91.864 0 46.656-16.998 78.844-40.507 98.735-25.679 21.338-64.739 31.465-112.48 31.465-28.571 0-48.825-1.808-62.568-3.617v-239.424zM594.415 579.858c4.702 1.086 12.297 1.086 19.168 1.086 49.911 0.361 82.461-27.126 82.461-85.354 0.361-50.634-29.296-77.397-76.674-77.397-12.297 0-20.253 1.085-24.954 2.17v159.496z"],"grid":0,"tags":["adobe-ud"],"defaultCode":59648},{"paths":["M232.56 252.241v600.274c0 9.243 7.492 16.735 16.735 16.735h499.463c34.828 0 86.642-11.514-26.173-146.748l-97.104-131.090c-4.685-6.324-13.143-8.53-20.319-5.298l-56.292 25.35c-15.515 6.987-11.915 29.977 4.992 31.888l26.257 2.968c4.901 0.554 9.309 3.242 12.044 7.346l66.824 100.235c7.482 11.222-0.706 26.231-14.192 26.016l-311.725-4.982c-9.198-0.147-16.553-7.69-16.466-16.889l4.73-505.336c0.032-3.396 1.096-6.702 3.052-9.479l27.621-39.223c5.646-8.018 3.22-19.15-5.251-24.091l-39.232-22.885c-7.846-4.577-17.91-2.059-22.677 5.671l-49.798 80.753c-1.63 2.642-2.492 5.683-2.492 8.786z","M469.31 269.538l58.318 87.476c8.585 12.879 26.227 15.9 38.61 6.613l40.875-30.656c13.221-9.916 14.491-29.285 2.677-40.841l-75.12-73.486c-9.234-9.034-23.579-10.248-34.2-2.895l-24.073 16.667c-12.090 8.371-15.242 24.887-7.086 37.123z"],"grid":0,"tags":["arab"],"defaultCode":59649},{"paths":["M745.152 242.86l-2.116-2.116-2.116 2.116h-499.118v53.108h446.009l-421.106 421.107 37.553 37.552 424.833-424.832v453.462h53.108v-540.397z"],"grid":0,"tags":["arrow"],"defaultCode":59650},{"paths":["M810.387 300.095c-42.968-60.096-103.307-106.335-172.658-131.877-71.946-26.499-152.389-29.261-226.096-8.269-70.785 20.16-135.012 62.154-181.778 118.997-47.898 58.218-76.955 130-82.768 205.193-5.846 75.631 12.399 152.556 51.774 217.406 38.020 62.619 94.988 113.559 161.8 143.726 70.439 31.805 149.807 40.628 225.549 25.165 72.211-14.743 139.319-52.17 190.221-105.414 51.387-53.752 86.025-123.058 97.175-196.651 2.829-18.673 4.344-37.484 4.379-56.371-0.138-75.556-23.604-150.374-67.598-211.905zM794.735 713.32c-40.189 56.624-97.98 100.842-163.235 124.611-68.656 25.007-144.534 27.866-214.826 7.834-67.676-19.287-128.248-59.419-173.016-113.641-44.854-54.327-72.358-122.682-77.657-192.922-5.441-72.108 11.463-144.725 48.91-206.644 36.243-59.929 90.473-107.901 154.176-136.937 65.774-29.979 141.311-38.221 212.083-23.773 69.245 14.137 133.024 49.461 181.853 100.538 48.981 51.236 81.242 116.973 92.1 186.999 2.697 17.393 3.867 35.020 3.899 52.614-0.132 72.050-22.574 142.552-64.286 201.322z","M726.739 332.232c-8.752-10.701-19.129-20.093-30.71-27.656-6.269-4.094-12.914-7.451-19.819-10.327-4.779-1.991-9.361-4.166-14.618-3.265-15.85 2.716-31.629 5.944-47.433 8.914-16.306 3.064-32.613 6.129-48.92 9.193-2.584 0.485-4.588 2.324-5.763 4.622-0.026 0.049-0.047 0.101-0.072 0.151-0.105 0.215-0.208 0.431-0.299 0.653-0.046 0.11-0.083 0.224-0.125 0.336-0.066 0.179-0.133 0.357-0.19 0.539-0.038 0.12-0.067 0.243-0.101 0.365-0.049 0.182-0.1 0.363-0.139 0.547-0.027 0.128-0.047 0.258-0.070 0.387-0.030 0.174-0.063 0.347-0.084 0.521-0.025 0.193-0.038 0.388-0.052 0.583-0.007 0.096-0.017 0.192-0.021 0.286-0.115 2.574 0.718 5.16 2.733 6.854 37.374 31.44 54.298 84.481 54.897 132.018 0.157 12.506-0.693 23.26-3.49 34.835-1.293 5.351 2.741 12.774 9.143 12.002 40.506-4.887 81.013-9.774 121.518-14.66 5.768-0.696 11.536-1.392 17.304-2.088 5.569-0.672 8.826-3.84 9.481-9.481 2.754-23.701-0.367-48.331-6.434-71.295-7.089-26.826-19.122-52.497-36.737-74.033zM638.91 482.743c-1.868 0.226-3.736 0.45-5.605 0.676 2.882-20.161 1.699-40.869-1.613-60.894-4.413-26.681-13.507-53.18-27.773-76.232-4.838-7.818-10.333-15.283-16.486-22.14 22.487-4.226 44.974-8.452 67.462-12.678 3.011-0.566 6.023-1.132 9.034-1.698 25.925 9.144 46.364 28.52 60.498 51.795 7.307 12.035 12.743 24.15 17.087 37.332 2.217 6.726 4.099 13.563 5.648 20.473 1.376 6.136 2.716 13.692 3.312 18.588 1.254 10.325 1.756 20.78 1.176 31.173-37.579 4.536-75.159 9.069-112.739 13.603z"],"grid":0,"tags":["ball"],"defaultCode":59651},{"paths":["M813.413 460.307c-22.585-7.781-45.17-15.56-67.754-23.34-35.979-12.394-71.96-24.788-107.939-37.184-5.312-1.83-10.625-3.66-15.938-5.491 6.857-15.617 13.713-31.235 20.57-46.853 12.997-29.605 25.994-59.21 38.992-88.815 2.971-6.766 5.94-13.531 8.911-20.296 3.233-7.365-3.436-14.95-11.112-11.112-24.416 12.208-48.832 24.417-73.248 36.624-39.046 19.522-78.091 39.046-117.137 58.569-6.151 3.075-12.3 6.15-18.45 9.225-4.748-11.84-9.497-23.681-14.244-35.521-9.5-23.689-19-47.379-28.5-71.069-2.196-5.477-4.393-10.955-6.59-16.432-3.084-7.691-12.553-7.642-15.663 0-6.264 15.396-12.529 30.793-18.792 46.189-9.986 24.543-19.971 49.085-29.956 73.627-1.295 3.184-2.591 6.369-3.886 9.553-29.292-7.051-58.585-14.104-87.877-21.155-4.567-1.1-9.135-2.2-13.703-3.299-6.906-1.662-12.672 5.644-9.171 11.931 8.115 14.579 16.231 29.157 24.347 43.735 13.023 23.393 26.045 46.784 39.067 70.177 1.644 2.953 3.288 5.907 4.932 8.86-29.325 16.292-58.651 32.585-87.978 48.877-4.549 2.528-9.098 5.055-13.648 7.582-5.698 3.165-5.113 13.669 1.94 14.844 21.124 3.52 42.248 7.041 63.371 10.562 0.39 0.065 0.779 0.13 1.169 0.194-3.341 13.365-6.683 26.73-10.024 40.095-6.492 25.967-12.983 51.934-19.476 77.902-1.508 6.029-3.015 12.059-4.522 18.089-1.708 6.832 5.7 12.77 11.931 9.171 14.102-8.145 28.205-16.289 42.306-24.434 22.492-12.991 44.984-25.98 67.477-38.971 1.539-0.888 3.078-1.778 4.616-2.666 1.762 18.224 3.523 36.45 5.285 54.674 3.49 36.103 6.98 72.206 10.47 108.309 0.797 8.253 1.596 16.505 2.393 24.759 0.795 8.23 10.281 10.78 15.134 4.099 12.239-16.847 24.477-33.694 36.716-50.542 19.495-26.836 38.99-53.672 58.486-80.507 2.203-3.033 4.407-6.066 6.61-9.099 12.608 16.136 25.216 32.271 37.824 48.407 23.179 29.665 46.359 59.329 69.538 88.994 5.333 6.826 10.667 13.651 16 20.477 4.565 5.842 13.769 0.671 13.865-5.743 0.303-20.458 0.606-40.915 0.909-61.374 0.481-32.426 0.96-64.85 1.441-97.276 0.027-1.865 0.055-3.729 0.082-5.594 10.664 8.595 21.328 17.189 31.991 25.785 24.124 19.443 48.247 38.885 72.371 58.329 5.579 4.496 11.157 8.992 16.736 13.488 6.958 5.608 17.324-1.258 12.755-9.842-13.826-25.981-27.653-51.962-41.479-77.943-21.848-41.056-43.696-82.112-65.545-123.167-3.332-6.26-6.663-12.52-9.994-18.78 15.22-4.038 30.439-8.075 45.659-12.114 29.475-7.82 58.951-15.641 88.426-23.46 6.768-1.796 13.535-3.591 20.303-5.386 8.118-2.155 7.302-13.149 0-15.664z"],"grid":0,"tags":["bam-ii"],"defaultCode":59652},{"paths":["M844.371 546.444c-37.005-22.386-74.011-44.773-111.015-67.158-2.997-1.813-5.993-3.626-8.989-5.439 13.742-35.279 27.484-70.557 41.226-105.835 2.067-5.307 4.134-10.614 6.201-15.92 2.917-7.488-5.375-12.663-11.663-11.663-40.539 6.442-81.078 12.883-121.617 19.324-1.216 0.193-2.433 0.387-3.65 0.58 4.747-35.631 9.495-71.262 14.242-106.892 0.732-5.497 1.465-10.996 2.197-16.494 1.079-8.094-11.137-12.595-16.186-6.704-13.569 15.83-27.137 31.661-40.706 47.49-21.743 25.366-43.485 50.733-65.228 76.098-2.576 3.006-5.152 6.010-7.727 9.016-10.133-13.487-20.266-26.976-30.398-40.463-20.161-26.838-40.324-53.676-60.485-80.514-4.672-6.22-9.345-12.44-14.017-18.66-5.486-7.303-17.268-5.242-17.669 4.785-1.596 39.885-3.191 79.77-4.786 119.653-0.081 2.020-0.161 4.039-0.243 6.059-14.566-2.412-29.134-4.824-43.7-7.236-29.395-4.867-58.792-9.735-88.188-14.601-6.796-1.125-13.594-2.251-20.39-3.376-3.828-0.634-7.508 0.108-9.966 3.397-2.104 2.816-2.965 7.438-0.741 10.53 11.676 16.237 23.354 32.473 35.031 48.709 18.616 25.885 37.232 51.77 55.848 77.654 2.958 4.114 5.917 8.228 8.876 12.342-16.491 18.131-32.981 36.262-49.472 54.393-28.947 31.826-57.894 63.654-86.84 95.481-6.713 7.38-13.426 14.761-20.138 22.141-5.058 5.562-2.007 16.93 6.704 16.186 26.201-2.239 52.402-4.477 78.602-6.716 41.398-3.537 82.797-7.073 124.195-10.611 6.191-0.529 12.384-1.058 18.575-1.587-2.044 32.364-4.088 64.728-6.133 97.091-0.321 5.090-0.643 10.179-0.964 15.269-0.508 8.042 10.838 12.73 16.186 6.704 30.88-34.795 61.761-69.59 92.642-104.385 1.906-2.147 3.811-4.294 5.716-6.441 9.338 13.274 18.676 26.547 28.014 39.82 18.692 26.57 37.385 53.14 56.077 79.71 4.33 6.155 8.66 12.31 12.992 18.466 5.082 7.224 17.931 5.29 17.669-4.785-0.885-33.834-1.769-67.666-2.653-101.5 9.831 8.867 19.663 17.733 29.493 26.599 24.552 22.143 49.105 44.286 73.656 66.429 5.609 5.058 11.218 10.117 16.826 15.175 6.889 6.212 18.369 0.233 15.847-9.225-6.372-23.894-12.743-47.788-19.115-71.681-10.17-38.137-20.34-76.275-30.51-114.412-1.455-5.457-2.91-10.912-4.365-16.369 40.13-6.697 80.26-13.394 120.391-20.092 6.027-1.006 12.055-2.012 18.082-3.018 8.424-1.402 8.706-13.43 2.265-17.326zM689.275 570.154c-5.087 0.849-7.834 7.122-6.622 11.663 6.372 23.894 12.743 47.788 19.115 71.681 9.771 36.642 19.542 73.283 29.313 109.925-7.381-6.657-14.764-13.315-22.145-19.972-24.552-22.143-49.105-44.286-73.656-66.429-5.609-5.058-11.218-10.117-16.827-15.175-5.847-5.274-16.411-1.89-16.186 6.704 0.804 30.754 1.607 61.508 2.411 92.262-5.624-7.994-11.248-15.988-16.871-23.982-18.693-26.57-37.385-53.139-56.077-79.709-4.33-6.155-8.66-12.311-12.991-18.466-1.030-1.464-2.358-2.647-3.846-3.46-3.286-2.149-7.628-2.311-11.046 1.541-29.343 33.063-58.687 66.126-88.030 99.189 1.697-26.862 3.393-53.724 5.091-80.586 0.321-5.090 0.643-10.179 0.964-15.269 0.304-4.813-4.6-9.899-9.481-9.481-26.201 2.239-52.402 4.477-78.602 6.716-41.398 3.537-82.797 7.074-124.195 10.611-1.827 0.156-3.653 0.312-5.48 0.468 12.796-14.069 25.591-28.138 38.387-42.207 28.947-31.827 57.894-63.654 86.84-95.481 6.713-7.38 13.426-14.761 20.138-22.142 2.62-2.88 3.982-8.015 1.482-11.49-11.676-16.237-23.354-32.473-35.030-48.709-18.616-25.884-37.233-51.77-55.848-77.654-0.006-0.008-0.011-0.016-0.017-0.024 10.578 1.752 21.156 3.503 31.734 5.255 29.396 4.868 58.792 9.735 88.188 14.601 6.796 1.125 13.594 2.251 20.39 3.376 6.186 1.024 11.736-2.504 12.002-9.143 1.465-36.632 2.931-73.263 4.397-109.895 7.176 9.552 14.352 19.103 21.528 28.656 20.161 26.838 40.324 53.676 60.485 80.514 4.672 6.22 9.345 12.44 14.017 18.66 3.356 4.467 10.514 7.026 14.892 1.919 13.569-15.829 27.138-31.66 40.706-47.49 19.967-23.295 39.934-46.589 59.9-69.884-3.904 29.295-7.806 58.589-11.71 87.884-0.732 5.498-1.465 10.996-2.198 16.494-0.9 6.756 6.744 9.978 12.002 9.143 40.499-6.435 80.998-12.87 121.497-19.305-12.719 32.653-25.439 65.307-38.158 97.96-2.067 5.307-4.134 10.613-6.202 15.919-1.518 3.898 1.027 8.694 4.358 10.707 34.981 21.162 69.963 42.323 104.944 63.485-35.16 5.868-70.321 11.736-105.481 17.604-6.024 1.005-12.051 2.011-18.078 3.017z"],"grid":0,"tags":["bam"],"defaultCode":59653},{"paths":["M895.682 243.666c-0.009-0.202 0-0.406 0-0.608 0-5.126-4.344-9.481-9.481-9.481-21.426 0-42.853 0-64.279 0-44.404 0-88.806 0-133.21 0-37.477 0-74.953 0-112.43 0-22.35 0-44.443 1.312-65.9 8.163-22.619 7.221-43.317 19.33-60.86 35.307-18.476 16.827-35.431 39.152-44.702 62.941-16.54 0-33.080 0-49.62 0-30.78 0-61.561 0-92.342 0v-87.106c0-32.112-27.758-53.683-53.683-53.683s-53.683 21.571-53.683 53.683v500.949c0 14.817 6.093 28.623 17.156 38.877 10.152 9.409 23.466 14.805 36.526 14.805s26.375-5.396 36.526-14.805c11.063-10.253 17.156-24.060 17.156-38.877v-48.635c32.874 0 65.748 0 98.624 0 44.547 0 89.094 0 133.641 0 38.538 0 77.078 0 115.617 0 18.748 0 37.614 0.621 56.355 0 0.274-0.009 0.549 0 0.823 0 21.937-0.507 37.724-18 37.773-39.537 0.018-7.835 0-15.672 0-23.507 0-27.973 0-55.945 0-83.919 0.897 1.075 1.815 2.139 2.776 3.175 13.304 14.345 31.228 23.639 49.461 30.099 32.241 11.421 67.684 14.676 101.722 14.339 8.865-0.088 17.681-0.512 26.55-0.512 5.126 0 9.481-4.344 9.481-9.481 0-11.67 0-23.34 0-35.010 0-28.035 0-56.071 0-84.105 0-33.938 0-67.876 0-101.815 0-29.486 0-58.974 0-88.461 0.003-14.223 0.569-28.578 0.003-42.794zM411.445 358.95c8.194 0 16.388 0 24.582 0 21.594 0 43.189 0 64.783 0 15.517 0 31.034 0 46.552 0 28.61 0 57.222 0 85.832 0 6.981 0 13.961 0 20.943 0 4.593 0 9.186 0 13.778 0 10.458 0.197 18.604 8.367 18.813 18.812 0.026 1.26 0 2.523 0 3.783 0 1.586 0 3.172 0 4.757h-472.164v-22.573c0-1.572 0.051-3.173 0.1-4.781 8.205 0 16.411 0 24.615 0 28.505 0 57.011 0 85.517 0 28.882 0.001 57.765 0.001 86.648 0.001zM243.896 753.83c0 16.422-14.259 34.719-34.72 34.719s-34.72-18.297-34.72-34.719v-500.949c0-20.461 18.297-34.72 34.72-34.72s34.72 14.259 34.72 34.72v87.106h-48.294v313.189c0 13.931-0.559 27.993 0 41.917v10.103h48.294v48.635zM686.729 667.417c-0.198 10.48-8.363 18.573-18.81 18.815-15.324 0-30.648 0-45.973 0-36.809 0-73.617 0-110.426 0-44.547 0-89.094 0-133.641 0-38.538 0-77.078 0-115.617 0-12.788 0-25.576 0-38.365 0-3.077 0-6.206-0.118-9.332-0.171v-214.629h290.587c-1.41 7.318-1.429 14.879 0.365 22.129 2.681 10.836 10.384 20.473 22.208 20.913 25.959 0.964 52.138 0 78.111 0 18.697 0 37.393 0 56.090 0 8.247 0 16.538 0.21 24.804 0.151 0 33.848 0 67.696 0 101.543 0 17.072 0.323 34.18 0 51.249zM527.434 495.409c0.071 0.028 0.14 0.058 0.21 0.087-0.064-0.025-0.137-0.055-0.208-0.085-0.001-0.001-0.001-0.001-0.002-0.002zM528.088 495.717c0.015 0 0.031-0.001 0.046-0.001 0.125 0.062 0.14 0.078-0.046 0.001zM718.332 543.888c-0.247-0.304-1.021-1.38 0 0v0zM876.719 278.068c0 28.035 0 56.071 0 84.105 0 33.938 0 67.876 0 101.815 0 29.486 0 58.974 0 88.461 0 9.67 0 19.339 0 29.010 0 1.634-0.054 3.297-0.103 4.967-17.288 0.177-34.495 0.633-51.816-0.796-4.087-0.338-8.169-0.744-12.242-1.229-1.051-0.125-2.102-0.257-3.153-0.391-0.096-0.012-0.176-0.023-0.254-0.032-0.402-0.055-0.804-0.11-1.206-0.168-2.423-0.349-4.841-0.717-7.254-1.121-9.071-1.52-18.078-3.471-26.92-6.016-4.436-1.276-8.83-2.703-13.159-4.308-1.042-0.387-2.081-0.783-3.116-1.191-0.321-0.127-1.863-0.757-2.326-0.942-0.457-0.205-1.966-0.865-2.277-1.006-1.124-0.509-2.24-1.032-3.349-1.57-4.129-2.005-8.159-4.224-12.029-6.695-1.678-1.071-3.326-2.188-4.939-3.356-0.428-0.309-0.85-0.625-1.274-0.939-0.018-0.013-0.028-0.021-0.046-0.033-0.891-0.71-1.775-1.429-2.64-2.169-3.746-3.208-7.164-6.743-10.277-10.566-0.367-0.497-0.732-0.994-1.088-1.498-0.673-0.953-1.324-1.923-1.947-2.908-1.331-2.1-2.545-4.274-3.636-6.509-0.163-0.335-0.916-2.029-1.053-2.295-0.377-0.942-0.743-1.887-1.078-2.844-0.868-2.483-1.592-5.016-2.175-7.581-0.285-1.254-0.536-2.516-0.755-3.784-0.099-0.573-0.191-1.147-0.277-1.722-0.008-0.053-0.014-0.091-0.020-0.128-0.009-0.107-0.022-0.239-0.039-0.424-0.296-3.069-0.474-6.128-0.49-9.212-0.002-0.394-0.038-0.781-0.089-1.164-0.613-4.602-4.631-8.317-9.392-8.317-3.191 0-6.38 0-9.571 0-20.665 0-41.33 0-61.995 0-30.744 0-61.487 0-92.231 0-1.159 0-3.741-0.481-5.176-0.18-0.090-0.070-0.186-0.15-0.283-0.227-0.198-0.235-0.453-0.493-0.685-0.705-0.204-0.295-0.45-0.577-0.613-0.883-0.519-0.97-1.618-4.048-0.621-0.903-0.339-1.071-0.78-2.101-1.084-3.188-0.315-1.125-0.456-2.292-0.752-3.415-0.040-0.624-0.115-1.248-0.148-1.874-0.073-1.344-0.079-2.691-0.024-4.035 0.026-0.649 0.067-1.299 0.121-1.947 0.020-0.246 0.104-0.935 0.158-1.397 0.064-0.38 0.135-0.798 0.165-0.942 0.163-0.78 0.315-1.561 0.5-2.336 0.165-0.686 0.348-1.369 0.541-2.048 0.229-0.801 0.472-1.599 0.74-2.388 0.237-0.701 0.51-1.387 0.754-2.084 0.048-0.137 0.074-0.22 0.088-0.275 0.060-0.121 0.129-0.261 0.216-0.442 0.729-1.508 1.467-3.001 2.306-4.453 0.814-1.406 1.7-2.76 2.619-4.099 0.216-0.315 0.572-0.788 0.78-1.066 0.587-0.725 1.18-1.446 1.801-2.143 1.184-1.333 2.429-2.61 3.727-3.832 0.671-0.632 1.356-1.251 2.055-1.853 0.408-0.351 0.823-0.69 1.234-1.036 0.127-0.107 0.217-0.185 0.292-0.248 0.019-0.014 0.032-0.024 0.055-0.041 3.541-2.64 7.323-4.934 11.277-6.902 14.74-7.335 34.335-9.589 52.123-9.589 27.353 0 54.706 0 82.059 0 1.251 0 2.501 0 3.752 0 1.050 0 2.099 0 3.149 0 0.89 0 1.78 0 2.67 0 4.783 0 8.895-3.785 9.422-8.466 0.038-0.335 0.060-0.672 0.060-1.015 0-3.032 0-6.065 0-9.097 0.062-9.569 0.112-19.139 0-28.701 0-11.411 0-22.822 0-34.233 0-5.126-4.344-9.481-9.481-9.481-9.766 0-19.532 0-29.298 0-4.929-0.030-9.86 0-14.789 0-21.966 0-43.932 0-65.899 0-2.25 0-4.5 0-6.75 0-36.046 0-72.091 0-108.137 0-0.783 0-1.567 0-2.35 0-14.428 0-28.856 0-43.283 0 0.613-1.234 1.241-2.46 1.883-3.68 3.309-6.271 6.994-12.345 11.018-18.183 1.132-1.643 2.292-3.267 3.479-4.872 0.517-0.699 1.041-1.393 1.566-2.085 0.009-0.010 0.013-0.017 0.023-0.028 0.412-0.522 0.824-1.045 1.24-1.563 2.876-3.582 5.894-7.051 9.047-10.392 14.318-15.167 30.488-26.89 49.881-34.986 21.044-8.785 44.091-11.66 67.157-11.66 35.078 0 70.155 0 105.234 0 44.408 0 88.817 0 133.224 0 16.822 0 33.645 0 50.467 0 5.527 0 11.13 0.214 16.705 0.214-0.001 8.439-0.001 16.876-0.001 25.315z"],"grid":0,"tags":["bancontact"],"defaultCode":59654},{"paths":["M849.22 369.539c-18.434-43.583-44.821-82.721-78.43-116.329s-72.748-59.996-116.329-78.43c-45.127-19.087-93.058-28.765-142.461-28.765s-97.334 9.678-142.461 28.765c-43.583 18.433-82.721 44.821-116.329 78.43s-59.996 72.748-78.43 116.329c-19.087 45.127-28.765 93.058-28.765 142.461s9.678 97.334 28.765 142.461c18.434 43.583 44.821 82.721 78.43 116.329s72.748 59.996 116.329 78.43c45.127 19.087 93.058 28.765 142.461 28.765s97.334-9.678 142.461-28.765c43.583-18.433 82.721-44.821 116.329-78.43s59.996-72.748 78.43-116.329c19.087-45.127 28.765-93.058 28.765-142.461s-9.678-97.334-28.765-142.461zM831.755 376.926c3.593 8.494 6.818 17.096 9.705 25.791-14.894 57.292-43.491 103.994-85.049 138.834-2.052 1.551-3.796 3.047-5.486 4.494-1.586 1.36-3.084 2.643-4.733 3.881l-0.148 0.114c-29.293 22.885-64.527 36.528-99.212 38.419-36.745 2.002-69.702-9.226-95.406-32.483-2.27-3.188-4.731-5.605-7.991-7.859-4.229-3.813-7.503-8.553-10.567-13.707 4.282 1.893 8.778 3.532 13.595 4.75 10.282 3.058 20.313 4.060 30.016 5.031l0.579 0.040c24.566 0.95 48.764-4.987 73.965-18.134l0.155-0.082c22.716-12.39 40.542-27.672 56.098-48.089l0.319-0.417 0.27-0.451c2.184-3.639 4.517-6.975 6.987-10.508 3.609-5.16 7.34-10.496 10.43-16.678 1.489-2.977 2.966-6.178 4.395-9.274 1.368-2.964 2.783-6.028 4.139-8.741l0.305-0.675c13.386-32.986 19.72-68.674 18.826-106.073-0.586-24.531-4.241-48.938-10.892-72.898 5.23 4.641 10.351 9.432 15.329 14.41 31.872 31.872 56.896 68.985 74.373 110.308zM714.895 230.429c11.891 30.958 18.324 62.943 19.093 95.131 0.828 34.66-4.995 67.682-17.305 98.154-1.431 2.88-2.851 5.955-4.226 8.934-1.368 2.964-2.783 6.028-4.139 8.741-2.468 4.935-5.645 9.48-9.009 14.29-2.454 3.509-4.988 7.133-7.426 11.154-13.794 17.998-29.605 31.51-49.712 42.489-22.066 11.499-43.035 16.728-64.1 15.968-9.176-0.918-17.852-1.803-26.369-4.359l-0.425-0.117c-2.807-0.702-5.518-1.606-8.167-2.664 2.252-0.527 4.506-1.126 6.759-1.832 37.843-11.644 68.229-40.127 85.559-80.203l0.060-0.14c14.696-35.555 18.072-75.346 9.762-115.074-7.754-37.075-25.382-73.384-50.978-105.003l-0.313-0.387-0.352-0.352c-2.756-2.755-4.994-5.578-7.827-9.151-0.613-0.773-1.244-1.568-1.904-2.393l-0.388-0.454c-12.827-14.11-25.92-26.267-39.552-36.722 35.578 3.228 70.153 11.853 103.136 25.803 24.113 10.199 46.781 22.985 67.822 38.185zM376.926 192.245c41.523-17.563 85.566-26.694 130.963-27.217 21.751 12.643 41.836 29.222 61.368 50.669 0.575 0.72 1.127 1.417 1.666 2.095 2.853 3.599 5.553 7.005 8.91 10.41 23.547 29.2 39.746 62.588 46.857 96.583 7.521 35.958 4.513 71.874-8.696 103.876-15.096 34.863-41.268 59.556-73.74 69.549-1.214 0.379-2.435 0.719-3.66 1.035 3.818-4.317 7.409-9.034 10.694-14.388 1.217-1.851 2.085-3.585 2.852-5.12 0.621-1.243 1.159-2.315 1.779-3.247l0.348-0.521 0.276-0.562c12.674-25.836 17.157-55.078 12.963-84.563-3.994-28.078-15.682-55.689-33.801-79.85-44.693-59.59-116.99-94.052-201.544-97.054 13.687-8.174 27.951-15.427 42.767-21.694zM266.618 266.618c12.182-12.182 25.135-23.355 38.791-33.497 41.679-2.067 82.277 3.849 117.552 17.171 40.283 15.212 73.111 39.464 97.572 72.078 16.21 21.614 26.652 46.215 30.199 71.142 3.629 25.511-0.165 50.753-10.968 73.037-1.079 1.696-1.874 3.286-2.585 4.707-0.621 1.243-1.159 2.315-1.779 3.247l-0.201 0.315c-2.322 3.8-4.867 7.236-7.597 10.45 2.011-30.692-6.746-60.526-25.667-86.991-19.783-27.672-49.153-49.070-82.669-60.242-41.585-14.016-87.727-15.402-133.44-4.008-32.474 8.095-64.18 22.383-93.11 41.819 17.455-40.887 42.308-77.635 73.902-109.23zM180.71 408.376c32.774-26.88 70.673-46.217 109.702-55.946 42.189-10.517 84.652-9.28 122.827 3.587 66.41 22.137 96.918 77.416 95.463 125.51-3.919-6.766-8.66-13.229-14.833-19.077l-0.588-0.557-0.673-0.449c-0.869-0.579-1.896-1.768-2.888-2.917-0.717-0.831-1.458-1.689-2.304-2.535l-0.312-0.297c-22.381-20.435-52.613-33.422-85.124-36.568l-0.221-0.020c-40.513-2.964-80.821 7.015-116.595 28.878-30.757 18.928-56.969 44.222-77.906 75.178-13.687 20.236-24.906 42.567-33.542 66.651-5.809-25.337-8.739-51.35-8.739-77.813 0-35.536 5.29-70.258 15.733-103.624zM192.245 647.074c-3.312-7.83-6.318-15.751-9.030-23.751 8.618-33.14 21.978-63.259 39.75-89.536 19.418-28.711 43.689-52.145 72.112-69.636 32.315-19.749 68.689-28.783 105.185-26.139 28.32 2.763 54.54 13.951 73.869 31.516 0.34 0.355 0.776 0.859 1.234 1.391 1.426 1.652 3.333 3.86 5.946 5.762 4.247 4.121 7.671 8.757 10.621 13.751-29.438-12.708-64.423-13.050-97.923-0.608-30.944 11.346-56.653 30.625-76.414 57.303l-0.511 0.766c-2.184 3.639-4.517 6.975-6.987 10.508-3.609 5.16-7.34 10.496-10.43 16.678-1.489 2.977-2.966 6.178-4.395 9.274-1.368 2.964-2.783 6.028-4.139 8.741l-0.305 0.675c-13.386 32.986-19.72 68.674-18.826 106.073 0.585 24.482 4.225 48.841 10.852 72.754-5.548-4.889-10.97-9.949-16.236-15.215-31.873-31.873-56.896-68.986-74.374-110.309zM309.915 794.161c-11.803-30.847-18.189-62.71-18.955-94.773-0.828-34.66 4.995-67.682 17.305-98.154 1.431-2.88 2.851-5.955 4.226-8.934 1.368-2.964 2.783-6.028 4.139-8.741 2.468-4.935 5.645-9.48 9.009-14.29 2.465-3.526 5.011-7.167 7.46-11.209 17.483-23.467 40.17-40.432 67.477-50.444 28.451-10.567 56.879-10.761 81.447-0.809-8.508 2.069-15.788 4.685-22.536 8.050-20.038 9.558-36.75 23.357-52.588 43.418l-0.238 0.314c-19.613 27.085-30.107 59.487-31.188 96.251-0.958 27.29 3.628 54.716 13.63 81.514 9.267 24.831 23.221 49.248 41.476 72.573l0.356 0.454 0.407 0.408c2.756 2.755 4.994 5.578 7.827 9.151 0.613 0.773 1.244 1.568 1.904 2.393l0.388 0.454c11.744 12.919 24.521 24.76 38.629 35.776-35.587-3.227-70.171-11.852-103.162-25.806-23.802-10.067-46.199-22.652-67.010-37.594zM647.074 831.755c-41.936 17.737-86.439 26.879-132.314 27.233-22.721-14.794-42.074-31.083-59.070-49.738-0.575-0.719-1.127-1.416-1.665-2.094-2.837-3.578-5.524-6.967-8.854-10.352-35.374-45.362-52.446-92.899-50.746-141.355 0.967-32.873 10.212-61.664 27.479-85.581 14.142-17.876 28.279-29.578 45.816-37.931l0.164-0.080c4.929-2.465 10.31-4.458 16.55-6.1-3.89 4.678-7.331 9.402-10.543 13.99l-0.121 0.178c-1.276 1.913-2.172 3.704-2.962 5.286-0.621 1.243-1.159 2.315-1.779 3.247l-0.348 0.521-0.276 0.562c-12.674 25.836-17.157 55.078-12.963 84.563 3.994 28.078 15.682 55.689 33.801 79.85 44.274 59.031 115.641 93.391 199.172 96.945-13.252 7.828-27.038 14.803-41.342 20.854zM757.382 757.382c-12.61 12.61-26.053 24.129-40.239 34.552-40.836 1.726-80.556-4.212-115.155-17.278-40.283-15.212-73.111-39.464-97.572-72.078-16.21-21.614-26.652-46.215-30.199-71.142-3.629-25.511 0.165-50.753 10.968-73.037 1.079-1.696 1.874-3.286 2.585-4.707 0.604-1.208 1.128-2.257 1.728-3.171 2.501-3.571 5.159-7.218 8.050-10.817-0.534 9.505-0.125 18.839 1.274 28.629l0.022 0.149c6.605 41.513 31.718 76.898 72.625 102.326l0.191 0.115c32.147 18.95 68.475 28.604 106.814 28.603 14.168-0.001 28.617-1.32 43.223-3.975 37.462-6.811 74.998-22.391 108.416-44.717-17.39 39.811-41.829 75.648-72.73 106.547zM842.513 618.025c-36.453 30.045-80.421 50.907-124.21 58.869-49.546 9.011-96.887 1.316-136.917-22.248-25.141-15.649-56.57-43.791-63.803-89.069-1.062-7.463-1.47-14.619-1.242-21.841 3.966 6.72 8.512 13.325 15.016 19.015l0.467 0.41 0.517 0.344c1.798 1.199 2.808 2.21 4.008 4.008l0.632 0.949 0.839 0.771c27.452 25.238 62.080 38.421 100.639 38.42 3.108 0 6.248-0.085 9.405-0.257 38.493-2.097 77.476-17.137 109.782-42.354 2.111-1.588 3.894-3.117 5.621-4.597 1.586-1.36 3.084-2.643 4.733-3.881l0.395-0.314c37.437-31.324 65.065-71.465 82.423-119.616 5.441 24.565 8.203 49.753 8.203 75.366 0 36.39-5.56 71.924-16.509 106.025z"],"grid":0,"tags":["beach-ball-mac"],"defaultCode":59655},{"paths":["M805.727 297.477c-43.419-59.021-103.826-104.132-172.911-128.653-71.682-25.443-151.355-27.219-224.251-5.64-70.409 20.844-133.963 63.422-179.85 120.769-46.473 58.079-74.527 129.182-79.583 203.456-1.26 18.504-1.024 37.078 0.568 55.554 0.798 8.88 1.926 17.706 3.352 26.465-0.238 1.38-0.214 2.773 0.128 4.020 0.233 0.848 0.562 1.601 0.957 2.282 11.438 63.332 39.193 122.816 81.161 172.151 47.239 55.533 111.511 96.213 181.894 115.21 73.31 19.788 152.91 15.953 223.875-11.145 69.156-26.407 128.975-73.582 170.953-134.545 41.959-60.935 64.359-134.616 63.649-208.579-0.723-75.549-25.13-150.432-69.94-211.345zM576.264 173.122c68.617 13.135 132.242 47.136 181.307 96.868 10.744 10.89 20.707 22.471 29.849 34.634-36.201-10.785-73.576-18.339-111.417-18.658-41.858-0.353-82.733 9.024-120.746 26.372-24.267 11.074-46.985 25.225-68.481 40.964-1.885 1.381-3.328 3.219-4.085 5.259-9.434-16.627-24.538-29.877-43.26-36.849-11.237-4.184-23.25-5.57-35.023-4.459-6.356-21.281-9.741-43.324-7.013-65.562 3.177-25.893 14.661-49.726 28.955-71.231 0.651-0.979 1.084-1.952 1.336-2.902 48.449-12.144 99.618-13.809 148.577-4.436zM433.799 457.499c-25.418 9.031-53.294 1.69-70.718-18.973-16.886-20.024-18.665-49.835-5.333-72.128 13.294-22.229 40.1-34.651 65.671-29.518 29.502 5.922 50.819 31.682 51.090 61.761-0.231 25.584-16.197 50.148-40.71 58.857zM401.056 185.393c-11.378 20.077-19.559 41.727-22.446 64.849-2.982 23.887 0.434 47.959 7.184 70.934-13.545 4.502-25.938 12.443-35.401 23.346-0.266-0.177-0.543-0.35-0.84-0.512-16.773-9.12-30.678-21.983-40.72-38.258-10.54-17.082-16.596-36.296-20.757-55.818 23.409-20.039 49.476-37.001 77.502-50.237 11.531-5.446 23.388-10.208 35.478-14.304zM214.282 338.112c15.846-27.091 35.345-51.815 57.737-73.537 4.558 18.166 11.131 35.98 21.122 51.843 11.573 18.376 27.516 33.39 46.563 43.809-12.919 24.611-13.138 54.777 1.199 79.404-0.65 0.884-1.185 1.874-1.562 2.953-9.204 26.371-23.975 49.638-45.052 67.946-21.37 18.562-48.857 30.907-76.412 38.978-15.497 4.54-31.305 7.905-47.227 10.561-0.8-5.683-1.473-11.385-1.988-17.107-6.138-71.256 9.472-143.047 45.621-204.85zM177.471 595.241c-1.367-5.496-2.584-11.024-3.678-16.576 61.136-10.070 123.209-31.725 160.377-84.227 8.259-11.667 14.803-24.431 20.065-37.701 17.429 17.043 41.916 25.645 66.503 23.104-0.043 0.966 0.066 1.998 0.361 3.088 4.945 18.286 6.939 33.537 7.789 52.105 0.943 20.612-0.195 42.405-3.169 62.026-7.206 47.555-24.339 93.437-51.615 133.157-16.583 24.148-37.092 45.842-60.273 63.77-9.827-6.907-19.296-14.314-28.33-22.215-52.996-46.347-91.031-108.178-108.031-176.531zM681.484 812.156c-63.11 35.707-136.863 50.297-208.873 42.319-50.331-5.577-99.269-22.888-142.306-49.598 40.395-33.052 71.482-75.216 91.63-123.534 18.090-43.383 27.069-91.012 26.182-138.010-0.415-21.989-2.985-44.185-8.733-65.445-0.194-0.721-0.448-1.376-0.747-1.973 13.396-4.646 25.067-12.812 34.159-23.244 0.893 0.667 1.96 1.214 3.237 1.575 51.918 14.682 100.919 37.906 144.146 70.327 42.711 32.033 78.672 72.623 108.602 116.652 19.012 27.968 35.785 57.397 51.026 87.571-27.19 33.535-60.537 61.981-98.322 83.36zM792.528 712.090c-25.972-50.373-56.567-98.617-94.366-140.989-36.286-40.674-79.499-75.212-127.985-100.256-27.571-14.241-56.643-25.517-86.447-34.116 6.125-11.561 9.62-24.603 9.742-38.088-0.089-9.89-1.941-19.458-5.289-28.362 2.679 1.101 5.792 1.132 8.164-0.604 35.118-25.714 73.649-47.080 116.164-57.512 38.036-9.333 77.687-9.065 116.121-2.24 24.648 4.377 48.818 11.070 72.576 18.9 1.113 0.367 2.164 0.527 3.146 0.52 23.923 38.367 40.274 81.326 47.781 126.228 11.758 70.324 1.025 144.131-30.546 208.070-8.367 16.949-18.109 33.148-29.061 48.449z"],"grid":0,"tags":["beach-ball"],"defaultCode":59656},{"paths":["M394.497 847.577c-38.876-47.936-61.618-111.333-60.091-173.209 1.463-59.286 31.159-120.658 85.903-147.894 28.866-14.361 62.912-15.485 93.109-4.674 32.193 11.526 68.038 7.497 98.532-7.257 56.915-27.538 90.304-89.667 95.807-150.848 5.642-62.735-14.458-129.36-49.979-180.93-4.675-6.788-9.675-13.35-14.866-19.751-3.227-3.98-10.053-3.355-13.409 0-3.935 3.935-3.236 9.419 0 13.409 38.876 47.936 61.618 111.333 60.091 173.209-1.463 59.286-31.159 120.658-85.903 147.894-13.915 6.922-29.384 10.999-44.9 11.901-8.231 0.478-16.567 0.202-24.668-1.404-8.183-1.622-15.785-4.843-23.767-7.138-32.545-9.353-67.886-6.146-98.306 8.572-56.915 27.538-90.304 89.667-95.807 150.848-5.642 62.735 14.458 129.36 49.979 180.93 4.675 6.788 9.675 13.35 14.866 19.751 3.227 3.98 10.053 3.355 13.409 0 3.935-3.935 3.236-9.419 0-13.409v0z","M286.95 788.235c-4.795-17.202-9.034-34.579-11.734-52.245-2.741-17.936-2.978-36.068-1.962-54.16 1.624-28.93 7.539-57.562 19.393-84.112 10.862-24.326 25.933-46.672 45.617-64.723 20.612-18.903 45.304-31.314 72.554-37.31 15.909-3.501 33.577-2.782 49.435 0.765 16.316 3.649 30.774 10.736 43.743 21.203 6.563 5.297 13.113 11.224 20.655 15.090 7.613 3.902 15.523 7.344 23.636 10.065 16.43 5.51 34.022 7.725 51.3 6.332 60.617-4.886 111.394-45.098 140.032-97.279 32.67-59.529 37.492-130.403 22.541-195.844-1.946-8.518-4.249-16.945-6.826-25.293-3.589-11.625-21.899-6.665-18.286 5.041 19.603 63.501 21.014 134.481-8.113 195.424-24.098 50.42-69.894 93.417-127.586 98.835-16.943 1.591-33.511-0.428-49.572-6.031-7.451-2.6-15.293-5.705-21.851-10.139-6.764-4.573-12.89-10.025-19.351-15.003-27.317-21.053-66.113-28.376-99.793-22.449-56.966 10.026-103.294 50.161-129.259 100.782-12.905 25.159-21.533 52.661-25.060 80.72-2.299 18.301-3.151 36.782-2.51 55.215 0.634 18.261 4.011 36.621 8.090 54.397 1.984 8.642 4.238 17.218 6.619 25.759 3.271 11.739 21.572 6.753 18.285-5.040v0z","M206.696 694.044c1.487-58.942 19.841-118.833 58.458-164.224 38.252-44.961 97.769-78.811 158.464-67.926 29.975 5.376 56.454 21.225 74.277 45.947 5.132 7.119 9.22 14.929 14.486 21.937 5.012 6.671 10.918 12.324 16.618 18.318 5.434 5.714 12.882 10.448 19.576 14.547 6.765 4.142 13.913 7.551 21.275 10.489 28.615 11.42 60.764 12.215 90.591 5.436 31.538-7.168 59.97-23.307 84.516-44.064 24.005-20.301 43.781-45.683 57.774-73.827 3.652-7.345 6.266-15.2 9.904-22.516 1.653-3.323 3.626-6.164 4.935-9.705 1.649-4.46 3.109-9.004 4.509-13.547 5.696-18.469 9.616-37.382 12.004-56.555 1.175-9.43 1.883-18.903 2.184-28.4 0.386-12.206-18.577-12.193-18.963 0-0.594 18.795-2.935 37.411-7.070 55.758-2.094 9.292-4.6 18.493-7.511 27.562-1.256 3.915-2.348 8.063-4.281 11.695-1.928 3.621-3.644 7.090-5.187 10.915-11.413 28.279-28.754 54.138-50.714 75.29-22.217 21.398-48.981 38.631-78.832 46.999-28.263 7.923-58.532 8.053-86.197-2.314-13.566-5.084-26.95-12.971-36.916-23.4-5.531-5.788-11.319-10.791-15.667-17.66-4.817-7.609-9.46-15.156-14.994-22.286-19.405-25.002-47.421-42.168-78.535-48.386-63.37-12.663-126.52 16.495-170.050 61.678-43.027 44.661-66.451 104.444-72.281 165.639-0.716 7.516-1.143 15.053-1.334 22.599-0.308 12.209 18.655 12.203 18.963 0.002v0z","M162.743 578.046c21.302-53.569 58.763-101.724 108.541-131.497 51.599-30.862 120.389-43.865 174.664-11.996 6.687 3.926 12.988 8.422 18.789 13.57 5.736 5.090 11.471 10.732 16.41 16.566 10.090 11.919 16.229 26.932 20.155 41.892 2.021 7.701 2.55 15.946 4.845 23.506 2.252 7.415 5.662 14.715 9.362 21.51 7.212 13.242 16.861 25.361 28.063 35.446 54.096 48.696 135.5 48.482 198.482 17.878 56.183-27.3 100.904-75.994 127.864-131.919 3.478-7.214 6.651-14.573 9.624-22.008 1.902-4.757-2.076-10.414-6.622-11.663-5.403-1.485-9.755 1.848-11.663 6.622-22.547 56.394-63.193 106.379-116.489 136.18-29.925 16.733-64.004 25.929-98.347 25.085-32.607-0.801-64.968-11.572-89.441-33.583-10.81-9.722-19.743-21.135-26.401-34.069-3.343-6.495-6.091-13.080-7.27-20.297-1.3-7.957-3.026-15.856-5.376-23.572-4.927-16.18-12.451-31.441-23.378-44.417-4.903-5.822-10.704-11.504-16.41-16.566-6.242-5.537-12.981-10.609-20.078-14.998-56.401-34.879-128.5-25.581-184.913 4.037-52.684 27.66-94.133 74.62-119.511 128.043-3.306 6.96-6.34 14.050-9.188 21.209-1.893 4.76 2.070 10.413 6.622 11.663 5.396 1.484 9.765-1.843 11.665-6.621v0z","M160.304 455.178c41.964-44.761 96.656-78.999 157.872-88.828 32.856-5.275 66.558-2.208 97.728 9.365 3.523 1.308 7.024 2.31 10.336 4.117 3.711 2.024 7.248 4.354 11.013 6.281 7.075 3.623 13.908 7.443 20.108 12.47 12.84 10.41 23.314 22.71 31.557 37.010 8.145 14.127 14.144 29.923 15.384 46.298 1.387 18.313-4.426 36.177-4.021 54.47 0.397 17.943 5.507 35.282 13.042 51.457 1.649 3.539 3.979 6.629 5.652 10.139 1.9 3.988 4.020 7.728 6.513 11.392 4.473 6.576 9.576 12.773 15.207 18.39 5.452 5.438 11.414 10.306 17.572 14.918 6.197 4.64 13.161 10.342 20.426 13.122 13.836 5.295 26.994 12.056 41.395 16.097 28.592 8.023 58.494 8.98 87.771 4.671 58.101-8.552 112.735-38.903 154.752-79.34 5.007-4.819 9.83-9.822 14.491-14.977 8.168-9.032-5.202-22.483-13.409-13.409-38.356 42.411-89.494 74.517-145.67 86.674-27.054 5.855-55.47 6.617-82.579 0.673-14.241-3.123-28.089-7.902-41.114-14.462-3.126-1.575-6.619-2.516-9.638-4.054-3.539-1.802-6.899-4.345-10.173-6.587-6.072-4.158-11.857-8.658-17.245-13.677-11.352-10.574-19.47-23.093-26.473-36.811-7.662-15.008-12.095-32.409-11.533-49.282 0.599-17.992 5.699-35.444 3.595-53.535-2.068-17.786-7.949-34.797-16.785-50.358-34.635-60.993-107.81-87.836-175.394-81.58-63.329 5.862-121.773 36.844-167.78 79.91-5.517 5.165-10.844 10.524-16.012 16.038-8.341 8.896 5.041 22.334 13.41 13.408v0z","M202 338.143c56.115-29.898 122.678-42.266 185.115-27.481 57.092 13.519 110.308 51.619 127.12 109.993 4.453 15.463 5.476 33.344 3.168 49.282-2.313 15.975-10.058 30.425-17.519 44.49-15.544 29.303-16.868 64.049-7.727 95.681 17.049 59.003 68.992 100.739 126.263 117.92 63.093 18.927 131.406 10.987 191.212-15.141 7.454-3.257 14.761-6.83 21.939-10.654 10.775-5.741 1.206-22.116-9.571-16.374-56.115 29.898-122.678 42.266-185.115 27.481-55.876-13.231-109.41-50.391-126.248-107.597-4.295-14.593-5.789-29.513-4.893-44.699 0.471-7.982 1.855-15.847 4.354-23.451 2.429-7.391 6.456-14.052 10.020-20.931 7.895-15.241 14.83-31.116 16.447-48.381 1.6-17.086 0.852-35.267-3.809-51.833-7.912-28.121-23.768-53.678-44.947-73.736-11.216-10.622-23.882-19.525-37.017-27.555-3.395-2.075-7.019-3.793-10.619-5.475-4.191-1.958-8.494-4.49-12.884-5.935-7.314-2.406-14.298-5.55-21.711-7.773-63.093-18.927-131.406-10.987-191.212 15.141-7.454 3.257-14.761 6.83-21.939 10.654-10.772 5.74-1.203 22.116 9.573 16.374v0z","M280.328 242.387c54.874-8.312 113.666 0.028 163.033 25.769 51.928 27.076 98.315 78.162 101.767 139.118 0.521 9.199-0.136 18.211-1.5 27.301-0.366 2.438-0.079 4.85-0.422 7.266-0.295 2.073-1.142 4.216-1.715 6.233-1.24 4.354-2.58 8.682-4.147 12.931-3.135 8.5-7.714 15.971-12.776 23.432-2.385 3.516-4.735 7.039-7.651 10.144-2.482 2.643-6.467 6.799-8.178 8.319-1.793 1.593-6.36 4.358-8.801 7.313-2.547 3.085-5.904 5.238-8.496 8.342-6.041 7.235-11.738 15.426-16.171 23.745-4.307 8.085-7.533 16.742-10.153 25.507-1.285 4.299-3.037 8.916-3.371 13.408-0.344 4.623-0.624 9.118-1.138 13.76-7.586 68.58 37.575 132.158 93.013 167.935 50.601 32.655 113.050 44.447 172.554 39.602 7.541-0.614 15.047-1.537 22.535-2.613 5.074-0.729 7.856-7.173 6.622-11.663-1.497-5.449-6.574-7.354-11.663-6.622-57.135 8.209-118.206 0.439-168.917-28.103-54.491-30.669-100.889-89.157-95.565-154.522 0.726-8.914 1.655-17.571 4.215-26.139 2.491-8.333 5.51-16.385 9.883-23.93 4.273-7.375 9.434-16.183 16.151-21.548 1.39-1.11 2.664-2.242 3.826-3.593 0.812-0.943 1.442-2.116 2.314-2.983-0.652 0.649-1.383 0.942 0.598-0.2 3.875-2.232 6.427-5.46 9.638-8.401 13.425-12.294 23.543-29.143 29.814-46.147 3.188-8.644 6.385-17.831 6.623-27.054 0.237-9.205 2.236-18.219 2.009-27.531-1.574-64.722-46.174-121.447-100.060-153.407-49.758-29.51-109.858-41.404-167.265-36.565-7.245 0.611-14.462 1.523-21.649 2.612-5.067 0.768-7.864 7.145-6.622 11.663 1.49 5.419 6.582 7.392 11.664 6.622v0z","M638.728 845.138c-59.48-13.43-115.952-43.615-154.874-91.303-41.174-50.447-61.58-127.154-25.819-186.025 7.895-12.997 18.75-25.564 31.561-33.925 15.443-10.079 33.581-14.585 49.196-24.148 27.405-16.784 47.185-43.694 57.092-74.077 19.109-58.599 0.024-124.152-36.597-171.667-36.706-47.625-90.393-81.62-147.92-98.219-6.95-2.005-13.973-3.727-21.055-5.199-5.009-1.041-10.246 1.464-11.663 6.622-1.291 4.7 1.585 10.616 6.622 11.663 57.059 11.861 111.105 41.488 149.792 85.365 37.671 42.724 60.027 103.828 44.343 160.396-8.058 29.063-26.363 54.949-52.633 70.202-15.786 9.166-33.937 13.381-48.952 24.161-13.578 9.748-25.255 22.284-34.313 36.309-39.067 60.483-23.838 141.215 15.771 197.295 36.486 51.657 92.052 87.013 152.147 105.022 7.35 2.203 14.776 4.125 22.26 5.815 11.886 2.681 16.96-15.597 5.042-18.288v0z","M507.215 156.098c51.968 32.661 96.293 83.078 115.531 142.006 16.958 51.945 15.168 113.345-19.692 157.821-19.421 24.779-47.211 42.293-78.784 46.002-8.175 0.96-16.458-0.056-24.556 0.879-7.793 0.899-15.499 2.296-23.023 4.538-14.47 4.309-28.337 11.095-40.535 19.998-54.097 39.486-72.937 111.21-61.299 175.061 5.975 32.78 19.91 64.215 38.939 91.483 10.237 14.669 20.833 28.738 33.248 41.673 12.031 12.535 25.159 23.924 39.084 34.306 6.83 5.093 13.876 9.877 21.088 14.409 10.362 6.513 19.89-9.888 9.571-16.374-28.563-17.952-55.365-40.856-75.677-67.959-19.861-26.502-36.349-55.483-44.695-87.742-15.145-58.538-2.032-131.075 49.313-168.484 11.703-8.527 24.692-15.043 38.678-18.848 6.905-1.878 14.060-3.484 21.234-3.243 8.634 0.291 17.229-0.379 25.762-1.685 32.822-5.019 62.353-22.987 83.355-48.496 37.957-46.103 44.9-108.923 30.079-165.45-16.101-61.413-57.553-115.156-108.037-152.623-6.488-4.815-13.173-9.35-20.013-13.649-10.362-6.511-19.89 9.89-9.571 16.375v0z"],"grid":0,"tags":["black-hole"],"defaultCode":59657},{"paths":["M922.141 454.955c-8.467-26.855-26.805-48.59-49.949-63.96 6.685-18.552 9.934-40.109-0.514-57.713-6.863-11.566-18.703-19.231-31.467-22.831-0.169-0.047-0.341-0.085-0.511-0.132-0.892-24.978-5.676-49.769-16.5-72.446-9.446-19.792-23.786-36.708-41.395-49.697-28.814-21.256-67.204-30.802-102.715-27.293-12.682 1.253-26.767 3.742-37.992 10.486-16.79-7.898-35.173-11.030-53.649-7.342-12.961 2.587-25.492 8.803-35.434 17.661-29.341-20.551-71.633-16.753-104.719-9.555-21.103 4.591-41.665 11.713-61.234 20.833-16.332 7.611-32.493 16.904-45.711 29.288-7.221 6.766-14.721 16.221-16.601 26.392-22.97-0.769-45.726 8.536-60.639 26.715-16.309 19.881-20.13 44.816-13.029 68.382-30.419 6.947-53.963 30.167-66.875 58.824-13.166 29.22-19.256 66.353-6.752 96.887 4.415 10.78 11.241 20.216 20.53 26.559-15.273 16.801-25.271 37.968-21.223 61.366 3.673 21.23 19.154 39.361 37.479 49.88 8.358 4.798 17.459 8.092 26.938 9.532 7.85 15.787 19.47 30.070 35.266 38.366 14.433 7.579 30.996 10.012 47.126 8.421 29.667-2.927 57.832-15.897 82.818-31.644 4.448-2.804 8.813-5.733 13.066-8.82 25.913 9.226 53.835 15.641 81.466 14.235 0.118 0.797 0.296 1.615 0.551 2.457 3.133 10.367 14.283 17.123 23.184 22.007 12.165 6.676 25.333 11.805 38.621 15.852 8.976 14.899 16.32 31 24.124 46.492 10.354 20.557 20.582 41.177 30.76 61.822 2.289 4.643 4.577 9.287 6.855 13.934 1.711 3.489 7.011 5.698 10.707 4.358 10.396-3.773 20.794-7.545 31.19-11.318 4.421-1.604 8.616-6.588 6.622-11.663-10.876-27.693-21.441-56.036-28.429-84.983-0.852-3.531-1.59-7.079-2.203-10.656 20.108-0.358 40.207-1.49 60.26-2.944 0.742-0.054 1.485-0.113 2.227-0.167 17.104 0.844 37.72-1.556 62.485-9.129 93.372-28.553 85.649-76.603 80.529-91.741 13.987-5.878 26.838-14.538 37.766-25.007 34.374-32.935 51.534-85.522 36.972-131.704zM676.3 180.144c-0.273 0.044-1.293 0.139 0 0v0zM371.697 659.078c-2.56 1.258-5.143 2.47-7.748 3.63-0.426 0.19-2.622 1.13-2.907 1.261-1.534 0.635-3.076 1.255-4.626 1.85-5.917 2.273-11.951 4.254-18.094 5.829-2.936 0.753-5.897 1.414-8.878 1.964-4.098 0.756-3.807 0.728-7.768 1.084-3.413 0.307-6.842 0.446-10.268 0.377-1.773-0.035-3.545-0.124-5.312-0.273-0.734-0.062-1.466-0.14-2.199-0.217-0.104-0.012-0.184-0.022-0.252-0.029-0.387-0.058-0.773-0.115-1.159-0.179-3.191-0.574-6.337-1.277-9.43-2.258-4.352-1.381-4.709-1.552-8.441-3.548-13.853-7.405-23.103-20.117-29.978-35.371-1.222-2.713-4.025-4.219-6.958-4.544-0.395-0.070-0.803-0.124-1.228-0.151-8.646-0.546-18.663-4.245-27.24-9.823-8.502-5.529-15.818-13.192-20.658-22.5-4.605-8.859-6.153-19.424-3.728-29.462 3.604-14.922 13.875-26.778 25.135-36.704 5.483-4.834 2.338-13.996-4.184-15.847-1.108-0.315-2.191-0.684-3.272-1.072 0.846 0.269-2.339-1.094-3.088-1.517-1.14-0.645-2.204-1.384-3.299-2.099-0.057-0.037-0.097-0.062-0.14-0.090-0.003-0.003-0.005-0.005-0.009-0.008-0.659-0.569-1.326-1.123-1.963-1.718-0.96-0.897-1.876-1.842-2.749-2.825-0.441-0.497-0.859-1.012-1.287-1.519-0.043-0.051-0.075-0.087-0.108-0.125-0.059-0.097-0.131-0.21-0.229-0.363-1.634-2.532-3.22-5.028-4.529-7.75-0.309-0.643-0.6-1.293-0.892-1.944-0.003-0.006-0.004-0.008-0.006-0.012-0.037-0.107-0.081-0.232-0.138-0.397-0.575-1.629-1.179-3.241-1.683-4.894-0.933-3.065-1.672-6.189-2.243-9.341-0.165-0.91-0.306-1.824-0.453-2.737-0.032-0.198-0.019-0.033-0.006 0.104-0.013-0.129-0.038-0.361-0.082-0.768-0.189-1.762-0.366-3.522-0.483-5.291-0.239-3.639-0.296-7.29-0.19-10.936 0.108-3.765 0.402-7.519 0.83-11.259 0.037-0.32 0.146-1.108 0.192-1.444 0.107-0.724 0.216-1.448 0.335-2.17 0.314-1.911 0.669-3.815 1.064-5.712 1.598-7.685 3.84-15.239 6.717-22.542 0.958-2.431 0.445-1.218 1.518-3.599 0.869-1.93 1.786-3.84 2.752-5.725 1.713-3.347 3.576-6.619 5.598-9.791 1.043-1.637 2.129-3.247 3.256-4.828 0.518-0.726 1.046-1.446 1.581-2.16 0.030-0.041 0.045-0.061 0.070-0.094 0.301-0.382 0.602-0.764 0.911-1.14 2.426-2.955 4.989-5.792 7.74-8.451 1.468-1.418 2.983-2.789 4.545-4.102 0.331-0.278 1.509-1.228 1.768-1.444 0.317-0.224 1.805-1.316 2.185-1.582 3.334-2.328 6.844-4.401 10.505-6.174 0.501-0.243 2.087-0.959 2.445-1.127 0.331-0.122 1.76-0.679 2.167-0.827 1.953-0.71 3.937-1.337 5.944-1.876 2.196-0.591 4.415-1.029 6.647-1.456 0.632-0.12 0.878-0.174 0.962-0.195 0.017 0.006 0.143 0.002 0.642-0.053 1.249-0.137 2.498-0.245 3.753-0.332 7.492-0.522 11.383-7.571 8.187-14.267-9.188-19.25-7.811-42.145 6.053-58.67 13.186-15.717 33.979-23.464 54.156-19.443 6.403 1.276 14.424-4.354 11.663-11.663-0.316-0.835-0.448-1.765-0.727-2.606 0.028-0.5-0.004-1.037-0.013-1.527 0-0.012 0-0.022 0-0.034-0.029 0.174-0.071 0.36-0.131 0.547 0.060-0.186 0.097-0.38 0.13-0.576-0.019-1.233 0.117-0.897 0.031-0.185 0.044-0.277 0.083-0.555 0.158-0.82 0.329-1.173 0.73-2.291 1.125-3.441-0.924 2.691 0.297-0.441 0.887-1.471 0.704-1.229 1.529-2.365 2.301-3.548 0.051-0.078 0.088-0.136 0.128-0.198 0.009-0.010 0.014-0.016 0.023-0.027 0.466-0.559 0.923-1.124 1.399-1.673 1.074-1.239 2.198-2.435 3.356-3.595 2.467-2.471 5.117-4.71 7.797-6.943 0.212-0.176 0.362-0.303 0.472-0.396 0.069-0.049 0.18-0.131 0.353-0.262 0.741-0.558 1.484-1.111 2.235-1.656 1.664-1.208 3.355-2.379 5.066-3.518 7.263-4.832 14.897-9.098 22.715-12.962 16.895-8.349 35.056-14.875 54.359-19.664 18.989-4.71 35.871-7.292 55.676-6.474 2.441 0.101 4.877 0.263 7.308 0.497 1.153 0.111 2.304 0.238 3.453 0.382 0.061 0.009 0.133 0.021 0.222 0.035 0.578 0.089 1.156 0.177 1.733 0.273 4.594 0.761 9.146 1.815 13.576 3.254 1.033 0.336 2.059 0.691 3.078 1.070 0.432 0.16 1.743 0.702 2.007 0.798 1.724 0.772 3.422 1.6 5.074 2.517 1.258 0.7 2.466 1.468 3.664 2.253-2.547 5.453-4.385 11.369-5.749 17.001-4.044 16.696-3.742 34.026-0.1 50.704-20.309 2.701-40.126 9.605-55.224 24.009-9.938 9.481-17.28 22.070-20.526 35.446-9.455-0.754-18.837 0.595-27.684 4.777-9.712 4.591-17.598 12.794-23.046 21.941-10.515 17.655-14.369 41.704-8.1 61.492 1.344 4.238 3.164 8.15 5.518 11.608-20.502 9.238-39.978 21.334-54.853 38.311-14.089 16.079-22.938 35.355-25.164 56.646-3.951 37.781 14.923 75.874 40.929 102.244 9.051 9.177 19.437 17.428 30.892 23.549-3.739 2.393-7.533 4.702-11.383 6.91-4.716 2.697-9.507 5.259-14.381 7.653zM534.178 641.114c-0.324 0.138-0.567 0.236 0 0v0zM517.642 667.808c-0.001 0.001-0.001 0.002-0.002 0.002-0.066 0.044-0.133 0.085-0.208 0.139 0.058-0.041 0.131-0.089 0.21-0.141zM591.161 713.806c-1.146 0.41-2.294 0.819-3.441 1.229-0.312-0.609-0.625-1.217-0.937-1.827 1.457 0.217 2.917 0.415 4.378 0.598zM596.436 732.008c9.138-3.264 18.276-6.528 27.414-9.792 0.215 1.137 0.442 2.271 0.678 3.404 0.236 1.135 0.484 2.268 0.741 3.398-8.287 3.6-16.573 7.2-24.859 10.8-1.322-2.605-2.645-5.209-3.973-7.81zM608.905 756.659c7.097-3.083 14.193-6.167 21.29-9.25 0.469 1.573 0.943 3.143 1.425 4.71 0.243 0.79 0.495 1.578 0.741 2.367-6.715 2.933-13.43 5.865-20.145 8.798-1.103-2.208-2.203-4.417-3.311-6.625zM620.616 780.17c5.869-2.564 11.739-5.127 17.608-7.69 0.667 1.961 1.34 3.919 2.020 5.874-5.655 2.4-11.31 4.8-16.966 7.2-0.887-1.795-1.773-3.59-2.661-5.384zM646.608 796.089c1.057 2.871 2.12 5.739 3.195 8.603 0.439 1.17 0.884 2.338 1.326 3.507-4.724 1.714-9.447 3.429-14.172 5.143-1.781-3.63-3.564-7.258-5.349-10.887 5.001-2.122 10-4.244 15-6.366zM646.822 696.575c-11.129 0.28-22.271 0.359-33.399-0.005-5.019-0.164-10.037-0.419-15.042-0.836-2.189-0.182-4.373-0.403-6.555-0.651-0.41-0.046-0.819-0.099-1.229-0.151-1.122-0.165-2.241-0.335-3.358-0.528-12.791-2.22-25.426-6.389-37.461-11.187-5.66-2.257-11.206-4.85-16.549-7.781-4.704-2.582-9.024-5.258-11.965-8.006-0.368-0.344-0.726-0.699-1.079-1.058 1.657-0.626 5.574-1.54 7.874-2.185 5.883-1.653 11.639-4.103 17.047-7.203 4.356-2.039 8.54-4.426 12.456-7.239 0.533-0.383 1.074-0.773 1.616-1.167 17.167 12.551 36.291 22.704 57.38 26.583 5.666 1.042 11.385 1.649 17.106 1.828 4.033 5.743 10.337 12.954 19.633 19.391-2.158 0.066-4.317 0.143-6.474 0.197zM905.736 513.080c-1.179 5.198-2.696 10.317-4.523 15.323-0.471 1.29-0.971 2.568-1.472 3.846-0.047 0.122-0.225 0.556-0.308 0.765-0.171 0.396-0.339 0.794-0.516 1.187-1.125 2.509-2.305 4.989-3.575 7.428-5.155 9.899-10.516 17.632-17.234 25.079-7.63 8.458-14.52 14.311-23.347 19.844-9.783 6.131-17.104 9.335-28.088 12.108-10.92 2.758-22.080 3.558-34.589 1.96-0.188-0.030-0.834-0.123-0.954-0.142-0.995-0.159-1.987-0.323-2.978-0.506-1.673-0.309-3.338-0.657-4.996-1.043-3.41-0.795-6.783-1.749-10.107-2.851-7.022-2.327-12.686-4.913-19.355-8.53-4.557-2.472-10.246-1.097-12.973 3.402-2.41 3.977-5.221 7.707-8.008 11.424-0.344 0.429-0.68 0.863-1.023 1.292-0.855 1.070-1.721 2.132-2.598 3.186-1.728 2.075-3.498 4.115-5.308 6.118-4.329 4.79-8.891 9.371-13.687 13.694-2.637 2.376-5.349 4.667-8.124 6.88-0.239 0.191-0.848 0.657-1.103 0.854-0.562 0.424-1.125 0.848-1.691 1.264-1.508 1.107-3.036 2.187-4.584 3.237-6.427 4.361-13.188 8.127-20.253 11.347-0.335 0.153-0.672 0.298-1.010 0.444-0.037 0.015-0.059 0.024-0.103 0.042-0.855 0.349-1.715 0.687-2.578 1.015-2.033 0.772-4.087 1.485-6.161 2.134-0.919 0.287-1.841 0.562-2.768 0.825-8.788-0.621-17.71-0.161-26.459-1.347-13.38-1.814-27.31-6.653-39.857-11.594-0.336-0.134-0.669-0.27-1.003-0.408-0.132-0.058-0.38-0.166-0.751-0.326-1.067-0.475-2.129-0.961-3.179-1.472-1.624-0.788-3.227-1.62-4.796-2.513-2.654-1.508-5.137-3.222-7.616-4.997-0.004-0.003-0.006-0.004-0.009-0.007-0.009-0.007-0.012-0.009-0.020-0.017-0.546-0.444-1.098-0.881-1.644-1.326-0.935-0.761-1.86-1.535-2.796-2.295-2.575-2.094-5.188-4.151-7.929-6.024-4.465-3.051-10.215-0.56-12.973 3.402-4.339 6.235-10.302 11.014-16.946 14.616-0.386 0.176-0.769 0.358-1.154 0.536-0.038 0.017-0.082 0.037-0.127 0.058-0.318 0.131-0.633 0.265-0.955 0.387-2.374 0.904-4.753 1.765-7.183 2.509-13.319 4.076-24.111 5.040-38.371 4.577-19.316-0.629-38.321-4.96-56.638-10.95-3.332-1.089-7.436-3.165-11.413-3.994-0.142-0.050-0.277-0.108-0.425-0.155-1.559-0.48-3.103-1.002-4.629-1.579-0.424-0.16-0.843-0.331-1.264-0.499-0.1-0.054-1.617-0.696-2.062-0.904-3.307-1.538-6.518-3.281-9.629-5.182-3.257-1.989-6.387-4.165-9.44-6.455-0.282-0.224-0.566-0.444-0.845-0.671-0.797-0.65-1.597-1.297-2.384-1.961-1.595-1.344-3.157-2.726-4.688-4.142-3.032-2.807-5.936-5.751-8.71-8.812-1.365-1.507-2.699-3.043-4-4.605-0.612-0.734-1.206-1.481-1.811-2.221-0.067-0.082-0.28-0.35-0.466-0.583-0.266-0.351-0.836-1.091-0.822-1.072-5.134-6.885-9.703-14.181-13.529-21.875-0.867-1.742-1.688-3.504-2.482-5.28-0.184-0.411-0.361-0.823-0.539-1.236-0.038-0.097-0.080-0.203-0.132-0.333-0.408-1.033-0.819-2.062-1.208-3.101-1.502-4.016-2.795-8.11-3.849-12.267-0.509-2.003-0.962-4.021-1.357-6.051-0.21-1.081-0.388-2.167-0.578-3.251-0.071-0.406-0.125-0.815-0.19-1.223-0.014-0.092-0.025-0.153-0.033-0.2-0.006-0.046-0.009-0.084-0.016-0.139-0.485-4.235-0.751-8.485-0.698-12.75 0.027-2.067 0.12-4.132 0.287-6.192 0.079-0.965 0.183-1.927 0.283-2.889 0.010-0.101 0.046-0.374 0.080-0.638 0.066-0.412 0.193-1.234 0.218-1.377 0.758-4.306 1.767-8.549 3.137-12.703 0.625-1.896 1.317-3.775 2.080-5.621 0.113-0.226 0.686-1.509 0.828-1.81 0.569-1.211 1.164-2.408 1.787-3.592 2.155-4.093 4.631-8.017 7.369-11.745 0.302-0.411 0.608-0.818 0.917-1.224 0.138-0.162 0.768-0.944 0.866-1.060 0.957-1.141 1.91-2.281 2.901-3.392 1.939-2.172 3.968-4.264 6.070-6.279 4.584-4.394 9.047-8.034 14.046-11.519 12.523-8.732 26.294-15.582 40.525-21.049 9.121-3.503 8.786-14.666 0-18.286 3.477 1.432-3.244-2.621-0.505-0.29-0.564-0.481-1.127-0.952-1.656-1.473-0.169-0.166-0.723-0.782-1.088-1.178-0.302-0.415-0.761-1.033-0.855-1.179-0.438-0.682-0.845-1.381-1.228-2.095-0.331-0.617-0.626-1.247-0.923-1.879-0.17-0.482-0.359-0.957-0.524-1.439-0.59-1.725-1.068-3.487-1.457-5.268-0.203-0.927-0.354-1.862-0.533-2.794-0.014-0.074-0.030-0.171-0.046-0.271-0.048-0.398-0.101-0.795-0.134-1.195-0.338-4.223-0.41-8.425-0.059-12.652 0.068-0.82 0.16-1.637 0.255-2.454 0.055-0.304 0.263-1.738 0.334-2.134 0.402-2.249 0.904-4.48 1.506-6.684 0.533-1.949 1.143-3.878 1.838-5.776 0.13-0.356 0.801-2.013 0.815-2.094 0.452-1.017 0.926-2.025 1.432-3.016 0.965-1.892 2.024-3.736 3.187-5.513 0.504-0.772 1.039-1.521 1.571-2.275 0.032-0.046 0.054-0.077 0.079-0.112 0.369-0.455 0.739-0.907 1.123-1.35 1.361-1.571 2.823-3.056 4.38-4.431 0.318-0.281 1.727-1.358 1.678-1.351 0.874-0.614 1.76-1.21 2.679-1.757 0.902-0.537 1.831-1.015 2.761-1.501 0.224-0.117 0.458-0.216 0.689-0.323 0.179-0.060 1.282-0.518 1.458-0.575 2.215-0.715 4.434-1.322 6.728-1.71-0.209 0.076 2.625-0.219 3.211-0.239 1.223-0.042 2.448-0.033 3.67 0.018 0.631 0.027 1.261 0.066 1.891 0.117 0.017 0.001 1.607 0.188 1.823 0.195 1.552 0.243 3.092 0.568 4.621 0.923 6.167 1.433 11.742-2.829 12.002-9.143 0.017-0.407 0.066-0.812 0.101-1.216 0.121-0.67 0.222-1.345 0.356-2.014 0.389-1.954 0.88-3.887 1.458-5.793 0.348-1.147 0.728-2.284 1.139-3.41 0.221-0.606 0.468-1.202 0.691-1.806 0.026-0.069 0.042-0.117 0.063-0.174 0.036-0.071 0.073-0.143 0.12-0.238 1.39-2.801 2.758-5.566 4.448-8.206 0.779-1.217 1.608-2.403 2.467-3.565 0.202-0.253 0.702-0.888 0.978-1.212 0.667-0.782 1.343-1.557 2.040-2.311 6.047-6.525 10.816-9.861 19.243-13.921 4.61-2.222 10.398-4.128 16.219-5.535 6.974-1.686 14.011-2.567 21.167-2.98 5.919-0.342 11.063-5.811 9.143-12.002-5.331-17.193-6.87-35.349-2.518-52.479 0.75-2.952 1.646-5.867 2.699-8.725 0.196-0.532 1.046-2.581 1.057-2.66 0.274-0.613 0.546-1.228 0.837-1.834 0.731-1.518 1.502-3.043 2.388-4.486 8.232-8.954 18.861-14.903 30.821-17.54 15.77-3.477 31.871 0.302 45.847 7.897 2.734 1.486 6.891 2.021 9.571 0 1.896-1.43 3.922-2.662 6.035-3.745 1.106-0.566 2.246-1.045 3.366-1.578-2.777 1.32 0.814-0.282 1.892-0.662 5.998-2.117 12.181-3.348 18.444-4.361 0.158-0.017 0.344-0.037 0.578-0.062 0.844-0.089 1.687-0.188 2.532-0.269 1.84-0.177 3.684-0.315 5.53-0.415 3.741-0.204 7.49-0.255 11.237-0.165 3.926 0.095 7.848 0.344 11.754 0.745 0.97 0.1 1.939 0.215 2.908 0.326 0.313 0.036 0.539 0.062 0.711 0.081 0.064 0.013 0.191 0.035 0.43 0.073 2.22 0.35 4.436 0.701 6.644 1.125 8.36 1.606 16.592 3.913 24.548 6.942 0.989 0.376 1.969 0.772 2.953 1.162 0.106 0.042 0.296 0.121 0.466 0.192 0.314 0.135 0.629 0.268 0.94 0.408 2.079 0.931 4.143 1.89 6.179 2.913 4.008 2.015 7.915 4.233 11.694 6.65 1.86 1.191 3.69 2.43 5.485 3.718 0.766 0.549 1.522 1.112 2.276 1.678 0.1 0.094 1.858 1.469 2.126 1.689 3.646 2.989 7.116 6.189 10.389 9.582 1.625 1.685 3.2 3.419 4.724 5.196 0.773 0.901 1.526 1.818 2.277 2.736 1.579 1.93 0.346 0.332 1.819 2.362 2.915 4.016 5.632 8.156 8.080 12.475 13.241 23.355 18.213 51.232 18.329 78.818 0.022 5.17 3.87 8.585 8.612 9.366 0.018 0.004 0.027 0.006 0.046 0.009 1.311 0.261 2.622 0.49 3.922 0.812 1.853 0.459 3.683 1.015 5.477 1.665 0.485 0.175 0.962 0.373 1.446 0.551 1.093 0.607 2.271 1.077 3.371 1.68 1.082 0.594 2.139 1.23 3.168 1.91 0.573 0.379 1.124 0.788 1.69 1.175 0.015 0.010 0.023 0.015 0.037 0.025 0.054 0.052 0.106 0.102 0.176 0.169 0.981 0.928 2.013 1.783 2.952 2.759 0.518 0.539 0.988 1.123 1.502 1.664 0.127 0.134 0.219 0.227 0.297 0.302 0.058 0.1 0.128 0.217 0.232 0.382 0.797 1.26 1.629 2.478 2.329 3.8 0.203 0.382 0.385 0.775 0.573 1.163-0.101-0.162 0.631 1.495 0.784 1.943 0.553 1.624 0.994 3.285 1.336 4.965 0.084 0.415 0.291 1.788 0.323 1.877 0.102 0.983 0.178 1.969 0.222 2.956 0.525 11.988-3.167 23.492-7.977 35.099-1.581 3.815 1.062 8.769 4.358 10.707 11.145 6.554 20.581 13.88 29.246 23.696 3.827 4.335 6.19 7.515 9.441 12.808 1.42 2.313 2.748 4.683 3.98 7.102 0.644 1.265 1.255 2.543 1.853 3.831 0.866 1.866 0.451 0.887 1.070 2.477 7.816 20.108 8.845 40.336 4.364 60.084z","M342.367 252.538c0 0.010 0 0.019 0 0.029 0.012-0.074 0.023-0.146 0.031-0.214-0.009 0.063-0.021 0.123-0.031 0.185z","M300.861 417.191c0.438-1.917 1.075-3.801 1.739-5.65 0.329-0.915 0.699-1.814 1.041-2.723 0.257-0.554 0.494-1.118 0.752-1.671 1.198-2.566 2.529-5.069 3.995-7.491 0.759-1.253 1.551-2.484 2.382-3.69 0.399-0.579 0.81-1.149 1.221-1.719 0.214-0.298 0.357-0.498 0.455-0.639 0.038-0.034 0.117-0.12 0.275-0.305 2.337-2.735 4.735-5.367 7.446-7.743 0.606-0.532 1.226-1.046 1.849-1.558 0.023-0.019 0.040-0.032 0.062-0.050 0.321-0.237 0.64-0.482 0.972-0.704 1.774-1.191 3.535-2.369 5.405-3.408 1.355-0.752 3.995-2.039 4.494-2.248 0.632-0.265 3.846-1.385 5.531-1.868 10.627-3.044 22.053-2.669 33.706-0.196 11.903 2.526 16.991-15.75 5.041-18.286-22.091-4.688-46.002-3.425-64.758 10.361-12.543 9.22-21.406 21.881-27.144 36.238-1.077 2.696-2.102 5.47-2.75 8.307-2.714 11.881 15.565 16.954 18.285 5.042zM322.094 383.938c1.188-0.974 0.34-0.261 0 0v0z","M324.818 598.558c-0.031-0.011-0.144-0.037-0.382-0.082-0.048-0.009-0.097-0.018-0.145-0.027-0.085-0.016-0.162-0.030-0.272-0.050-1.565-0.281-3.129-0.553-4.682-0.9-2.263-0.505-4.507-1.103-6.721-1.787-1.211-0.374-2.413-0.775-3.607-1.201-0.68-0.244-1.357-0.495-2.031-0.757-0.186-0.072-0.802-0.326-1.225-0.499-0.449-0.203-1.14-0.51-1.311-0.591-0.72-0.336-1.435-0.684-2.144-1.043-1.461-0.741-2.898-1.529-4.302-2.372-1.456-0.874-2.836-1.84-4.246-2.784-0.169-0.113-0.296-0.197-0.397-0.264-0.011-0.009-0.027-0.023-0.048-0.041-0.779-0.631-1.55-1.271-2.298-1.938-1.237-1.104-2.425-2.264-3.549-3.483-0.617-0.669-1.203-1.363-1.792-2.057-0.024-0.028-0.032-0.038-0.053-0.062-0.289-0.392-0.577-0.784-0.854-1.184-1.004-1.455-1.926-2.968-2.754-4.53-0.439-0.828-0.846-1.673-1.234-2.525-0.243-0.625-0.475-1.253-0.691-1.888-3.328-9.761-2.881-19.768-0.342-30.593 2.785-11.87-15.496-16.937-18.286-5.041-5.074 21.637-2.992 44.399 12.598 61.29 9.931 10.76 23.987 17.584 38.043 21.112 3.715 0.933 7.504 1.624 11.313 2.025 5.1 0.537 9.481-4.742 9.481-9.481-0.001-5.050-3.589-8.282-8.068-9.247z","M449.653 480.972c-4.818-1.737-10.381 1.957-11.663 6.622-1.363 4.963 1.432 9.38 5.806 11.331 0.009 0.006 0.013 0.009 0.022 0.013 1.049 0.627 2.14 1.199 3.192 1.825 0.19 0.113 0.366 0.248 0.544 0.381 0.609 0.591 1.29 1.12 1.884 1.729 0.315 0.323 0.599 0.683 0.921 0.997 0.552 0.848 1.071 1.701 1.594 2.571 0.185 0.308 0.304 0.487 0.386 0.594 0.009 0.126 0.055 0.374 0.178 0.839 0.155 0.583 0.597 2.879 0.62 2.525 0.095 1.267 0.072 2.525 0.056 3.8-0.004 0.334-0.056 0.878-0.075 1.111-0.109 0.658-0.243 1.314-0.391 1.964-2.151 9.498-7.93 17.791-13.781 25.389-3.127 4.060-0.622 10.619 3.401 12.973 4.892 2.862 9.838 0.669 12.973-3.402 11.648-15.126 22.633-35.845 13.295-54.79-3.758-7.622-11.013-13.609-18.961-16.474z","M548.725 396.056c-1.553 0.112-0.767 0.092 0 0v0z","M544.369 396.157c-0.636-0.199-0.869-0.253-0.864-0.238 0.29 0.072 0.579 0.152 0.85 0.235 0.004 0.001 0.009 0.002 0.013 0.003z","M542.846 415.009c5.078 0.549 10.591-0.134 15.445-1.758 11.514-3.853 6.578-22.173-5.041-18.286-1.285 0.43-2.61 0.686-3.927 0.994-0.158 0.037-0.377 0.069-0.598 0.096 0.205-0.015 0.438-0.031 0.731-0.051-0.709 0.047-1.414 0.156-2.125 0.195-0.744 0.041-1.485 0.019-2.229 0.033-0.227 0.004-0.488-0.030-0.734-0.077 0.13 0.041 0.275 0.087 0.439 0.14-0.137-0.045-0.292-0.094-0.452-0.143-0.452-0.087-0.843-0.216-0.85-0.235-0.23-0.057-0.448-0.101-0.655-0.132-0.041-0.024-0.082-0.046-0.124-0.070-0.12-0.599-0.275-1.571-0.326-1.642-0.032-0.955-0.017-1.912 0.067-2.862 0.103-1.157 1.33-5.914 2.154-8.327 8.731-25.539 35.685-36.97 60.941-37.196 12.196-0.109 12.225-19.072 0-18.963-27.312 0.245-54.602 10.757-70.622 33.704-7.25 10.385-13.181 24.961-11.061 37.82 1.62 9.816 9.456 15.731 18.968 16.759z","M610.759 271.997c0.337-0.383 0.709-0.737 1.077-1.088 0.413-0.394 0.85-0.76 1.275-1.141 0.158-0.142 0.325-0.275 0.492-0.409 1.771-1.175 3.474-2.412 5.327-3.472 1.159-0.663 2.339-1.288 3.537-1.875 0.655-0.321 1.324-0.615 1.981-0.932 0.204-0.098 0.345-0.169 0.463-0.229 0.132-0.045 0.29-0.1 0.513-0.179 3.505-1.263 6.995-2.438 10.628-3.293 1.881-0.443 3.777-0.822 5.684-1.142 0.338-0.057 1.785-0.253 2.166-0.313 1.249-0.144 2.498-0.278 3.752-0.376 11.644-0.914 22.84 0.065 33.838 2.309 19.198 3.917 37.543 11.036 55.085 19.657 4.594 2.258 10.257 1.24 12.973-3.402 2.444-4.178 1.213-10.705-3.401-12.973-29.071-14.288-61.471-26.091-94.37-24.797-16.155 0.635-33.241 4.465-46.689 13.868-2.676 1.871-5.558 3.895-7.739 6.377-3.377 3.846-3.786 9.623 0 13.409 3.446 3.447 10.016 3.864 13.41 0.001z","M624.162 572.505c0.054 0.047 0.107 0.097 0.161 0.147-0.326-0.542-0.519-0.802-0.613-0.885 0.065 0.122 0.135 0.248 0.198 0.366 0.072 0.132 0.165 0.25 0.253 0.372z","M724.268 530.766c-4.535-1.246-10.824 1.542-11.663 6.622-0.158 0.956-0.436 1.897-0.722 2.821-0.302 0.979-0.689 1.923-1.039 2.883-0.050 0.1-0.107 0.21-0.174 0.34-0.436 0.854-0.848 1.718-1.308 2.56-0.85 1.553-1.783 3.062-2.788 4.521-0.216 0.315-1.253 1.669-1.413 1.904-0.644 0.782-1.293 1.56-1.975 2.31-4.005 4.403-7.487 7.222-12.019 10.091-12.584 7.965-28.010 12.649-42.823 13.76-6.33 0.475-11.027 0.314-15.79-1.015-0.706-0.197-1.4-0.428-2.091-0.667 0.164 0.040-1.315-0.54-1.754-0.774-0.832-0.444-1.594-0.992-2.407-1.461-0.091-0.052-0.163-0.091-0.229-0.126-0.072-0.087-0.158-0.188-0.281-0.32-0.454-0.496-0.959-1.084-1.471-1.562 0.099 0.163 0.204 0.343 0.328 0.562-0.14-0.248-0.319-0.476-0.489-0.709-0.042-0.037-0.082-0.079-0.124-0.114-0.3-0.249-0.518-0.795-0.326-0.624-0.185-0.344-0.378-0.686-0.585-1.010-0.258-1.524-0.83-4.548-0.625-1.727-0.074-0.491-0.155-0.981-0.251-1.466-2.039-10.36-19.603-8.174-18.624 2.52 0.064 0.706 0.163 1.393 0.277 2.071 0.023 0.657 0.021 1.387 0.021 1.488 0.003 1.432-0.753 3.674 0.058 1.071-0.195 0.628-0.287 1.356-0.438 2-0.061 0.261-0.138 0.498-0.213 0.695-0.221 0.386-0.439 0.776-0.641 1.167-0.12 0.132-0.232 0.263-0.283 0.365-0.059 0.119-0.217 0.272-0.385 0.419-0.516 0.285-2.263 1.070-1.943 1.026-0.737 0.229-1.478 0.429-2.235 0.6-0.218 0.049-0.33 0.079-0.394 0.098-0.496 0.048-0.997 0.082-1.489 0.105-3.020 0.15-6.033-0.086-9.002-0.631-10.956-2.008-20.748-4.842-29.712-10.503-0.871-0.551-1.716-1.135-2.565-1.72-0.119-0.082-0.217-0.15-0.306-0.211-0.363-0.29-0.727-0.583-1.074-0.888-1.479-1.299-2.871-2.661-4.182-4.129-0.277-0.31-0.768-0.963-0.965-1.222-0.36-0.518-0.723-1.033-1.058-1.569-0.438-0.703-0.853-1.418-1.24-2.15-0.218-0.412-0.411-0.84-0.631-1.252-0.029-0.054-0.050-0.092-0.075-0.137-0.539-1.453-1.027-2.91-1.398-4.416-0.192-0.781-0.323-1.571-0.499-2.354-0.013-0.059-0.024-0.103-0.035-0.153-0.041-0.366-0.088-0.731-0.113-1.098-0.108-1.637-0.172-3.267-0.127-4.908 0.022-0.832 0.065-1.662 0.129-2.492 0.040-0.517 0.158-1.524 0.188-1.846 0.542-3.449 1.363-6.852 2.405-10.184 0.541-1.733 1.14-3.448 1.783-5.147 0.302-0.794 0.62-1.581 0.942-2.368 0.12-0.261 0.675-1.545 0.866-1.961 3.358-7.356 7.436-14.373 11.884-21.12 2.152-3.265 4.4-6.467 6.721-9.614 0.521-0.707 1.050-1.41 1.577-2.113 0.21-0.28 0.596-0.786 0.828-1.089 0.99-1.274 1.99-2.541 3.003-3.796 5.598-6.934 11.471-13.753 17.837-20.001 8.723-8.563-4.689-21.969-13.409-13.409-18.4 18.061-35.475 40.079-45.789 63.765-7.378 16.944-11.401 35.898-3.388 53.382 9.573 20.884 35.106 30.316 56.256 33.472 11.445 1.708 24.594 0.762 32.254-8.388 6.458 4.045 14.419 6.225 22.044 6.703 18.305 1.15 38.126-4.252 54.398-12.38 11.802-5.896 22.226-14.521 29.642-25.47 3.428-5.060 6.728-11.247 7.739-17.36 0.834-5.051-1.32-10.212-6.622-11.668zM603.314 577.451c-0.224 0.576-0.406 0.759 0 0v0zM603.773 571.070c0.060 0.010 0.097 0.356 0.118 0.791-0.065-0.421-0.123-0.792-0.118-0.791z","M822.576 456.169c-4.253-14.93-10.571-29.662-20.163-41.954-7.031-9.009-16.227-16.122-26.81-19.352 3.669-6.654 6.584-13.725 7.887-21.149 2.461-14.024-0.947-27.235-9.862-38.345-16.753-20.879-44.732-26.521-70.171-23.93-6.832 0.696-13.822 1.646-20.443 3.556-11.704 3.375-6.726 21.679 5.041 18.286 3.894-1.124 7.918-1.819 11.913-2.456 0.295-0.046 0.591-0.088 0.887-0.13 0.054-0.007 0.116-0.013 0.186-0.022 0.971-0.115 1.943-0.225 2.917-0.32 2.282-0.223 4.571-0.383 6.862-0.472 5.069-0.197 10.218-0.122 15.256 0.527 18.866 2.433 41.342 15.801 39.245 37.262-1.030 10.537-7.75 21.266-14.037 30.144-4.018 5.673 1.295 14.837 8.187 14.267 24.194-2 37.185 24.741 43.689 45.375 0.719 2.279 1.578 4.647 1.97 7.028-0.129-0.547-0.017 1.791-0.026 2.18 0 0.004-0.001 0.010-0.001 0.014-0.087 0.361-0.24 1.091-0.284 1.245-0.098 0.341-0.214 0.675-0.329 1.011-0.392 0.722-0.807 1.417-1.223 2.126-0.042 0.071-0.077 0.13-0.111 0.188-0.249 0.301-0.499 0.605-0.767 0.883-0.727 0.755-1.47 1.483-2.247 2.187-0.279 0.253-0.576 0.49-0.87 0.73-0.022 0.015-0.030 0.021-0.055 0.038-0.789 0.551-1.581 1.094-2.397 1.604-1.899 1.187-3.882 2.241-5.906 3.2-0.352 0.167-1.51 0.678-1.933 0.869-0.439 0.168-1.682 0.657-1.975 0.766-1.99 0.743-4.008 1.416-6.042 2.030-4.882 1.477-9.906 2.723-14.962 3.452-5.073 0.732-7.857 7.17-6.622 11.663 1.497 5.446 6.575 7.357 11.663 6.622 15.066-2.174 31.784-7.621 43.095-18.097 8.833-8.18 11.71-19.544 8.439-31.025z","M657.036 433.298c0.008-0.11 0.013-0.188 0.019-0.275 0.519-4.79-1.703-9.518-6.723-10.897-4.553-1.251-10.802 1.545-11.663 6.622-1.527 9.002-1.083 18.598 1.481 27.363 5.107 17.461 19.070 29.236 36.827 32.584 5.027 0.948 10.229-1.399 11.663-6.622 1.271-4.626-1.564-10.709-6.622-11.663-7.394-1.394-13.102-3.77-17.479-8.321-0.517-0.538-1.009-1.096-1.49-1.665-0.070-0.082-0.116-0.134-0.149-0.169-0.055-0.086-0.124-0.192-0.222-0.339-0.862-1.294-1.673-2.606-2.385-3.991-0.271-0.527-0.523-1.064-0.77-1.603-0.070-0.178-0.152-0.397-0.226-0.62-0.452-1.371-0.913-2.727-1.271-4.126-0.31-1.215-0.551-2.441-0.785-3.671-0.079-0.415-0.132-0.668-0.17-0.831-0.002-0.139-0.015-0.392-0.050-0.84-0.168-2.127-0.278-4.247-0.243-6.381 0.026-1.526 0.146-3.035 0.257-4.554zM659.63 454.585c0.061 0.14 0.050 0.12 0 0v0z","M842.954 508.131c-18.488 3.285-30.692 20.803-28.947 39.321 0.48 5.098 4.014 9.481 9.481 9.481 4.756 0 9.964-4.353 9.481-9.481-0.11-1.168-0.099-2.352-0.056-3.523 0.020-0.538 0.077-1.074 0.096-1.612 0.005-0.142 0.009-0.265 0.012-0.373 0.287-1.514 0.569-3.009 1.016-4.489 0.671-2.221 2.094-4.965 3.826-6.635 1.403-1.353 1.371-1.4 3.56-2.529 1.442-0.743 4.2-1.454 6.57-1.874 5.045-0.896 7.889-7.055 6.622-11.663-1.461-5.319-6.603-7.522-11.662-6.623z","M417.213 273.479c19.756-11.665 43.123-22.485 66.124-24.77 5.095-0.506 9.481-3.995 9.481-9.481 0-4.735-4.355-9.991-9.481-9.481-26.519 2.635-52.866 13.88-75.694 27.36-10.501 6.201-0.971 22.599 9.571 16.374z"],"grid":0,"tags":["brain"],"defaultCode":59658},{"paths":["M544.815 420.666c-37.687-13.895-82.368-1.64-107.633 29.582-25.499 31.511-29.546 76.396-8.565 111.449 21.079 35.217 62.631 53.225 102.766 45.396 44.907-8.76 77.334-49.793 77.67-95.094-0.303-40.794-25.993-77.232-64.239-91.334zM538.59 585.475c-31.315 11.034-66.016 1.281-87.215-24.178-20.767-24.941-22.928-61.782-6.383-89.424 16.631-27.784 50.090-43.018 81.979-36.554 36.45 7.389 62.844 39.523 63.12 76.681-0.24 32.371-20.662 62.609-51.501 73.475z","M529.54 461.714c-20.223-7.384-44.345-0.707-58.080 15.788-14.47 17.377-16.945 42.597-5.034 62.087 11.654 19.066 33.968 28.642 55.826 24.66 24.573-4.475 42.097-26.634 42.975-51.115 0.032-0.366 0.046-0.743 0.041-1.134-0.334-22.696-14.423-42.506-35.728-50.286zM523.909 544.206c-13.759 4.894-29.382 0.816-38.646-10.65-9.097-11.259-9.971-27.291-2.463-39.574 7.291-11.93 21.937-18.525 35.66-15.704 16.18 3.326 27.603 17.281 27.846 33.722-0.209 14.102-8.855 27.388-22.397 32.206z","M560.094 379.619c-54.855-20.292-119.333-2.773-156.407 42.419-37.586 45.816-43.162 111.897-12.236 162.829 30.777 50.686 91.055 76.687 149.071 65.062 56.338-11.289 101.991-58.879 110.521-115.764 1.104-7.357 1.761-14.725 1.798-22.165-0.293-58.887-37.549-111.962-92.747-132.381zM633.878 512c-0.249 50.193-31.904 97.012-79.419 114.312-48.617 17.702-103.422 2.843-136.574-36.804-32.866-39.305-36.525-97.219-10.060-140.803 26.157-43.078 78.105-66.297 127.656-56.347 50.131 10.066 89.006 50.809 97.079 101.24 0.972 6.073 1.288 12.257 1.318 18.403z","M574.146 339.849c-71.3-26.087-154.532-3.411-202.8 55.129-24.326 29.503-38.973 65.619-41.854 103.774-2.836 37.565 6.397 75.934 25.978 108.113 18.916 31.084 47.249 56.593 80.457 71.575 35.232 15.896 74.52 20.431 112.459 12.925 73.6-14.561 133.079-76.351 144.311-150.617 1.442-9.534 2.271-19.102 2.308-28.746-0.142-37.869-11.827-75.495-34.044-106.262-21.757-30.134-51.89-53.112-86.814-65.891zM676.043 512c-0.256 67.892-43.346 130.857-107.531 154.081-32.537 11.772-68.25 13.173-101.552 3.702-32.052-9.115-60.545-28.091-81.807-53.692-44.014-52.997-48.991-130.743-13.306-189.383 35.464-58.277 105.795-89.325 172.763-75.53 66.834 13.767 118.903 68.483 129.604 135.837 1.311 8.253 1.798 16.635 1.83 24.986z","M590.056 297.306c-44.644-16.411-94.684-18.067-140.416-5.102-44.051 12.489-84.185 38.559-113.332 73.891-30.147 36.544-48.374 81.417-52.053 128.67-3.663 47.040 7.757 95.034 32.221 135.378 23.625 38.96 59.066 70.835 100.622 89.628 43.931 19.867 93.135 25.504 140.44 16.079 45.296-9.024 87.555-32.517 119.444-65.886 31.863-33.343 53.551-76.335 60.552-121.982 1.829-11.924 2.844-23.917 2.88-35.982-0.14-46.887-14.539-93.413-41.788-131.665-27.016-37.925-64.85-66.958-108.57-83.029zM719.047 479.777c1.698 10.646 2.371 21.449 2.404 32.223-0.13 43.585-13.644 86.004-38.839 121.587-24.099 34.035-59 60.764-98.19 75.040-41.511 15.122-87.214 16.94-129.74 4.884-40.934-11.605-77.437-35.823-104.569-68.535-27.095-32.667-43.776-74.087-46.944-116.398-3.274-43.73 6.923-87.621 29.681-125.15 21.956-36.208 54.745-65.018 93.248-82.565 39.316-17.917 84.726-22.859 127.031-14.3 41.888 8.475 80.396 29.623 110.016 60.433 29.698 30.893 49.16 70.49 55.903 112.78z","M605.334 256.258c-53.419-19.679-113.228-21.675-167.95-6.104-52.494 14.936-100.253 46.073-134.963 88.208-35.664 43.291-57.306 96.484-61.777 152.42-4.5 56.298 9.065 113.701 38.343 162 28.271 46.637 70.713 84.678 120.484 107.087 52.292 23.543 110.966 30.144 167.206 18.817 53.742-10.825 103.792-38.651 141.705-78.201 38.195-39.844 64.090-91.292 72.445-145.913 2.157-14.104 3.337-28.3 3.373-42.57-0.139-56.109-17.486-111.715-50.16-157.424-32.058-44.847-76.957-79.255-128.705-98.318zM762.342 473.188c2.027 12.826 2.862 25.834 2.895 38.812-0.131 52.588-16.448 103.907-46.85 146.839-29.172 41.195-71.269 73.499-118.687 90.836-50.284 18.386-105.761 20.554-157.274 5.885-49.389-14.064-93.484-43.34-126.199-82.853-32.765-39.573-52.873-89.587-56.72-140.802-3.964-52.778 8.408-105.822 35.856-151.116 26.485-43.704 66.069-78.575 112.536-99.765 47.819-21.806 102.921-27.79 154.37-17.295 50.533 10.308 97.018 35.967 132.705 73.195 35.794 37.339 59.3 85.202 67.37 136.263z","M620.019 214.992c-61.829-22.666-130.949-25.006-194.276-7.061-61.188 17.339-116.782 53.589-157.208 102.7-41.463 50.37-66.587 112.406-71.604 177.479-5.021 65.138 10.705 131.433 44.569 187.31 32.808 54.134 82.036 98.23 139.774 124.285 60.789 27.432 129.165 35.083 194.544 21.812 62.384-12.663 120.415-44.992 164.394-90.963 44.288-46.294 74.231-105.998 83.91-169.395 2.486-16.283 3.83-32.684 3.865-49.158-0.139-65.109-20.293-129.618-58.171-182.677-37.253-52.181-89.577-92.256-149.797-114.331zM809.024 512c-0.133 61.812-19.397 122.205-55.22 172.599-34.331 48.295-83.737 86.059-139.42 106.341-58.688 21.376-123.485 23.89-183.598 6.845-58.080-16.468-110.017-50.851-148.445-97.343-38.42-46.482-61.988-105.085-66.495-165.207-4.634-61.825 9.873-124.023 42.030-177.082 31.138-51.38 77.715-92.411 132.398-117.223 55.979-25.4 120.312-32.377 180.506-20.16 59.418 12.060 114.119 42.282 156.026 86.087 41.886 43.785 69.44 99.909 78.834 159.744 2.355 15.003 3.354 30.217 3.386 45.399z","M805.23 303.564c-42.305-59.109-101.684-104.537-169.933-129.619-70.589-25.942-149.509-28.619-221.81-8.062-69.639 19.799-132.837 61.098-178.84 117.016-46.983 57.109-75.521 127.477-81.327 201.226-5.874 74.602 12.115 150.526 51.016 214.466 37.345 61.385 93.222 111.334 158.738 140.952 69.093 31.234 146.916 39.967 221.251 24.934 71.268-14.412 137.52-51.305 187.715-103.854 50.229-52.585 84.174-120.299 95.277-192.235 2.881-18.672 4.419-37.495 4.455-56.388-0.139-74.324-23.235-147.926-66.543-208.435zM789.579 709.851c-39.516 55.627-96.36 99.068-160.514 122.354-67.32 24.436-141.628 27.219-210.537 7.627-66.327-18.858-125.721-58.128-169.68-111.18-44.303-53.467-71.488-120.855-76.666-190.091-5.317-71.092 11.449-142.634 48.528-203.582 35.558-58.449 88.577-105.234 150.791-133.628 64.624-29.495 138.868-37.614 208.417-23.415 68.062 13.895 130.741 48.626 178.715 98.85 47.98 50.231 79.579 114.617 90.299 183.225 2.685 17.184 3.846 34.604 3.878 51.99-0.133 70.817-22.207 140.101-63.231 197.851z"],"grid":0,"tags":["bulleye"],"defaultCode":59659},{"paths":["M752.681 514.619c-0.024-8.208-0.047-16.415-0.071-24.623-0.092-28.989-0.183-57.976-0.275-86.965-0.146-46.131-0.292-92.262-0.438-138.393-0.033-10.49-0.066-20.982-0.1-31.472-0.008-2.517-2.168-4.596-4.526-4.765-0.315-0.093-0.645-0.141-0.984-0.147-32.997-10.048-65.994-20.096-98.991-30.144-44.133-13.439-88.267-26.878-132.399-40.317-3.168-0.965-8.293-3.642-11.749-2.81-4.858 1.17-9.921 4.873-14.347 7.086-4.421 2.211-8.842 4.421-13.264 6.632-0.468 0.158-0.881 0.388-1.238 0.668-1.853 1.214-2.215 3.431-1.521 5.315 0.016 0.057 0.031 0.113 0.049 0.169-0.047 26.355-0.095 52.71-0.141 79.065-0.077 42.884-0.154 85.767-0.23 128.649-0.017 9.614-0.034 19.228-0.051 28.842-0.199 0.097-0.399 0.194-0.594 0.283-33.086 15.206-66.171 30.412-99.258 45.617-26.697 12.27-53.793 23.942-80.329 36.617-2.34-1.741-5.177-2.773-8.198-2.638-7.706 0.345-14.222 6.249-14.222 14.222 0 27.705 0 55.41 0 83.115 0 43.969 0 87.939 0 131.908 0 10.117 0 20.234 0 30.351 0 7.439 6.541 14.566 14.222 14.222 7.706-0.345 14.222-6.249 14.222-14.222 0-27.705 0-55.41 0-83.115 0-39.097 0-78.194 0-117.292 17.804 7.658 35.608 15.316 53.412 22.976 36.936 15.887 73.872 31.775 110.808 47.663 0 40.409 0 80.817 0 121.226 0 10.118 0 20.234 0 30.352 0 7.439 6.541 14.566 14.222 14.222 7.706-0.345 14.222-6.249 14.222-14.222 0-27.705 0-55.41 0-83.115 0-18.743 0-37.486 0-56.228 5.095 2.192 10.191 4.383 15.286 6.575 2.236 0.978 4.472 1.955 6.708 2.934 0 16.607 0 33.214 0 49.82 0 43.969 0 87.939 0 131.908 0 10.117 0 20.234 0 30.351 0 7.439 6.541 14.566 14.222 14.222 7.706-0.345 14.222-6.248 14.222-14.222 0-27.705 0-55.41 0-83.115 0-43.056 0-86.113 0-129.17 28.821-16.056 57.642-32.113 86.463-48.169 31.781-17.46 63.561-34.919 95.342-52.379 0.867-0.476 1.733-0.952 2.6-1.428 0 21.808 0 43.618 0 65.426 0 45.344 0 90.688 0 136.033 0 10.434 0 20.869 0 31.304 0 7.439 6.541 14.566 14.222 14.222 7.706-0.345 14.222-6.249 14.222-14.222 0-28.436 0-56.872 0-85.309 0-45.344 0-90.688 0-136.033 0-10.434 0-20.87 0-31.304-0.001-2.147-0.559-4.259-1.518-6.181zM743.215 520.272c-24.174 13.281-48.347 26.561-72.521 39.842-39.585 21.748-79.171 43.495-118.757 65.243-3.53 1.939-7.059 3.878-10.589 5.817 0-7.202 0-14.404 0-21.606 0-0.382-0.028-0.763-0.062-1.143 18.156-9.934 36.312-19.867 54.468-29.801 35.225-19.273 70.449-38.545 105.673-57.817 8.13-4.449 16.261-8.896 24.391-13.345 1.453-0.795 2.348-2.46 2.348-4.093 0-28.394 0-56.788 0-85.182 0-45.802 0-91.603 0-137.405 0-9.775 0-19.55 0-29.325 1.49-0.91 2.933-2.033 4.251-3.062 3.308-2.163 6.616-4.325 9.924-6.489 0.082 26.075 0.165 52.15 0.247 78.225 0.146 46.13 0.292 92.261 0.438 138.393 0.033 10.49 0.066 20.982 0.1 31.472 0.030 10.092 0.059 20.184 0.088 30.276zM482.029 331.328c0.077-42.884 0.154-85.767 0.23-128.65 0.013-7.653 0.027-15.304 0.041-22.957 31.103 9.526 62.207 19.052 93.31 28.578 2.423 0.742 4.845 1.484 7.268 2.226 35.851 11.024 71.704 22.049 107.556 33.073 8.416 2.587 16.832 5.176 25.247 7.763 0.501 0.174 1.002 0.342 1.505 0.508 0.165 27.469 0.331 54.937 0.496 82.405 0.272 45.262 0.544 90.523 0.816 135.785 0.049 8.146 0.098 16.292 0.147 24.439-25.749-9.326-51.497-18.652-77.246-27.978-44.221-16.016-88.442-32.032-132.663-48.048-8.949-3.241-17.897-6.482-26.846-9.723 0.046-25.807 0.092-51.614 0.138-77.422zM722.653 243.42c-27.008-8.272-54.015-16.543-81.023-24.815-44.291-13.565-88.581-27.129-132.872-40.695-6.301-1.93-12.604-3.86-18.905-5.79 4.99-2.495 9.98-4.99 14.97-7.486 26.65 8.115 53.3 16.23 79.95 24.346 43.387 13.211 86.774 26.424 130.161 39.635 6.79 2.068 13.579 4.135 20.369 6.203-4.216 2.867-8.433 5.734-12.65 8.602zM478.259 419.114c27.109 9.739 54.219 19.479 81.327 29.217 44.030 15.819 88.061 31.637 132.091 47.456 6.781 2.436 13.563 4.873 20.344 7.308-18.921 10.542-37.842 21.082-56.764 31.624-18.137 10.104-36.274 20.209-54.411 30.313-17.241 9.433-34.481 18.865-51.721 28.298-3.93 2.15-7.86 4.301-11.79 6.451-2.613-2.805-6.255-4.614-10.208-4.436-4.257 0.191-8.145 2.084-10.778 5.079-22.939-9.867-45.878-19.735-68.818-29.602-44.448-19.119-88.896-38.238-133.344-57.357-5.313-2.286-10.628-4.572-15.941-6.857 0-0.366 0-0.732 0-1.098 0-1.167-0.178-2.322-0.479-3.446 17.516-8.051 35.032-16.101 52.547-24.15 35.242-16.197 70.484-32.393 105.726-48.59 7.405-3.404 14.811-6.807 22.217-10.211zM446.475 603.534c-44.284-19.364-88.568-38.729-132.854-58.093-5.125-2.241-10.25-4.482-15.375-6.723 0-0.952 0-1.904 0-2.857 0-6.134 0-12.267 0-18.4 21.298 9.116 42.597 18.233 63.896 27.35 44.081 18.869 88.163 37.737 132.244 56.606 6.176 2.644 12.353 5.288 18.53 7.931-0.001 0.074-0.011 0.144-0.011 0.217 0 7.671 0 15.343 0 23.014-22.143-9.682-44.286-19.364-66.429-29.047z"],"grid":0,"tags":["chair"],"defaultCode":59660},{"paths":["M875.952 647.372c-0.042-13.056-0.082-26.113-0.124-39.169-0.1-31.521-0.199-63.041-0.3-94.563-0.12-37.989-0.241-75.979-0.36-113.968-0.104-32.968-0.209-65.936-0.313-98.903-0.050-15.885 0.582-31.944-0.152-47.817-0.010-0.222-0.002-0.448-0.002-0.67-0.009-2.697-2.488-4.891-5.034-4.77-0.31-0.089-0.632-0.137-0.966-0.142-15.027-4.576-30.054-9.152-45.082-13.728-35.447-10.794-70.892-21.587-106.339-32.381-39.894-12.148-79.789-24.296-119.683-36.445-28.265-8.607-56.53-17.215-84.797-25.821-4.789-1.458-9.81-3.619-14.751-4.492-4.43-0.782-10.524 3.829-14.263 5.698-8.65 4.325-17.299 8.65-25.949 12.974-1.829 0.914-3.658 1.829-5.488 2.744-2.495 1.247-2.805 4.089-1.694 6.222-0.021 11.449-0.041 22.898-0.062 34.348-0.052 29.208-0.104 58.414-0.156 87.622-0.064 35.508-0.127 71.016-0.191 106.524-0.055 30.555-0.109 61.11-0.164 91.665-0.027 14.795-0.729 29.768-0.080 44.553 0.009 0.209-0.001 0.419-0.001 0.628 0 0.184 0.009 0.361 0.026 0.534-0.847 0.43-1.654 0.852-2.389 1.19-19.732 9.068-39.463 18.136-59.195 27.205-31.117 14.301-62.235 28.602-93.352 42.903-30.090 13.829-60.182 27.658-90.272 41.487-17.090 7.854-34.182 15.709-51.272 23.564-0.824 0.378-1.649 0.758-2.473 1.137-1.001 0.46-1.66 1.106-2.041 1.838-0.622 0.743-1.006 1.732-1.006 2.955 0 15.937 0 31.875 0 47.812-0.272 1.12-0.119 2.278 0.613 3.218-0.242 1.603 0.413 3.223 2.434 4.092 10.774 4.635 21.548 9.268 32.321 13.903 26.467 11.384 52.933 22.77 79.401 34.154 33.38 14.358 66.759 28.717 100.139 43.074 31.512 13.555 63.022 27.109 94.534 40.663 13.544 5.826 27.090 11.653 40.634 17.479 9.895 4.343 19.792 8.681 29.708 12.973 1.199 1.598 3.384 2.339 5.398 1.671 3.185 0.156 5.961-2.044 8.859-3.658 19.564-10.899 39.127-21.798 58.691-32.698 28.156-15.686 56.312-31.371 84.469-47.058 20.602-11.319 41.205-22.637 61.807-33.956 28.316-15.557 56.634-31.113 84.95-46.671 9.265-5.090 18.53-10.18 27.795-15.27 4.402-2.419 9.175-4.573 13.37-7.345 0.188-0.124 0.401-0.22 0.598-0.329 1.45-0.796 2.352-2.459 2.348-4.093-0.046-16.961-0.096-33.922-0.145-50.883zM835.11 712.761c-27.093 14.885-54.188 29.769-81.281 44.654-32.623 17.923-65.247 35.846-97.87 53.768-28.316 15.557-56.634 31.113-84.95 46.671-9.265 5.091-18.53 10.18-27.795 15.27-2.116 1.162-4.502 2.245-6.834 3.411 0-13.521 0-27.042 0-40.563 9.246-5.059 18.493-10.118 27.74-15.177 23.946-13.102 47.892-26.204 71.838-39.305 29.111-15.928 58.222-31.856 87.333-47.783 25.175-13.775 50.351-27.549 75.527-41.323 8.266-4.523 16.531-9.045 24.797-13.568 3.906-2.137 8.175-4.030 11.884-6.501 0.158-0.105 0.34-0.186 0.507-0.278 1.454-0.795 2.348-2.46 2.348-4.093 0-13.205 0-26.41 0-39.616 0-30.506 0-61.010 0-91.516 0-37.643 0-75.287 0-112.929 0-32.997 0-65.995 0-98.992 0-10.873 0-21.748 0-32.621 0-4.345 0.637-9.326 0.221-13.787 0.117-0.082 0.233-0.164 0.351-0.247 8.774-5.737 17.549-11.474 26.323-17.212 0.032 10.143 0.064 20.287 0.097 30.43 0.1 31.521 0.199 63.041 0.3 94.563 0.12 37.989 0.241 75.979 0.36 113.968 0.104 32.968 0.209 65.936 0.313 98.903 0.050 15.885-0.582 31.944 0.152 47.817 0.010 0.222 0.001 0.448 0.002 0.669 0.046 16.027 0.093 32.055 0.139 48.082-10.501 5.768-21.001 11.536-31.501 17.306zM832.839 270.855c-11.9-3.645-23.8-7.289-35.701-10.934-30.199-9.249-60.4-18.498-90.599-27.749-36.373-11.14-72.746-22.281-109.12-33.42-31.581-9.672-63.162-19.344-94.743-29.017-10.376-3.177-20.75-6.355-31.126-9.533-1.278-0.392-2.594-0.856-3.929-1.337 9.828-4.914 19.654-9.828 29.482-14.741 11.758 3.58 23.516 7.16 35.273 10.742 29.583 9.008 59.165 18.016 88.749 27.024 35.798 10.902 71.598 21.803 107.396 32.704 30.964 9.429 61.928 18.858 92.892 28.287 11.951 3.639 23.908 7.822 35.977 11.28-8.183 5.565-16.367 11.128-24.55 16.694zM499.228 178.593c35.432 10.852 70.864 21.704 106.296 32.556 4.166 1.276 8.332 2.551 12.498 3.828 23.999 7.379 47.997 14.76 71.996 22.139 31.257 9.611 62.512 19.223 93.769 28.834 10.269 3.158 20.539 6.316 30.809 9.474 3.789 1.165 7.931 2.99 11.958 3.985 0.069 11.576 0.139 23.153 0.209 34.73 0.187 31.025 0.374 62.051 0.559 93.076 0.225 37.398 0.449 74.797 0.675 112.194 0.195 32.473 0.391 64.945 0.586 97.418 0.064 10.658 0.128 21.316 0.192 31.974 0.017 2.854-0.229 5.966-0.273 9.022-10.427-3.776-20.855-7.553-31.281-11.33-30.144-10.917-60.287-21.835-90.43-32.752-36.475-13.211-72.951-26.421-109.426-39.633-31.546-11.425-63.091-22.85-94.637-34.276-10.436-3.78-20.873-7.56-31.31-11.34-3.951-1.431-7.912-3.108-11.927-4.455 0.020-11.011 0.040-22.022 0.059-33.032 0.052-29.208 0.104-58.414 0.156-87.622 0.064-35.508 0.127-71.016 0.191-106.524 0.055-30.555 0.109-61.11 0.164-91.665 0.018-10.036 0.036-20.072 0.054-30.108 0.005-2.634 0.261-5.524 0.336-8.366 12.925 3.957 25.85 7.915 38.775 11.874zM456.591 535.675c11.95 4.293 23.902 8.587 35.853 12.881 30.065 10.801 60.129 21.602 90.194 32.403 36.366 13.065 72.732 26.13 109.099 39.195 31.424 11.29 62.849 22.579 94.274 33.869 10.282 3.694 20.564 7.388 30.846 11.082 1.655 0.594 3.374 1.322 5.119 2.052-6.825 3.803-13.65 7.605-20.475 11.407-23.935 13.334-47.87 26.669-71.805 40.003-27.786 15.48-55.574 30.961-83.36 46.44-1.458 0.797-2.916 1.596-4.374 2.393-25.175 13.775-50.351 27.549-75.527 41.323-8.266 4.523-16.531 9.045-24.797 13.568-3.104 1.698-6.432 3.246-9.531 5.049-11.289-4.856-22.578-9.712-33.867-14.568-30.323-13.043-60.645-26.086-90.967-39.129-36.523-15.71-73.044-31.42-109.567-47.13-31.694-13.632-63.388-27.266-95.082-40.899-12.517-5.385-25.029-10.783-37.55-16.158 6.986-3.21 13.972-6.422 20.958-9.632 24.003-11.032 48.008-22.063 72.011-33.095 29.184-13.413 58.367-26.825 87.55-40.237 25.234-11.597 50.469-23.195 75.703-34.792 8.311-3.82 16.624-7.64 24.935-11.46 3.282-1.508 7.122-2.763 10.36-4.563zM496.281 863.591c-30.211-13.211-60.422-26.42-90.633-39.631-36.388-15.911-72.776-31.823-109.164-47.734-31.577-13.808-63.155-27.616-94.732-41.424-14.746-6.448-29.47-12.95-44.239-19.346 0-12.672 0-25.344 0-38.016 10.222 4.375 20.443 8.75 30.665 13.126 30.105 12.885 60.208 25.772 90.313 38.658 36.551 15.645 73.101 31.291 109.652 46.936 31.474 13.472 62.949 26.944 94.422 40.417 10.385 4.445 20.77 8.891 31.155 13.336 4.105 1.758 8.73 4.569 13.177 5.915 0 13.717 0 27.435 0 41.152-10.207-4.465-20.412-8.928-30.618-13.39z","M422.171 573.491c-28.378 13.042-56.756 26.085-85.134 39.126-3.767 1.731-7.534 3.463-11.301 5.194-1.524-0.203-2.733 0.492-3.493 1.605-32.513 14.943-65.026 29.886-97.539 44.827-0.645 0.296-1.289 0.593-1.933 0.889-1.932 0.888-2.602 2.461-2.423 4.026-0.271 1.625 0.375 3.28 2.423 4.161 29.526 12.7 59.054 25.402 88.58 38.102 51.080 21.971 102.16 43.944 153.24 65.915 16.488 7.092 32.978 14.185 49.466 21.277 2.874 1.236 5.725 2.613 8.651 3.721 3.775 1.43 6.355-0.713 9.543-2.489 13.349-7.437 26.699-14.875 40.048-22.312 0.329-0.141 0.64-0.317 0.932-0.519 26.044-14.51 52.088-29.019 78.132-43.529 36.995-20.61 73.99-41.221 110.985-61.831 0.656-0.366 1.312-0.731 1.967-1.096 3.794-2.113 2.532-7.348-1.132-8.665-22.135-7.952-44.269-15.904-66.404-23.856-0.29-0.14-0.596-0.251-0.914-0.328-6.804-2.444-13.608-4.889-20.411-7.333-50.646-18.195-101.292-36.39-151.938-54.585-16.422-5.9-32.844-11.8-49.267-17.699-2.836-1.018-5.834-2.526-8.788-3.157-2.868-0.613-6.040 1.434-8.614 2.616-10.374 4.768-20.747 9.536-31.121 14.303-1.545-0.166-2.772 0.534-3.556 1.634zM563.873 600.341c1.475 0.53 2.952 1.060 4.427 1.591-8.765 4.322-17.528 8.643-26.293 12.965-13.674-5.080-27.349-10.161-41.024-15.242 8.881-4.111 17.763-8.223 26.644-12.335 12.081 4.341 24.164 8.681 36.246 13.022zM618.238 619.872c-8.582 4.594-17.162 9.189-25.744 13.782-12.763-4.742-25.526-9.484-38.289-14.226 8.222-4.054 16.446-8.11 24.668-12.164 0.582-0.287 1.042-0.639 1.403-1.031 12.654 4.546 25.308 9.093 37.962 13.638zM683.147 643.191c-8.914 4.737-17.826 9.473-26.74 14.21-12.273-4.56-24.545-9.119-36.818-13.679-5.081-1.888-10.162-3.776-15.243-5.663 8.636-4.623 17.271-9.246 25.907-13.87 17.631 6.334 35.262 12.668 52.893 19.002zM668.552 713.059c-0.514-0.726-1.249-1.34-2.24-1.734-17.387-6.913-34.774-13.826-52.161-20.739 14.327-7.613 28.652-15.226 42.979-22.839 7.465 2.773 14.93 5.548 22.395 8.321 11.084 4.118 22.167 8.236 33.25 12.353-11.233 6.258-22.466 12.516-33.699 18.774-3.507 1.955-7.015 3.909-10.523 5.863zM618.341 741.032c-0.413-0.377-0.905-0.704-1.491-0.95-17.832-7.501-35.664-15.002-53.496-22.502 13.292-7.063 26.584-14.126 39.875-21.19 8.43 3.352 16.86 6.703 25.291 10.055 10.096 4.014 20.193 8.028 30.289 12.042-13.489 7.515-26.978 15.030-40.467 22.545zM569.998 767.963c-18.634-8.070-37.268-16.139-55.902-24.209 8.64-4.592 17.281-9.184 25.922-13.775 4.206-2.235 8.412-4.47 12.617-6.704 8.704 3.661 17.408 7.323 26.112 10.983 9.829 4.134 19.658 8.269 29.487 12.404-12.745 7.1-25.491 14.201-38.237 21.301zM426.015 750.5c-5.86-2.521-11.719-5.041-17.579-7.561 11.938-6.391 23.876-12.782 35.814-19.173 16.027 6.941 32.056 13.883 48.083 20.823-2.779 1.477-5.558 2.953-8.337 4.431-9.159 4.867-18.318 9.735-27.477 14.601-10.169-4.373-20.337-8.747-30.505-13.12zM352.51 718.881c12.541-6.184 25.083-12.369 37.624-18.552 14.339 6.209 28.678 12.42 43.017 18.629-1.891 1.013-3.782 2.025-5.673 3.037-9.41 5.038-18.821 10.075-28.231 15.113-0.642 0.343-1.135 0.764-1.504 1.231-15.078-6.486-30.157-12.972-45.234-19.458zM326.15 628.007c15.916 6.695 31.83 13.389 47.746 20.084-13 6.019-26.001 12.038-39.002 18.057-5.889-2.55-11.777-5.1-17.666-7.651-9.854-4.268-19.708-8.535-29.562-12.803 6.92-3.18 13.839-6.36 20.759-9.54 5.909-2.715 11.817-5.432 17.726-8.146zM375.509 605.321c0.479 0.522 1.093 0.964 1.866 1.271 15.45 6.143 30.899 12.285 46.349 18.428-12.761 5.908-25.521 11.816-38.282 17.724-7.626-3.208-15.252-6.416-22.878-9.624-8.274-3.48-16.549-6.96-24.823-10.441 12.59-5.787 25.179-11.573 37.769-17.359zM602.599 685.994c-11.19-4.449-22.38-8.897-33.57-13.347-5.604-2.228-11.206-4.455-16.81-6.683 13.67-7.319 27.342-14.638 41.012-21.956 17.338 6.442 34.675 12.883 52.013 19.325-11.151 5.926-22.302 11.852-33.453 17.777-3.064 1.629-6.129 3.257-9.192 4.885zM581.38 639.605c-10.558 5.652-21.115 11.304-31.673 16.956-3.003 1.607-6.006 3.215-9.008 4.822-13.209-5.252-26.418-10.504-39.627-15.755 13.826-6.817 27.651-13.634 41.477-20.452 12.943 4.81 25.887 9.619 38.831 14.429zM481.21 693.23c-12.488 6.685-24.976 13.372-37.465 20.057-14.178-6.14-28.355-12.28-42.534-18.42 9.020-4.448 18.040-8.896 27.060-13.343 3.852-1.899 7.706-3.799 11.558-5.699 13.796 5.802 27.588 11.603 41.381 17.405zM450.997 670.319c12.895-6.358 25.79-12.717 38.683-19.075 13.381 5.32 26.762 10.64 40.143 15.96-12.647 6.771-25.294 13.541-37.941 20.312-13.628-5.733-27.256-11.466-40.885-17.198zM477.84 646.537c-12.795 6.309-25.591 12.618-38.385 18.927-14.080-5.923-28.16-11.845-42.239-17.767 12.865-5.956 25.732-11.913 38.597-17.87 12.948 5.148 25.896 10.296 38.845 15.444 1.060 0.422 2.121 0.844 3.182 1.266zM422.989 668.74c1.766 0.743 3.533 1.487 5.3 2.23-12.822 6.321-25.643 12.644-38.464 18.966-14.44-6.254-28.881-12.507-43.322-18.761 7.628-3.532 15.255-7.063 22.883-10.594 5.427-2.513 10.855-5.025 16.283-7.539 12.44 5.232 24.879 10.465 37.32 15.698zM474.104 726.434c-6.42-2.78-12.84-5.56-19.26-8.34 8.827-4.726 17.655-9.451 26.482-14.178 3.709-1.985 7.418-3.971 11.127-5.957 16.304 6.858 32.608 13.716 48.911 20.574-12.798 6.8-25.596 13.601-38.394 20.402-9.622-4.166-19.244-8.333-28.866-12.501zM518.324 698.638c-5.066-2.13-10.132-4.262-15.198-6.392 12.739-6.82 25.48-13.64 38.219-20.461 16.777 6.671 33.555 13.341 50.333 20.012-13.198 7.013-26.397 14.028-39.596 21.041-11.253-4.732-22.506-9.466-33.759-14.199zM522.786 617.834c2.521 0.937 5.042 1.874 7.563 2.81-11.103 5.474-22.205 10.948-33.307 16.423-2.605 1.284-5.208 2.568-7.812 3.852-13.876-5.517-27.752-11.035-41.628-16.552 13.768-6.374 27.536-12.748 41.304-19.122 11.293 4.197 22.587 8.392 33.88 12.589zM375.188 693.856c1.186 0.514 2.372 1.028 3.559 1.541-1.452 0.716-2.903 1.432-4.355 2.148-9.317 4.594-18.633 9.188-27.95 13.782-1.821 0.898-2.5 2.403-2.401 3.912-1.459-0.628-2.918-1.255-4.378-1.883-14.562-6.263-29.123-12.527-43.685-18.79 13.025-6.030 26.049-12.060 39.074-18.091 13.378 5.794 26.757 11.588 40.135 17.381zM503.46 749.407c9.535 4.129 19.069 8.258 28.605 12.388 9.191 3.98 18.382 7.961 27.573 11.941-2.553 1.422-5.107 2.845-7.66 4.268-9.007 5.018-18.015 10.036-27.022 15.054-9.061-3.898-18.123-7.796-27.184-11.694-10.030-4.315-20.061-8.629-30.091-12.944 11.926-6.336 23.853-12.674 35.78-19.012zM488.518 595.023c-8.555-3.179-17.11-6.357-25.665-9.536-8.145-3.026-16.288-6.052-24.433-9.079 8.605-3.955 17.21-7.909 25.815-11.864 16.914 6.077 33.827 12.152 50.741 18.229-8.82 4.083-17.639 8.166-26.458 12.249zM476.44 600.614c-11.331 5.246-22.663 10.492-33.994 15.738-2.311 1.070-4.622 2.14-6.933 3.209-6.782-2.697-13.564-5.393-20.346-8.090-9.48-3.769-18.959-7.538-28.439-11.307 13.188-6.062 26.377-12.122 39.564-18.184 16.716 6.211 33.432 12.422 50.148 18.632zM276.172 650.976c15.757 6.824 31.515 13.648 47.272 20.471-3.825 1.771-7.65 3.541-11.474 5.312-9.213 4.265-18.425 8.53-27.638 12.795-6.579-2.83-13.158-5.659-19.737-8.49-9.211-3.962-18.368-8.165-27.624-12.074 13.067-6.006 26.135-12.011 39.201-18.016zM721.051 683.81c-0.32-1.499-1.298-2.874-3.096-3.541-16.556-6.151-33.11-12.302-49.666-18.453 8.968-4.765 17.936-9.532 26.904-14.297 9.564 3.436 19.128 6.872 28.692 10.308 8.878 3.19 17.754 6.379 26.632 9.568-9.821 5.472-19.643 10.944-29.466 16.415z","M795.076 301.851l-301.158-92.607-0.527 294.428 303.56 109.945-1.874-311.767zM564.872 368.76c7-6.83 14-13.659 21.001-20.488-4.21-9.556-8.42-19.112-12.629-28.667-2.44-5.537 5.733-10.357 8.187-4.785 3.881 8.809 7.762 17.618 11.643 26.428 6.319-6.166 12.64-12.332 18.959-18.497 4.373-4.266 11.079 2.436 6.704 6.704-7.195 7.018-14.388 14.037-21.583 21.056 4.212 9.559 8.422 19.118 12.634 28.677 2.44 5.537-5.733 10.357-8.187 4.785-3.883-8.812-7.764-17.625-11.647-26.437-6.126 5.976-12.252 11.952-18.377 17.929-4.373 4.265-11.080-2.437-6.705-6.705zM714.401 496.168c-6.263-2.185-12.525-4.368-18.787-6.553-44.444-15.5-88.889-31.001-133.334-46.501-5.734-2-3.252-11.156 2.52-9.143 6.263 2.184 12.525 4.368 18.787 6.552 44.444 15.5 88.889 31.001 133.334 46.501 5.734 2.001 3.253 11.157-2.52 9.144zM731.953 355.908c-7.195 7.019-14.388 14.038-21.583 21.056 4.212 9.559 8.422 19.118 12.634 28.678 2.44 5.537-5.733 10.357-8.187 4.785-3.883-8.812-7.765-17.625-11.647-26.437-6.126 5.976-12.252 11.952-18.377 17.929-4.373 4.266-11.079-2.436-6.704-6.704 7-6.83 14-13.659 21.001-20.489-4.21-9.555-8.42-19.111-12.629-28.667-2.44-5.537 5.733-10.357 8.187-4.785 3.881 8.809 7.762 17.618 11.643 26.428 6.319-6.166 12.64-12.332 18.959-18.497 4.372-4.267 11.078 2.435 6.703 6.703z"],"grid":0,"tags":["computer"],"defaultCode":59661},{"paths":["M807.075 473.229c-18.116 0-33.437 11.961-38.502 28.416-19.493-4.157-49.404-6.9-75.478-10.085-2.079-18.623-6.962-36.395-14.221-52.889 20.644-15.596 44.749-32.605 59.661-45.759 12.471 13.701 33.201 17.385 49.903 7.744 19.266-11.123 25.867-35.758 14.744-55.025s-35.758-25.867-55.025-14.744c-15.734 9.084-23.015 27.18-19.1 44.003-18.915 6.226-46.132 18.817-70.289 29.077-10.892-14.772-23.96-27.84-38.732-38.732 10.129-23.85 22.53-50.681 28.835-69.563 17.592 5.495 37.257-1.688 46.858-18.316 11.123-19.266 4.523-43.901-14.744-55.025s-43.901-4.523-55.025 14.744c-9.126 15.807-6.314 35.222 5.627 47.83-13.221 14.863-30.464 39.32-46.258 60.225-16.494-7.259-34.267-12.142-52.89-14.221-3.145-25.741-5.86-55.218-9.927-74.723 17.91-4.091 31.278-20.108 31.278-39.258 0-22.246-18.035-40.281-40.281-40.281s-40.281 18.035-40.281 40.281c0 18.116 11.961 33.437 28.416 38.502-4.157 19.493-6.9 49.404-10.085 75.478-18.623 2.078-36.395 6.962-52.889 14.221-15.596-20.644-32.605-44.749-45.759-59.661 13.701-12.471 17.386-33.202 7.744-49.903-11.124-19.266-35.758-25.867-55.025-14.744s-25.867 35.758-14.744 55.025c9.084 15.734 27.18 23.015 44.003 19.1 6.226 18.915 18.817 46.132 29.077 70.289-14.772 10.892-27.84 23.96-38.732 38.732-23.85-10.129-50.681-22.53-69.563-28.835 5.495-17.592-1.688-37.257-18.316-46.858-19.266-11.124-43.901-4.523-55.025 14.744s-4.523 43.901 14.744 55.025c15.807 9.126 35.222 6.314 47.83-5.627 14.863 13.221 39.32 30.464 60.225 46.258-7.259 16.494-12.142 34.267-14.221 52.89-25.741 3.145-55.217 5.86-74.723 9.927-4.091-17.91-20.108-31.278-39.258-31.278-22.246 0-40.281 18.035-40.281 40.281s18.035 40.281 40.281 40.281c18.116 0 33.437-11.961 38.502-28.416 19.493 4.157 49.404 6.9 75.478 10.085 2.079 18.623 6.962 36.395 14.221 52.889-20.644 15.596-44.749 32.605-59.661 45.759-12.471-13.701-33.201-17.386-49.903-7.744-19.266 11.123-25.867 35.758-14.744 55.025s35.758 25.867 55.025 14.744c15.734-9.084 23.015-27.18 19.1-44.003 18.915-6.226 46.132-18.817 70.289-29.077 10.892 14.772 23.96 27.84 38.732 38.732-10.129 23.85-22.53 50.681-28.835 69.563-17.592-5.495-37.257 1.688-46.858 18.316-11.123 19.266-4.523 43.901 14.744 55.025s43.901 4.523 55.025-14.744c9.126-15.807 6.314-35.222-5.627-47.83 13.221-14.863 30.464-39.32 46.258-60.225 16.494 7.259 34.267 12.142 52.89 14.221 3.145 25.741 5.86 55.218 9.927 74.723-17.91 4.091-31.278 20.108-31.278 39.258 0 22.246 18.035 40.281 40.281 40.281s40.281-18.035 40.281-40.281c0-18.116-11.961-33.437-28.416-38.502 4.157-19.493 6.9-49.404 10.085-75.478 18.623-2.078 36.395-6.962 52.889-14.221 15.596 20.644 32.605 44.749 45.759 59.661-13.701 12.471-17.386 33.201-7.744 49.903 11.124 19.266 35.758 25.867 55.025 14.744s25.867-35.758 14.744-55.025c-9.084-15.734-27.18-23.015-44.003-19.1-6.226-18.915-18.817-46.132-29.077-70.289 14.772-10.892 27.84-23.96 38.732-38.732 23.85 10.129 50.681 22.53 69.563 28.835-5.495 17.592 1.688 37.257 18.316 46.858 19.266 11.123 43.901 4.523 55.025-14.744s4.523-43.901-14.744-55.025c-15.807-9.126-35.222-6.314-47.83 5.627-14.863-13.221-39.32-30.464-60.225-46.258 7.259-16.494 12.142-34.267 14.221-52.889 25.741-3.145 55.217-5.86 74.723-9.927 4.091 17.91 20.108 31.278 39.258 31.278 22.246 0 40.281-18.035 40.281-40.281s-18.035-40.282-40.281-40.282z"],"grid":0,"tags":["corona"],"defaultCode":59662},{"paths":["M356.909 315.682c0 34.217-27.738 61.955-61.955 61.955s-61.955-27.738-61.955-61.955c0-34.217 27.738-61.955 61.955-61.955s61.955 27.738 61.955 61.955z","M791.363 312.585c0 34.217-27.738 61.955-61.955 61.955s-61.955-27.738-61.955-61.955c0-34.217 27.738-61.955 61.955-61.955s61.955 27.738 61.955 61.955z","M356.909 711.415c0 34.217-27.738 61.955-61.955 61.955s-61.955-27.738-61.955-61.955c0-34.217 27.738-61.955 61.955-61.955s61.955 27.738 61.955 61.955z","M573.748 517.808c0 34.217-27.738 61.955-61.955 61.955s-61.955-27.738-61.955-61.955c0-34.217 27.738-61.955 61.955-61.955s61.955 27.738 61.955 61.955z","M791.363 708.318c0 34.217-27.738 61.955-61.955 61.955s-61.955-27.738-61.955-61.955c0-34.217 27.738-61.955 61.955-61.955s61.955 27.738 61.955 61.955z"],"grid":0,"tags":["dices"],"defaultCode":59663},{"paths":["M511.956 329.159c38.298-4.804 71.343-29.441 102.782-50.002 16.348-10.691 32.859-21.412 50.597-29.686 14.059-6.558 29.327-11.343 45.019-9.737 1.635 0.167-0.821-0.233 1.426 0.223 0.87 0.176 1.744 0.33 2.61 0.526 1.891 0.429 3.759 0.954 5.594 1.577 0.603 0.205 2.695 0.985 2.266 0.811-0.547-0.223 1.405 0.639 1.816 0.837 1.851 0.893 3.654 1.885 5.403 2.965 4.020 2.483 5.921 4.020 9.388 7.31 1.701 1.615 3.335 3.302 4.891 5.056 0.633 0.713 1.246 1.443 1.856 2.175 1.19 1.428 0.301 0.3 1.093 1.417 2.281 3.216 4.341 6.562 6.069 10.11 0.18 0.37 1.253 2.728 0.992 2.112-0.278-0.653 0.525 1.357 0.671 1.75 0.667 1.798 1.26 3.622 1.778 5.468 0.52 1.85 0.962 3.721 1.336 5.605 0.174 0.874 0.319 1.753 0.474 2.63 0.078 0.44 0.142 0.883 0.205 1.325-0.142-0.995-0.077-0.633 0.004 0.149 0.405 3.938 0.597 7.879 0.523 11.839-0.173 9.202-1.063 14.725-3.164 23.68-2.049 8.732-4.824 17.285-8.037 25.654-6.385 16.629-15.354 33.822-24.689 49.975-16.61 28.74-36.377 55.486-53.149 84.099-6.477 11.048-12.086 22.237-9.734 35.411 2.643 14.804 14.244 27.194 24.684 37.218 13.285 12.756 27.911 24.030 41.591 36.349 13.457 12.12 25.862 24.194 33.692 40.047 1.592 3.223 2.532 5.589 3.681 10.015 1.213 4.67 2.14 9.431 3.035 14.171 1.893 10.034 3.158 19.284 3.935 29.469 1.541 20.227 1.102 40.381-4.265 59.629-4.664 16.727-13.34 31.863-28.044 40.647-16.884 10.086-37.324 9.776-56.496 4.999-21.806-5.435-42.097-15.351-62.447-24.633-17.69-8.068-36.451-17.253-56.202-18.344-11.474-0.633-22.745 2.591-32.356 8.813-4.556 2.949-8.786 6.392-13.033 9.76-0.928 0.737-1.855 1.474-2.786 2.206-0.477 0.375-0.955 0.747-1.432 1.122-1.107 0.869 1.371-1.016-0.539 0.405-2.275 1.694-4.56 3.368-6.92 4.942-5.436 3.626-11.182 6.793-17.193 9.362 1.492-0.638-0.373 0.141-0.899 0.345-0.825 0.32-1.65 0.637-2.479 0.941-2.036 0.745-4.093 1.432-6.167 2.065-4.276 1.305-8.622 2.378-13.006 3.26-22.193 4.465-47.146 4.963-69.81 1.601-10.096-1.497-20.123-3.994-29.596-7.822-2.522-1.019-7.165-3.299-10.512-5.225-1.648-0.949-3.268-1.947-4.855-2.996-0.9-0.594-1.789-1.207-2.667-1.834-0.374-0.266-2.521-1.877-1.341-0.96-2.963-2.305-5.758-4.842-8.375-7.532-1.16-1.193-2.285-2.42-3.372-3.679-0.623-0.722-1.224-1.46-1.83-2.195-1.344-1.631 0.162 0.294-0.73-0.949-3.901-5.431-7.152-11.134-9.922-17.217-0.766-1.682 0.489 1.282-0.181-0.426-0.264-0.672-0.535-1.341-0.792-2.016-0.589-1.547-1.139-3.109-1.654-4.683-0.919-2.812-1.72-5.662-2.413-8.538-0.652-2.707-1.207-5.437-1.673-8.182-0.22-1.298-0.403-2.6-0.601-3.901-0.097-0.633 0.238 2.137 0.036 0.196-0.068-0.661-0.155-1.321-0.227-1.982-0.456-4.262-0.712-8.544-0.815-12.828-0.039-1.624-0.057-3.248-0.059-4.873-0.001-0.821-0.016-1.644 0.021-2.464 0.030-0.654 0.098-1.303 0.157-1.955 0.099-1.075-0.093 0.742-0.098 0.771 0.088-0.493 0.16-0.99 0.264-1.479 4.029-19.104 12.359-37.113 17.046-56.081 5.616-22.729 7.303-46.249-2.121-68.175-6.289-14.633-14.161-28.597-21.566-42.681-10.096-19.203-19.964-38.538-28.708-58.401-9.312-21.15-17.305-43.054-22.424-65.618-4.606-20.306-6.888-42.257-3.090-62.526 4.241-22.626 11.426-45.261 23.712-64.862 9.269-14.786 21.41-26.833 36.376-35.342 7.814-4.443 13.402-6.775 22.010-9.444 8.336-2.585 16.936-4.441 25.583-5.612 0.079-0.010 2.216-0.249 3.648-0.295 1.855-0.060 3.701 0.030 5.544 0.227 0.483 0.051-1.216-0.289 0.61 0.141 0.775 0.183 1.558 0.324 2.331 0.519 1.835 0.462 3.609 1.069 5.385 1.712 0.385 0.139 0.766 0.295 1.144 0.452-0.136-0.056-1.357-0.596-0.365-0.133 0.76 0.356 1.52 0.711 2.269 1.090 1.793 0.907 3.54 1.902 5.248 2.961 1.515 0.941 2.997 1.933 4.451 2.967 0.869 0.618 1.732 1.247 2.577 1.896-1.088-0.836 1.038 0.848 1.376 1.125 27.584 22.631 46.020 54.55 74.303 76.425 11.746 9.087 26.042 16.405 41.332 14.751 5.091-0.551 9.481-3.964 9.481-9.481 0-4.699-4.358-10.035-9.481-9.481-1.658 0.179-3.318 0.273-4.985 0.232-0.763-0.019-1.52-0.085-2.28-0.13-2.23-0.131 0.926 0.322-1.253-0.195-1.507-0.357-3.005-0.675-4.485-1.139-0.876-0.274-1.731-0.594-2.596-0.899-1.454-0.512 0.878 0.494-1.052-0.446-3.42-1.666-6.69-3.525-9.829-5.681-3.514-2.414-4.507-3.242-8.113-6.405-13.852-12.15-25.541-26.597-37.638-40.427-11.907-13.614-24.221-27.294-39.261-37.544-6.519-4.443-13.87-8.167-21.57-10.030-8.96-2.167-17.409-1.289-26.394 0.207-17.675 2.94-35.16 8.633-50.511 18.005-16.791 10.251-30.554 24.673-40.834 41.388-12.712 20.669-20.569 44.659-25.015 68.411-4.273 22.832-2.511 46.131 2.245 68.745 9.603 45.663 30.78 88.337 52.303 129.392 7.767 14.817 15.908 29.486 22.747 44.764 0.781 1.746-0.094-0.266 0.082 0.186 0.426 1.098 0.864 2.188 1.249 3.302 0.977 2.821 1.741 5.709 2.315 8.638 1.038 5.292 1.196 10.744 1.009 16.124-0.393 11.31-2.852 22.403-5.897 33.267-2.925 10.433-6.531 20.649-9.964 30.921-2.701 8.084-5.515 16.336-6.169 24.894-0.616 8.076 0.175 16.546 1.205 24.547 3.721 28.921 16.198 55.529 39.861 73.39 15.538 11.729 34.606 18.348 53.709 21.306 25.344 3.926 51.966 3.649 77.223-0.872 15.936-2.853 31.549-8.317 45.268-17.005 5.33-3.375 10.331-7.227 15.282-11.127 2.052-1.617 4.094-3.246 6.149-4.859-2.208 1.735 0.663-0.496 1.393-1.033 0.944-0.695 1.898-1.378 2.869-2.037 1.974-1.341 4.010-2.595 6.131-3.69 0.944-0.487 4.033-1.687 1.344-0.716 1.19-0.43 2.353-0.903 3.566-1.272 1.070-0.327 2.153-0.609 3.246-0.847 0.66-0.143 1.328-0.24 1.988-0.38 2.101-0.447-1.455 0.018 0.147-0.023 3.351-0.085 6.551-0.285 9.917-0.009 0.45 0.037 0.903 0.090 1.351 0.148-0.19-0.025-1.361-0.199-0.232-0.012 1.094 0.18 2.185 0.376 3.272 0.602 2.281 0.472 4.542 1.048 6.781 1.689 4.525 1.296 8.968 2.872 13.354 4.574 9.603 3.726 19.062 8.197 28.596 12.574 39.428 18.1 89.432 40.898 130.735 14.809 36.521-23.068 42.938-71.407 40.667-110.967-0.635-11.061-1.98-22.093-3.807-33.017-1.545-9.238-3.043-18.851-6.488-27.602-7.064-17.943-20.024-32.672-33.88-45.772-13.827-13.072-28.903-24.721-42.952-37.542-3.213-2.932-6.368-5.931-9.392-9.058-1.365-1.412-2.706-2.847-4.008-4.319-0.579-0.655-1.153-1.317-1.716-1.986-0.334-0.396-1.842-2.248-1.399-1.683-1.165-1.483-3.881-5.498-5.324-8.256-0.34-0.649-0.649-1.314-0.973-1.971-0.734-1.488 0.378 1.402-0.264-0.692-0.47-1.535-0.886-3.053-1.295-4.604-0.492-1.864-0.023 0.39-0.050-0.115-0.036-0.661-0.103-1.317-0.116-1.98-0.014-0.776 0.050-1.541 0.062-2.313 0.023-1.537-0.497 1.639 0.073-0.463 0.396-1.462 0.81-2.884 1.27-4.327 0.439-1.381 0.181-0.369-0.241 0.524 0.287-0.609 0.544-1.232 0.829-1.842 2.347-5.035 5.174-9.847 8.053-14.591 8.219-13.542 17.165-26.639 25.811-39.909 21.082-32.355 41.808-65.803 54.479-102.497 11.554-33.46 14.802-71.916-8.366-101.267-11.26-14.266-27.356-25.276-45.555-27.953-18.41-2.709-36.297 2.024-53.153 9.224-37.202 15.889-68.661 42.446-103.817 62.062-3.966 2.213-7.981 4.342-12.060 6.339-4.12 2.018-7.649 3.607-11.079 4.944-3.846 1.499-7.757 2.837-11.733 3.942-1.992 0.554-4 1.051-6.024 1.478-1.069 0.226-2.142 0.431-3.219 0.616-0.454 0.078-3.298 0.478-1.592 0.264-5.080 0.637-9.481 3.902-9.481 9.481 0.001 4.627 4.366 10.121 9.482 9.48z","M533.249 512.006c0 11.74-9.517 21.257-21.257 21.257s-21.257-9.517-21.257-21.257c0-11.74 9.517-21.257 21.257-21.257s21.257 9.517 21.257 21.257z","M586.39 508.673c0 11.74-9.517 21.257-21.257 21.257s-21.257-9.517-21.257-21.257c0-11.74 9.517-21.257 21.257-21.257s21.257 9.517 21.257 21.257z","M503.307 599.125c-2.062 14.465 34.954 34.496 82.803 12.241 0 0-7.789-20.030 5.564-17.804s20.879 16.473 16.583 21.199c-4.707 3.021-12.027 0-12.027 0s0.174 23.312-3.582 30.823-5.007 32.965-42.563 31.714c-37.556-1.252-51.743-67.6-57.169-70.939s-5.007 2.504-11.684 1.252-10.432-13.353-1.669-18.778c8.763-5.424 17.944-9.18 22.951-2.087s1.587 6.816 0.794 12.38z"],"grid":0,"tags":["ditto"],"defaultCode":59664},{"paths":["M836.807 322.004c0.139-0.137 0.345-0.365 0.512-0.544-0.062-0.028-0.333 0.147-0.876 0.735 0.092-0.047 0.175-0.090 0.236-0.119 0.046-0.023 0.087-0.046 0.128-0.071z","M158.198 399.735c-0.026 0.004-0.052 0.008-0.074 0.010-0.039 0.073-0.079 0.145-0.118 0.218-0.004 0.013-0.008 0.027-0.011 0.040 0.027 0.617 0.161 0.083 0.203-0.268z","M856.547 318.861c-0.967-13.285-10.955-24.851-19.633-34.13-18.422-19.7-40.579-36.255-62.697-51.583 0.861-31.777-15.339-65.64-44.892-79.077-14.732-6.698-30.976-8.917-47.069-8.312-16.377 0.615-33.338 2.315-48.981 7.425-25.982 8.486-47.191 25.718-61.971 48.574-27.194 42.054-31.555 93.951-39.331 142.126-1.549 9.602-3.215 19.241-5.856 28.612-0.504 1.791-1.047 3.572-1.647 5.333-0.283 0.83-0.576 1.656-0.887 2.477-0.157 0.416-0.336 0.83-0.488 1.249-0.716 1.43-1.356 2.88-2.16 4.267-0.36 0.62-0.746 1.22-1.129 1.826-0.182 0.286-0.385 0.558-0.579 0.836-1.43 1.569-2.84 3.097-4.441 4.501-0.319 0.28-1.419 1.15-1.75 1.427-0.842 0.618-1.685 1.234-2.554 1.816-4.649 3.108-9.634 5.701-14.724 8.002-0.51 0.23-1.023 0.456-1.535 0.683-0.23 0.102-0.39 0.174-0.52 0.232-0.107 0.044-0.228 0.093-0.376 0.155-1.366 0.561-2.739 1.106-4.119 1.633-3.196 1.221-6.427 2.352-9.681 3.413-7.127 2.323-14.364 4.305-21.655 6.046-33.916 8.106-68.51 11.388-103.477 11.75-35.417 0.366-70.959-2.209-105.167-11.382-7.324-1.964-14.55-4.268-21.637-6.97-13.551-5.297-26.075-12.964-39.081-19.418-10.175-5.049-23.12-11.902-34.897-9.044-13.196 3.203-16.353 17.595-15.035 29.394 1.381 12.354 6.886 23.397 13.789 33.579 13.94 20.56 32.59 39.799 33.32 65.777 0.693 24.677 8.626 47.518 20.465 69.063 14.586 26.546 34.429 50.462 56.926 70.666 21.465 19.277 46.212 37.683 73.947 46.657 21.762 7.041 45.057 9.466 67.924 10.036 0.035 22.881 0.070 45.762 0.105 68.643 0.003 1.935 0.006 3.87 0.009 5.806-3.715 20.434-7.431 40.867-11.145 61.301-1.139 6.263 4.665 10.828 10.446 8.031 0.055-0.027 0.091-0.046 0.136-0.067 0.026-0.009 0.042-0.014 0.069-0.023 1.476-0.509 2.931-1.050 4.435-1.479 5.349-1.524 8.545-1.968 14.081-1.874 16.357 0.277 29.481 10.33 38.318 23.733 2.525 4.195 7.224 4.092 10.319 1.886 1.169-0.772 2.121-1.826 2.663-3.062 2.842-1.837 4.443-5.394 2.111-9.166-1.128-1.824-2.058-3.764-2.973-5.7-0.251-0.53-0.38-0.79-0.443-0.909-0.004-0.041-0.052-0.204-0.224-0.679-0.384-1.056-0.777-2.105-1.113-3.177-0.351-1.122-0.665-2.257-0.923-3.403-0.132-0.583-0.24-1.169-0.354-1.755-0.032-0.165-0.055-0.272-0.073-0.344-0.006-0.108-0.013-0.242-0.027-0.429-0.083-1.192-0.084-2.35-0.069-3.542 0.002-0.169 0.003-0.294 0.002-0.396 0.002-0.009 0.004-0.013 0.006-0.025 0.109-0.568 0.253-1.124 0.383-1.686 0.027-0.119 0.235-0.68 0.355-1.022 0.174-0.322 0.462-0.879 0.531-0.978 0.215-0.307 0.317-0.462 0.357-0.531 0.402-0.448 0.822-0.875 1.276-1.271 0.207-0.179-0.336 0.156 0.713-0.473 0.625-0.375 1.254-0.739 1.919-1.038 0.509-0.229 2.573-0.838 3.886-1.128 4.055-0.898 8.303-0.83 12.446-0.6 0.749 0.165 1.477 0.185 2.173 0.091 3.672-0.124 5.663-2.795 5.992-5.791 0.652-2.679-0.127-5.653-3.198-7.47-23.418-13.856-46.837-27.713-70.255-41.57-0.955-0.565-1.91-1.13-2.865-1.695-0.034-22.175-0.068-44.351-0.101-66.527-0.001-0.535-0.002-1.070-0.003-1.604 25.487-0.447 50.917-3.012 76.147-6.562 10.84-1.526 21.684-3.249 32.511-5.159 1.818 27.54 3.635 55.080 5.453 82.62 0.287 4.36 0.576 8.718 0.863 13.077 0.087 1.317 0.406 2.583 0.919 3.739-5.288 17.451-10.577 34.902-15.864 52.353-1.923 6.346 5.148 10.594 10.447 8.031 0.055-0.027 0.091-0.046 0.135-0.067 0.026-0.009 0.042-0.013 0.069-0.023 1.476-0.509 2.93-1.050 4.435-1.479 5.349-1.524 8.545-1.968 14.081-1.874 16.357 0.277 29.481 10.331 38.318 23.733 2.546 4.182 7.257 4.073 10.35 1.866 1.079-0.721 1.966-1.685 2.516-2.807 2.7-1.36 4.424-4.132 2.942-7.701-0.791-1.906-1.369-3.918-1.86-5.918-0.249-1.017-0.458-2.040-0.652-3.069-0.082-0.435-0.148-0.875-0.212-1.313-0.015-0.155-0.031-0.337-0.043-0.528-0.13-2.19-0.216-4.352-0.008-6.537 0.027 0.19 0.446-2.13 0.577-2.675 0.095-0.393 0.228-0.788 0.366-1.178 0.033-0.050 0.406-0.969 0.481-1.106 1.023-1.883 2.294-3.449 3.488-4.325 6.271-4.589 15.167-4.545 22.984-4.060 3.33 0.207 5.437-1.553 6.336-3.897 1.542-3.065 0.602-7.83-2.747-9.354-23.903-10.874-47.806-21.749-71.708-32.623-2.213-1.007-4.426-2.014-6.639-3.021-1.97-29.859-3.941-59.717-5.913-89.576-0.128-1.933-0.255-3.867-0.383-5.8 34.196-6.79 68.069-15.637 100.863-26.988 24.687-8.546 45.751-24.259 56.893-48.417 11.096-24.060 12.784-51.221 10.32-77.294-2.742-29.014-9.947-57.402-19.136-84.996-9.155-27.495-10.654-58.078 5.016-83.16 5.919-9.474 13.915-17.307 23.544-22.833 9.123-5.235 19.154-7.994 29.58-7.903 6.691 0.059 11.569 1.226 18.917 2.229 7.602 1.038 15.221 1.959 22.875 2.506 10.514 0.752 21.117 0.87 31.54-0.907 12.754-2.171 25.9-10.065 24.834-24.715zM604.523 856.151c0.060 0.438 0.036 0.324 0 0v0zM837.646 320.475c0.004 0.055 0.009 0.117 0.011 0.168 0.008 0.124 0.012 0.227 0.016 0.319-0.023 0.043-0.046 0.084-0.071 0.127-0.004-0.17 0.007-0.386 0.044-0.613zM837.666 321.153c0.004-0.011 0.008-0.023 0.010-0.034 0 0.009 0.001 0.020 0.001 0.027-0.004 0.002-0.008 0.004-0.011 0.007zM158.162 399.676c0.017-0.009 0.028-0.015 0.045-0.024-0.001 0.009-0.002 0.018-0.003 0.027-0.016 0.001-0.029 0.003-0.046 0.004 0.001-0.002 0.003-0.005 0.004-0.007zM158.204 399.511c-0.021 0.027-0.042 0.055-0.063 0.082-0.007 0.005-0.012 0.009-0.020 0.014 0.047-0.117 0.073-0.138 0.082-0.097zM675.758 396.418c-2.468 15.799-1.658 31.662 1.885 47.251 3.301 14.527 8.885 28.527 12.769 42.918 6.958 25.78 11.9 52.315 10.858 79.106-0.85 21.864-6.64 44.52-21.542 60.306-14.986 15.876-36.867 21.901-57.779 28.118-24.252 7.21-48.86 13.254-73.641 18.343-53.363 10.958-109.085 18.758-163.624 13.923-11.369-1.008-21.918-2.593-33.471-5.563-10.638-2.734-18.655-5.587-27.463-10.475-27.293-15.146-51.682-35.658-72.108-59.199-16.784-19.345-31.767-42.202-40.225-65.758-1.897-5.284-3.515-10.673-4.734-16.155-1.293-5.814-1.566-7.349-1.88-12.921-0.369-6.556-0.417-12.967-1.627-19.465-1.282-6.889-3.698-13.45-6.591-19.814-5.137-11.301-12.567-21.306-19.905-31.242-3.429-4.642-6.861-9.29-9.98-14.147-2.876-4.477-5.761-9.714-7.098-13.471-2.025-5.694-2.484-8.425-2.321-14.171 0.054-1.905-0.146-0.857 0.293-2.496 0.135-0.503 0.27-1.003 0.421-1.501 0-0.007-0.001-0.009-0.001-0.017 0.004-0.008 0.009-0.015 0.012-0.023 0.011-0.038 0.020-0.077 0.032-0.115s0.021-0.064 0.031-0.095c0 0 0 0 0 0 0.016-0.003 0.031-0.006 0.054-0.009 0.009-0.019 0.020-0.037 0.029-0.055 0.016-0.001 0.032-0.003 0.048-0.004-0.002 0.016-0.003 0.031-0.005 0.049 0.114-0.016 0.261-0.035 0.411-0.055 0.106-0.001 0.216-0.009 0.32-0.005 0.476 0.025 2.184 0.226 2.144 0.176 2.214 0.436 4.385 1.099 6.507 1.854 5.508 1.957 10.858 4.733 16.473 7.637 12.693 6.563 25.163 13.52 38.499 18.732 32.021 12.211 66.945 16.759 100.998 18.443 36.507 1.805 73.268-0.249 109.369-5.957 27.912-4.414 57.478-10.745 82.255-24.949 8.459-4.85 16.536-11.053 21.693-19.471 4.197-6.853 6.665-14.874 8.603-22.623 5.192-20.777 7.325-42.286 10.728-63.395 3.956-24.538 8.864-49.179 17.98-72.387 0.207-0.526 1.268-3.113 1.334-3.303 0.517-1.207 1.045-2.41 1.589-3.605 1.305-2.865 2.686-5.696 4.154-8.483 2.77-5.257 5.841-10.359 9.262-15.219 0.485-0.69 0.981-1.371 1.477-2.054-0.031 0.044 0.48-0.639 0.785-1.051 0.316-0.403 0.842-1.078 0.809-1.037 0.529-0.654 1.060-1.307 1.6-1.951 1.984-2.365 4.065-4.65 6.242-6.839 1.989-2 4.058-3.922 6.203-5.753 0.951-0.812 1.922-1.602 2.904-2.376 0.35-0.26 1.126-0.849 1.213-0.91 0.702-0.502 1.4-1.008 2.111-1.498 11.451-7.906 21.33-11.973 34.894-15.061 8.018-1.825 13.909-2.195 22.244-3.020 8.701-0.862 17.405-1.284 26.135-0.55 6.149 0.517 13.181 1.926 19.978 4.39 0.562 0.204 1.121 0.417 1.679 0.632 0.23 0.088 0.394 0.15 0.532 0.201 0.118 0.055 0.257 0.119 0.436 0.2 1.288 0.585 2.561 1.199 3.811 1.861 2.619 1.386 5.104 2.971 7.525 4.675 0.159 0.113 0.278 0.194 0.378 0.263 0.052 0.044 0.096 0.079 0.159 0.131 0.393 0.32 0.787 0.641 1.174 0.969 0.953 0.807 1.881 1.643 2.783 2.508 1.903 1.823 3.673 3.776 5.331 5.824 0.011 0.051 1.215 1.655 1.514 2.090 0.651 0.948 1.277 1.914 1.878 2.896 1.291 2.106 2.468 4.282 3.534 6.51 0.183 0.382 0.866 1.944 1.003 2.226 0.28 0.695 0.562 1.388 0.823 2.091 0.829 2.233 1.559 4.502 2.199 6.795 1.094 3.918 1.853 7.884 2.513 11.894 0.012 0.077 0.022 0.127 0.032 0.192 0.009 0.090 0.016 0.179 0.028 0.299 0.080 0.792 0.177 1.582 0.252 2.373 0.155 1.634 0.271 3.27 0.348 4.91 0.103 2.208 0.141 4.421 0.079 6.631-0.005 0.175-0.012 0.35-0.018 0.525-10.426 28.686-20.853 57.372-31.278 86.060-0.997 2.743-1.994 5.486-2.99 8.228-1.591 0.866-3.158 1.783-4.691 2.766-21.87 14.027-36.39 37.702-40.382 63.253zM836.655 322.118c0.019 0.017-0.526 0.427-0.586 0.497 0.138-0.162 0.26-0.297 0.374-0.42-0.572 0.294-1.647 0.871-2.046 1.115-0.327 0.132-0.652 0.262-0.77 0.299-0.793 0.253-1.582 0.503-2.386 0.718-1.618 0.431-3.256 0.715-4.899 1.023-0.18 0.034-0.289 0.057-0.354 0.074-0.162 0.013-0.358 0.031-0.627 0.057-1.017 0.097-2.033 0.201-3.052 0.277-11.43 0.847-22.998-0.087-34.356-1.381-12.702-1.448-25.289-4.636-38.128-3.096-1.981 0.238-3.948 0.55-5.9 0.923 8.393-23.093 16.786-46.185 25.179-69.278 0.027-0.074 0.054-0.149 0.081-0.223 2.038 1.451 4.067 2.912 6.086 4.384 2.433 1.773 4.853 3.565 7.258 5.375 1.309 0.986 2.612 1.982 3.916 2.975 0.168 0.128 0.294 0.224 0.404 0.307 0.048 0.038 0.108 0.085 0.198 0.155 0.769 0.6 1.54 1.199 2.307 1.801 5.812 4.566 11.529 9.257 17.090 14.126 5.516 4.831 10.894 9.835 15.954 15.145 2.289 2.403 4.514 4.867 6.629 7.426 0.46 0.558 0.907 1.125 1.362 1.686 0.121 0.159 0.244 0.318 0.36 0.481 0.896 1.241 1.788 2.479 2.62 3.765 0.682 1.054 1.335 2.129 1.941 3.228 0.613 1.111 1.959 4.659 0.955 1.672 0.356 1.059 0.797 2.075 1.087 3.159 0.103 0.388 0.177 0.788 0.27 1.18-0.016 0.255-0.008 0.522 0.013 0.786-0.113 0.343-0.214 0.739-0.283 1.070-0.011 0.011-0.024 0.026-0.035 0.038 0.018 0.009 0.018 0.034 0 0.072-0.033 0.048-0.065 0.094-0.097 0.138-0.090 0.103-0.231 0.226-0.415 0.334-0.078 0.076-0.136 0.123-0.15 0.111z","M691.899 241.745c-1.917-10.815-10.695-19.421-22.295-19.421-12.396 0-22.53 10.361-22.66 22.659s10.461 22.66 22.66 22.66c11.599 0 20.373-8.603 22.293-19.412 0.285-0.965 0.424-2.044 0.366-3.247 0.058-1.198-0.080-2.275-0.364-3.238zM665.908 244.983c-0.030-4.844 7.165-4.788 7.393 0-0.227 4.774-7.362 4.828-7.393 0z","M722.134 244.983c-0.334-22.247-14.093-41.806-34.988-49.497-20.28-7.466-44.352-0.717-57.946 16.006-13.876 17.070-16.131 41.533-4.635 60.531 11.499 19.004 33.612 28.395 55.297 24.458 24.162-4.386 41.35-26.343 42.229-50.357 0.033-0.369 0.048-0.748 0.043-1.141zM681.517 276.404c-13.551 5.028-29.021 0.869-38.131-10.391-8.658-10.701-9.7-26.132-2.765-37.972 7.070-12.071 21.626-18.96 35.449-16.024 15.753 3.346 26.859 16.885 27.101 32.965-0.207 13.777-8.564 26.565-21.655 31.422z","M331.643 548.343c0.026-0.065 0.055-0.132 0.089-0.197 0.043-0.121 0.087-0.23 0.132-0.315-0.073 0.069-0.146 0.139-0.232 0.22 0.006 0.108 0.008 0.194 0.011 0.292z","M331.633 548.047l-0.001 0.001v0.002h0.001z","M592.687 505.626c-4.163-2.435-10.725-1.223-12.973 3.402-15.602 32.090-39.729 60.073-71.32 77.211-35.173 19.081-76.866 21.636-114.742 9.446-15.666-5.041-30.49-12.562-43.749-22.323-3.438-2.532-8.771-7.209-12.485-11.383-0.32-0.359-2.29-2.834-1.59-1.858-0.503-0.678-1.001-1.363-1.435-2.085-0.506-0.842-0.931-1.73-1.336-2.627 0.152 0.255-0.761-2.107-0.913-2.626-0.282-0.964-0.461-1.936-0.678-2.914 0.529 2.384-0.469 0.251 0.057-0.356-0.010-0.097-0.017-0.219-0.012-0.383 0.003-0.096 0.022-0.218 0.047-0.35-0.074 0.123-0.086 0.074 0.051-0.356 0.006-0.020 0.016-0.040 0.024-0.059 0.001-0.14 0-0.251-0.002-0.316-0.009 0.009-0.017 0.016-0.027 0.026 0.009-0.009 0.018-0.019 0.027-0.028 0-0.014-0.001-0.037-0.001-0.046 0.001 0.017 0.001 0.028 0.002 0.046 0.089-0.083 0.173-0.181 0.26-0.27 0.19-0.34 0.222-0.338 0.175-0.182 0.074-0.079 0.149-0.151 0.222-0.231 0.064-0.072 0.122-0.132 0.173-0.182 0.252-0.281 0.503-0.564 0.756-0.825 0.151-0.156 0.329-0.294 0.5-0.436 0.864-0.431 1.667-1.090 2.512-1.566 0.86-0.485 1.742-0.932 2.632-1.359 0.448-0.215 1.285-0.576 1.642-0.735 2.183-0.871 4.389-1.678 6.613-2.435 5.391-1.833 10.846-3.47 16.266-5.212 15.484-4.976 30.835-10.834 44.823-19.227 17.925-10.756 32.878-25.26 44.681-42.47 2.898-4.225 0.793-10.52-3.402-12.973-4.696-2.747-10.068-0.833-12.973 3.401-10.277 14.985-23.671 27.386-39.353 36.542-12.871 7.514-24.936 11.991-39.25 16.581-18.287 5.863-48.905 12.034-44.851 37.618 1.839 11.606 9.543 20.826 18.121 28.351 13.333 11.694 28.874 20.417 45.241 27.091 39.786 16.224 85.761 17.183 125.593 0.613 41.646-17.326 74.481-51.243 94.072-91.54 2.24-4.604 1.255-10.25-3.399-12.974z","M332.050 547.65c0.008-0.022 0.011-0.038 0.017-0.057-0.058 0.062-0.117 0.122-0.175 0.182-0.008 0.013-0.011 0.020-0.020 0.034-0.003 0.006-0.006 0.014-0.009 0.020 0.067-0.064 0.128-0.123 0.185-0.178-0.117 0.153-0.229 0.322-0.318 0.493-0.030 0.087-0.060 0.178-0.086 0.273-0.001-0.025-0.002-0.050-0.003-0.076-0.003 0.008-0.007 0.015-0.009 0.023 0 0.030 0 0.061-0.001 0.094-0.029 0.109-0.054 0.217-0.074 0.321 0.020-0.033 0.044-0.078 0.071-0.132-0.008 0.376-0.027 0.782-0.075 0.825-0.012 0.011-0.020 0.027-0.031 0.040 0.039 0.349 0.151 0.198 0.128-0.909 0.136-0.274 0.32-0.714 0.4-0.953 0.679-0.659 0.653-0.707 0.412-0.469-0.057 0.064-0.116 0.119-0.173 0.182-0.076 0.084-0.158 0.181-0.24 0.287z"],"grid":0,"tags":["duck"],"defaultCode":59665},{"paths":["M872.296 512c0-48.636-9.528-95.822-28.317-140.246-18.148-42.906-44.125-81.436-77.211-114.522s-71.616-59.063-114.522-77.211c-44.425-18.789-91.61-28.317-140.246-28.317s-95.822 9.528-140.246 28.317c-42.906 18.148-81.436 44.125-114.522 77.211s-59.063 71.616-77.211 114.522c-18.789 44.425-28.317 91.61-28.317 140.246s9.528 95.822 28.317 140.246c18.148 42.906 44.125 81.436 77.211 114.522s71.616 59.063 114.522 77.211c44.425 18.789 91.61 28.317 140.246 28.317s95.822-9.528 140.246-28.317c42.906-18.148 81.436-44.125 114.522-77.211s59.063-71.616 77.211-114.522c18.789-44.425 28.317-91.61 28.317-140.246zM270.64 753.36c-37.929-37.929-65.819-83.218-82.366-132.64 19.995 16.281 41.078 30.969 63.178 43.983 10.598 23.427 23.613 45.576 38.906 65.912 40.378 53.695 95.095 93.567 160.237 117.222-67.797-12.247-130.205-44.728-179.956-94.477zM170.667 512c0-24.838 2.655-49.266 7.793-72.974 13.448 11.513 27.415 22.28 41.875 32.279-1.306 12.797-1.978 25.709-1.978 38.679 0.003 42.992 7.295 85.359 21.151 124.912-21.243-14.049-41.421-29.784-60.449-47.138-5.542-24.577-8.392-49.947-8.392-75.757zM753.36 270.64c3.433 3.433 6.766 6.939 10.034 10.489-10.241 6.046-20.694 11.743-31.377 17.041-2.044-2.904-4.118-5.787-6.25-8.623-37.86-50.346-88.327-88.54-148.172-112.608 66.178 12.813 127.040 44.977 175.765 93.701zM853.333 512c0 25.809-2.85 51.178-8.392 75.753-22.034 20.096-45.609 38.023-70.594 53.672 15.336-41.343 23.422-85.948 23.42-131.246-0.001-11.335-0.526-22.623-1.527-33.831 17.118-11.395 33.563-23.851 49.298-37.327 5.139 23.71 7.795 48.139 7.795 72.978zM615.706 532.152c0.187-6.712 0.301-13.43 0.301-20.152 0-50.862-5.368-101.471-15.85-150.952 19.12-3.31 38.025-7.706 56.666-13.179 22.547 50.407 34.416 105.729 34.515 161.656-24.685 9.591-49.937 17.14-75.632 22.627zM690.844 529.993c-2.92 58.918-18.843 116.611-46.506 167.97-0.145 0.268-0.295 0.534-0.441 0.802-18.276 5.049-36.804 9.033-55.541 11.937 14.658-51.754 23.586-105.109 26.54-159.007 25.774-5.248 51.128-12.49 75.948-21.702zM675.040 342.15c10.167-3.402 20.252-7.123 30.243-11.175 6.767-2.744 13.455-5.633 20.072-8.65 27.117 42.862 44.553 92.507 50.827 144.43-21.017 13.294-43.035 24.979-65.974 34.991-1.121-55.189-13.156-109.652-35.169-159.597zM698.158 313.402c-10.31 4.181-20.724 7.995-31.228 11.456-1.939-3.892-3.939-7.755-6.002-11.582-16.745-31.058-37.512-59.838-61.723-85.542-12.668-13.449-26.311-26.083-40.822-37.821 61.979 22.386 113.969 60.153 152.228 111.031 1.351 1.797 2.682 3.609 3.995 5.435-5.431 2.434-10.913 4.778-16.448 7.022zM585.4 240.737c23.079 24.502 42.873 51.935 58.835 81.539 1.472 2.731 2.901 5.485 4.306 8.251-17.306 4.965-34.843 8.969-52.574 12.003-11.15-46.632-26.878-92.147-46.99-135.8 12.904 10.615 25.079 21.966 36.422 34.008zM577.153 345.376c-18.452 2.427-37.094 3.811-55.884 4.154l-0.066-156.784c24.468 48.639 43.214 99.896 55.95 152.63zM581.393 363.939c10.355 48.522 15.651 98.167 15.651 148.061 0 7.952-0.14 15.899-0.409 23.835-24.754 4.27-49.886 6.648-75.285 7.117l-0.074-174.455c20.218-0.357 40.274-1.876 60.116-4.557zM595.703 555.219c-3.289 53.696-12.683 106.803-27.892 158.223-15.345 1.721-30.816 2.729-46.387 3.019l-0.065-154.544c25.064-0.447 49.877-2.685 74.344-6.698zM561.661 733.156c-10.944 33.41-24.365 66.033-40.19 97.557l-0.040-95.286c13.487-0.242 26.903-0.994 40.23-2.271zM582.361 730.739c16.149-2.212 32.156-5.19 47.994-8.931-13.059 20.563-28.045 39.882-44.77 57.652-10.615 11.279-21.955 21.958-33.946 31.987 11.837-26.298 22.089-53.254 30.721-80.708zM599.395 792.457c22.116-23.498 41.341-49.575 57.258-77.605 16.424-4.817 32.647-10.461 48.631-16.943 9.287-3.766 18.43-7.798 27.435-12.076-6.67 11.625-14.015 22.812-22.025 33.467-38.214 50.839-90.149 88.579-152.063 110.953 14.491-11.73 28.114-24.356 40.764-37.796zM698.158 680.335c-9.588 3.888-19.264 7.461-29.021 10.727 25.232-52.254 39.277-109.997 40.987-168.663 23.603-9.851 46.291-21.381 67.984-34.531 0.458 7.409 0.696 14.85 0.697 22.313 0.003 51.34-10.93 101.702-31.417 146.953-15.913 8.604-32.331 16.348-49.231 23.201zM793.744 455.107c-7.394-50.546-24.857-98.825-51.167-141.023 11.407-5.724 22.565-11.879 33.483-18.427 29.906 36.366 51.642 78.016 64.31 122.677-14.875 13.234-30.42 25.517-46.626 36.773zM408.002 532.089c-27.965-5.989-55.406-14.417-82.16-25.265-0.345-0.14-0.688-0.285-1.033-0.427 0.493-55.643 12.622-110.611 35.323-160.649 20.828 6.442 41.994 11.527 63.431 15.249-10.489 49.497-15.861 100.123-15.861 151.002 0 6.702 0.114 13.398 0.299 20.089zM408.81 551.635c2.949 53.902 11.874 107.262 26.53 159.021-21.759-3.386-43.238-8.222-64.365-14.499-27.583-51.79-43.29-109.917-45.82-169.203 27.27 10.637 55.207 18.873 83.655 24.681zM428.005 555.172c24.482 4.030 49.31 6.282 74.391 6.74l0.065 154.547c-15.634-0.295-31.166-1.313-46.57-3.051-15.208-51.425-24.6-104.537-27.886-158.236zM427.072 535.782c-0.266-7.919-0.406-15.847-0.406-23.782 0-49.907 5.299-99.565 15.659-148.1 19.8 2.685 39.814 4.216 59.988 4.588l0.074 174.458c-25.41-0.483-50.551-2.877-75.315-7.164zM446.566 345.341c12.689-52.528 31.343-103.589 55.674-152.056l0.065 156.239c-18.74-0.359-37.335-1.751-55.74-4.182zM427.753 342.481c-20.019-3.437-39.792-8.113-59.263-14.011 1.081-2.098 2.175-4.191 3.295-6.269 15.937-29.588 35.704-57.007 58.754-81.497 14.916-15.849 31.259-30.515 48.837-43.853-22.339 46.634-39.628 95.485-51.623 145.63zM416.731 227.706c-24.181 25.693-44.919 54.46-61.64 85.502-1.665 3.090-3.279 6.208-4.861 9.341-8.187-2.832-16.32-5.876-24.386-9.147-7.582-3.075-15.067-6.329-22.454-9.758 0.681-0.927 1.353-1.861 2.043-2.781 38.214-50.839 90.148-88.579 152.062-110.953-14.491 11.73-28.114 24.356-40.764 37.796zM318.716 330.975c7.716 3.129 15.486 6.064 23.308 8.805-22.175 49.541-34.5 103.608-36.034 158.474-22.786-10.418-44.638-22.506-65.472-36.21 6.861-51.369 24.658-100.363 51.957-142.582 8.619 4.068 17.363 7.911 26.241 11.511zM305.929 519.005c1.274 58.634 14.874 116.431 39.658 168.845-6.621-2.364-13.205-4.863-19.745-7.515-20.579-8.346-40.445-18.011-59.548-28.945-18.905-43.809-28.971-92.16-28.974-141.409 0-8.967 0.345-17.902 1.004-26.787 21.548 13.585 44.112 25.539 67.605 35.811zM318.716 697.908c12.952 5.253 26.060 9.953 39.305 14.112 16.238 29.098 36.030 56.127 58.901 80.408 12.668 13.449 26.31 26.083 40.821 37.82-61.978-22.386-113.968-60.152-152.227-111.029-9.19-12.222-17.504-25.142-24.928-38.622 12.43 6.265 25.141 12.044 38.129 17.311zM430.725 779.426c-17.339-18.407-32.822-38.47-46.221-59.864 18.714 4.786 37.673 8.498 56.832 11.135 9.656 30.721 21.333 60.823 34.998 90.072-16.35-12.664-31.608-26.48-45.609-41.343zM462.039 733.125c13.393 1.291 26.875 2.054 40.43 2.299l0.040 95.831c-15.949-31.702-29.462-64.519-40.47-98.13zM429.27 180.711c-55.843 24.188-103.098 60.999-138.996 108.757-1.421 1.891-2.821 3.796-4.202 5.717-8.64-4.431-17.133-9.114-25.479-14.041 3.272-3.557 6.61-7.067 10.048-10.505 44.487-44.487 99.095-75.175 158.629-89.929zM275.378 311c-26.475 41.526-44.313 89.108-52.274 139.050-13.642-9.843-26.809-20.416-39.481-31.692 12.666-44.669 34.405-86.326 64.315-122.698 8.982 5.387 18.125 10.511 27.44 15.34zM559.484 850.054c67.849-23.327 124.741-63.983 166.367-119.36 13.979-18.596 26.049-38.709 36.113-59.929 25.966-14.461 50.593-31.166 73.753-50.023-16.547 49.413-44.434 94.693-82.357 132.617-53.137 53.137-120.713 86.574-193.875 96.695z"],"grid":0,"tags":["earth-wireframe"],"defaultCode":59666},{"paths":["M654.461 849.22c43.583-18.433 82.721-44.821 116.329-78.43s59.996-72.748 78.43-116.329c19.087-45.127 28.765-93.058 28.765-142.461s-9.678-97.334-28.765-142.461c-18.434-43.583-44.821-82.721-78.43-116.329s-72.748-59.996-116.329-78.43c-45.127-19.087-93.058-28.765-142.461-28.765s-97.334 9.678-142.461 28.765c-43.583 18.433-82.721 44.821-116.329 78.43s-59.996 72.748-78.43 116.329c-19.087 45.127-28.765 93.058-28.765 142.461s9.678 97.334 28.765 142.461c18.434 43.583 44.821 82.721 78.43 116.329s72.748 59.996 116.329 78.43c45.127 19.087 93.058 28.765 142.461 28.765s97.334-9.678 142.461-28.765zM465.195 774.346c-6.91-12.628-13.819-25.258-20.728-37.886-5.316-9.717-10.897-19.744-19.78-26.36-27.265-20.309-66.143 1.588-99.66-4.108-28.608-4.863-50.309-29.451-78.395-36.748-14.024-3.644-28.9-1.997-42.225 3.553-4.383-8.382-8.454-16.95-12.163-25.72-18.092-42.778-27.266-88.223-27.266-135.075s9.174-92.297 27.267-135.074c17.478-41.322 42.501-78.436 74.374-110.308 27.456-27.456 58.81-49.815 93.383-66.661 1.37 5.813 3.495 11.516 6.036 16.757 8.961 18.48 27.213 36.55 47.193 31.802 18.699-4.444 29.081-26.877 47.893-30.814 23.587-4.935 18.189 29.612 49.478 28.663s28.882-32.548 30.341-36.978c7.097-21.548 18.015-13.274 16.119-31.289-0.391-3.713-1.151-7.221-2.316-10.523 31.777 3.888 62.694 12.134 92.33 24.668 41.322 17.478 78.435 42.501 110.308 74.374s56.896 68.985 74.374 110.308c18.093 42.778 27.267 88.223 27.267 135.075 0 18.231-1.407 36.244-4.17 53.974-10.253-0.647-20.554-0.773-30.583-3.231-24.183-5.93-44.248-24.637-65.084-40.062s-45.833-28.326-69.684-20.799c0 0-55.11 19.94-65.988 69.946-4.78 21.971-3.004 45.128-5.824 67.552-6.714 53.387-39.252 102.854-31.497 156.050 2.81 19.276 11.748 36.383 24.074 49.472-31.721 9.364-64.629 14.12-98.268 14.12-13.811 0-27.495-0.819-41.029-2.406 3.813-4.044 6.896-8.715 8.948-14.011 8.696-22.451-3.168-47.136-14.724-68.259z","M345.166 394.578c-0.619-13.396 4.354-26.35 6.432-39.598s0.339-28.722-10.311-36.872c-13.231-10.124-32.655-3.657-46.144 6.122-32.911 23.859-51.417 66.194-46.58 106.556l0.326 0.148c0.14 28.125 7.944 40.058 14.573 67.391 3.773 15.554 8.797 31.28 18.893 43.699s26.27 20.98 42.015 18.106c22.008-4.017 34.715-27.641 38.945-49.61 4.805-24.948 2.793-51.174-5.76-75.097-4.813-13.459-11.73-26.565-12.39-40.844z","M635.464 311.145c5.001 3.667 11.429 4.577 17.307 6.55 26.057 8.748 39.108 36.847 56.232 58.347s51.727 37.252 70.329 17.016c14.715-16.008 7.167-41.468-1.181-61.545-9.287-22.337-19.363-45.727-38.567-60.44s-73.046-12.016-73.046-12.016c-12.373 3.065-25.138 7.83-32.986 17.875s-8.366 26.674 1.912 34.212z"],"grid":0,"tags":["earth"],"defaultCode":59667},{"paths":["M901.804 524.249c-0.085 24.305-5.852 47.3-19.313 67.553-12.535 18.861-31.229 33.585-51.721 44.616-49.861 26.84-109.747 34.728-165.803 37.511-31.648 1.571-63.555 1.951-94.871-3.535-29.232-5.122-57.819-14.299-84.16-28.034-46.56-24.277-87.49-63.442-104.893-113.326-8.777-25.161-10.303-50.001-8.464-76.576 1.723-24.904 6.693-49.965 16.089-73.593 8.268-20.791 21.094-40.91 37.373-56.789 16.894-16.48 37.978-28.736 60.598-36.106 27.62-9 57.241-11.714 86.156-9.875 21.398 1.361 41.072 6.081 58.367 17.886 1.545 1.055 3.060 2.155 4.55 3.287-1.759-1.336 0.869 0.706 1.194 0.971 0.884 0.721 1.758 1.453 2.623 2.196 3.081 2.647 6.042 5.432 8.94 8.276 5.869 5.76 11.49 11.768 17.415 17.472 14.927 14.369 31.742 25.62 51.095 33.136 12.882 5.002 26.4 8.223 40.032 10.376 13.884 2.192 29.807 3.264 42.667 5.001 10.97 1.482 21.919 3.423 32.617 6.293 4.63 1.242 9.214 2.666 13.705 4.344 1.062 0.397 2.114 0.816 3.169 1.234 1.91 0.757-0.619-0.336 1.629 0.704 1.953 0.903 3.896 1.817 5.8 2.823 3.646 1.925 7.099 4.121 10.46 6.502 2.039 1.445-0.452-0.468 1.115 0.85 0.759 0.639 1.53 1.261 2.277 1.915 1.485 1.302 2.917 2.663 4.291 4.083 1.38 1.425 2.668 2.921 3.952 4.433 1.381 1.625-0.082-0.192 0.671 0.832 0.665 0.903 1.322 1.809 1.952 2.735 2.351 3.451 4.417 7.093 6.231 10.854 0.474 0.982 0.92 1.977 1.369 2.971 0.109 0.242 0.715 1.681 0.283 0.644-0.517-1.241 0.41 1.040 0.402 1.022 0.837 2.159 1.629 4.332 2.349 6.533 1.552 4.742 2.821 9.574 3.886 14.447 2.586 11.822 3.687 21.503 4.592 33.637 1.059 14.204 1.364 28.457 1.375 42.698 0.009 11.365 17.672 11.384 17.663 0-0.021-27.431-0.795-55.443-6.882-82.307-4.236-18.697-11.854-37.048-25.353-50.99-32.519-33.582-83.605-31.557-126.186-38.394-24.947-4.006-47.442-11.111-67.688-25.945-0.314-0.229-3.062-2.324-1.575-1.164-0.791-0.617-1.574-1.244-2.351-1.878-1.896-1.547-3.754-3.143-5.577-4.776-3.246-2.907-6.381-5.936-9.464-9.015-6.014-6.005-11.828-12.215-18.067-17.991-14.646-13.557-31.552-23.477-50.96-28.491-28.948-7.478-60.455-6.629-89.805-2.208-26.912 4.054-53.44 13.064-76.318 27.983-21.234 13.846-38.996 32.378-52.25 53.969-13.514 22.014-22.306 46.894-27.235 72.183-5.246 26.92-7.664 55.572-4.069 82.854 7.467 56.653 41.725 104.88 87.081 138.24 51.101 37.586 115.358 55.731 178.379 56.251 32.297 0.266 64.744-1.457 96.772-5.666 29.988-3.941 59.868-9.916 88.318-20.375 25.167-9.252 49.35-21.819 69.301-39.959 18.485-16.808 32.219-38.501 38.83-62.64 3.528-12.882 5.056-26.341 5.102-39.679 0.038-11.367-17.624-11.383-17.665-0.001z","M555.123 374.267c-53.232 0-96.386 43.153-96.386 96.386s43.153 96.386 96.386 96.386 96.386-43.153 96.386-96.386-43.153-96.386-96.386-96.386zM604.383 452.247h-29.5c3.879-14.418 1.588-28.436-8.173-41.968l21.028-0.497c17.179 12.922 19.688 27.808 16.645 42.465z","M809.962 515.867c0 5.017-4.067 9.084-9.084 9.084s-9.084-4.067-9.084-9.084c0-5.017 4.067-9.084 9.084-9.084s9.084 4.067 9.084 9.084z","M840.34 536.586c0 5.017-4.067 9.084-9.084 9.084s-9.084-4.067-9.084-9.084c0-5.017 4.067-9.084 9.084-9.084s9.084 4.067 9.084 9.084z","M833.242 465.197c0 5.017-4.067 9.084-9.084 9.084s-9.084-4.067-9.084-9.084c0-5.017 4.067-9.084 9.084-9.084s9.084 4.067 9.084 9.084z","M805.99 549.664c0 5.017-4.067 9.084-9.084 9.084s-9.084-4.067-9.084-9.084c0-5.017 4.067-9.084 9.084-9.084s9.084 4.067 9.084 9.084z","M809.962 583.462c0 5.017-4.067 9.084-9.084 9.084s-9.084-4.067-9.084-9.084c0-5.017 4.067-9.084 9.084-9.084s9.084 4.067 9.084 9.084z","M833.242 567.42c0 5.017-4.067 9.084-9.084 9.084s-9.084-4.067-9.084-9.084c0-5.017 4.067-9.084 9.084-9.084s9.084 4.067 9.084 9.084z","M842.326 501.118c0 5.017-4.067 9.084-9.084 9.084s-9.084-4.067-9.084-9.084c0-5.017 4.067-9.084 9.084-9.084s9.084 4.067 9.084 9.084z","M805.99 480.395c0 5.017-4.067 9.084-9.084 9.084s-9.084-4.067-9.084-9.084c0-5.017 4.067-9.084 9.084-9.084s9.084 4.067 9.084 9.084z","M374.51 685.089c-5.264-15.368-11.197-21.746-17.478-28.499-6.744-7.251-14.389-15.471-20.688-33.858s-5.3-29.568-4.42-39.432c0.82-9.187 1.596-17.863-3.668-33.231s-11.197-21.746-17.478-28.498c-6.744-7.251-14.388-15.469-20.687-33.856s-5.3-29.566-4.419-39.429c0.82-9.186 1.596-17.863-3.668-33.229s-11.197-21.745-17.477-28.498c-6.744-7.251-14.388-15.469-20.687-33.856s-5.3-29.565-4.419-39.429c0.82-9.186 1.596-17.862-3.668-33.228l14.202-4.866c6.299 18.387 5.3 29.566 4.42 39.43-0.821 9.186-1.596 17.862 3.667 33.227s11.197 21.745 17.478 28.498c6.743 7.251 14.388 15.469 20.687 33.856s5.3 29.567 4.42 39.43c-0.821 9.186-1.596 17.862 3.667 33.228s11.197 21.745 17.478 28.498c6.744 7.251 14.388 15.47 20.687 33.857s5.3 29.568 4.42 39.432c-0.82 9.187-1.596 17.863 3.668 33.231s11.198 21.746 17.479 28.499c6.744 7.251 14.388 15.47 20.687 33.858l-14.203 4.866z","M343.384 695.753c-5.264-15.368-11.198-21.747-17.479-28.5-6.744-7.251-14.388-15.47-20.687-33.857s-5.3-29.568-4.42-39.433c0.82-9.187 1.596-17.862-3.668-33.231-5.264-15.366-11.197-21.745-17.478-28.498-6.744-7.251-14.388-15.47-20.687-33.857s-5.3-29.566-4.419-39.429c0.821-9.186 1.596-17.863-3.668-33.228s-11.197-21.745-17.478-28.498c-6.744-7.251-14.388-15.469-20.687-33.856s-5.3-29.566-4.419-39.43c0.821-9.186 1.596-17.862-3.668-33.228l14.202-4.866c6.299 18.387 5.3 29.566 4.419 39.43-0.821 9.186-1.596 17.862 3.668 33.228s11.197 21.745 17.478 28.498c6.744 7.251 14.388 15.469 20.687 33.856s5.3 29.566 4.419 39.43c-0.821 9.185-1.596 17.862 3.667 33.227 5.264 15.367 11.197 21.746 17.478 28.498 6.744 7.251 14.388 15.469 20.687 33.856s5.3 29.568 4.42 39.433c-0.82 9.186-1.596 17.863 3.668 33.231s11.198 21.746 17.478 28.499c6.745 7.251 14.389 15.471 20.688 33.859l-14.201 4.865z","M313.635 705.944c-5.265-15.367-11.198-21.746-17.478-28.499-6.745-7.251-14.389-15.47-20.688-33.859-6.3-18.387-5.301-29.568-4.42-39.432 0.82-9.187 1.595-17.863-3.669-33.231-5.264-15.366-11.197-21.745-17.478-28.498-6.744-7.251-14.388-15.47-20.687-33.857s-5.3-29.567-4.42-39.43c0.821-9.186 1.596-17.862-3.667-33.228s-11.197-21.744-17.477-28.497c-6.744-7.251-14.389-15.47-20.687-33.857-6.299-18.386-5.3-29.566-4.419-39.429 0.82-9.186 1.596-17.862-3.668-33.228l14.202-4.866c6.299 18.386 5.3 29.566 4.419 39.43-0.82 9.185-1.596 17.861 3.668 33.227s11.197 21.746 17.478 28.498c6.743 7.251 14.387 15.469 20.687 33.856s5.3 29.566 4.419 39.429c-0.82 9.186-1.596 17.863 3.668 33.229s11.197 21.746 17.477 28.498c6.744 7.251 14.388 15.469 20.687 33.856 6.3 18.387 5.301 29.568 4.42 39.432-0.82 9.187-1.595 17.863 3.669 33.231s11.198 21.747 17.479 28.5c6.744 7.251 14.388 15.47 20.687 33.857l-14.202 4.867z","M223.409 860.268c-0.802-16.224-4.736-23.998-8.9-32.227-4.471-8.836-9.54-18.85-10.499-38.263s3.097-29.88 6.675-39.113c3.334-8.6 6.482-16.722 5.68-32.946s-4.736-23.996-8.9-32.225c-4.471-8.836-9.539-18.849-10.498-38.262s3.096-29.877 6.675-39.11c3.333-8.599 6.481-16.721 5.679-32.943s-4.736-23.996-8.899-32.225c-4.471-8.835-9.54-18.849-10.499-38.261s3.097-29.878 6.675-39.111c3.334-8.599 6.482-16.721 5.68-32.943l14.994-0.741c0.96 19.412-3.097 29.878-6.675 39.111-3.334 8.599-6.482 16.721-5.68 32.943s4.736 23.996 8.9 32.224c4.471 8.836 9.54 18.85 10.498 38.263 0.96 19.411-3.096 29.876-6.675 39.109-3.333 8.599-6.481 16.721-5.679 32.943s4.736 23.996 8.9 32.225c4.471 8.836 9.539 18.849 10.498 38.262s-3.097 29.88-6.675 39.113c-3.334 8.6-6.482 16.722-5.68 32.946s4.736 23.997 8.9 32.227c4.471 8.836 9.54 18.85 10.499 38.263l-14.994 0.741z","M190.548 861.892c-0.802-16.224-4.736-23.998-8.9-32.227-4.471-8.836-9.54-18.85-10.499-38.263s3.097-29.88 6.675-39.113c3.334-8.6 6.482-16.722 5.68-32.946s-4.736-23.996-8.9-32.225c-4.471-8.835-9.54-18.849-10.499-38.262s3.097-29.877 6.676-39.11c3.333-8.599 6.481-16.721 5.679-32.943s-4.736-23.997-8.9-32.225c-4.471-8.835-9.539-18.849-10.498-38.261s3.097-29.878 6.675-39.111c3.334-8.599 6.482-16.721 5.68-32.943l14.994-0.741c0.96 19.412-3.097 29.878-6.675 39.111-3.334 8.599-6.482 16.721-5.68 32.943s4.736 23.996 8.899 32.224c4.471 8.835 9.54 18.849 10.499 38.262s-3.096 29.878-6.675 39.111c-3.334 8.599-6.482 16.72-5.68 32.943 0.802 16.222 4.736 23.995 8.9 32.223 4.471 8.836 9.54 18.85 10.499 38.263s-3.097 29.88-6.675 39.113c-3.334 8.6-6.482 16.722-5.68 32.946s4.736 23.997 8.9 32.227c4.471 8.836 9.54 18.85 10.499 38.263l-14.994 0.741z","M159.139 863.443c-0.802-16.224-4.736-23.997-8.9-32.226-4.471-8.837-9.539-18.851-10.498-38.264s3.096-29.879 6.675-39.112c3.333-8.6 6.481-16.722 5.679-32.946s-4.736-23.996-8.9-32.225c-4.471-8.836-9.539-18.849-10.498-38.262s3.097-29.878 6.675-39.111c3.334-8.599 6.482-16.721 5.68-32.942s-4.736-23.996-8.9-32.224c-4.471-8.836-9.54-18.85-10.498-38.263-0.96-19.411 3.096-29.876 6.675-39.11 3.333-8.599 6.481-16.721 5.679-32.943l14.994-0.741c0.96 19.412-3.096 29.877-6.675 39.111-3.333 8.599-6.481 16.721-5.679 32.943s4.736 23.996 8.899 32.224c4.471 8.836 9.54 18.85 10.499 38.262s-3.097 29.877-6.675 39.11c-3.334 8.599-6.482 16.721-5.68 32.943s4.736 23.996 8.9 32.225c4.471 8.836 9.539 18.849 10.498 38.262s-3.096 29.88-6.675 39.113c-3.333 8.6-6.481 16.722-5.679 32.945 0.802 16.225 4.736 23.998 8.9 32.227 4.471 8.837 9.539 18.851 10.498 38.263l-14.994 0.741z"],"grid":0,"tags":["eggs"],"defaultCode":59668},{"paths":["M906.023 747.073c-4.326-4.368-8.7-8.692-13.077-13.011-12.045-11.888-24.188-23.677-36.398-35.397-18.339-17.603-36.835-35.043-55.473-52.328-23.086-21.41-46.396-42.58-69.941-63.485-26.627-23.64-53.557-46.94-80.847-69.813-28.634-24-57.663-47.534-87.205-70.408-29.573-22.897-59.607-45.206-90.393-66.449-28.346-19.558-57.313-38.274-87.225-55.357-26.574-15.176-53.944-29.066-82.427-40.311-23.159-9.144-47.199-16.343-72.035-18.942-5.084-0.532-10.189-0.821-15.301-0.832-31.525 0.082-65.291 7.418-84.948 34.16-16.152 21.973-17.407 51.432-13.999 77.495 4.261 32.59 15.142 63.822 27.913 93.966 11.441 27.005 24.752 53.206 39.232 78.704 7.372 12.982 14.808 26.148 23.25 38.482 0.125 0.183 0.243 0.373 0.366 0.558 6.159 9.301 19.045 3.176 17.329-7.306-0.064-0.393-0.125-0.785-0.181-1.179-0.064-0.445-0.127-0.89-0.193-1.335-0.493-4.077-0.967-8.153-1.329-12.244-1.14-12.846-1.575-25.778-1.034-38.667 0.156-3.734 0.397-7.464 0.741-11.184 0.167-1.809 0.375-3.613 0.576-5.419 0.039-0.351 0.085-0.701 0.13-1.051 0.144-1.025 0.296-2.048 0.459-3.070 1.163-7.282 2.806-14.51 5.222-21.483 0.51-1.472 1.061-2.928 1.643-4.372 0.119-0.278 0.306-0.717 0.442-1.008 0.431-0.927 0.865-1.853 1.326-2.765 1.524-3.013 3.302-5.829 5.211-8.609 0.098-0.141 0.171-0.249 0.234-0.342-0.009 0.021 0.002 0.014 0.056-0.049 0.466-0.553 0.922-1.112 1.401-1.654 1.109-1.252 2.281-2.448 3.518-3.575 0.569-0.518 1.157-1.010 1.746-1.504 0.157-0.12 0.333-0.252 0.503-0.369 1.387-0.951 2.798-1.853 4.28-2.648 0.751-0.404 1.522-0.763 2.288-1.137 0.083-0.040 0.083-0.049 0.046-0.042 0.113-0.038 0.247-0.082 0.425-0.142 1.696-0.571 3.369-1.144 5.111-1.564 0.899-0.216 1.804-0.397 2.713-0.568 0.283-0.053 0.713-0.111 1.031-0.151 1.895-0.185 3.79-0.285 5.695-0.297 6.102-0.038 12.219 0.332 18.292 0.902 1.541 0.144 3.080 0.305 4.617 0.48 0.72 0.082 1.439 0.166 2.157 0.254 0.356 0.044 1.555 0.199 2.073 0.265 0.443 0.063 1.068 0.151 1.241 0.176 0.864 0.127 1.727 0.254 2.588 0.387 1.75 0.269 3.498 0.556 5.242 0.856 7.041 1.213 14.039 2.665 20.995 4.296 31.968 7.498 63.079 18.51 93.505 30.761 16.621 6.693 32.392 13.562 49.361 21.346 17.677 8.108 35.187 16.576 52.562 25.311 35.397 17.795 70.242 36.68 104.688 56.249 32.983 18.737 65.6 38.116 97.917 57.975 27.868 17.125 55.514 34.61 82.949 52.42 20.047 13.014 39.982 26.197 59.783 39.584 9.504 6.426 18.824 13.173 28.417 19.463 0.422 0.277 0.83 0.579 1.243 0.869 8.98 6.301 18.898-7.415 11.493-14.892zM223.517 505.962c0-0.005 0.001-0.010 0.002-0.015-0.052 0.378-0.106 0.759-0.002 0.015zM244.741 457.344c-0.622 0.517-0.422 0.329 0 0v0z"],"grid":0,"tags":["ekin"],"defaultCode":59669},{"paths":["M343.524 757.597c0.241-0.073 0.977-0.438 2.477-1.31-0.022 0.009-0.045 0.016-0.067 0.025-0.793 0.447-1.596 0.875-2.409 1.286z","M400.139 760.618c-0.131 0.081 0.452 0.648 2.519 1.781-0.049-0.043-0.099-0.086-0.149-0.129-0.805-0.503-1.589-1.080-2.37-1.652z","M391.183 755.583c-0.117-0.040-0.233-0.079-0.349-0.119 2.593 1.663 3.186 1.669 2.736 1.257-0.334-0.172-0.66-0.357-0.996-0.523-0.407-0.202-0.911-0.399-1.392-0.615z","M493.186 752.528c-1.111 0.342-1.81 0.605-2.203 0.79 0.569-0.158 1.138-0.319 1.699-0.502 0.169-0.096 0.337-0.192 0.504-0.288z","M488.13 754.015c0.591-0.122 1.179-0.255 1.765-0.402-0.241 0.019-0.999 0.149-2.585 0.485 0.003 0 0.005 0 0.008 0 0.257-0.014 0.536-0.044 0.813-0.082z","M466.741 750.504c-2.826-1.587-2.757-1.351-1.874-0.842 0.552 0.243 1.095 0.495 1.632 0.758 0.081 0.029 0.162 0.055 0.243 0.084z","M451.432 278.6c0.018-0.032 0.036-0.064 0.053-0.096 0-0.005-0.001-0.008-0.001-0.011-0.017 0.032-0.034 0.064-0.051 0.096-0.001 0.004-0.001 0.009-0.001 0.011z","M749.257 295.014c1.033-3.625 0.759-3.777 0.433-2.787-0.144 0.851-0.245 1.737-0.416 2.588-0.007 0.066-0.011 0.133-0.017 0.198z","M350.603 452.795c-0.489 0.162 0.023 0.133 2.73-0.551-0.143 0.016-0.287 0.035-0.43 0.056-0.767 0.156-1.536 0.311-2.3 0.495z","M853.035 138.157c-9.463-8.686-24.153-9.37-33.522 0-25.409 25.409-50.818 50.819-76.227 76.227-18.019 18.019-33.399 37.938-38.963 63.511-4.109 18.88-3.981 39.545 2.993 57.769 4.16 10.868 9.355 19.993 16.681 29.028 2.626 3.24 5.6 6.112 8.424 9.17 1.435 1.553 2.803 3.16 4.158 4.78 0.325 0.665 2.217 2.981 2.546 3.462 2.566 3.753 4.898 7.666 6.952 11.722 0.886 1.747 3.236 8.175 0.749 1.188 0.74 2.076 1.594 4.103 2.271 6.205 0.651 2.021 1.225 4.069 1.708 6.135 0.134 0.569 0.453 2.421 0.671 3.592 0.079 0.832 0.153 1.637 0.168 1.987 0.088 1.991-0.016 3.959-0.073 5.946-0.306 1.433-0.747 2.812-1.132 4.223-0.344 0.58-0.992 1.565-1.519 2.379-0.338 0.38-0.671 0.752-0.928 1.027-0.116 0.064-0.233 0.127-0.349 0.19 0.11-0.053 0.21-0.1 0.304-0.142-0.086 0.092-0.165 0.174-0.228 0.235-0.144 0.141-0.265 0.264-0.375 0.376-0.025 0.008-0.047 0.017-0.073 0.024-0.405 0.119-0.807 0.248-1.208 0.375-0.399 0.219-0.799 0.438-1.185 0.668 0.137-0.007 0.268-0.013 0.413-0.020-0.142 0.007-0.283 0.019-0.425 0.027-0.046 0.027-0.095 0.051-0.14 0.079 0.047-0.029 0.086-0.050 0.133-0.079-1.006 0.059-2.007 0.147-3.011 0.214-0.568 0.051-0.968 0.065-0.986 0.051-0.285 0.011-0.571 0.027-0.858 0.028-1.474 0.010-2.949-0.043-4.419-0.149-0.155-0.011-0.402-0.035-0.676-0.064-0.208-0.034-0.385-0.065-0.507-0.088-3.888-0.74-7.712-1.798-11.452-3.092-0.731-0.253-1.457-0.559-2.185-0.862-0.433-0.119-0.979-0.301-1.469-0.527-0.124-0.058-0.245-0.122-0.368-0.18-0.308-0.107-0.615-0.215-0.927-0.301 0.265 0.073 0.494 0.137 0.725 0.202-1.283-0.603-2.559-1.219-3.818-1.872-3.879-2.008-7.644-4.239-11.287-6.649-1.685-1.115-3.308-2.314-4.973-3.457-0.12-0.082-0.228-0.155-0.33-0.225-1.144-0.946-2.301-1.875-3.429-2.841-3.081-2.637-6.024-5.42-8.894-8.281-25.059-24.983-50.041-50.042-75.063-75.063-14.882-14.883-29.765-29.766-44.648-44.648-10.815-10.815-21.274-21.563-33.483-30.883-14.865-11.347-32.68-20.778-51.253-24.033-17.995-3.154-37.952-2.473-53.258 8.79-34.981 25.738-27.108 73.3-7.21 106.116 15.072 24.857 38.641 45.063 59.064 65.485 31.079 31.079 62.159 62.159 93.237 93.237 29.913 29.913 59.826 59.826 89.738 89.738 7.745 7.745 15.491 15.491 23.236 23.236 2.095 2.095 4.204 4.178 6.227 6.342 1.798 1.924 3.543 3.898 5.23 5.92 0.111 0.133 0.222 0.277 0.333 0.42 0.234 0.226 0.504 0.523 0.733 0.844 0.174 0.243 0.342 0.487 0.515 0.731 0.126 0.143 0.252 0.288 0.383 0.415-0.108-0.104-0.196-0.192-0.295-0.289 2.662 3.751 5.236 7.54 7.53 11.536 2.091 3.642 3.579 7.633 5.659 11.25-3.673-6.387-0.219-0.292 0.481 1.774 0.681 2.011 1.294 4.046 1.826 6.1 0.428 1.653 0.759 3.316 1.098 4.983-0.038-0.517-0.078-1.112-0.119-1.806 0.046 0.787 0.154 1.574 0.233 2.361 0.029 0.145 0.059 0.289 0.089 0.434 0.242 1.161 0.198 2.64 0.018 1.344 0.085 2.011 0.037 3.993-0.059 5.985-0.084 0.897-0.23 2.081-0.446 2.887-0.105 0.397-0.407 1.256-0.683 2.041-0.268 0.54-0.526 1.046-0.681 1.304-0.101 0.169-0.21 0.333-0.316 0.498 0.001-0.001 0.003-0.002 0.004-0.003-0.002 0.002-0.004 0.004-0.006 0.005-0.087 0.136-0.171 0.273-0.259 0.407-0.313 0.304-0.773 0.701-1.317 1.087-0.21 0.198-0.413 0.4-0.62 0.601 0.217-0.061 0.443-0.124 0.686-0.191-0.238 0.065-0.472 0.14-0.707 0.212-0.202 0.196-0.413 0.389-0.607 0.589 0.206-0.212 0.383-0.392 0.565-0.576-0.284 0.087-0.57 0.172-0.852 0.264-1.375 0.645-2.726 0.951-2.319 0.741-0.438 0.129-0.88 0.248-1.33 0.351-0.11 0.025-0.454 0.075-0.851 0.135-1.293 0.076-2.584 0.145-3.888 0.132-1.38-0.013-2.758-0.085-4.134-0.196-0.638-0.105-1.329-0.218-1.647-0.282-3.916-0.786-7.765-1.883-11.529-3.216-0.478-0.17-0.952-0.35-1.426-0.528-1.923-1.019-4.075-1.804-5.988-2.796-4.080-2.115-8.032-4.475-11.845-7.041-1.553-1.045-3.062-2.149-4.583-3.237-1.325-1.123-2.683-2.204-3.992-3.348-3.41-2.977-6.611-6.155-9.809-9.353-22.951-22.951-45.903-45.902-68.854-68.854-32.435-32.435-64.871-64.871-97.307-97.307-10.508-10.508-21.018-21.018-31.526-31.526-11.906-11.906-24.227-23.298-38.848-31.926-32.795-19.354-81.138-26.926-105.721 9.115-10.815 15.854-11.277 36.322-7.481 54.472 4.268 20.403 15.346 38.83 28.237 54.892 8.117 10.113 17.797 19.047 26.954 28.206 14.913 14.913 29.828 29.828 44.741 44.741 24.723 24.722 49.499 49.392 74.169 74.168 0.117 0.117 0.233 0.232 0.35 0.35 1.693 1.708 3.355 3.444 4.967 5.228 0.716 0.793 5.206 4.969 5.551 6.371-0.285-1.002-2.695-3.501-0.869-0.946 0.733 1.027 1.487 2.038 2.209 3.072 1.276 1.827 2.507 3.685 3.685 5.578 2.507 4.025 4.785 8.195 6.78 12.497 0.363 0.782 0.683 1.737 1.119 2.496-0.156-0.27-0.291-0.51-0.423-0.742 0.61 1.641 1.182 3.296 1.696 4.969 0.613 1.997 1.157 4.016 1.617 6.054 0.542 2.4 0.852 8.895 0.395 0.771 0.191 3.38 0.574 6.677 0.398 10.076-0.012 0.236-0.038 0.473-0.059 0.71-0.316 1.384-0.623 2.764-1.061 4.122-0.374 0.694-0.779 1.366-1.196 2.033-0.201 0.229-0.4 0.462-0.613 0.675-0.275 0.276-0.564 0.539-0.852 0.801-0.837 0.506-1.681 1.001-2.531 1.485 0.423-0.13 0.903-0.271 1.453-0.425-0.006 0.007-0.011 0.013-0.017 0.020-0.588 0.187-1.178 0.446-1.761 0.639-0.059 0.020-0.12 0.034-0.18 0.053-0.205 0.115-0.403 0.234-0.611 0.347-1.069 0.587-2.131 0.644-1.088 0.155-0.362 0.101-0.723 0.204-1.088 0.296 0.406-0.032-0.662 0.25-1.765 0.402-0.16 0.033-0.319 0.078-0.479 0.109-0.716 0.14-1.459 0.213-2.168 0.372 0.704-0.156 1.309-0.288 1.828-0.397-1.926 0.108-3.859 0.108-5.786 0.015-0.792-0.038-1.582-0.128-2.373-0.161-0.658-0.028-1.005-0.033-1.138-0.024-2.921-0.58-5.9-1.616-8.525-2.468-0.923-0.3-1.838-0.624-2.749-0.957 0.266 0.15 0.557 0.314 0.876 0.497-0.362-0.208-0.741-0.395-1.119-0.582-0.047-0.018-0.097-0.032-0.143-0.050-0.537-0.198-1.091-0.48-1.488-0.708-0.978-0.43-1.964-0.848-2.901-1.328-4.078-2.089-8.007-4.463-11.769-7.078-0.751-0.521-1.486-1.063-2.223-1.601-0.061-0.052-0.117-0.101-0.184-0.158-1.765-1.51-3.529-3.008-5.228-4.596-3.153-2.945-6.157-5.944-9.543-8.629-9.195-7.292-18.572-12.567-29.653-16.582-18.371-6.657-38.933-6.732-57.864-2.642-24.319 5.255-43.954 19.314-61.525 36.171-30.081 28.86-60.162 57.719-90.243 86.58-7.706 7.393-15.411 14.785-23.118 22.179-8.965 8.602-9.3 24.985 0 33.522 9.624 8.835 23.958 9.176 33.522 0 24.822-23.814 49.642-47.627 74.464-71.441 13.285-12.745 26.569-25.491 39.854-38.236 3.199-3.069 6.349-6.218 9.724-9.094 0.258-0.22 1.429-1.113 1.976-1.544 1.472-1.038 2.974-2.036 4.504-2.989 2.838-1.765 5.9-3.104 8.864-4.6-0.432 0.133 0.722-0.663 1.885-1.1 0.174-0.065 0.35-0.122 0.524-0.186 0.261-0.148 0.524-0.29 0.782-0.444-0.26 0.155-0.49 0.288-0.715 0.419 0.848-0.312 1.695-0.621 2.551-0.906 1.676-0.56 3.37-1.071 5.076-1.533 2.114-0.572 4.251-1.067 6.401-1.482 0.594-0.115 1.19-0.215 1.786-0.318 3.948-0.293 7.856-0.512 11.822-0.346 1.908 0.080 3.8 0.335 5.703 0.435-7.907-0.418-1.147-0.136 1.176 0.354 3.529 0.741 6.921 1.812 10.319 2.975-0.17-0.109-0.334-0.212-0.521-0.336 0.253 0.167 0.558 0.314 0.869 0.455 0.25 0.086 0.501 0.168 0.751 0.256 0.77 0.268 1.375 0.643 1.637 0.883 1.71 0.88 3.392 1.814 5.024 2.829 0.521 0.323 1.033 0.691 1.545 1.067 0.109-0.067 0.708 0.202 1.341 0.76 0.339 0.301 0.686 0.595 1.030 0.891 0.257 0.16 0.512 0.328 0.775 0.466-0.227-0.119-0.428-0.229-0.626-0.338 0.413 0.355 0.825 0.71 1.227 1.077 3.67 3.344 7.114 6.883 10.974 10.024 8.366 6.809 17.106 13.090 26.944 17.596 18.991 8.696 39.854 13.415 60.571 8.274 19.723-4.895 34.705-19.334 41.394-38.272 5.868-16.616 3.37-36.626-2.635-52.818-7.646-20.615-19.761-38.908-35.24-54.519-7.035-7.096-14.132-14.132-21.198-21.198-31.257-31.257-62.514-62.514-93.771-93.771-7.278-7.279-14.64-14.483-21.833-21.846-1.673-1.712-3.302-3.466-4.887-5.26-0.723-0.819-4.671-4.317-4.525-5.389 0.605 0.789 1.211 1.579 1.816 2.368-0.463-0.607-0.918-1.218-1.366-1.835-0.744-1.015-1.476-2.039-2.19-3.076-1.4-2.030-2.742-4.099-4.020-6.208-2.119-3.495-4.061-7.099-5.797-10.799-0.237-0.571-0.807-1.889-0.942-2.253-0.749-2.022-1.431-4.070-2.033-6.141-0.579-1.989-1.088-4-1.512-6.028-0.164-0.787-0.286-1.585-0.456-2.371-0.816-3.774 0.326 2.807 0.321 2.795-1.095-3.010-0.606-7.579-0.357-10.819 0.017-0.076 0.031-0.141 0.049-0.224 0.28-1.306 0.621-2.599 1.032-3.869 0.551-1.012 1.198-1.954 1.815-2.917 0.012-0.007 0.020-0.011 0.032-0.019 0.002-0.001 0.005-0.003 0.008-0.004-0.223 0.374-0.421 0.703-0.594 0.986 0.323-0.429 0.695-0.879 1.076-1.261 0.678-0.393 1.36-0.777 2.040-1.161 0.457-0.188 0.875-0.365 1.067-0.422 0.31-0.091 0.623-0.166 0.935-0.242 0.369-0.122 1.303-0.352 2.301-0.495 0.575-0.117 1.148-0.238 1.717-0.387-0.476 0.124-0.904 0.234-1.288 0.331 0.263-0.029 0.524-0.052 0.777-0.063 1.655-0.068 3.313-0.057 4.967 0.024 0.607 0.029 1.213 0.076 1.819 0.124 3.407 0.819 6.821 1.417 10.186 2.478 1.832 0.577 3.628 1.236 5.428 1.9 0.855 0.391 1.711 0.78 2.557 1.193 3.862 1.881 7.611 3.987 11.243 6.279 1.89 1.193 3.748 2.434 5.572 3.723 0.751 0.53 1.486 1.079 2.225 1.624 0.298 0.242 0.598 0.48 0.893 0.725 7.816 6.445 14.824 13.913 21.981 21.070 27.764 27.764 55.527 55.527 83.292 83.291 30.376 30.376 60.752 60.752 91.127 91.127 6.911 6.91 13.813 13.829 20.731 20.731 22.557 22.506 52.712 40.895 85.367 41.864 19.141 0.568 38.021-6.832 49.849-22.143 12.315-15.94 14.089-35.769 10.742-55.069-4.741-27.33-21.686-51.995-40.944-71.252-19.733-19.734-39.467-39.467-59.2-59.2-33.128-33.128-66.256-66.256-99.384-99.384-24.995-24.995-49.991-49.991-74.986-74.986-2.569-2.57-5.14-5.141-7.71-7.71-0.481-0.481-0.963-0.959-1.442-1.441-1.166-1.177-2.325-2.361-3.457-3.572-1.442-1.543-2.849-3.118-4.22-4.724-0.802-0.94-1.566-1.911-2.364-2.853-0.053-0.072-0.103-0.141-0.161-0.22-2.773-3.783-5.349-7.711-7.685-11.78-0.944-1.645-1.851-3.313-2.714-5.003-0.528-1.034-1.038-2.076-1.533-3.126-0.032-0.069-0.082-0.176-0.139-0.297 0.147 0.167-1.444-3.682-1.755-4.597-0.681-2.011-1.294-4.046-1.825-6.101-0.411-1.585-0.774-3.182-1.084-4.79-0.028-0.148-0.070-0.395-0.116-0.674-0.051-0.494-0.096-0.934-0.11-1.15-0.035-0.522 0.009-5.102 0.085-7.818 0.088-0.424 0.178-0.847 0.284-1.267 0.304-1.198 1.041-2.775 1.422-3.54-0.257 0.484-0.747 1.391-1.571 2.87 0.013 0.142-0.031 0.507-0.102 0.968 0.016-0.401 0.032-0.704 0.049-0.872-0.031 0.057-0.060 0.108-0.093 0.166 0.033-0.059 0.062-0.119 0.094-0.177 0.009-0.091 0.020-0.153 0.029-0.15 0.011 0.003 0.017 0.024 0.021 0.054 0.558-1.042 1.028-2.132 1.637-3.152 0.092-0.154 0.197-0.301 0.297-0.45 0.533-0.521 1.062-1.045 1.595-1.564 0.287-0.182 0.581-0.357 0.876-0.529 1.232-0.36 3.264-1.194 3.816-1.326 0.283-0.068 0.569-0.126 0.854-0.184 1.457-0.092 2.907-0.21 4.38-0.195 1.257 0.012 2.507 0.1 3.757 0.188-0.291-0.074-0.593-0.152-0.928-0.243 0.485 0.13 1.008 0.208 1.527 0.283 0.239 0.017 0.478 0.034 0.718 0.049 1.014 0.064 1.969 0.367 2.058 0.499 3.45 0.759 6.85 1.74 10.178 2.92 0.763 0.27 1.516 0.57 2.278 0.844 1.513 0.698 3.024 1.397 4.51 2.156 4.302 2.197 8.463 4.67 12.47 7.365 1.66 1.117 3.271 2.297 4.889 3.472 0.034 0.029 0.062 0.054 0.098 0.084 0.789 0.68 1.607 1.326 2.399 2.001 2.846 2.426 5.576 4.98 8.231 7.613 7.567 7.504 15.072 15.072 22.607 22.607 31.237 31.237 62.474 62.474 93.711 93.712 7.689 7.688 15.21 15.605 23.151 23.036 28.55 26.72 72.313 49.463 111.186 31.967 17.602-7.923 28.009-26.152 30.492-44.632 2.69-20.019-3.045-40.045-12.566-57.6-5.189-9.567-11.92-18.467-19.24-26.496-2.671-2.93-5.421-6.438-8.347-9.182-0.21-0.304-0.422-0.607-0.626-0.916-1.383-2.109-2.651-4.294-3.796-6.539-0.173-0.338-0.336-0.68-0.498-1.022-0.521-1.651-1.301-3.306-1.799-4.938-0.551-1.803-1.029-3.627-1.44-5.466-0.187-0.835-0.352-1.674-0.511-2.514 0 0.23-0.001 0.471-0.003 0.73 0.002-0.264-0.006-0.528-0.009-0.792-0.032-0.17-0.072-0.338-0.103-0.509-0.21-1.161-0.139-2.744-0.043-2.801-0.165-2.441-0.39-4.888-0.315-7.348 0.047-1.536 0.15-3.069 0.282-4.6-0.058 0.202-0.112 0.393-0.177 0.618 0.078-0.265 0.138-0.539 0.193-0.815 0.029-0.328 0.049-0.656 0.082-0.983 0.062-0.619 0.202-1.202 0.336-1.605 0.026-0.15 0.046-0.302 0.077-0.448 0.783-3.883 1.836-7.712 3.136-11.454 0.268-0.771 0.568-1.531 0.839-2.301 0.887-1.888 1.782-3.763 2.785-5.598 1.74-3.186 3.697-6.22 5.77-9.189 0.72-0.513 1.554-1.982 2.086-2.592 1.422-1.631 2.906-3.202 4.426-4.742 3.070-3.111 6.182-6.182 9.273-9.273 15.442-15.442 30.884-30.884 46.326-46.326 9.542-9.542 19.084-19.084 28.626-28.626 8.782-8.786 9.436-24.869 0.003-33.529zM736.948 379.081c0.169 0.203 0.341 0.403 0.511 0.607 2.188 2.638 0.374 0.533-0.511-0.607zM478.686 754.063c1.12 0.134 3.12 0.316 3.157 0.316-1.026-0.013-2.086-0.13-3.157-0.316zM346.606 454.002c0.003-0.004 0.006-0.009 0.008-0.012-0.003 0.004-0.005 0.008-0.008 0.012 0 0 0 0 0 0zM704.867 681.158c-0.007 0.006-0.028 0.012-0.030 0.018 0.002-0.007 0.013-0.012 0.030-0.018zM716.225 670.771c-0.043 0.878-0.087 1.759-0.128 2.647 0 0 0 0.001-0.001 0.001 0.051-1.139 0.094-2.006 0.129-2.648zM716.093 673.509c0 0 0-0.001 0-0.001-0.001 0.031-0.003 0.062-0.005 0.093 0.002-0.032 0.003-0.061 0.005-0.092zM716.248 670.358c0.103-1.815 0.111-1.216 0 0v0zM762.723 262.629c0.167-0.236 0.328-0.474 0.496-0.709 1.746-2.444 0.408-0.481-0.496 0.709z","M749.449 310.336c0.005-2.575-0.084-3.415-0.158-3.372 0.074 1.104 0.131 2.206 0.146 3.31 0.004 0.020 0.009 0.041 0.012 0.062z","M469.294 271.318c-0.199-0.013-0.398-0.027-0.597-0.041 2.639 0.673 3.466 0.722 3.374 0.588-0.648-0.142-1.293-0.291-1.945-0.416-0.265-0.051-0.551-0.090-0.832-0.131z","M711.18 679.504c-1.536 0.447-2.278 0.714-2.499 0.828 0.78-0.23 1.547-0.49 2.319-0.741 0.061-0.028 0.12-0.058 0.18-0.087z","M495.392 720.833c-0.070-0.19-0.135-0.381-0.206-0.571-0.66-1.745-2.214-3.714 0.206 0.571z","M712.371 678.807c-0.199 0.137-0.405 0.27-0.618 0.394-0.186 0.108-0.378 0.209-0.573 0.303 0.216-0.063 0.446-0.129 0.694-0.199 0.177-0.18 0.341-0.345 0.497-0.499z","M744.856 428.238c0.002 0 0.005 0 0.008 0 0.004-0.002 0.009-0.005 0.012-0.007-0.003 0-0.006 0-0.009 0-0.003 0.002-0.007 0.005-0.011 0.007z","M747.64 426.694c-0.434 0.209-0.994 0.505-1.693 0.905 0.038-0.012 0.077-0.024 0.115-0.036 0.528-0.289 1.051-0.582 1.579-0.869z","M453.056 275.634c0.355-0.669 0.265-0.535 0 0v0z","M345.485 455.88c-1.104 1.466-1.632 2.675 0 0v0z","M745.947 427.598c-0.494 0.156-0.988 0.31-1.49 0.44-0.49 0.128-1.054 0.226-1.59 0.299 0.536-0.032 1.202-0.067 2.001-0.106 0.395-0.236 0.751-0.444 1.080-0.632z","M714.113 677.199c0 0 0.001-0.001 0.001-0.002-0.247 0.181-0.797 0.67-1.743 1.61 0.056-0.038 0.111-0.076 0.165-0.115 0.53-0.499 1.055-0.997 1.577-1.493z","M716.189 662.703c-0.038-0.186-0.077-0.37-0.114-0.555 0.085 1.162 0.161 1.902 0.221 2.333-0.018-0.424-0.022-0.844-0.055-1.271-0.012-0.17-0.035-0.339-0.052-0.508z","M742.866 428.337c-1.492 0.088-2.031 0.149-2.008 0.166 0.329-0.013 0.658-0.029 0.986-0.051 0.304-0.027 0.655-0.065 1.022-0.115z","M711.853 679.327c0.014-0.004 0.027-0.009 0.042-0.012 0.008-0.008 0.015-0.014 0.022-0.022-0.014 0.004-0.027 0.009-0.042 0.012-0.007 0.007-0.014 0.014-0.022 0.022z","M720.762 424.276c1.107 0.302 1.427 0.169-2.038-0.806 0.067 0.032 0.134 0.067 0.201 0.099 0.615 0.214 1.228 0.454 1.837 0.707z","M698.144 624.804c-0.727-0.701-1.076-0.669 1.338 1.701-0.029-0.042-0.059-0.084-0.089-0.126-0.432-0.493-0.842-1.051-1.249-1.575z"],"grid":0,"tags":["electric-component"],"defaultCode":59670},{"paths":["M602.246 763.488h-185.675v-441.686h-60.793v434.652h-61.288v-495.941h183.371v441.686h63.097v-441.686h188.553v498.244h-61.288v-436.955h-65.977z"],"grid":0,"tags":["electric-wire"],"defaultCode":59671},{"paths":["M777.678 222.626c-10.582-0.613-20.983 0.466-31.037 3.21-5.092-16.959-14.85-32.43-28.129-44.36-16.253-14.603-37.24-23.343-59.096-24.609-27.149-1.561-53.319 8.252-72.603 26.737-6.304-12.358-15.215-23.239-26.271-31.983-15.638-12.368-34.459-19.516-54.427-20.673-40.198-2.326-77.095 20.289-93.575 56.072-12.505-6.829-26.406-10.819-40.797-11.653-42.933-2.485-82.057 23.697-96.565 63.331-5.771-1.422-11.676-2.313-17.65-2.66-53.313-3.11-99.227 37.784-102.316 91.111-1.496 25.832 7.157 50.703 24.365 70.027s40.912 30.792 66.746 32.288c1.886 0.109 3.758 0.163 5.629 0.163 12.295-0.001 24.189-2.352 35.194-6.661 13.679 9.774 30.415 15.532 48.471 15.532 11.194 0 22.351-2.281 32.631-6.639 14.994 12.515 33.731 19.337 53.443 19.337 10.976 0 21.462-2.131 31.072-5.995 0.601 12.119 0.998 24.482 1.189 37.064-26.827 3.584-51.306 9.458-71.713 17.351-40.735 15.757-56.822 36.087-62.104 53.842-1.368 1.634-2.199 3.734-2.212 6.030-0.009 1.543 0.048 3.133 0.183 4.763-0.135 1.631-0.192 3.221-0.183 4.763 0.013 2.296 0.843 4.398 2.212 6.030 5.282 17.754 21.368 38.084 62.104 53.841 18.225 7.049 39.699 12.487 63.19 16.123-2.162 18.319-4.711 36.443-7.634 54.216-4.266-0.652-8.608-1.004-12.998-1.004-38.136 0-70.009 25.036-77.059 58.11-10.457-4.58-21.901-6.958-33.755-6.958-43.291 0-78.512 32.264-78.512 71.921s35.22 71.922 78.512 71.922c21.116 0 40.781-7.524 55.407-20.931 14.629 13.41 34.292 20.931 55.408 20.931 24.721 0 47.656-10.583 62.371-28.225 14.332 11.895 32.948 18.548 52.632 18.548 13.925 0 27.405-3.328 39.334-9.671 11.929 6.343 25.409 9.671 39.333 9.671 18.923 0 37.286-6.354 51.49-17.635 12.54 7.312 26.91 11.145 41.994 11.145 43.291 0 78.511-32.264 78.511-71.921s-35.22-71.922-78.511-71.922c-10.478 0-20.814 1.917-30.394 5.598-5.44-10.687-13.755-20.144-24.097-27.261-13.669-9.407-29.96-14.379-47.109-14.379-5.592 0-11.076 0.549-16.388 1.584-2.873-17.511-5.382-35.364-7.516-53.405 22.354-3.376 42.831-8.415 60.346-14.965 46.11-17.241 60.976-40.644 64.302-59.75 0.513-1.176 0.8-2.473 0.792-3.838-0.005-0.833-0.030-1.681-0.076-2.54 0.045-0.859 0.071-1.708 0.076-2.54 0.008-1.365-0.279-2.662-0.792-3.838-3.326-19.106-18.192-42.509-64.302-59.75-19.732-7.378-43.208-12.844-68.903-16.168 0.218-14.105 0.695-27.931 1.429-41.45 7.723 2.362 15.915 3.637 24.401 3.637 17.161 0 33.888-5.312 47.863-15.082 13.976 9.772 30.703 15.082 47.864 15.082 24.972 0 47.418-11.015 62.743-28.437 1.422 0.147 2.849 0.265 4.28 0.348 25.833 1.498 50.703-7.156 70.026-24.366 19.325-17.208 30.793-40.912 32.289-66.746 3.089-53.326-37.784-99.225-91.111-102.315zM421.691 432.233c-16.968 0-33.002-6.54-45.149-18.419-1.815-1.774-4.208-2.702-6.631-2.702-1.496 0-3.005 0.354-4.394 1.081-9.307 4.872-19.368 7.342-29.901 7.342-10.414 0-20.251-2.492-28.972-6.887 16.304-11.162 29.189-27.242 36.243-46.514 5.771 1.422 11.677 2.313 17.65 2.66 1.899 0.11 3.784 0.164 5.667 0.164 29.141-0.002 56.083-13.062 74.137-34.549 5.191 27.948 8.948 58.264 11.208 90.483-8.937 4.679-19.090 7.342-29.858 7.342zM610.351 716.128c26.382 0 49.911 15.748 57.218 38.297 0.868 2.679 2.88 4.834 5.495 5.879 2.611 1.047 5.555 0.877 8.035-0.461 9.285-5.019 19.955-7.673 30.853-7.673 32.835 0 59.548 23.758 59.548 52.959s-26.713 52.958-59.548 52.958c-13.728 0-26.638-4.058-37.334-11.735-3.737-2.682-8.858-2.295-12.15 0.916-11.276 11-27.313 17.309-44 17.309-12.351 0-24.207-3.349-34.288-9.685-3.083-1.939-7.008-1.939-10.091 0-10.081 6.336-21.937 9.685-34.289 9.685-18.395 0-35.483-7.415-46.877-20.342-2.012-2.282-4.998-3.451-8.023-3.169-3.026 0.292-5.731 2.019-7.269 4.642-10.323 17.607-30.567 28.545-52.833 28.545-18.907 0-36.883-8.127-48.086-21.74-1.801-2.189-4.487-3.457-7.322-3.457s-5.52 1.269-7.322 3.457c-11.201 13.613-29.176 21.74-48.085 21.74-32.835 0-59.549-23.758-59.549-52.959s26.714-52.958 59.549-52.958c13.319 0 25.919 3.838 36.44 11.098 2.935 2.026 6.762 2.232 9.901 0.533s5.056-5.018 4.963-8.585l-0.021-0.634c-0.008-0.202-0.018-0.403-0.018-0.607 0-29.202 26.714-52.959 59.549-52.959 30.923 0 56.993 21.463 59.352 48.863 0.301 3.501 2.514 6.549 5.75 7.919 3.241 1.37 6.966 0.836 9.689-1.383 11.009-8.979 25.29-13.924 40.212-13.924 1.307 0 2.717 0.053 4.44 0.165 4.194 0.274 8.066-2.243 9.517-6.187 8.037-21.836 30.781-36.508 56.596-36.508zM456.189 704.211c3.087-18.582 5.772-37.548 8.039-56.722 16.102 1.764 32.942 2.722 50.171 2.82 0.972 0.006 1.935 0.009 2.904 0.009 17.303 0 34.198-0.879 50.336-2.574 2.273 19.201 4.966 38.192 8.063 56.798-16.193 7.291-29.434 19.596-37.021 35.162-13.699 0.178-26.992 3.615-38.644 9.887-4.004-12.355-11.599-23.559-22.169-32.448-6.464-5.439-13.797-9.78-21.68-12.931zM640.153 515.886c23.166 8.661 50.646 24.001 52.65 48.366-2.003 24.366-29.485 39.705-52.65 48.366-12.078 4.516-25.71 8.27-40.489 11.201-24.839 4.928-52.92 7.536-82.34 7.536-0.937 0-1.876-0.003-2.818-0.009-28.564-0.161-55.904-2.761-80.293-7.52-16.593-3.238-31.819-7.475-45.134-12.626-22.427-8.676-48.868-23.707-51.903-46.949 3.035-23.242 29.475-38.274 51.903-46.949 18.474-7.146 40.628-12.535 65.006-15.935 0 0.289 0.002 0.576 0.001 0.865-0.002 0.968-0.011 1.94-0.016 2.91-9.119 1.681-17.593 3.734-25.172 6.15-19.969 6.364-43.741 18.585-43.588 40.666 0.003 0.418 0.042 0.826 0.098 1.229-0.055 0.403-0.095 0.812-0.098 1.229-0.059 8.439 3.612 20.694 21.428 31.146 10.396 6.098 24.887 11.063 42.077 14.628 19.142 3.97 41.634 6.204 65.57 6.325 0.688 0.004 1.374 0.006 2.058 0.006 24.547 0 47.55-2.241 66.934-6.331 15.815-3.337 29.222-7.903 39.068-13.497 18.123-10.296 21.996-22.561 22.056-31.037 0.006-0.854-0.112-1.679-0.319-2.468 0.207-0.789 0.324-1.614 0.319-2.468-0.172-24.695-29.656-38.893-66.736-45.729-0.004-0.919-0.013-1.839-0.015-2.756-0.001-0.393 0.002-0.782 0.002-1.175 23.319 3.151 44.558 8.155 62.401 14.826zM453.824 524.52c-0.396 18.867-1.243 37.894-2.518 56.912-14.045-2.995-26.181-7.071-34.971-12.227-8.037-4.714-12.096-9.646-12.060-14.657 0.003-0.463-0.038-0.915-0.099-1.361 0.061-0.446 0.102-0.898 0.099-1.361-0.057-8.107 11.017-16.296 30.383-22.466 5.759-1.836 12.216-3.45 19.166-4.839zM561.755 584.745c-28.861 3.87-62.593 3.824-91.665-0.089 1.895-27.602 2.904-55.232 2.961-82.383 0.147-70.102-5.876-134.266-17.57-188.829 12.148 6.383 25.557 10.126 39.429 10.931 27.156 1.573 53.32-8.252 72.603-26.736 2.606 5.107 5.662 9.956 9.125 14.512-11.878 54.841-17.998 119.466-17.85 190.123 0.057 27.179 1.069 54.84 2.968 82.471zM578.013 524.431c5.796 1.169 11.229 2.503 16.17 4 19.871 6.021 31.3 14.192 31.356 22.419 0.006 0.809 0.123 1.588 0.319 2.336-0.195 0.748-0.313 1.528-0.319 2.336-0.035 5.064-4.227 10.004-12.461 14.681-8.337 4.737-19.575 8.5-32.541 11.301-1.28-19.072-2.128-38.153-2.524-57.074zM699.449 425.18c-15.266 0-30.087-5.437-41.735-15.31-1.768-1.499-3.949-2.249-6.131-2.249s-4.362 0.75-6.131 2.249c-11.647 9.873-26.469 15.31-41.734 15.31-8.154 0-15.952-1.534-23.141-4.303 2.45-32.938 6.475-63.851 12.010-92.226 0.397 0.324 0.791 0.652 1.194 0.97 15.638 12.367 34.459 19.516 54.427 20.672 10.586 0.613 20.983-0.466 31.036-3.21 5.092 16.959 14.85 32.43 28.129 44.361 9.534 8.566 20.703 15.095 32.714 19.301-11.106 9.017-25.248 14.435-40.638 14.435zM849.856 323.847c-1.204 20.776-10.426 39.84-25.969 53.68-15.541 13.841-35.538 20.814-56.319 19.595-36.128-2.093-65.813-28.397-72.187-63.968-0.502-2.802-2.236-5.231-4.724-6.614s-5.465-1.574-8.111-0.525c-10.594 4.212-21.773 6.012-33.24 5.347-32.027-1.856-60.069-23.644-69.775-54.218-1.075-3.384-3.951-5.885-7.452-6.479-3.502-0.596-7.041 0.819-9.171 3.661-15.74 20.999-40.732 32.632-66.902 31.115-14.839-0.86-29.025-5.889-41.023-14.545-2.466-1.779-5.636-2.268-8.523-1.314s-5.141 3.236-6.062 6.135c-10.774 33.941-43.161 56.23-78.766 54.143-7.475-0.432-14.816-1.925-21.818-4.434-2.514-0.9-5.294-0.699-7.653 0.556s-4.079 3.447-4.736 6.037c-9.155 36.062-42.8 60.677-80.009 58.513-20.776-1.203-39.84-10.425-53.679-25.968s-20.8-35.543-19.595-56.32c2.395-41.365 36.811-73.408 77.733-73.408 1.508 0 3.031 0.045 4.555 0.133 7.476 0.432 14.817 1.925 21.818 4.434 2.515 0.899 5.294 0.699 7.653-0.556s4.079-3.447 4.736-6.037c9.156-36.060 42.807-60.669 80.009-58.513 14.839 0.859 29.024 5.888 41.022 14.545 2.466 1.78 5.637 2.268 8.523 1.314 2.888-0.955 5.142-3.236 6.062-6.135 10.774-33.94 43.149-56.221 78.766-54.143 32.027 1.856 60.069 23.645 69.775 54.219 1.075 3.384 3.951 5.885 7.452 6.479 3.506 0.594 7.042-0.82 9.171-3.662 15.74-20.999 40.747-32.634 66.902-31.115 36.128 2.093 65.812 28.397 72.186 63.967 0.502 2.802 2.236 5.231 4.724 6.614s5.466 1.575 8.11 0.525c10.597-4.212 21.781-6.009 33.242-5.347 42.889 2.485 75.76 39.398 73.275 82.289z","M507.099 394.427c-0.385 37.98-0.77 75.96-1.155 113.94-0.056 5.485-0.111 10.971-0.167 16.456-0.124 12.206 18.839 12.215 18.963 0 0.385-37.98 0.77-75.96 1.155-113.94 0.056-5.485 0.111-10.971 0.167-16.456 0.123-12.206-18.84-12.216-18.963 0z"],"grid":0,"tags":["explosion"],"defaultCode":59672},{"paths":["M286.788 337.413c-60.637 40.058-114.038 90.467-162.237 144.619-6.824 7.667-13.542 15.425-20.179 23.254 0.009-0.004 0.018-0.008 0.027-0.011-0.011 0.011-0.022 0.024-0.033 0.035 0-0.006 0-0.011 0-0.017-0.002 0.002-0.004 0.005-0.007 0.008-0.037 0.042-0.069 0.086-0.105 0.129-1.052 1.183-1.775 2.638-2.13 4.203-0.705 2.97-0.045 6.119 1.737 8.426 0.157 0.216 0.321 0.428 0.498 0.635 0.002 0.002 0.004 0.005 0.007 0.008 0-0.016 0-0.031 0-0.047 0.026 0.028 0.052 0.056 0.079 0.084-0.024-0.009-0.048-0.020-0.072-0.029 48.344 57.018 101.643 110.412 162.485 154.127 48.556 34.888 102.656 63.397 160.86 78.122 52.77 13.35 107.869 14.548 161.109 3.16 56.522-12.091 109.543-37.89 157.029-70.434 58.036-39.775 108.97-89.25 154.817-142.403 6.421-7.445 12.741-14.975 18.983-22.571 0 0 0 0-0.001 0 0.002-0.003 0.005-0.005 0.008-0.008s0.004-0.005 0.006-0.008c0.021-0.026 0.039-0.051 0.059-0.077 1.973-2.185 2.796-5.32 2.267-8.352-0.285-1.837-1.060-3.554-2.277-4.905-0.017-0.020-0.031-0.041-0.048-0.061-0.002-0.003-0.004-0.005-0.006-0.008s-0.006-0.006-0.008-0.009c0 0 0.001 0 0.001 0.001-45.85-55.798-96.536-108.032-154.586-151.239-47.165-35.104-99.847-63.909-156.794-79.438-52.479-14.31-107.484-16.363-160.871-5.977-57.601 11.206-111.861 36.573-160.616 68.782zM585.554 288.545c55.825 12.24 107.518 38.042 154.226 70.555 57.148 39.781 107.050 89.532 152.089 142.396 2.966 3.482 5.91 6.983 8.836 10.498-3.117 3.744-6.249 7.476-9.411 11.182-6.056 7.098-12.197 14.124-18.429 21.067-12.331 13.739-25.012 27.164-38.096 40.189-23.99 23.883-49.311 46.583-76.362 66.964-46.336 34.91-97.833 63.867-153.995 79.382-50.061 13.83-102.907 16.11-153.755 5.948-56.948-11.382-109.909-36.706-157.919-68.928-59.825-40.154-112.22-90.799-159.666-144.77-3.213-3.656-6.404-7.332-9.574-11.025 3.374-3.929 6.764-7.842 10.186-11.73 6.425-7.298 12.938-14.518 19.545-21.652 13.028-14.066 26.416-27.801 40.219-41.109 25.164-24.262 51.679-47.222 79.959-67.794 47.778-34.756 100.674-63.347 158.159-78.091 50.347-12.914 103.305-14.193 153.991-3.081z","M353.767 383.126c-26.36 32.231-42.268 71.633-45.385 113.185-3.078 41.027 6.891 82.863 28.148 118.090 20.737 34.365 51.946 62.54 88.553 79.104 38.773 17.545 82.133 22.516 123.885 14.156 80.723-16.163 145.715-83.918 158.040-165.389 1.574-10.403 2.465-20.857 2.5-31.381-0.141-41.307-12.827-82.324-36.903-115.986-23.806-33.284-57.005-58.717-95.434-72.833-78.629-28.882-170.408-3.747-223.405 61.054zM561.548 336.873c-14.589 40.082-29.177 80.164-43.766 120.245 0-33.447 0-66.893 0-100.34 0-9.19 0-18.381 0-27.572 9.139 0.431 18.3 1.568 27.406 3.456 5.55 1.151 11.006 2.563 16.359 4.211zM660.852 411.867c-36.908 21.309-73.816 42.617-110.724 63.926 21.498-25.622 42.998-51.243 64.497-76.864 5.874-7 11.749-14 17.622-21.001 10.84 10.113 20.457 21.513 28.605 33.94zM690.546 510.891c-0.026 7.474-0.509 14.904-1.426 22.255-42.072-7.418-84.144-14.837-126.217-22.255 32.939-5.807 65.876-11.616 98.815-17.424 9.18-1.618 18.361-3.238 27.541-4.856 0.893 7.389 1.262 14.846 1.288 22.281zM632.521 644.18c-27.464-32.731-54.928-65.461-82.392-98.192 28.965 16.723 57.931 33.447 86.896 50.169 8.038 4.641 16.076 9.281 24.113 13.922-1.465 2.268-2.977 4.51-4.546 6.72-7.031 9.898-15.131 19.080-24.071 27.382zM455.111 684.751c14.569-40.029 29.138-80.059 43.709-120.088 0 33.447 0 66.893 0 100.34 0 9.154 0 18.309 0 27.464-13.602-0.718-27.144-2.942-40.338-6.715-1.128-0.322-2.251-0.656-3.371-1.001zM367.964 626.205c-4.357-5.257-8.363-10.738-12.027-16.398 36.845-21.273 73.691-42.545 110.537-63.818-21.499 25.622-42.999 51.243-64.497 76.864-5.833 6.952-11.666 13.904-17.499 20.855-5.861-5.46-11.38-11.307-16.514-17.503zM328.399 488.797c41.767 7.364 83.534 14.729 125.3 22.094-32.939 5.807-65.876 11.616-98.815 17.424-8.825 1.556-17.651 3.112-26.476 4.669-1.75-14.652-1.761-29.507-0.009-44.187zM384.546 378.157c27.31 32.546 54.618 65.091 81.928 97.637-28.966-16.723-57.931-33.447-86.897-50.169-7.857-4.537-15.715-9.073-23.572-13.61 8.146-12.545 17.768-23.881 28.541-33.858zM399.109 366.010c11.852-8.889 24.737-16.316 38.316-22.128 14.525 39.908 29.050 79.815 43.575 119.723-21.499-25.622-42.999-51.243-64.497-76.864-5.798-6.91-11.596-13.82-17.394-20.73zM456.992 492.216c-32.939-5.808-65.876-11.616-98.815-17.424-8.855-1.562-17.709-3.122-26.563-4.684 3.234-14.346 8.205-28.355 14.933-41.658 36.815 21.256 73.629 42.511 110.445 63.766zM456.992 529.565c-28.966 16.723-57.931 33.447-86.897 50.17-7.863 4.54-15.726 9.079-23.589 13.619-6.685-13.273-11.657-27.292-14.894-41.682 41.792-7.369 83.586-14.738 125.379-22.108zM481 558.178c-11.439 31.429-22.879 62.859-34.318 94.289-3.123 8.582-6.246 17.163-9.371 25.744-13.643-5.846-26.506-13.359-38.317-22.303 27.335-32.576 54.67-65.153 82.005-97.729zM517.783 564.663c11.439 31.429 22.879 62.858 34.318 94.289 3.153 8.663 6.306 17.326 9.459 25.989-14.264 4.277-28.977 6.805-43.777 7.55 0-42.61 0-85.219 0-127.827zM535.602 558.178c21.498 25.622 42.998 51.243 64.497 76.864 5.959 7.102 11.918 14.204 17.878 21.306-11.901 8.954-24.889 16.457-38.563 22.201-14.605-40.124-29.209-80.247-43.812-120.371zM559.609 529.565c32.939 5.808 65.876 11.616 98.815 17.424 9.127 1.609 18.254 3.219 27.38 4.828-3.351 14.491-8.452 28.531-15.211 41.825-36.994-21.359-73.989-42.718-110.984-64.077zM559.609 492.216c28.965-16.723 57.931-33.447 86.896-50.17 7.972-4.602 15.943-9.205 23.915-13.807 6.776 13.099 12.015 27.086 15.474 41.709-42.095 7.423-84.19 14.846-126.285 22.268zM535.602 463.605c11.439-31.429 22.879-62.858 34.318-94.289 3.143-8.638 6.287-17.274 9.431-25.912 13.739 5.877 26.615 13.401 38.386 22.315-27.379 32.629-54.757 65.257-82.135 97.886zM498.82 457.118c-11.439-31.429-22.879-62.858-34.318-94.289-3.097-8.507-6.192-17.013-9.288-25.519 14.104-4.398 28.753-7.11 43.606-7.988 0 42.599 0 85.198 0 127.796z"],"grid":0,"tags":["eye"],"defaultCode":59673},{"paths":["M799.099 454.181c-13.029-23.908-36.792-39.481-60.554-51.317-22.442-11.178-48.65-24.533-58.145-49.601-10.752-28.389 7.389-58.131 26.116-78.456 6.508-7.063 0.079-17.93-9.225-15.847-23.467 5.255-50.333 0.314-67.888-16.931-20.667-20.302-24.623-56.583-10.206-81.312 2.999-5.145 0.325-12.491-5.666-13.928-34.671-8.319-70.999 4.804-95.281 30.294-11.54 12.114-19.584 26.367-24.836 42.188-4.004 12.062-6.987 24.436-10.213 36.721-3.209 12.222-6.596 24.44-11.346 36.168-1.364 3.368-4.706 10.198-7.429 14.656-3.328 5.448-5.158 7.915-9.624 12.341-4.306 4.268-6.974 6.247-12.719 9.212-4.64 2.395-10.427 4.14-16.727 5.259-5.275 0.938-12.649 1.113-18.806 0.67-0.887-0.064-1.77-0.159-2.654-0.25-0.001 0-0.002 0-0.003-0.001-0.429-0.081-0.862-0.142-1.29-0.221-2.055-0.379-4.087-0.879-6.076-1.52-0.508-0.164-3.057-1.188-2.55-0.924-0.787-0.364-1.569-0.741-2.333-1.152-1.026-0.554-2.029-1.151-3.004-1.79-0.398-0.261-0.782-0.543-1.179-0.804-0.11-0.072-0.203-0.132-0.279-0.18-0.040-0.034-0.072-0.062-0.12-0.102-2.2-1.842-4.171-3.854-6.048-6.021-0.070-0.082-0.212-0.257-0.336-0.411-0.426-0.572-0.844-1.151-1.246-1.739-0.853-1.251-1.653-2.537-2.407-3.849-8.301-14.428-11.075-33.23-12.334-50.535-0.576-7.906-10.099-12.873-16.186-6.704-24.933 25.268-39.718 61.786-44.925 96.557-2.417 16.139-1.98 32.269 3.287 47.899 6.077 18.035 17.378 33.198 29.925 47.254 22.521 25.225 52.761 51.037 48.465 88.577-0.859 7.508-3.79 15.463-8.616 21.623-4.392 5.605-11.563 11.072-17.164 13.472-2.545 1.090-6.734 2.205-8.555 2.455-0.155 0.021-2.962 0.197-4.093 0.192-0.807-0.003-1.612-0.028-2.416-0.082-0.226-0.015-2.077-0.256-1.797-0.191-6.925-1.185-11.478-3.443-17.454-7.665-13.669-9.657-24.176-27.032-30.455-43.085-8.235-21.053-11.72-43.563-10.244-66.112 0.609-9.295-13.48-13.046-17.669-4.785-7.496 14.78-13.771 30.284-19.631 45.766-12.274 32.427-21.973 66.095-26.808 100.476-3.054 21.715-4.397 43.623-2.263 65.495 3.065 29.982 8.038 59.968 20.333 87.69 11.283 25.441 29.767 46.763 53.415 61.457 27.826 17.29 60.434 24.665 92.235 30.738 34.982 6.68 70.954 12.132 106.65 11.924 56.050-0.326 118.628-7.514 164.097-43.479 23.981-18.968 38.879-45.731 45.712-75.233 1.869-8.067 2.795-16.505 5.504-24.35 0.026-0.074 0.043-0.126 0.064-0.189 0.021-0.042 0.040-0.078 0.066-0.134 0.302-0.631 0.604-1.261 0.928-1.881 0.543-1.038 1.13-2.053 1.747-3.048 1.953-3.15 2.478-3.832 4.802-6.464 4.453-5.041 8.625-8.663 13.9-11.97 5.703-3.575 10.219-5.614 17.022-6.835 4.251-0.763 10.316-0.316 14.978 1.774 5.742 2.573 10.847 7.837 14.599 13.505 4.383 6.622 15.115 5.935 17.33-2.265 4.357-16.133 4.938-34.087-0.509-50.029-9.119-26.691-32.65-42.89-58.798-50.806-15.688-4.748-32.157-5.766-45.668-15.991-4.146-3.138-7.762-7.236-10.419-11.957-1.647-2.926-1.683-2.959-2.682-6.144-0.407-1.298-0.752-2.614-1.038-3.943-0.115-0.531-0.209-1.067-0.304-1.601-0.026-0.266-0.214-1.586-0.222-1.701-0.184-2.754-0.175-5.472 0.027-8.225 0.029-0.397 0.081-0.799 0.127-1.2 0.060-0.256 0.302-1.72 0.32-1.808 0.342-1.543 0.677-3.081 1.114-4.601 0.4-1.391 0.878-2.75 1.355-4.115 0.603-1.725 0.18-0.685 1.139-2.707 1.446-3.050 3.137-5.985 5.030-8.779 1.655-2.442 2.741-3.85 5.070-6.367 2.524-2.729 4.081-4.024 6.61-5.55 4.74-2.862 9.36-4.050 14.534-4.232 7.417-0.262 13.002 1.016 20.472 3.799 6.567 2.445 14.342 7.026 20.434 11.764 12.956 10.075 23.828 23.849 29.681 39.267 2.041 5.377 8.384 9.309 13.928 5.666 15.080-9.909 19.342-30.624 20.745-47.357 1.893-22.565-2.451-46.438-13.32-66.381zM724.389 490.38c-14.239-3.407-30.061-2.567-42.576 5.68-12.366 8.149-21.334 21.877-25.966 35.776-4.206 12.621-4.336 26.901 0.674 39.304 5.787 14.327 17.23 25.37 31.131 31.928 16.484 7.777 35.065 8.53 51.607 15.973 6.008 2.703 13.176 6.975 17.153 10.32 2.132 1.794 4.158 3.717 6.045 5.768 2.835 3.080 2.605 2.771 4.835 6.22 1.602 2.478 2.982 5.074 4.225 7.748 0.019 0.041 0.033 0.072 0.051 0.11 0.301 0.751 0.591 1.505 0.862 2.266 0.461 1.297 0.88 2.608 1.254 3.932 0.751 2.657 1.277 5.348 1.734 8.067 0.067 0.687 0.148 1.373 0.208 2.062 0.117 1.349 0.195 2.702 0.238 4.056 0.047 1.476 0.037 2.953 0.002 4.429-7.17-5.342-15.588-8.725-25.205-9.107-14.042-0.558-27.804 5.595-38.751 13.979-13.897 10.644-23.38 24.246-26.801 41.329-2.065 10.313-4.174 20.588-7.637 30.544-0.503 1.446-1.030 2.884-1.582 4.312-0.283 0.731-0.581 1.456-0.868 2.185-0.052 0.132-0.093 0.238-0.129 0.333-0.044 0.094-0.096 0.207-0.158 0.343-1.461 3.199-2.952 6.37-4.643 9.456-1.746 3.189-3.644 6.295-5.687 9.301-1.041 1.533-2.14 3.020-3.233 4.515-0.097 0.132-0.168 0.23-0.228 0.314-0.101 0.118-0.235 0.279-0.428 0.513-0.684 0.83-1.358 1.665-2.055 2.483-2.77 3.252-5.725 6.347-8.836 9.275-1.559 1.466-3.156 2.89-4.79 4.271-0.746 0.631-1.5 1.253-2.261 1.867-0.483 0.389-0.969 0.773-1.456 1.156-0.014 0.010-0.020 0.016-0.031 0.025-0.111 0.080-0.255 0.184-0.448 0.324-8.461 6.148-17.413 11.436-26.917 15.813-1.263 0.581-2.533 1.146-3.809 1.699-0.165 0.072-0.265 0.116-0.334 0.146-0.128 0.052-0.278 0.114-0.453 0.186-0.593 0.243-1.186 0.485-1.781 0.722-2.916 1.165-5.861 2.258-8.828 3.284-6.247 2.163-12.595 4.032-19.003 5.654-15.119 3.829-30.546 6.309-46.065 7.79-34.837 3.324-69.443 2.128-104.080-2.588-18.358-2.499-36.642-5.675-54.764-9.532-15.694-3.341-31.402-7.084-46.441-12.746-13.158-4.954-26.436-11.968-37.237-20.363-9.741-7.572-18.71-17.363-25.201-27.261-14.934-22.775-21.713-49.161-25.93-76.38-1.127-7.278-1.984-14.522-2.741-21.923-3.565-36.553 2.119-73.317 11.497-108.618 4.233-15.931 9.272-31.644 14.958-47.114 1.344-3.659 2.738-7.3 4.157-10.93 4.709 27.376 16.093 53.984 34.709 73.844 11.259 12.012 26.206 21.236 43.002 21.934 17.476 0.727 34.706-9.129 45.379-22.54 12.614-15.85 15.744-35.856 12.363-55.476-3.388-19.657-13.575-36.507-26.348-51.456-23.756-27.803-55.323-52.725-55.855-92.501-0.102-7.649 0.741-12.906 1.984-19.494 1.769-9.377 4.266-18.621 7.344-27.651 4.483-13.152 10.387-26.1 18.16-37.726 3.721 22.080 11.702 44.171 30.664 56.604 19.898 13.047 49.281 10.624 69.967 1.199 24.18-11.017 37.043-35.655 45.105-59.67 4.174-12.432 7.293-25.183 10.611-37.861 3.257-12.449 6.264-25.546 12.132-37.072 14.947-29.358 47.131-50.427 80.202-48.080-8.948 24.092-6.447 52.43 5.882 74.944 11.571 21.129 33.476 35.203 56.855 39.707 6.104 1.176 12.242 1.783 18.378 1.843-11.598 16.607-19.979 35.685-19.961 56.007 0.027 30.003 20.963 54.271 45.123 69.686 10.45 6.667 21.834 11.631 32.791 17.373 12.558 6.581 24.164 14.379 34.267 24.383 15.006 14.858 22.028 36.288 23.225 56.565 0.677 11.479 0.051 21.096-2.856 31.557-0.594 2.136-1.3 4.23-2.075 6.306-13.837-24.402-37.064-44.795-64.326-51.319z","M585.426 604.535c-13.112-19.059-30.731-34.787-47.442-50.592-16.106-15.235-34.063-30.583-45.865-49.591-2.088-3.363-3.929-6.846-5.161-10.615-1.453-4.442-7.735-4.561-9.143 0-2.003 6.491-0.748 13.947 0.078 20.526 1.307 10.411 2.951 20.772 3.911 31.225 2.411 26.22 0.89 53.316-12.628 76.576-11.658 19.398-29.084 34.079-45.743 49.015-12.056 10.808-27.751 23.762-30.172 40.842-2.606 18.386 13.021 33.785 27.31 42.694 18.567 11.577 40.871 16.339 62.418 18.171 23.468 1.995 47.383 0.285 70.436-4.463 20.030-4.125 39.311-10.288 51.834-27.504 12.627-17.358 14.401-40.238 11.499-60.861-3.818-27.133-15.905-53.001-31.332-75.424z"],"grid":0,"tags":["fire"],"defaultCode":59674},{"paths":["M299.727 194.645c0.202-0.145 0.167-0.122 0 0v0z","M362.513 194.55c-0.011-0.009-0.013-0.010 0 0v0z","M1007.432 831.897c-38.61-0.086-75.645-9.857-109.014-28.705-32.46-18.334-58.928-42.194-85.291-69.096-26.821-27.372-51.78-56.494-78.502-83.962-26.725-27.472-55.523-53.567-88.582-73.25-35.068-20.881-74.304-33.2-115.064-35.692-5.373-0.328-10.753-0.476-16.136-0.487-7.338 0.016-14.645 0.341-21.908 0.963-10.359-61.305-21.659-122.534-36.446-182.911-11.244-45.91-23.983-93.282-46.856-134.986-13.676-24.936-33.464-50.003-62.278-57.432-3.474-0.896-7.043-1.517-10.634-1.895-0.915-0.286-1.931-0.446-3.053-0.442-0.748 0.003-1.484 0.037-2.222 0.062-0.914-0.034-1.827-0.058-2.739-0.062-1.196-0.004-2.27 0.179-3.231 0.504-34.207 3.985-58.028 31.813-73.779 61.192-12.927 24.11-22.244 50.176-30.29 76.259-11.054 35.836-19.63 72.423-27.392 109.096-10.025 47.362-18.563 95.033-26.603 142.767-8.043 47.754-16.1 95.43-29.507 142.038-4.801 16.69-10.221 33.221-16.627 49.369-4.358 10.986-9.887 23.201-16.338 34.828-2.565 4.621-5.278 9.161-8.182 13.578-1.22 1.857-2.474 3.694-3.764 5.504-0.7 0.981-1.417 1.948-2.131 2.919-0.236 0.321-0.481 0.637-0.722 0.954-0.102 0.132-0.197 0.254-0.261 0.332-4.724 5.815-9.726 11.365-15.491 16.175-0.525 0.438-1.067 0.857-1.592 1.296-0.017 0.014-0.026 0.022-0.042 0.035-0.073 0.050-0.14 0.097-0.232 0.16-1.216 0.848-2.408 1.722-3.656 2.525-2.124 1.368-4.325 2.619-6.603 3.711-0.377 0.181-0.76 0.349-1.139 0.527-0.869 0.304-1.721 0.658-2.597 0.946-0.822 0.27-1.653 0.514-2.489 0.737-2.423 0.366-4.847 0.69-7.271 0.97-0.471-0.004-0.942-0.008-1.413-0.034-0.239-0.013-0.479-0.040-0.72-0.064-0.403-0.092-0.817-0.171-1.212-0.246-0.178-0.034-0.361-0.097-0.533-0.157-2.774-0.972-5.778-0.189-8.080 1.54-4.846 0.286-9.698 0.422-14.551 0.433-12.201 0.027-12.224 18.99 0 18.963 8.166-0.018 16.289-0.448 24.348-1.272 5.205 0.402 10.685-0.515 15.896-2.156 8.951-1.519 17.801-3.536 26.513-6.052h15.78l11.051-9.514c7.349-3.105 14.567-6.579 21.629-10.429 33.073-18.033 61.866-43.1 88.31-69.689 23.904-24.035 46.205-49.583 69.406-74.284l97.295-83.763c20.086-12.011 41.529-21.105 63.857-26.844l-318.872 274.522h29.065l312.406-268.957c1.37 8.187 2.744 16.378 4.141 24.567l-283.87 244.39h29.065l258.589-222.624c1.442 8.103 2.929 16.197 4.476 24.278l-230.389 198.346h29.065l205.582-176.99c1.646 7.907 3.374 15.793 5.199 23.656l-178.105 153.334h29.065l154.092-132.661c1.963 7.617 4.033 15.207 6.237 22.763l-127.652 109.898h29.065l104.684-90.124c2.358 7.232 4.861 14.455 7.596 21.593l-79.603 68.532h29.065l58.263-50.16c2.18 4.703 4.5 9.335 6.996 13.866 1.016 1.845 2.073 3.688 3.167 5.518l-35.748 30.776h29.065l17.637-15.184c2.6 3.081 5.392 5.981 8.412 8.607 2.472 2.15 5.030 4.036 7.665 5.684l-1.036 0.892h2.532c10.608 6.194 22.46 8.559 35.326 7.835 16.909-0.951 33.808-0.593 50.746-0.503 41.089 0.215 82.178 0.467 123.267 0.719 46.26 0.283 92.521 0.575 138.781 0.87 27.715 0.177 55.432 0.355 83.147 0.535 1.325 0.009 2.649 0.017 3.974 0.026 6.109 0.040 9.163-4.691 9.158-9.437 0.010-4.749-3.040-9.513-9.16-9.526zM816.694 830.682c-6.728-0.042-13.455-0.080-20.183-0.121l48.194-41.492c5.635 4.584 11.392 9.012 17.29 13.247l-33.038 28.443c-4.087-0.025-8.175-0.051-12.263-0.077zM615.691 829.718c-1.23 0.065-2.459 0.146-3.688 0.228l146.691-126.29c4.8 5.246 9.6 10.49 14.42 15.717l-127.637 109.886c-9.957-0.115-19.904-0.064-29.786 0.459zM786.057 733.252c2.579 2.734 5.159 5.468 7.765 8.177 2.326 2.418 4.672 4.822 7.030 7.218l-94.518 81.373c-7.818-0.046-15.636-0.097-23.454-0.14-2.975-0.017-5.957-0.054-8.942-0.101l112.119-96.526zM814.362 762.040c5.15 4.962 10.39 9.834 15.733 14.587l-62.446 53.761c-10.817-0.066-21.634-0.13-32.451-0.194l79.165-68.154zM878.328 813.278c0.743 0.466 1.477 0.943 2.225 1.402 5.706 3.5 11.534 6.757 17.466 9.778l-7.77 6.689c-10.813-0.068-21.626-0.137-32.439-0.205l20.518-17.665zM336.376 183.416c0.273 0.039 0.327 0.051 0 0v0zM144.138 738.212c14.252-39.201 23.818-80.065 31.549-120.997 9.684-51.282 17.311-102.933 27.164-154.195 7.789-40.522 16.27-80.962 26.824-120.864 4.248-16.060 8.847-32.033 14.051-47.81 2.295-6.96 4.711-13.882 7.285-20.744 1.153-3.075 2.337-6.138 3.558-9.187 0.538-1.343 1.088-2.68 1.635-4.019 0.049-0.119 0.454-1.088 0.605-1.451 0.302-0.711 0.606-1.422 0.913-2.13 4.584-10.576 9.672-20.961 15.624-30.839 2.602-4.318 5.371-8.538 8.355-12.602 0.369-0.502 0.745-0.997 1.115-1.498 0.032-0.044 0.051-0.070 0.079-0.107 0.603-0.759 1.204-1.518 1.82-2.266 1.48-1.798 3.010-3.554 4.597-5.257 2.848-3.057 5.877-5.951 9.109-8.6 0.457-0.375 1.041-0.806 1.306-0.999-0.138 0.099-0.382 0.273-0.781 0.556 0.832-0.588 1.637-1.215 2.473-1.797 1.634-1.137 3.313-2.208 5.037-3.204 1.541-0.89 3.118-1.721 4.726-2.484 0.722-0.342 1.459-0.649 2.184-0.987-3.104 1.446 0.456-0.144 1.275-0.438 3.34-1.198 6.783-2.106 10.28-2.714 0.842-0.146 4.006-0.397 0.54-0.117 0.875-0.071 1.747-0.197 2.624-0.27 1.045-0.086 2.092-0.14 3.138-0.176 0.623 0.022 1.247 0.047 1.87 0.088 0.641 0.042 1.282 0.092 1.921 0.152 0.416 0.039 0.806 0.086 1.097 0.125 2.629 0.449 5.228 0.941 7.801 1.678 1.289 0.37 2.565 0.78 3.827 1.234 0.669 0.24 1.326 0.523 1.999 0.757 0.046 0.016 0.073 0.025 0.112 0.038 0.082 0.040 0.156 0.077 0.259 0.126 2.713 1.308 5.371 2.66 7.927 4.26 1.204 0.754 2.386 1.545 3.544 2.369 0.624 0.444 1.227 0.917 1.852 1.359-0.6-0.424-0.863-0.613-0.916-0.651 0.093 0.067 0.896 0.649 1.441 1.095 2.506 2.054 4.891 4.255 7.162 6.565 2.431 2.471 4.731 5.068 6.921 7.754 0.503 0.616 0.995 1.242 1.488 1.866 0.012 0.017 0.020 0.027 0.033 0.046 0.244 0.335 0.501 0.66 0.744 0.995 1.123 1.542 2.239 3.086 3.316 4.661 4.809 7.035 9.056 14.445 12.933 22.030 2.204 4.312 4.286 8.686 6.271 13.102 0.953 2.121 1.882 4.251 2.792 6.391 0.019 0.046 0.038 0.092 0.064 0.155 0.274 0.661 0.549 1.321 0.821 1.983 0.552 1.344 1.095 2.69 1.633 4.039 8.964 22.512 16.095 45.737 22.467 69.099 18.324 67.183 30.866 135.946 42.672 204.52 0.294 1.706 0.585 3.411 0.876 5.118-27.311 4.364-53.767 13.097-78.481 26.159-33.798 17.864-63.36 42.891-90.391 69.689-27.235 26.999-52.259 56.1-78.678 83.877-25.94 27.273-52.744 52.958-83.764 72.578-12.937 8.183-25.977 14.966-39.401 20.322 2.317-2.9 4.531-5.878 6.649-8.895 14.837-21.136 25.271-45.321 34.057-69.487zM90.202 802.928c0.775-1.020 0.378-0.491 0 0v0zM498.996 578.048c-0.971-5.903-1.949-11.807-2.931-17.711 0.881-0.064 1.762-0.129 2.643-0.183 5.373-0.328 10.753-0.476 16.136-0.487 3.765 0.009 7.52 0.102 11.261 0.282l-26.344 22.681c-0.253-1.527-0.514-3.053-0.765-4.581zM503.479 604.45l48.611-41.85c8.829 1.388 17.548 3.272 26.126 5.639l-70.308 60.53c-1.528-8.096-3.007-16.202-4.429-24.318zM512.096 650.187l87.171-75.048c7.342 2.801 14.554 5.976 21.607 9.53l-103.694 89.273c-1.768-7.903-3.467-15.82-5.084-23.755zM522.034 694.784l116.486-100.285c6.373 3.862 12.537 7.926 18.519 12.188l-129.078 111.126c-2.088-7.651-4.050-15.334-5.927-23.030zM533.771 737.835l138.721-119.428c5.595 4.492 11.070 9.149 16.457 13.963l-147.862 127.297c-2.619-7.214-5.046-14.498-7.316-21.833zM554.162 790.395c-1.986-3.888-3.846-7.841-5.609-11.836-0.032-0.072-0.063-0.144-0.094-0.216l154.475-132.991c4.123 3.959 8.223 7.994 12.315 12.115 0.965 0.973 1.911 1.965 2.872 2.942l-159.826 137.598c-1.436-2.507-2.821-5.042-4.133-7.613zM569.002 813.812l162.297-139.726c4.889 5.166 9.745 10.362 14.566 15.591l-160.021 137.766c-0.062-0.028-0.124-0.054-0.185-0.084-0.889-0.447-1.775-0.891-2.642-1.381-1.738-0.982-3.32-2.153-4.981-3.247-0.293-0.243-0.591-0.479-0.882-0.723-0.986-0.83-1.944-1.693-2.876-2.584-1.841-1.757-3.58-3.621-5.233-5.556-0.015-0.017-0.029-0.036-0.046-0.055z"],"grid":0,"tags":["flatten-the-curve"],"defaultCode":59675},{"paths":["M706.631 490.559c-7.616-11.981-25.275-14.009-38.116-13.724-24.333 0.539-50.196 10.028-67.208 27.572 0.256-28.261 0.511-56.523 0.767-84.784 0.054-5.96 0.535-12.128-0.101-18.074-2.398-22.441-21.258-38.345-43.624-38.055-8.341 0.108-16.118 2.566-22.675 6.743-0.111-30.277-0.221-60.554-0.332-90.832-0.090-24.661-0.18-49.324-0.27-73.985-0.020-5.403-0.017-10.805-0.059-16.208-0.139-17.884-10.314-33.598-27.090-40.21-22.981-9.058-50.352 3.441-57.532 27.226-1.903 6.304-1.735 12.708-1.735 19.177 0 20.772 0 41.544 0 62.316 0 32.184 0 64.368 0 96.552 0 2.405 0 4.81 0 7.215-6.070-3.721-13.105-5.971-20.502-6.29-19.269-0.83-36.773 8.67-44.021 27.038-2.724 6.902-2.805 14.080-2.78 21.313-17.871-12.293-44.108-9.109-58.043 9.697-10.043 13.553-7.994 30.8-7.994 46.665 0 15.704 0 31.407 0 47.112 0 1.093 0.203 2.12 0.564 3.066-0.316 5.244-0.786 10.488-1.002 15.735-0.686 16.689-0.7 33.411-0.027 50.1 1.819 45.16 8.010 91.474 26.238 133.179 4.298 9.832 9.39 19.348 15.537 28.154 2.245 3.216 4.501 6.337 6.329 9.82 0.443 0.843 0.865 1.696 1.271 2.556 0.145 0.307 0.653 1.455 0.775 1.707 0.793 1.938 1.506 3.911 2.156 5.899 7.722 23.58 8.22 49.347 8.339 73.938 0.067 13.911 3.469 26.947 14.504 36.309 7.937 6.734 17.589 10.147 27.97 10.269 10.366 0.122 20.742 0 31.109 0 29.34 0 58.714 0.42 88.052 0 0.609-0.009 1.217 0 1.826 0 17.205-0.346 32.452-10.49 38.939-26.505 3.482-8.594 2.935-17.604 2.994-26.694 0.054-8.243 0.204-16.488 0.577-24.724 0.295-6.507 0.766-12.994 1.47-19.469 0.058-0.53 0.125-1.060 0.193-1.589 0.013-0.096 0.025-0.182 0.033-0.238 0.157-1.062 0.32-2.124 0.502-3.181 0.378-2.208 0.82-4.408 1.367-6.581 0.411-1.636 0.876-3.259 1.433-4.851 0.232-0.665 0.518-1.314 0.743-1.981-0.979 2.896-0.146 0.38 0.242-0.386 0.559-1.105 1.234-2.116 1.867-3.176 0.002-0.004 0.004-0.007 0.007-0.010 0.324-0.363 0.631-0.754 0.962-1.103 0.663-0.697 1.557-1.286 2.186-2.007 0.388-0.266 0.77-0.546 1.161-0.807 1.899-1.263 3.891-2.38 5.858-3.532 5.586-3.273 10.91-6.927 15.747-11.252 16.946-15.15 26.985-35.776 30.515-58.037 4.142-26.121 2.567-53.709 6.020-79.258 3.93-29.080 15.497-54.842 38.446-73.829 10.811-8.941 26.202-22.588 16.411-37.989zM659.621 496.444c0.502-0.075 1.302-0.164 0 0v0zM583.097 779.072c-0.080 0.62-0.046 0.355 0 0v0zM598.921 728.727c-0.252 0.196-0.326 0.247 0 0v0zM611.917 715.422c0.274-0.351 0.736-0.923 0 0v0zM688.516 504.785c0.37-0.512 0.444-0.513 0 0v0zM689.476 503.381c-0.302 0.484-0.638 0.941-0.963 1.408-0.148 0.171-0.344 0.39-0.615 0.673-3.085 3.23-6.462 5.933-9.933 8.737-22.894 18.496-37.211 44.571-42.825 73.258-5.025 25.677-4.118 51.827-6.355 77.774-0.914 10.593-2.534 21.393-6.556 32.243-1.506 4.060-4.105 9.115-7.243 13.695-0.691 1.009-1.41 2-2.128 2.99-0.326 0.449-0.661 0.894-0.997 1.336-0.038 0.047-0.074 0.092-0.118 0.147-1.366 1.71-2.775 3.386-4.251 5.003-2.398 2.626-4.965 5.054-7.672 7.356-0.274 0.233-0.555 0.459-0.766 0.625-0.391 0.292-0.78 0.586-1.177 0.87-1.187 0.851-2.402 1.664-3.634 2.448-3.756 2.388-7.752 4.403-11.391 6.973-11.382 8.036-15.819 20.39-17.843 33.761-1.902 12.565-2.553 25.266-2.864 37.958-0.219 8.952 0.319 18.041-0.255 26.968-0.374 5.812-3.112 11.033-7.247 15.019-4.233 4.082-9.876 6.056-15.677 6.172-25.092 0-50.185 0-75.276 0-13.553 0-27.107 0-40.659 0-2.684 0-5.545 0.208-8.205-0.085-10.009-1.1-17.824-8.856-19.938-18.502-1.454-6.633-0.425-14.303-0.596-21.123-0.183-7.229-0.509-14.455-1.062-21.664-0.915-11.931-2.341-23.937-5.095-35.596-2.068-8.753-5.023-17.464-9.363-25.368-4.46-8.124-10.389-15.326-14.802-23.525-20.143-37.431-26.84-82.113-29.483-124.069-1.73-27.458-0.71-54.595 0.48-82.014 0.021-0.492 0.099-0.982 0.117-1.475 0.049-1.419-0.247-2.719-0.797-3.872 0-10.014 0-20.030 0-30.044 0-7.967 0-15.934 0-23.901 0-4.057-0.346-8.325 0.102-12.373 2.29-20.668 30.062-27.598 41.805-10.43 3.502 5.119 3.987 10.61 4.089 16.551 0.118 6.785 0.234 13.57 0.351 20.354 0.245 14.198 0.49 28.395 0.735 42.592 0.21 12.187 18.963 12.232 18.963 0 0-35.424-0.208-70.854 0-106.278 0.067-11.547 7.811-22.038 19.726-23.659 12.136-1.651 24.675 3.655 28.603 15.461 0 19.12 0 38.241 0 57.361 0 17.596 0 35.191 0 52.786 0 0.827 0 1.654 0 2.48 0 12.207 18.828 12.215 18.963 0 0.2-18.165 0.4-36.329 0.6-54.495 0.133-12.060 0.265-24.121 0.398-36.181 0.076-6.939 0.594-14.047-0.398-20.937-0.155-1.081-0.361-2.144-0.6-3.193 0-1.591 0-3.183 0-4.774 0-32.405 0-64.81 0-97.215 0-25.237 0-50.474 0-75.711 0-6.284 0-12.569 0-18.854 0-9.546 3.215-18.203 12.084-23.104 15.56-8.595 35.994 2.132 36.343 20.161 0.067 3.48 0.026 6.965 0.038 10.446 0.080 21.732 0.158 43.463 0.238 65.195 0.117 31.737 0.232 63.474 0.348 95.211 0.047 13.015 0.095 26.030 0.142 39.046-0.461 2.443-0.725 4.96-0.75 7.543-0.066 7.181 0.168 14.379 0.252 21.56 0.293 25.101 0.586 50.203 0.879 75.303 0.142 12.193 19.008 12.228 18.963 0-0.046-12.432-0.091-24.864-0.137-37.296-0.078-21.31-0.155-42.619-0.233-63.928 1.514-7.433 5.568-13.832 13.508-17.067 14.333-5.839 32.074 2.759 33.842 18.717 0.567 5.112 0.031 10.526-0.015 15.645-0.228 25.162-0.455 50.324-0.683 75.486-0.179 19.809-0.358 39.618-0.538 59.427-0.078 12.206 18.852 12.216 18.963 0 0.015-2.416 0.14-4.817 0.368-7.221 0.016-0.175 0.029-0.313 0.041-0.434 0.065-0.443 0.131-0.887 0.21-1.326 0.249-1.377 0.521-2.747 0.851-4.105 0.512-2.1 1.136-4.176 1.875-6.207 0.16-0.441 0.886-2.147 0.821-2.046 0.387-0.838 0.784-1.672 1.209-2.492 0.937-1.807 1.97-3.562 3.093-5.26 0.556-0.84 1.143-1.653 1.728-2.472 0.009-0.011 0.012-0.017 0.020-0.028 0.348-0.43 0.696-0.861 1.054-1.283 2.734-3.222 5.802-6.097 9.070-8.767 0.17-0.138 0.263-0.219 0.314-0.265 0.145-0.096 0.367-0.246 0.72-0.488 0.814-0.56 1.615-1.136 2.44-1.68 1.749-1.156 3.546-2.239 5.382-3.252 1.724-0.953 3.481-1.843 5.265-2.675 0.237-0.11 1.722-0.765 2.080-0.93 0.16-0.065 0.307-0.124 0.38-0.152 0.572-0.214 1.136-0.447 1.708-0.662 3.832-1.44 7.76-2.631 11.743-3.578 1.826-0.434 3.666-0.816 5.513-1.146 0.908-0.162 1.82-0.298 2.731-0.448 0.011-0.002 0.026-0.004 0.038-0.006 0.384-0.048 0.767-0.1 1.152-0.137 3.552-0.346 7.1-0.585 10.671-0.54 1.61 0.020 3.221 0.087 4.827 0.212 0.764 0.060 1.533 0.183 2.297 0.217 0.265 0.039 0.53 0.079 0.794 0.127 2.708 0.502 5.233 1.301 7.86 2.071 0.444 0.266 0.954 0.466 1.404 0.721 0.417 0.235 0.817 0.521 1.235 0.756 0.203 0.225 0.481 0.409 0.708 0.624-0.101-0.143-0.199-0.282-0.272-0.39 0.032 0.015 0.053 0.024 0.081 0.037 0.133 0.168 0.266 0.362 0.389 0.566 0 0.001-0.001 0.002-0.001 0.003s0.001 0 0.001 0.001c0.003 0.005 0.005 0.007 0.008 0.011 0.002 0.003 0.003 0.006 0.004 0.009 0.005 0.018 0.008 0.029 0.013 0.048 0.005 0.017 0.009 0.026 0.012 0.042-0.017-0.024-0.035-0.048-0.053-0.072-0.126 0.359-0.248 0.77-0.326 1.131-0.316 0.456-0.557 1.015-0.85 1.483z","M690.663 500.725c-0.054-0.079-0.124-0.148-0.196-0.216 0.062 0.086 0.122 0.172 0.182 0.254 0.005-0.012 0.009-0.025 0.014-0.038z"],"grid":0,"tags":["fu"],"defaultCode":59676},{"paths":["M457.953 261.668c-7.848-17.73-20.071-34.954-37.16-44.789-16.017-9.218-34.741-9.978-51.491-2.276-17.412 8.008-30.339 24.429-38.791 41.171-21.777 43.134-23.686 98.668-6.784 143.749 7.303 19.476 18.282 37.988 35.193 50.561 14.159 10.526 32.702 14.661 49.733 9.282 20.808-6.571 36.163-24.237 45.928-43.087 12.851-24.806 18.161-53.048 18.274-80.823-0.102-25.332-4.625-50.569-14.903-73.79zM442.109 398.462c-6.273 14.937-16.096 30-29.157 38.16-3.362 2.101-5.655 3.222-8.419 4.159-1.524 0.516-3.075 0.955-4.644 1.307-2.859 0.642-1.96 0.508-4.626 0.657-6.62 0.371-12.903-1.013-18.172-3.663-0.911-0.458-1.801-0.945-2.677-1.454 17.017-3.247 30.235-27.181 30.235-56.239 0-31.275-15.306-56.628-34.186-56.628-18.025 0-32.781 23.113-34.082 52.421-8.158-32.099-6.050-67.797 4.695-98.175 5.593-15.811 14.697-31.868 27.549-41.901 5.631-4.396 10.948-7.034 18.104-8.48 5.41-1.092 11.44-0.649 17.805 1.508 6.556 2.221 13.235 7.017 18.756 12.693 6.654 6.841 11.786 14.938 16.078 23.673 10.445 21.261 14.43 45.44 14.527 68.957-0.089 21.434-3.447 43.147-11.786 63.005z","M708.35 261.668c-7.849-17.73-20.071-34.954-37.16-44.789-16.017-9.218-34.741-9.978-51.491-2.276-17.412 8.008-30.339 24.429-38.791 41.171-21.777 43.134-23.686 98.668-6.783 143.749 7.303 19.476 18.282 37.988 35.193 50.561 14.159 10.526 32.702 14.661 49.733 9.282 20.808-6.571 36.163-24.237 45.928-43.087 12.851-24.806 18.161-53.048 18.274-80.823-0.103-25.332-4.626-50.569-14.904-73.79zM692.507 398.462c-6.273 14.937-16.096 30-29.157 38.16-3.362 2.101-5.655 3.222-8.419 4.159-1.524 0.516-3.075 0.955-4.644 1.307-2.859 0.642-1.96 0.508-4.626 0.657-6.62 0.371-12.903-1.013-18.172-3.663-1.28-0.644-2.513-1.356-3.722-2.099 15.773-5.027 27.692-28 27.692-55.594 0-31.275-15.306-56.628-34.186-56.628-15.663 0-28.857 17.456-32.902 41.261-5.157-29.047-2.411-60.118 7.103-87.014 5.593-15.811 14.697-31.868 27.549-41.901 5.631-4.396 10.948-7.034 18.104-8.48 5.41-1.092 11.44-0.649 17.805 1.508 6.556 2.221 13.235 7.017 18.756 12.693 6.654 6.841 11.786 14.938 16.078 23.673 10.445 21.261 14.43 45.44 14.527 68.957-0.088 21.433-3.446 43.146-11.785 63.004z","M533.753 484.193c-11.937-6.617-26.135-11.123-39.745-7.411-20.271 5.528-30.734 26.498-35.533 45.327-1.395 5.476-2.442 11.115-2.973 16.744-0.482 5.105 4.703 9.481 9.481 9.481 5.529 0 8.998-4.361 9.481-9.481 0.023-0.241 0.051-0.482 0.079-0.722 0.428-2.577 0.866-5.145 1.434-7.696 0.79-3.544 1.746-7.053 2.898-10.497 0.573-1.711 1.258-3.375 1.871-5.070 0.19-0.406 0.363-0.821 0.551-1.227 0.516-1.113 1.059-2.215 1.636-3.299 0.908-1.71 1.893-3.38 2.97-4.989 0.439-0.655 2.717-3.478 0.677-1.063 0.789-0.933 1.544-1.886 2.382-2.777 0.594-0.631 1.207-1.245 1.843-1.833 0.419-0.388 1.759-1.33 1.924-1.479 1.354-0.83 2.717-1.618 4.096-2.42 0.48-0.114 0.971-0.347 1.441-0.489 1.038-0.316 2.158-0.432 3.182-0.764 0.506-0.018 1.024-0.091 1.527-0.113 1.226-0.054 2.455-0.034 3.679 0.046 0.347 0.023 0.691 0.064 1.037 0.098 0.345 0.046 0.811 0.109 1.019 0.156 1.399 0.316 2.794 0.604 4.175 1.001 1.237 0.357 2.444 0.789 3.661 1.205 0.159 0.054 1.21 0.472 1.47 0.565 0.833 0.367 1.66 0.752 2.478 1.151 21.384 10.448 38.465 29.229 53.792 46.92 3.355 3.872 9.971 3.439 13.409 0 3.841-3.841 3.363-9.527 0-13.409-15.572-17.976-32.913-36.304-53.939-47.958z","M657.093 560.214c-40.587-6.764-16.911 54.116-16.911 54.116-145.436 67.645-257.948 6.761-251.68-37.204 2.411-16.911 12.809-16.065-2.411-37.627s-43.124-10.147-69.759 6.341c-26.635 16.488-15.22 53.271 5.074 57.076s19.026-13.952 35.514-3.805c16.488 10.147 59.612 211.813 173.762 215.618s117.955-73.564 129.371-96.393c11.415-22.83 10.887-93.687 10.887-93.687s22.252 9.182 36.558 0c13.057-14.363-9.817-57.67-50.404-64.434zM546.176 793.906c-39.265 0-71.096-15.571-71.096-34.78s31.83-34.78 71.096-34.78 71.096 15.571 71.096 34.78c0 19.209-31.83 34.78-71.096 34.78z"],"grid":0,"tags":["funny-man"],"defaultCode":59677},{"paths":["M708.446 453.018c0.021-0.016 0.043-0.033 0.065-0.050-0.005-0.005-0.010-0.010-0.015-0.015-0.024 0.021-0.040 0.037-0.060 0.055 0.003 0.003 0.008 0.008 0.009 0.010z","M718.351 436.217c-8.427-7.481-17.457-12.93-29.021-13.378-9.77-0.379-18.784 3.288-26.376 9.191-5.805 4.513-11.59 9.052-17.385 13.578-14.868 11.612-29.736 23.224-44.604 34.837 0.624-23.813 1.247-47.626 1.871-71.439 1.278-48.805 2.556-97.609 3.833-146.414 0.299-11.405 0.763-22.819 0.896-34.227 0.159-13.632-7.262-27.050-19.59-33.296-18.070-9.156-41.004-2.215-49.48 16.641-2.743 6.101-3.334 12.482-4.019 19.008-0.723 6.881-1.446 13.76-2.169 20.641-2.394 22.773-4.787 45.545-7.181 68.318-0.061 0.583-0.122 1.167-0.184 1.751-2.142-41.435-4.285-82.87-6.427-124.305-0.251-4.855-0.459-9.717-0.753-14.57-0.753-12.44-6.945-24.037-18.158-30.127-19.499-10.592-44.254-0.528-50.845 20.665-1.635 5.255-1.504 10.715-1.563 16.137-0.482 43.724-0.964 87.449-1.446 131.173-0.012 1.058-0.024 2.116-0.035 3.174-5.305-35.62-10.609-71.241-15.914-106.861-0.675-4.532-1.342-9.065-2.024-13.595-1.759-11.67-9.33-21.523-20.795-25.174-18.921-6.025-39.021 8.818-38.969 28.644 0.007 2.617 0.279 5.26 0.417 7.872 1.887 35.566 3.774 71.132 5.66 106.698-4.047-19.933-8.092-39.867-12.138-59.801-1.735-8.548-2.565-18.971-6.836-26.738-8.078-14.689-27.453-18.917-42.109-12.126-11.835 5.484-16.63 18.711-16.495 31.022 0.086 7.872 1.501 15.865 2.32 23.68 1.849 17.663 3.698 35.325 5.548 52.988 3.848 36.745 7.694 73.491 11.541 110.236 0.78 7.451 1.399 14.499 1.399 21.986 0 9.42-0.131 18.808 0.35 28.212 1.733 33.843 3.465 67.685 5.198 101.529 1.648 32.2 3.297 64.401 4.946 96.602 0.237 4.633-0.088 9.099-0.377 13.744-0.998 16.048-1.998 32.098-2.996 48.146-2.233 35.884-4.467 71.766-6.701 107.65-0.139 2.245-0.28 4.491-0.419 6.737-0.32 5.137 4.603 9.458 9.481 9.481 32.432 0.161 64.865 0.322 97.297 0.483 51.661 0.257 103.323 0.513 154.983 0.769 11.814 0.059 23.628 0.118 35.443 0.176 1.996 0.009 3.659-0.496 5.002-1.337 2.759-1.336 4.734-4.043 4.479-8.145-2.531-40.597-5.061-81.194-7.593-121.79-1.197-19.2-2.394-38.4-3.591-57.6-0.021-0.34 0.042-1.292 0.032-2.169-0.264 0.78-0.876 1.171-0.32 0.046 0.108-0.218 0.201-0.448 0.293-0.682-0.033-0.455-0.101-0.836-0.242-0.995 0.202 0.227 0.304 0.475 0.348 0.722 0.299-0.814 0.533-1.68 0.811-2.468 3.389-9.582 6.777-19.164 10.166-28.745 7.714-21.813 15.428-43.626 23.143-65.44 0.088-0.249 0.186-0.502 0.283-0.754 1.24-1.427 2.143-3.456 3.137-5.037 5.212-8.28 10.424-16.56 15.636-24.84 14.031-22.291 28.061-44.581 42.092-66.872 4.122-6.548 8.243-13.096 12.365-19.644 2.173-3.452 4.284-6.938 5.675-10.802 3.337-9.268-1.016-17.065-7.892-23.168zM708.701 452.83c-0.052 0.036-0.103 0.072-0.154 0.11-0.003-0.007-0.007-0.018-0.009-0.024 0.103-0.091 0.147-0.107 0.163-0.086zM708.626 453.081c-0.003 0.008-0.008 0.015-0.011 0.023-0.008-0.020-0.015-0.039-0.022-0.056 0.011 0.011 0.022 0.023 0.033 0.033zM707.957 454.346c-0.325 0.783-1.862 3.228-2.722 4.617-0.208 0.336-0.421 0.667-0.631 1.002-3.603 5.748-7.227 11.481-10.84 17.222-13.687 21.746-27.376 43.492-41.063 65.237-5.566 8.842-11.132 17.686-16.698 26.528-2.284 3.629-4.954 7.163-6.475 11.195-7.135 18.91-13.492 38.152-20.231 57.206-3.874 10.956-7.749 21.912-11.624 32.869-1.49 4.214-4.018 8.966-4.019 13.533-0.001 15.313 1.925 30.873 2.877 46.148 2.64 42.341 5.279 84.68 7.919 127.021-29.074-0.144-58.148-0.288-87.222-0.433-51.661-0.257-103.323-0.513-154.983-0.769-8.457-0.042-16.916-0.083-25.373-0.126 1.501-24.116 3.002-48.231 4.503-72.347 1.213-19.487 2.426-38.974 3.638-58.461 0.648-10.394 1.724-20.861 1.947-31.275 0.119-5.613-0.518-11.326-0.805-16.929-0.828-16.16-1.655-32.321-2.482-48.482-1.97-38.483-3.941-76.967-5.91-115.45-0.48-9.375-1.106-18.757-1.441-28.139-0.367-10.303 0.534-20.685-0.064-30.973-0.511-8.787-1.843-17.605-2.759-26.357-1.901-18.157-3.802-36.313-5.703-54.469-3.69-35.245-7.379-70.489-11.070-105.734-0.354-3.371-0.754-6.74-1.059-10.116-0.154-1.695-0.229-3.388-0.175-5.093 0.096-3.037-0.104-2.055 0.723-5.19 0.376-1.425 0.658-2.195 0.625-2.123 0.19-0.411 1.6-2.634 1.465-2.594 2.537-2.957 6.333-3.889 11.556-3.466 5.637 0.457 8.907 4.378 10.077 9.63 0.424 1.899 0.776 3.818 1.162 5.726 6.521 32.127 13.042 64.254 19.563 96.38 6.481 31.928 12.962 63.856 19.443 95.784 0.365 1.799 0.73 3.597 1.095 5.395 2.116 10.426 19.191 8.151 18.624-2.52-1.563-29.451-3.125-58.904-4.688-88.356-2.35-44.306-4.701-88.613-7.052-132.92-0.296-5.576-0.592-11.151-0.887-16.727-0.216-4.076-0.576-7.682 2.181-11.133 3.531-4.421 10.238-5.524 14.942-2.202 3.285 2.32 4.346 5.576 4.973 9.388 0.556 3.379 1.010 6.777 1.514 10.165 6.066 40.737 12.133 81.474 18.2 122.213 5.153 34.602 9.336 69.515 15.481 103.958 0.101 0.567 0.17 1.142 0.255 1.71 0.685 4.598 6.242 7.417 10.403 6.792 4.643-0.698 8.168-4.495 8.221-9.312 0.358-32.537 0.717-65.074 1.076-97.611 0.523-47.486 1.047-94.973 1.57-142.459 0.12-10.954-2.64-27.519 9.006-33.5 9.897-5.083 22.305 1.294 23.711 12.443 0.452 3.585 0.378 7.319 0.565 10.924 2.311 44.693 4.62 89.387 6.931 134.080 1.967 38.061 3.935 76.121 5.903 114.182 0.033 0.647 0.066 1.294 0.1 1.941 0.641 12.388 17.703 11.986 18.963 0 3.476-33.065 6.951-66.129 10.426-99.192 4.053-38.567 8.108-77.134 12.161-115.701 0.748-7.115 3.946-13.773 10.908-16.525 11.547-4.566 23.88 4.663 23.93 16.734 0.040 9.511-0.499 19.060-0.748 28.566-1.214 46.359-2.428 92.718-3.642 139.075-0.9 34.361-2.568 68.8-2.701 103.174-0.002 0.566-0.029 1.133-0.045 1.699-0.237 9.044 10.168 11.405 16.186 6.704 14.993-11.711 29.987-23.421 44.981-35.132 9.128-7.129 18.257-14.258 27.384-21.387 1.926-1.504 3.823-3.062 5.785-4.521 0.291-0.184 0.951-0.623 1.123-0.715 1.246-0.667 2.403-1.501 3.731-2.018 3.65-1.421 7.76-1.729 11.581-0.948 4.168 0.852 7.454 2.983 10.638 5.685 1.572 1.335 3.16 2.667 4.601 4.146-0.069-0.070 0.565 0.51 1.003 0.942 0.007-0.007 0.010-0.009 0.018-0.016 0.002 0.008 0.004 0.016 0.006 0.025-0.003 0.002-0.006 0.004-0.009 0.007 0.004 0.004 0.009 0.009 0.013 0.012 0.012 0.049 0.030 0.115 0.053 0.192-0.057-0.069-0.101-0.122-0.132-0.155-0.009 0.008-0.017 0.013-0.026 0.021 0.025 0.046 0.064 0.111 0.124 0.207-0.192 0.364-0.487 0.861-0.587 1.1zM708.824 453.367c0.009-0.014 0.019-0.029 0.027-0.043 0.058 0.070 0.056 0.091-0.027 0.043z","M708.415 453.027c0.007-0.006 0.015-0.013 0.022-0.020-0.050-0.052-0.055-0.043-0.022 0.020z","M612.855 684.894c0.091-0.271 0.136-0.588 0.079-0.906-0.034 0.092-0.070 0.181-0.106 0.271 0.015 0.202 0.025 0.413 0.027 0.635z","M708.42 453.038c-0.002-0.004-0.005-0.008-0.006-0.011-0.262 0.237-0.182 0.16 0.006 0.011z","M391.771 693.102c0 5.006-5.274 9.064-11.78 9.064s-11.78-4.058-11.78-9.064c0-5.006 5.274-9.064 11.78-9.064s11.78 4.058 11.78 9.064z","M437.822 684.038c-6.479 0-11.781 4.079-11.781 9.064s5.301 9.064 11.781 9.064 11.78-4.079 11.78-9.064-5.3-9.064-11.78-9.064z","M495.652 684.038c-6.479 0-11.78 4.079-11.78 9.064s5.301 9.064 11.78 9.064 11.781-4.079 11.781-9.064-5.302-9.064-11.781-9.064z","M553.482 684.038c-6.479 0-11.781 4.079-11.781 9.064s5.301 9.064 11.781 9.064 11.78-4.079 11.78-9.064-5.301-9.064-11.78-9.064z","M379.991 726.544c-6.479 0-11.78 4.079-11.78 9.064s5.301 9.063 11.78 9.063 11.78-4.079 11.78-9.063c0-4.985-5.301-9.064-11.78-9.064z","M437.822 726.544c-6.479 0-11.781 4.079-11.781 9.064s5.301 9.063 11.781 9.063 11.78-4.079 11.78-9.063c0-4.985-5.3-9.064-11.78-9.064z","M495.652 726.544c-6.479 0-11.78 4.079-11.78 9.064s5.301 9.063 11.78 9.063 11.781-4.079 11.781-9.063c0-4.985-5.302-9.064-11.781-9.064z","M553.482 726.544c-6.479 0-11.781 4.079-11.781 9.064s5.301 9.063 11.781 9.063 11.78-4.079 11.78-9.063c0-4.985-5.301-9.064-11.78-9.064z","M391.771 778.115c0 5.006-5.274 9.064-11.78 9.064s-11.78-4.058-11.78-9.064c0-5.006 5.274-9.064 11.78-9.064s11.78 4.058 11.78 9.064z","M437.822 769.051c-6.479 0-11.781 4.079-11.781 9.064s5.301 9.064 11.781 9.064 11.78-4.079 11.78-9.064c0-4.985-5.3-9.064-11.78-9.064z","M495.652 769.051c-6.479 0-11.78 4.079-11.78 9.064s5.301 9.064 11.78 9.064 11.781-4.079 11.781-9.064c0-4.985-5.302-9.064-11.781-9.064z","M553.482 769.051c-6.479 0-11.781 4.079-11.781 9.064s5.301 9.064 11.781 9.064 11.78-4.079 11.78-9.064c0-4.985-5.301-9.064-11.78-9.064z","M391.771 820.621c0 5.006-5.274 9.064-11.78 9.064s-11.78-4.058-11.78-9.064c0-5.006 5.274-9.064 11.78-9.064s11.78 4.058 11.78 9.064z","M437.822 811.557c-6.479 0-11.781 4.079-11.781 9.064s5.301 9.064 11.781 9.064 11.78-4.079 11.78-9.064-5.3-9.064-11.78-9.064z","M495.652 811.557c-6.479 0-11.78 4.079-11.78 9.064s5.301 9.064 11.78 9.064 11.781-4.079 11.781-9.064-5.302-9.064-11.781-9.064z","M553.482 811.557c-6.479 0-11.781 4.079-11.781 9.064s5.301 9.064 11.781 9.064 11.78-4.079 11.78-9.064-5.301-9.064-11.78-9.064z"],"grid":0,"tags":["glove"],"defaultCode":59678},{"paths":["M350.382 786.714h-123.561l286.661-549.427h123.561z","M510.517 786.714h-123.561l286.661-549.427h123.561z"],"grid":0,"tags":["highway"],"defaultCode":59679},{"paths":["M815.077 701.022c-42.072-45.904-39.788-84.944 6.863-131.594 14.689-14.689 23.774-34.981 23.774-57.394 0-44.828-36.341-81.168-81.168-81.168-22.176 0-42.27 8.896-56.921 23.311v-0.008c-49.12 48.319-89.481 47.987-137.799-1.133v0.008c-0.157-0.16-0.312-0.322-0.47-0.482v0c-48.69-48.69-48.69-89.027 0-137.718v0c14.689-14.689 23.774-34.981 23.774-57.394 0-44.828-36.341-81.168-81.168-81.168-22.414 0-42.706 9.085-57.394 23.774-48.69 48.69-89.027 48.69-137.718 0-14.689-14.689-34.981-23.774-57.394-23.774-44.828 0-81.168 36.341-81.168 81.168s36.341 81.168 81.168 81.168c22.414 0 42.706-9.085 57.394-23.774 48.69-48.69 89.027-48.69 137.718 0s48.69 89.027 0 137.718c-14.689 14.689-23.774 34.981-23.774 57.394 0 44.827 36.341 81.168 81.168 81.168 22.176 0 42.271-8.896 56.921-23.311v0.008c49.12-48.319 89.481-47.987 137.799 1.133v-0.008c0.157 0.16 0.311 0.322 0.47 0.482 46.651 46.651 48.935 85.691 6.863 131.594-4.733 3.771-9.035 8.059-12.82 12.78-46.254 42.102-85.174 39.738-131.368-7.221v0.008c-14.725-14.969-35.209-24.255-57.865-24.255-22.414 0-42.706 9.085-57.394 23.774-47.866 47.866-87.52 47.866-135.386 0-14.689-14.689-34.98-23.774-57.394-23.774-44.827 0-81.168 36.341-81.168 81.168s36.341 81.168 81.168 81.168c22.414 0 42.706-9.085 57.394-23.774 47.866-47.866 87.52-47.866 135.386 0 14.689 14.689 34.981 23.774 57.394 23.774 22.176 0 42.271-8.896 56.921-23.311v0.008c46.447-45.689 85.064-47.87 129.982-6.443 14.793 19.901 38.481 32.795 65.182 32.795 31.681 0 59.12-18.153 72.492-44.625 5.86-11.221 9.177-23.981 9.177-37.515 0-0.174-0.006-0.346-0.007-0.52 0.001-0.174 0.007-0.346 0.007-0.52-0.002-25.721-11.97-48.646-30.638-63.517z"],"grid":0,"tags":["hot-balls"],"defaultCode":59680},{"paths":["M570.080 774.072c-16.113 8.116-32.226 16.232-48.338 24.348v-357.891l46.199-32.775v-22.636l-44.078 32.407v-23.228l44.078-32.406v-23.228l-44.078 32.407v-23.228l44.078-32.406v-23.228l-44.078 32.407v-23.227l44.078-32.406v-23.228l-44.078 32.407v-23.227l44.078-32.407v-23.227l-44.078 32.407v-23.227l44.078-32.408v-23.227l-44.078 32.407v-23.227l44.078-32.408v-23.227l-44.078 32.407v-23.227l44.078-32.407v-23.227l-57.465 40.954-54.416-38.781v23.228l44.078 32.407v23.228l-44.078-32.408v23.228l44.078 32.407v23.228l-44.078-32.408v23.228l44.078 32.407v23.228l-44.078-32.409v23.228l44.078 32.407v23.228l-44.078-32.408v23.228l44.078 32.407v23.228l-44.078-32.408v23.227l44.078 32.407v23.228l-44.078-32.408v23.228l44.078 32.407v23.227l-44.078-32.407v22.636l44.078 31.269v357.138c-15.406-8.088-30.811-16.176-46.217-24.264-6.857-3.6-16.726 2.445-13.928 10.707 6.923 20.445 13.847 40.891 20.77 61.337 11.047 32.622 22.093 65.243 33.14 97.865 2.551 7.533 5.102 15.066 7.653 22.599 3.072 9.071 15.143 8.905 18.286 0 7.238-20.507 14.476-41.015 21.715-61.523 11.488-32.547 22.976-65.094 34.463-97.64 2.663-7.545 5.327-15.092 7.99-22.637 2.952-8.365-7.11-14.142-13.929-10.707zM510.887 935.1c-3.939-11.633-7.878-23.265-11.817-34.897-11.046-32.622-22.093-65.243-33.14-97.865-0.077-0.228-0.155-0.455-0.231-0.684 12.572 6.601 25.146 13.202 37.718 19.802 1.938 1.018 3.817 2.139 6.020 2.435 2.899 0.39 5.28-0.74 7.771-1.994 3.106-1.564 6.212-3.129 9.318-4.693 10.529-5.304 21.058-10.607 31.588-15.911-4.702 13.322-9.405 26.646-14.107 39.968-11.040 31.279-22.080 62.559-33.121 93.838z"],"grid":0,"tags":["i-arrow"],"defaultCode":59681},{"paths":["M588.948 214.657c4.517-5.934-1.662-14.267-8.187-14.267-25.29 0-50.58 0-75.87 0-3.629 0-7.308-0.179-10.933 0-5.602 0.277-8.152 4.288-11.159 8.238-8.557 11.241-17.113 22.482-25.67 33.724-7.359 9.667-14.718 19.336-22.077 29.002-1.812 2.38-1.812 7.191 0 9.571 14.67 19.273 29.339 38.545 44.010 57.817 0.93 1.222 1.86 2.444 2.79 3.666-13.456 17.676-26.911 35.353-40.367 53.029-2.145 2.817-4.288 5.634-6.433 8.451-1.812 2.38-1.812 7.191 0 9.572 14.67 19.271 29.339 38.541 44.010 57.812 0.93 1.222 1.86 2.443 2.79 3.666-13.456 17.676-26.911 35.352-40.367 53.028-2.145 2.817-4.288 5.634-6.433 8.451-1.812 2.38-1.812 7.192 0 9.572 14.67 19.271 29.339 38.541 44.010 57.813 0.93 1.222 1.86 2.443 2.79 3.666-13.456 17.676-26.911 35.353-40.367 53.028-2.145 2.817-4.288 5.634-6.433 8.451-1.812 2.38-1.812 7.191 0 9.572 14.67 19.27 29.339 38.54 44.010 57.811 0.93 1.222 1.86 2.443 2.79 3.666-13.455 17.675-26.911 35.352-40.366 53.027-2.145 2.817-4.288 5.634-6.433 8.451-1.812 2.38-1.812 7.192 0 9.572 14.67 19.27 29.339 38.541 44.010 57.812 0.93 1.222 1.86 2.443 2.79 3.666-13.455 17.674-26.911 35.349-40.366 53.023-2.145 2.817-4.288 5.633-6.433 8.451-4.518 5.934 1.662 14.267 8.186 14.267 25.399 0 50.797 0 76.195 0 3.53 0 7.060 0 10.59 0 0.035 0 0.070 0 0.105 0 0.063 0 0.125 0 0.188 0 3.604 0 6.136-1.66 7.614-3.992 0.197-0.228 0.389-0.462 0.574-0.704 14.67-19.269 29.339-38.539 44.010-57.809 2.145-2.817 4.288-5.634 6.434-8.451 1.812-2.38 1.812-7.192 0-9.572-14.671-19.27-29.34-38.541-44.010-57.812-0.93-1.222-1.86-2.443-2.79-3.666 13.455-17.676 26.911-35.352 40.366-53.027 2.145-2.817 4.288-5.634 6.434-8.452 1.812-2.38 1.812-7.191 0-9.571-14.671-19.27-29.34-38.54-44.010-57.811-0.93-1.222-1.86-2.443-2.79-3.666 13.455-17.676 26.911-35.353 40.366-53.028 2.145-2.817 4.288-5.634 6.434-8.451 1.812-2.38 1.812-7.191 0-9.572-14.671-19.271-29.34-38.541-44.010-57.812-0.93-1.222-1.86-2.444-2.79-3.666 13.456-17.676 26.911-35.352 40.367-53.028 2.145-2.817 4.288-5.634 6.434-8.452 1.812-2.38 1.812-7.191 0-9.571-14.671-19.271-29.34-38.541-44.010-57.812-0.93-1.222-1.86-2.444-2.79-3.666 13.456-17.676 26.911-35.353 40.367-53.029 2.145-2.817 4.288-5.634 6.434-8.452 1.812-2.38 1.812-7.191 0-9.571-14.671-19.273-29.34-38.545-44.010-57.817-0.93-1.222-1.86-2.444-2.79-3.666 13.456-17.677 26.911-35.355 40.367-53.032 2.14-2.815 4.285-5.632 6.429-8.45zM566.14 338.743c0.93 1.222 1.86 2.444 2.79 3.666-13.455 17.676-26.911 35.353-40.367 53.029-2.145 2.817-4.288 5.634-6.433 8.451-1.812 2.38-1.812 7.191 0 9.572 14.67 19.271 29.34 38.541 44.010 57.812 0.93 1.222 1.86 2.443 2.79 3.666-13.455 17.676-26.911 35.352-40.367 53.028-2.145 2.817-4.288 5.634-6.433 8.451-1.812 2.38-1.812 7.192 0 9.572 14.67 19.271 29.34 38.541 44.010 57.813 0.93 1.222 1.86 2.443 2.79 3.666-13.455 17.676-26.911 35.353-40.367 53.028-2.145 2.817-4.288 5.634-6.433 8.451-1.812 2.38-1.812 7.191 0 9.572 14.67 19.27 29.34 38.54 44.010 57.811 0.93 1.222 1.86 2.443 2.79 3.666-13.455 17.675-26.911 35.352-40.367 53.027-2.145 2.817-4.288 5.634-6.433 8.451-1.812 2.38-1.812 7.192 0 9.572 14.67 19.27 29.34 38.541 44.010 57.812 0.93 1.222 1.86 2.443 2.79 3.666-13.456 17.674-26.911 35.349-40.367 53.023-0.953 1.252-1.906 2.503-2.859 3.754-21.139 0-42.278 0-63.417 0 11.050-14.514 22.099-29.028 33.148-43.542 2.145-2.817 4.288-5.634 6.433-8.451 1.812-2.38 1.812-7.192 0-9.572-14.67-19.27-29.339-38.541-44.010-57.812-0.93-1.222-1.86-2.443-2.79-3.666 13.455-17.676 26.911-35.352 40.367-53.027 2.145-2.817 4.288-5.634 6.433-8.452 1.812-2.38 1.812-7.191 0-9.571-14.67-19.27-29.339-38.54-44.010-57.811-0.93-1.222-1.86-2.443-2.79-3.666 13.455-17.676 26.911-35.353 40.367-53.028 2.145-2.817 4.288-5.634 6.433-8.451 1.812-2.38 1.812-7.191 0-9.572-14.67-19.271-29.339-38.541-44.010-57.812-0.93-1.222-1.86-2.444-2.79-3.666 13.455-17.676 26.911-35.352 40.367-53.028 2.145-2.817 4.288-5.634 6.433-8.452 1.812-2.38 1.812-7.191 0-9.571-14.67-19.271-29.339-38.541-44.010-57.812-0.93-1.222-1.86-2.444-2.79-3.666 13.455-17.676 26.911-35.353 40.367-53.029 2.145-2.817 4.288-5.634 6.433-8.452 1.812-2.38 1.812-7.191 0-9.571-14.67-19.273-29.339-38.545-44.010-57.817-0.93-1.222-1.86-2.444-2.79-3.666 13.455-17.677 26.911-35.355 40.367-53.032 0.953-1.252 1.906-2.504 2.859-3.756 21.139 0 42.279 0 63.418 0-11.050 14.517-22.1 29.033-33.15 43.55-2.145 2.817-4.288 5.634-6.433 8.452-1.812 2.38-1.812 7.191 0 9.571 14.671 19.274 29.341 38.546 44.011 57.818z","M435.053 90.005c0.239 0.315 0.478 0.63 0.718 0.943 0.191 0.282 0.395 0.554 0.618 0.812 14.788 19.428 29.577 38.855 44.365 58.283 2.122 2.788 4.395 6.738 7.185 8.891 3.569 2.753 8.737 2.036 13.007 2.036 14.761 0 29.521 0 44.281 0 11.845 0 23.689 0 35.535 0 6.524 0 12.704-8.332 8.187-14.267-15.234-20.013-30.467-40.025-45.701-60.038-2.122-2.787-4.395-6.738-7.185-8.891-3.569-2.753-8.737-2.036-13.007-2.036-14.761 0-29.521 0-44.281 0-11.845 0-23.689 0-35.535 0-3.528 0-6.031 1.589-7.521 3.844-2.193 3.014-2.98 7.385-0.667 10.423zM519.434 94.701c2.090 0 4.18 0 6.27 0 12.003 15.769 24.006 31.537 36.009 47.306-19.049 0-38.098 0-57.148 0-2.090 0-4.18 0-6.27 0-12.003-15.769-24.006-31.537-36.009-47.306 19.049 0 38.098 0 57.148 0z"],"grid":0,"tags":["i-crooked"],"defaultCode":59682},{"paths":["M686.459 256.948h-131.793v-180.148h-85.333v180.148h-131.793v85.333h131.793v604.919h85.333v-604.919h131.793z"],"grid":0,"tags":["i-cross"],"defaultCode":59683},{"paths":["M565.021 955.228l18.963-0.091-0.758-157.061c-0.103-21.343-8.458-42.194-24.16-60.3l-34.291-39.541 34.478-40.042c14.572-16.924 22.722-36.229 23.726-56.073h0.056l-0.008-1.789c0.021-0.712 0.056-1.423 0.058-2.137v-0.241h-0.068l-0.74-171.861c-0.103-21.343-8.458-42.194-24.16-60.301l-34.291-39.54 34.478-40.042c15.59-18.108 23.832-38.938 23.832-60.239v-157.153h-18.963v4.22l-104.197-0.106v-4.113h-18.963v156.894c0 21.484 8.355 42.474 24.161 60.7l34.589 39.885-34.021 39.511c-15.59 18.108-23.832 38.938-23.832 60.239v176.115h0.18c1.075 19.919 9.322 39.273 24.031 56.234l34.589 39.885-34.021 39.511c-15.59 18.108-23.832 38.938-23.832 60.239v157.153h18.963v-4.587l104.175 0.106 0.022 4.526zM564.264 798.167l0.086 17.934-103.525-0.104v-17.967c0-0.539 0.027-1.077 0.040-1.616l103.349 0.105c0.018 0.55 0.047 1.099 0.050 1.648zM564.442 835.064l0.095 19.582-103.711-0.105v-19.582l103.616 0.105zM460.825 873.505l103.802 0.105 0.095 19.582-103.897-0.106v-19.581zM459.927 597.696v-0.449h-0.050v-18.636l104.095 0.105 0.084 19.582-104.117-0.106c-0.001-0.165-0.012-0.33-0.012-0.496zM563.316 426.179l0.078 17.937-103.516-0.104v-17.966c0-0.539 0.027-1.078 0.040-1.617l103.349 0.104c0.017 0.55 0.046 1.098 0.049 1.646zM563.475 463.080l0.084 19.582-103.682-0.106v-19.581l103.598 0.105zM563.64 501.626l0.084 19.581-103.848-0.105v-19.582l103.763 0.106zM563.807 540.17l0.084 19.582-104.014-0.105v-19.582l103.929 0.105zM563.175 150.127l-104.197-0.105v-19.582l104.197 0.105v19.582zM563.175 169.090v19.582l-104.197-0.106v-19.581l104.197 0.105zM458.979 225.711v-18.182l104.197 0.106v18.334c0 0.415-0.023 0.831-0.031 1.247l-104.13-0.105c-0.010-0.467-0.035-0.934-0.035-1.4zM563.175 92.001v19.581l-104.197-0.105v-19.583l104.197 0.107zM462.301 246.078l97.593 0.099c-2.188 6.72-5.448 13.293-9.753 19.59l-78.081-0.115c-4.304-6.292-7.563-12.859-9.759-19.574zM487.74 284.638l46.836 0.069-23.305 27.066-23.531-27.135zM534.074 367.009l-45.281-0.067 22.531-26.166 22.75 26.233zM473.17 385.881l76.669 0.114c4.372 6.288 7.709 12.854 9.971 19.574l-96.533-0.099c2.231-6.723 5.542-13.294 9.893-19.589zM462.953 617.158l98.181 0.1c-1.981 6.38-4.942 12.629-8.829 18.645l-80.512-0.119c-3.886-6.011-6.85-12.253-8.84-18.626zM487.082 654.77l50.032 0.074-24.895 28.912-25.137-28.986zM535.021 738.992l-45.281-0.066 22.531-26.167 22.75 26.233zM474.118 757.866l76.67 0.113c4.373 6.288 7.71 12.855 9.972 19.575l-96.533-0.099c2.229-6.725 5.541-13.296 9.891-19.59zM460.825 931.632v-19.582l103.988 0.106 0.095 19.582-104.083-0.106z"],"grid":0,"tags":["i-dna"],"defaultCode":59684},{"paths":["M470.739 928.897l-10.668-25.842 61.888-25.548-93.19-38.469 93.191-38.467-93.189-38.47 93.192-38.472-93.19-38.474 93.19-38.472-93.19-38.473 93.19-38.473-93.19-38.472 93.192-38.474-93.189-38.476 93.189-38.476-93.192-38.476 93.19-38.471-93.187-38.474 93.19-38.477-93.189-38.478 93.191-38.477-93.187-38.482 124.478-51.402 10.67 25.84-61.902 25.562 93.192 38.483-93.187 38.475 93.189 38.478-93.188 38.477 93.192 38.476-93.19 38.47 93.187 38.475-93.19 38.476 93.191 38.477-93.188 38.473 93.19 38.472-93.19 38.473 93.19 38.473-93.19 38.472 93.19 38.474-93.188 38.472 93.192 38.47-93.19 38.467 93.19 38.469z"],"grid":0,"tags":["i-electricity"],"defaultCode":59685},{"paths":["M417.069 52.656v918.687h189.863v-918.687h-189.863zM470.499 83.653c11.107 0 20.109 9.004 20.109 20.109s-9.004 20.109-20.109 20.109-20.109-9.004-20.109-20.109c-0.001-11.107 9.003-20.109 20.109-20.109zM470.499 175.54c11.107 0 20.109 9.004 20.109 20.109s-9.004 20.109-20.109 20.109-20.109-9.004-20.109-20.109c-0.001-11.106 9.003-20.109 20.109-20.109zM470.499 267.428c11.107 0 20.109 9.004 20.109 20.109s-9.004 20.109-20.109 20.109-20.109-9.004-20.109-20.109c-0.001-11.107 9.003-20.109 20.109-20.109zM470.499 359.315c11.107 0 20.109 9.004 20.109 20.109s-9.004 20.109-20.109 20.109-20.109-9.004-20.109-20.109c-0.001-11.106 9.003-20.109 20.109-20.109zM470.499 451.203c11.107 0 20.109 9.004 20.109 20.109s-9.004 20.109-20.109 20.109-20.109-9.004-20.109-20.109 9.003-20.109 20.109-20.109zM470.499 543.091c11.107 0 20.109 9.004 20.109 20.109s-9.004 20.109-20.109 20.109-20.109-9.004-20.109-20.109 9.003-20.109 20.109-20.109zM470.499 634.978c11.107 0 20.109 9.004 20.109 20.109s-9.004 20.109-20.109 20.109-20.109-9.004-20.109-20.109 9.003-20.109 20.109-20.109zM470.499 726.866c11.107 0 20.109 9.004 20.109 20.109s-9.004 20.109-20.109 20.109-20.109-9.004-20.109-20.109c-0.001-11.106 9.003-20.109 20.109-20.109zM470.499 818.753c11.107 0 20.109 9.004 20.109 20.109s-9.004 20.109-20.109 20.109-20.109-9.004-20.109-20.109c-0.001-11.107 9.003-20.109 20.109-20.109zM470.499 940.347c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109c0 11.107-9.004 20.109-20.109 20.109zM510.717 899.66c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109c0 11.106-9.003 20.109-20.109 20.109zM510.717 807.772c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109c0 11.107-9.003 20.109-20.109 20.109zM510.717 715.885c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109c0 11.106-9.003 20.109-20.109 20.109zM510.717 623.997c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109-9.003 20.109-20.109 20.109zM510.717 532.109c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109-9.003 20.109-20.109 20.109zM510.717 440.222c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109-9.003 20.109-20.109 20.109zM510.717 348.334c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109c0 11.106-9.003 20.109-20.109 20.109zM510.717 256.447c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109c0 11.107-9.003 20.109-20.109 20.109zM510.717 164.56c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109c0 11.106-9.003 20.109-20.109 20.109zM553.501 940.347c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109c0.001 11.107-9.003 20.109-20.109 20.109zM553.501 858.972c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109c0.001 11.107-9.003 20.109-20.109 20.109zM553.501 767.085c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109c0.001 11.106-9.003 20.109-20.109 20.109zM553.501 675.197c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109-9.003 20.109-20.109 20.109zM553.501 583.309c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109-9.003 20.109-20.109 20.109zM553.501 491.422c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109-9.003 20.109-20.109 20.109zM553.501 399.534c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109c0.001 11.106-9.003 20.109-20.109 20.109zM553.501 307.647c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109c0.001 11.107-9.003 20.109-20.109 20.109zM553.501 215.76c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109c0.001 11.106-9.003 20.109-20.109 20.109zM553.501 123.872c-11.107 0-20.109-9.004-20.109-20.109s9.004-20.109 20.109-20.109 20.109 9.004 20.109 20.109c0.001 11.106-9.003 20.109-20.109 20.109z"],"grid":0,"tags":["i-lucifer-stroke"],"defaultCode":59686},{"paths":["M512 97.011c-33.747 0-61.105 38.667-61.105 86.367 0 18.332 4.045 35.328 10.937 49.309 0 3.192 0 6.385 0 9.577 0 18.926 0 37.852 0 56.778 0 27.752 0 55.504 0 83.255 0 33.298 0 66.596 0 99.894 0 35.467 0 70.934 0 106.401 0 34.742 0 69.483 0 104.225 0 30.642 0 61.285 0 91.927 0 23.241 0 46.482 0 69.723 0 12.838 0 25.675 0 38.512 0 3.285-0.539 6.263 2.393 8.578 3.905 3.081 8.514 5.541 12.681 8.251 7.244 4.714 14.489 9.427 21.733 14.142 3.655 2.378 7.31 4.757 10.965 7.135 1.773 1.154 3.502 0.927 4.794 0 0 0 0.001 0 0.002 0 15.141-9.852 30.282-19.704 45.423-29.557 0.193-0.125 0.368-0.261 0.533-0.399 1.070-0.752 1.815-1.983 1.815-3.694 0-6.020 0-12.041 0-18.060 0-16.385 0-32.77 0-49.156 0-24.238 0-48.474 0-72.712 0-29.576 0-59.152 0-88.728 0-32.402 0-64.804 0-97.205 0-32.714 0-65.429 0-98.143 0-30.651 0-61.302 0-91.951 0-25.772 0-51.543 0-77.315 0-18.533 0-37.066 0-55.599 0-5.35 0.084-10.716 0.1-16.079 6.831-13.943 10.836-30.862 10.836-49.106-0-47.703-27.358-86.371-61.105-86.371zM507.255 322.825c0 24.030 0 48.060 0 72.090 0 29.311 0 58.622 0 87.933 0 32.265 0 64.531 0 96.795 0 32.415 0 64.83 0 97.245 0 30.231 0 60.461 0 90.691 0 25.67 0 51.339 0 77.010 0 17.447 0 34.894 0 52.342-0.015 5.076-0.066 10.158-0.089 15.241-0.015 2.005-0.020 4.010-0.015 6.014-11.946-7.773-23.891-15.546-35.838-23.319 0-5.166 0-10.331 0-15.496 0-16.385 0-32.77 0-49.156 0-24.238 0-48.474 0-72.712 0-29.576 0-59.152 0-88.728 0-32.402 0-64.804 0-97.205 0-32.714 0-65.429 0-98.143 0-30.651 0-61.302 0-91.951 0-25.772 0-51.543 0-77.315 0-18.533 0-37.066 0-55.599 0-0.246 0.008-0.496 0.009-0.743 2.583 3.259 5.362 6.211 8.31 8.819-0.422 3.285-1.363 6.607-1.889 9.592-0.953 5.411-1.94 10.83-2.856 16.247-0.718 4.243-1.344 9.096 0.834 13.055 2.624 4.766 8.013 6.032 13.096 6.144 9.737 0.214 13.895-6.694 12.643-15.641-0.86-6.14-2.227-12.251-2.254-18.195 2.538 0.764 5.134 1.307 7.778 1.611 0.077 4.533 0.246 9.069 0.272 13.536 0 13.279 0 26.558 0 39.836zM552.687 288.302c0 24.237 0 48.474 0 72.712 0 29.576 0 59.152 0 88.729 0 32.402 0 64.803 0 97.205 0 32.715 0 65.429 0 98.144 0 30.651 0 61.301 0 91.951 0 25.772 0 51.543 0 77.315 0 18.533 0 37.067 0 55.6 0 8.295-0.212 16.628-0.023 24.925-11.973 7.791-23.945 15.581-35.919 23.372 0-3.047 0-6.095 0-9.143 0-16.32 0-32.64 0-48.96 0-24.030 0-48.060 0-72.090 0-29.311 0-58.622 0-87.933 0-32.265 0-64.531 0-96.795 0-32.415 0-64.83 0-97.245 0-30.23 0-60.461 0-90.691 0-25.67 0-51.339 0-77.010 0-18.368 0-36.736 0-55.104 0-4.521 0.238-9.187 0.339-13.84 13.625-1.587 25.981-9.491 35.602-21.637 0 13.499 0 26.998 0 40.495z"],"grid":0,"tags":["i-lucifer"],"defaultCode":59687},{"paths":["M661.644 123.503c-39.334-6.398-78.667-12.795-118.001-19.192-5.626-0.915-11.253-1.83-16.879-2.745-4.635-0.754-10.753 1.151-11.663 6.622-3.966 23.837-7.932 47.675-11.898 71.511-9.057 54.434-18.113 108.868-27.17 163.302-9.885 59.416-19.771 118.83-29.656 178.245-6.452 38.78-12.904 77.56-19.356 116.341-0.574 3.449-1.162 6.897-1.722 10.349-0.661 4.076-0.055 7.377 1.192 11.26 8.005 24.952 16.010 49.906 24.015 74.859 0.689 2.149 1.379 4.297 2.068 6.445 2.617 8.158 12.639 8.904 17.329 2.265 11.421-16.163 22.843-32.327 34.263-48.49 5.58-7.896 11.159-15.792 16.739-23.689 1.414-2.001 2.282-3.842 2.67-6.227 4.437-27.28 8.874-54.561 13.311-81.841 8.201-50.42 16.401-100.839 24.602-151.26 8.092-49.754 16.185-99.508 24.276-149.263 4.188-25.752 8.52-51.485 12.566-77.261 0.057-0.364 0.119-0.727 0.177-1.091 0.821-5.048-1.311-10.204-6.622-11.663-4.526-1.244-10.836 1.539-11.663 6.622-3.455 21.243-6.91 42.487-10.365 63.731-7.822 48.092-15.643 96.184-23.466 144.276-8.33 51.22-16.661 102.439-24.991 153.658-5.139 31.597-10.278 63.193-15.417 94.79-0.195 1.2-1.064 3.671-1.077 5.279-0.235 0.394-0.446 0.781-0.572 0.96-2.269 3.21-4.537 6.421-6.806 9.631-10.86 15.369-21.72 30.738-32.58 46.107-6.072-18.927-12.144-37.855-18.216-56.782-0.957-2.982-1.913-5.964-2.869-8.945 2.814-16.91 5.627-33.821 8.44-50.732 7.17-43.094 14.34-86.189 21.51-129.284 8.669-52.102 17.337-104.202 26.006-156.304 7.511-45.144 15.022-90.289 22.534-135.433 2.447-14.709 4.894-29.416 7.342-44.125 0.761-4.579 1.767-9.223 2.55-13.868 35.827 5.827 71.654 11.655 107.481 17.482 2.86 0.466 5.719 0.93 8.579 1.396-0.413 2.539-0.826 5.077-1.239 7.617-2.645 16.265-5.291 32.531-7.936 48.795-3.913 24.056-7.825 48.112-11.738 72.168-4.774 29.349-9.547 58.698-14.321 88.047-5.202 31.989-10.406 63.977-15.608 95.965-5.277 32.446-10.555 64.891-15.831 97.338-4.921 30.257-9.843 60.515-14.764 90.772-4.159 25.571-8.318 51.142-12.477 76.713-2.99 18.387-5.981 36.774-8.971 55.161-1.357 8.342-3.326 16.835-4.157 25.264-12.307 12.608-24.613 25.215-36.92 37.823-20.793 21.301-41.585 42.602-62.378 63.903-1.65 1.69-3.299 3.379-4.948 5.070-6.015-12.906-12.029-25.812-18.044-38.719-12.41-26.629-24.82-53.257-37.23-79.887-2.363-5.071-4.726-10.14-7.088-15.21 0.76-4.678 1.522-9.357 2.282-14.035 2.645-16.265 5.291-32.531 7.936-48.795 3.913-24.056 7.825-48.112 11.738-72.168 4.773-29.349 9.547-58.698 14.321-88.047 5.202-31.989 10.405-63.977 15.608-95.965 5.277-32.446 10.555-64.891 15.831-97.338 4.921-30.257 9.843-60.515 14.764-90.772 4.159-25.571 8.318-51.142 12.477-76.713 2.99-18.387 5.981-36.774 8.971-55.161 1.416-8.705 2.879-17.403 4.248-26.115 0.059-0.372 0.12-0.742 0.181-1.113 0.821-5.049-1.311-10.204-6.622-11.663-4.526-1.244-10.836 1.539-11.663 6.622-1.487 9.143-2.974 18.286-4.461 27.428-3.917 24.080-7.833 48.159-11.749 72.239-5.566 34.222-11.132 68.443-16.698 102.665-6.436 39.568-12.871 79.136-19.307 118.704-6.525 40.119-13.050 80.239-19.575 120.358-5.855 35.998-11.71 71.997-17.564 107.995-4.358 26.792-8.715 53.584-13.073 80.375-2.104 12.938-4.26 25.87-6.314 38.816-0.42 2.645-0.764 5.006 0.228 7.709 0.922 2.512 2.244 4.923 3.372 7.342 6.352 13.63 12.703 27.259 19.056 40.889 14.842 31.848 29.685 63.697 44.527 95.545 0.964 2.070 1.929 4.14 2.894 6.209 2.6 5.579 10.938 5.97 14.892 1.918 19.205-19.674 38.409-39.348 57.613-59.022 13.265-13.589 26.528-27.178 39.793-40.766 6.127-6.278 12.688-12.332 18.477-18.928 2.779-3.167 2.849-6.683 3.489-10.618 1.064-6.538 2.127-13.077 3.191-19.614 3.88-23.855 7.76-47.711 11.639-71.566 5.537-34.042 11.073-68.085 16.611-102.127 6.449-39.654 12.9-79.31 19.349-118.964 6.555-40.303 13.11-80.606 19.666-120.909 5.851-35.977 11.703-71.953 17.554-107.93 4.393-27.011 8.786-54.022 13.179-81.032 2.158-13.267 4.358-26.528 6.474-39.802 0.093-0.582 0.19-1.164 0.283-1.746 0.751-4.62-1.148-10.773-6.623-11.663z"],"grid":0,"tags":["i-paperclip"],"defaultCode":59688},{"paths":["M440.915 143.766c-0.261 0.138-0.563 0.356-0.867 0.695s-0.485 0.664-0.592 0.939c0.261-0.138 0.563-0.356 0.867-0.695s0.485-0.664 0.592-0.939z","M478.845 167.554c0.155-0.427 0.203-0.796 0.201-1.090-0.191 0.224-0.391 0.538-0.546 0.966s-0.203 0.797-0.201 1.090c0.192-0.225 0.391-0.539 0.546-0.966z","M642.843 247.261c-6.047-18.579-15.235-36.146-26.701-51.113 4.068-6.142 8.342-17.956-2.901-33.313l-0.366-0.453c-1.557-1.752-7.712-8.606-15.913-16.832-0.118-3.237-1.38-6.567-3.815-9.297-3.059-3.428-7.264-5.13-11.253-4.986-10.931-9.708-22.672-18.542-31.57-21.14-3.985-1.165-7.174-0.377-9.627 0.797-3.177-5.88-6.354-11.76-9.531-17.64-0.541-1.002-1.007-1.986-1.519-2.902 0.826-3.25 1.651-6.501 2.477-9.751 1.502-5.916-7.639-8.44-9.143-2.521-0.575 2.262-1.149 4.525-1.724 6.787-2.586-0.816-5.219-1.538-7.772-2.353-2.654-0.85-4.612 0.59-5.414 2.582-1.254 0.341-2.509 0.685-3.763 1.026-0.566-2.687-1.245-5.367-1.8-8.030-1.244-5.97-10.385-3.444-9.143 2.52 0.731 3.51 1.462 7.020 2.194 10.529-4.122 6.567-8.243 13.134-12.365 19.7-2.439-1.145-5.593-1.89-9.519-0.744-8.897 2.598-20.638 11.432-31.57 21.14-3.99-0.144-8.196 1.56-11.254 4.987-2.436 2.73-3.697 6.059-3.814 9.296-8.201 8.225-14.356 15.079-15.913 16.832l-0.366 0.453c-11.243 15.356-6.968 27.171-2.901 33.313-11.466 14.967-20.653 32.534-26.701 51.113-7.641 23.474-10.103 47.6-7.319 71.707 2.917 25.257 11.621 49.929 25.867 73.335 15.506 25.473 37.701 49.539 65.962 71.578-9.279 9.886-17.33 20.215-23.84 30.679-14.433 23.198-21.58 46.949-21.244 70.591 0.497 35.023 17.251 68.515 49.856 99.896-42.873 39.55-65.524 76.804-67.359 110.932-1.34 24.894 8.255 48.177 28.516 69.206 10.247 10.635 18.128 26.827 21.080 43.312 3.299 18.412 0.409 36.123-8.137 49.866-1.705 2.741-1.623 6.232 0.208 8.895 1.538 2.236 4.061 3.532 6.713 3.532 0.513 0 1.031-0.048 1.547-0.148 1.773-0.343 3.402-1.281 4.587-2.634 32.077-36.615 34.688-90.191 17.001-117.257l-1.971-3.012c-15.84-24.196-26.304-40.18-21.924-58.932 4.26-18.239 23.354-40.069 61.3-69.806 37.943 29.736 57.043 51.567 61.303 69.806 4.38 18.752-6.084 34.737-21.924 58.932l-1.971 3.012c-17.687 27.067-15.076 80.643 16.999 117.255 1.187 1.357 2.817 2.294 4.598 2.639 0.514 0.099 1.030 0.147 1.541 0.147 2.648 0 5.173-1.295 6.711-3.533 1.831-2.662 1.912-6.153 0.208-8.895-8.546-13.743-11.436-31.454-8.138-49.866 2.953-16.485 10.834-32.677 21.080-43.312 20.261-21.029 29.855-44.313 28.516-69.206-1.837-34.128-24.489-71.379-67.36-110.929 32.606-31.382 49.36-64.876 49.856-99.9 0.336-23.643-6.812-47.392-21.244-70.591-6.51-10.464-14.562-20.793-23.84-30.679 28.26-22.039 50.456-46.104 65.962-71.578 14.246-23.405 22.95-48.078 25.867-73.335 2.785-24.107 0.323-48.232-7.318-71.707zM440.049 144.461c0.303-0.339 0.606-0.558 0.867-0.695-0.107 0.275-0.289 0.6-0.592 0.939s-0.606 0.558-0.867 0.695c0.107-0.274 0.289-0.599 0.592-0.939zM410.235 385.893c-13.314-21.872-21.44-44.864-24.151-68.339-4.786-41.434 8.091-85.382 34.449-117.558l4.199-4.717-4.974-3.883c-1.479-1.298-8.35-8.384 0.78-21.052 3.010-3.378 7.549-8.263 12.852-13.65 1.654 0.819 3.477 1.228 5.339 1.228 3.849 0 7.85-1.717 10.79-5.010v-0.001c2.329-2.609 3.695-5.868 3.848-9.177 0.084-1.824-0.215-3.588-0.846-5.192 9.226-8.047 18.314-14.746 24.608-16.583 0.481-0.139 0.625-0.182 2.663 1.21 0.253 0.174 0.506 0.345 0.758 0.514 0.278 0.185 0.554 0.364 0.826 0.54 1.973 1.28 1.98 1.317 2.138 2.271 0.924 5.541-0.399 14.886-3.737 27.193-2.257-0.045-4.544 0.557-6.61 1.796-2.84 1.704-5.061 4.453-6.254 7.74s-1.253 6.821-0.166 9.95c0.905 2.606 2.566 4.762 4.707 6.201-2.333 6.375-4.974 13.154-7.917 20.291l-0.18 0.436c-2.266 5.501-5.807 8.269-11.143 8.709-4.545 0.375-8.603-1.153-8.611-1.156l-5.060-2.006-2.616 4.773c-28.93 52.794-31.597 99.103-8.155 141.577 16.66 30.183 44.781 55.623 74.378 79.645-2.825 2.244-5.66 4.489-8.504 6.74l-1.251 0.99c-6.336 5.016-12.35 10.264-18.002 15.683-27.633-21.363-49.222-44.626-64.159-69.164zM479.046 166.463c0.002 0.295-0.046 0.664-0.201 1.090s-0.356 0.741-0.546 0.966c-0.002-0.294 0.046-0.663 0.201-1.090s0.356-0.741 0.546-0.966zM512.001 626.679c-18.753-20.978-27.743-41.105-27.325-61.001 0.399-19.043 9.414-38.761 27.324-59.586 17.91 20.825 26.924 40.544 27.324 59.586 0.418 19.896-8.572 40.024-27.323 61.001zM591.092 564.975c-0.452 31.829-16.155 62.617-46.731 91.822-0.041-0.036-0.080-0.071-0.12-0.106l-42.364 34.521c0.015 0.011 0.029 0.023 0.045 0.034-39.137 30.977-58.339 53.837-63.225 74.757-5.581 23.891 7.304 43.572 23.615 68.487l1.965 3.004c12.606 19.291 11.090 47.77 1.79 72.090 1.914-27.438-9.087-55.816-25.595-72.949-17.793-18.467-26.232-38.651-25.083-59.992 1.671-31.058 23.246-65.728 64.158-103.233 0.036 0.031 0.071 0.064 0.107 0.096l5.554-5.199c3.323-2.942 6.752-5.898 10.309-8.873 38.424-32.133 56.785-62.884 56.131-94.011-0.467-22.267-10.79-44.907-31.302-68.446 8.044-8.303 17.464-16.786 28.284-25.476 21.565 22.657 43.011 54.958 42.464 93.475zM512 423.763c-65.086-52.505-118.296-106.263-67.542-203.167 2.285 0.43 5.128 0.736 8.214 0.539 10.165-0.645 18.008-6.446 22.082-16.338l0.178-0.432c3.24-7.855 6.606-16.466 9.679-25.152 2.629-1.717 4.69-4.337 5.821-7.452 1.194-3.288 1.253-6.822 0.166-9.95-0.056-0.16-0.129-0.31-0.191-0.467 4.246-14.619 6.735-28.074 5.267-36.875-0.69-4.136-2.598-6.654-4.563-8.377 3.593-5.726 7.187-11.451 10.78-17.176 0.613-0.976 1.239-1.866 1.78-2.758 3.272-0.892 6.543-1.784 9.815-2.677 0.5-0.137 0.935-0.331 1.317-0.565 2.172 0.695 4.345 1.39 6.518 2.085 3.817 7.065 7.634 14.129 11.451 21.195-1.923 1.72-3.769 4.22-4.444 8.273-1.468 8.802 1.021 22.257 5.267 36.875-0.062 0.157-0.135 0.306-0.191 0.467-1.087 3.128-1.027 6.662 0.166 9.95 1.13 3.116 3.192 5.735 5.821 7.452 3.072 8.687 6.439 17.297 9.679 25.152l0.178 0.431c4.075 9.893 11.917 15.695 22.083 16.338 3.087 0.195 5.929-0.11 8.214-0.539 50.752 96.904-2.459 150.662-67.544 203.167z"],"attrs":[{"fill":"rgb(255, 255, 255)"},{"fill":"rgb(255, 255, 255)"},{"fill":"rgb(0, 0, 0)"}],"isMulticolor":true,"grid":0,"tags":["i-snake"],"colorPermutations":{"12552552551":[{"f":1},{"f":1},{"f":0}]},"defaultCode":59689},{"paths":["M503.786 919.971c0.054 0.044 0.106 0.089 0.16 0.134 1.245 1.012 4.514 3.154-0.16-0.134z","M551.65 206.196c-0.125 0.349-0.278 0.796-0.458 1.35 0.009-0.016 0.019-0.032 0.027-0.048 0.144-0.435 0.288-0.869 0.43-1.302z","M581.337 101.186c0.329 1.795 0.889 3.603-0.215-1.638 0.016 0.152 0.028 0.303 0.045 0.455 0.056 0.398 0.111 0.794 0.171 1.183z","M584.211 720.115c-2.192-1.899-4.442-3.704-6.7-5.412-13.903-10.514-30.005-18.005-45.827-25.126-0.924-0.416-1.853-0.823-2.779-1.234 0.822 0.189 1.643 0.379 2.467 0.553 7.864 1.654 17.492 0.491 23.063-6.096 15.524-18.357 26.067-39.918 21.434-64.426-1.569-8.297-5.327-15.953-10.434-22.668 3.757-4.498 7.291-9.185 10.568-14.204 15.457-23.683 28.783-53.022 15.574-80.67-7.855-16.442-24.038-26.409-41.292-33.018 0.57-1.285 1.123-2.539 1.657-3.754 3.513-7.987 6.911-16.024 10.267-24.079 0.294 0.063 0.587 0.133 0.881 0.194 21.582 4.491 44.245 2.885 57.877-16.744 14.2-20.447 8.468-50.411 3.505-72.78-1.864-8.403-4.107-16.716-6.517-24.978-3.772-12.933-16.411-19.114-29.158-16.556-19.725 3.959-31.717 26.311-39.857 42.664-4.944 9.931-9.463 20.070-13.795 30.296-3.134-1.058-6.272-2.091-9.421-3.063-14.115-4.358-28.567-7.704-43.186-8.039 8.107-28.758 15.87-57.6 21.194-87.022 0.602-3.324 1.197-6.683 1.763-10.066 3.31-0.063 6.591-0.246 9.804-0.576 23.588-2.42 47.058-9.726 64.693-26.284 22.46-21.087 22.633-51.74 17.077-79.942-3.218-16.338-8.247-32.25-12.139-48.429-0.925-3.848-1.791-7.71-2.547-11.595-0.369-1.896-0.714-3.797-1.023-5.704-0.009-0.056-0.015-0.114-0.024-0.169-0.064-0.353-0.12-0.704-0.153-1.001-0.007-0.060-0.011-0.12-0.018-0.181-0.055-0.391-0.113-0.78-0.193-1.158 0.053 0.248 0.102 0.48 0.149 0.703-0.352-3.392-0.571-6.799-0.576-10.209-0.004-1.934 0.057-3.868 0.2-5.797 0.009-0.108 0.013-0.294 0.019-0.514 1.096-6.389 0.979-12.365-2.408-18.153-2.878-4.917-8.515-9.606-14.166-10.893-11.517-2.624-26.889 3.492-29.158 16.556-5.183 29.841 3.625 58.824 11.175 87.468 1.677 6.361 3.298 12.741 4.642 19.183 0.62 2.968 1.147 5.949 1.65 8.938 0.152 1.563 0.316 3.123 0.415 4.693 0.178 2.814 0.238 5.637 0.118 8.455-0.034 0.796-0.11 1.593-0.177 2.389-0.047 0.27-0.090 0.542-0.149 0.81-0.277 1.276-0.656 2.502-1.056 3.721 0.847-2.366 0.456-0.35-0.382 1.215-0.016 0.029-0.033 0.058-0.049 0.087-0.162 0.488-0.321 0.98-0.477 1.475-0.002 0.002-0.004 0.005-0.006 0.007 0.169-0.543 0.32-1.019 0.455-1.433-0.488 0.902-1.012 1.783-1.571 2.642-0.062 0.095-0.183 0.245-0.327 0.42-1.238 1.377-2.552 2.684-3.939 3.91-0.155 0.137-0.317 0.265-0.475 0.397-1.612 1.082-3.227 2.144-4.917 3.107-1.259 0.718-2.548 1.382-3.847 2.024-0.942 0.277-2.34 1.060-2.915 1.268-4.201 1.521-8.513 2.73-12.883 3.659-1.661 0.354-3.334 0.622-5.002 0.918-1.033 0.101-2.065 0.203-3.1 0.279-1.082 0.080-2.166 0.14-3.249 0.188-0.385-5.506-1.142-10.97-2.376-16.356-5.301-23.118-24.984-40.469-49.458-37.804-6.457 0.704-12.502 1.814-18.587 4.032-7.11 2.591-15.418 8.221-16.556 16.556-2.037 14.916-1.224 28.407 5.332 42.18 5.024 10.554 14.064 19.152 23.835 25.317 2.563 1.618 5.246 3.063 8.009 4.376-0.064 0.401-0.122 0.804-0.19 1.205-6.855 40.983-18.8 80.856-30.112 120.826-4.952 3.238-9.592 6.847-13.77 10.699-16.432 15.15-24.295 36.723-19.748 58.734 2.193 10.616 7.47 20.505 14.879 28.275 2.291 11.973 8.911 23.147 15.624 33.142 7.053 10.501 15.773 21.175 27.363 26.902 32.714 16.162 57.382-6.264 75.101-34.045 0.206 0.067 0.413 0.127 0.618 0.195 1.376 0.46 2.747 0.938 4.108 1.438 0.801 0.295 3.246 1.659 4.42 1.853 1.087 0.526 2.166 1.067 3.227 1.641 1.943 1.051 3.786 2.226 5.625 3.435 0.75 0.691 1.509 1.372 2.216 2.112 0.098 0.101 0.221 0.238 0.355 0.391 0.031 0.048 0.064 0.1 0.090 0.141 0.213 0.348 0.401 0.709 0.59 1.070 0.078 0.274 0.151 0.548 0.218 0.823-0.003 0.927-0.027 1.849-0.060 2.77 0.061-1.329 0.125-2.029 0.176-2.3 0.034 0.144 0.068 0.288 0.101 0.432 0.004 0.686-0.066 1.865-0.27 2.822-0.015 0.072-0.033 0.142-0.049 0.214-0.019 0.513-0.037 1.026-0.050 1.543 0.014-0.56 0.029-1.065 0.045-1.521-0.214 0.983-0.456 1.96-0.723 2.93-0.48 1.74-1.125 3.417-1.755 5.097-0.184 0.595-0.461 1.405-0.755 2.106-0.139 0.404-0.285 0.806-0.411 1.215 0.104-0.337 0.198-0.641 0.289-0.931-0.033 0.075-0.066 0.147-0.1 0.217-0.675 1.42-1.38 2.826-2.108 4.221-1.678 3.211-3.484 6.354-5.37 9.448-1.992 3.268-4.078 6.479-6.225 9.647-0.535 0.789-1.096 1.566-1.647 2.35-1.475 1.723-3.005 3.399-4.57 5.043-30.221-10.328-65.644-6.27-90.779 13.711-16.668 13.251-24.731 34.42-25.304 55.271-0.305 11.116 1.118 23.442 4.834 33.957 3.685 10.428 10.83 17.339 19.549 23.689 13.042 9.498 28.576 15.678 43.284 22.062 14.869 6.453 29.872 12.686 44.435 19.821-3.001 6.782-4.733 13.882-5.575 21.387-1.885 16.803 3.922 34.386 13.844 47.87 3.606 4.901 7.909 9.468 14.166 10.893 6.292 1.433 12.551 0.807 18.265-2.39 6.56-3.67 13.137-7.851 19.109-12.662-0.003 0.036-0.005 0.071-0.009 0.107-0.009 0.099-0.015 0.207-0.020 0.321-0.171 1.017-0.336 2.035-0.539 3.047-0.643 3.215-1.454 6.397-2.429 9.528-0.443 1.423-0.919 2.836-1.429 4.236-0.305 0.838-0.659 1.662-0.952 2.503-0.15 0.43-0.231 0.674-0.263 0.786-0.865 1.658-1.871 3.282-2.697 4.737-1.258 2.216-2.642 4.33-4.076 6.425 0.304-0.34 0.632-0.705 1.016-1.125-0.535 0.584-1.009 1.24-1.516 1.852-0.125 0.18-0.247 0.361-0.373 0.542-0.601 0.865-1.418 1.651-1.31 1.387-0.51 0.563-1.030 1.118-1.558 1.663-1.071 1.106-2.178 2.175-3.324 3.202-0.146 0.131-0.31 0.267-0.484 0.406 0.418-0.275 0.89-0.584 1.44-0.941-0.613 0.397-1.211 0.81-1.807 1.225-0.779 0.591-1.633 1.151-1.959 1.341-0.82 0.549-1.651 1.081-2.532 1.547-0.176 0.094-0.358 0.175-0.539 0.262-1.691 0.601-3.382 1.191-5.1 1.716-9.906 3.029-20.092 5.12-30.186 7.408-22.257 5.044-48.442 9.994-65.482 26.384-13.347 12.838-14.964 30.904-7.433 47.157 7.792 16.819 25.451 29.122 40.205 39.178 10.273 7.002 26.735 2.278 32.431-8.504 6.35-12.019 2.459-24.958-8.504-32.431-2.272-1.548-4.526-3.118-6.745-4.742-1.023-0.749-2.016-1.555-3.054-2.281 0.325 0.228 0.616 0.432 0.886 0.622-3.129-2.55-6.167-5.227-8.98-8.123-0.070-0.072-0.135-0.15-0.204-0.222 0.285-0.139 0.573-0.278 0.859-0.414-0.336 0.156-0.625 0.291-0.869 0.403-0.022-0.023-0.043-0.047-0.065-0.071 0.602-0.286 1.333-0.616 1.906-0.837 0.14-0.054 0.283-0.104 0.424-0.158 0.471-0.221 0.942-0.443 1.413-0.667-0.498 0.238-0.948 0.453-1.359 0.648 1.415-0.538 2.838-1.050 4.27-1.538 5.887-2.002 11.895-3.643 17.924-5.156 11.958-3.001 24.058-5.401 36.010-8.422 11.327-2.863 22.921-6.374 32.417-13.39 13.735-10.147 24.617-23.467 31.519-39.134 13.482-30.601 16.768-70.337-4.285-98.603-8.312-11.166-18.692-19.081-30.552-24.172zM550.668 209.2c-0.010 0.034-0.022 0.067-0.032 0.101 0.010-0.034 0.020-0.064 0.030-0.099 0.001 0 0.002-0.001 0.002-0.002zM580.8 395.362c0.001-0.002 0.002-0.005 0.003-0.007 0.221 0.039 0.442 0.079 0.681 0.12-0.228-0.041-0.456-0.075-0.684-0.114zM582.086 394.622c-0.014 0.073-0.028 0.142-0.042 0.203-0.022 0.104-0.059 0.22-0.090 0.332-0.354-0.003-0.707 0.002-1.062-0.011 0.193-0.443 0.38-0.888 0.575-1.33 0.247-0.563 0.499-1.126 0.748-1.69-0.029 0.832-0.068 1.665-0.129 2.496zM577.445 394.786c-0.378-0.067-0.757-0.126-1.134-0.202 0.301 0.046 0.875 0.14 1.799 0.299-0.231-0.033-0.455-0.065-0.665-0.097zM475.066 418.298c0.072-0.015 0.146-0.026 0.218-0.040 1.773-0.112 3.54-0.206 5.321-0.191 1.979 0.016 3.958 0.119 5.929 0.286 0.54 0.046 1.078 0.108 1.617 0.165 8.593 1.418 17.020 3.74 25.33 6.316 1.198 0.372 2.394 0.753 3.589 1.139-0.795 1.887-1.697 4.019-1.889 4.482-0.851 1.998-1.699 3.998-2.564 5.991-2.525 5.816-5.11 11.606-7.8 17.347-0.278 0.593-0.56 1.182-0.839 1.774-3.861-0.686-7.736-1.254-11.616-1.646-6.802-0.686-13.647-0.247-20.453 0.124-3.977 0.217-7.909 0.274-11.84 0.262 1.015-4.524 2.119-9.027 3.25-13.517 1.754-6.959 3.59-13.9 5.471-20.83 2.070-0.649 4.162-1.224 6.278-1.663zM443.96 435.893c0.601-0.585 1.156-1.282 1.71-1.957 0.359-0.149 0.045 0.539-1.765 2.043 0.018-0.028 0.035-0.059 0.054-0.086zM463.223 421.913c0.379-0.154 0.759-0.309 1.138-0.449 0.378-0.138 0.761-0.268 1.143-0.403 0.11 0.024-0.488 0.307-2.672 1.044 0.131-0.063 0.261-0.127 0.392-0.192zM468.635 496.24c-0.485-0.663-0.969-1.326-1.432-2.004-0.133-0.194-0.254-0.397-0.386-0.593 0.18 0.22 0.783 1.050 2.068 2.902-0.081-0.096-0.164-0.196-0.25-0.305zM456.946 476.295c-0.049-0.1-0.095-0.201-0.143-0.302 0-0.009 0-0.020 0-0.029 0.060 0.133 0.115 0.258 0.165 0.375-0.007-0.015-0.014-0.029-0.022-0.044zM442.793 448.839c-0.189-0.683-0.472-1.382-0.754-2.077 0.207 0.038 0.632 0.721 0.858 2.259-0.035-0.061-0.069-0.121-0.104-0.182zM445.788 452.941c-0.017-0.009-0.034-0.020-0.051-0.028 0.006 0.008 0.009 0.012 0.014 0.019-0.096-0.027-0.192-0.049-0.286-0.075-0.099-0.081-0.203-0.171-0.31-0.267-0.021-0.012-0.042-0.023-0.063-0.035-0.032-0.037-0.066-0.080-0.099-0.119-0.073-0.070-0.145-0.137-0.22-0.213-0.039-0.040-0.078-0.087-0.116-0.13 0.035 0.020 0.077 0.042 0.111 0.061-0.155-0.204-0.315-0.428-0.468-0.676-0.007-0.011-0.012-0.023-0.019-0.034 0.481 0.443 0.848 0.802 1.107 1.078 0.338 0.21 0.59 0.385 0.772 0.526-0.126-0.037-0.249-0.070-0.373-0.106zM474.874 501.488c-0.177 0.144-0.36 0.286-0.543 0.421 0.216 0.143 0.411 0.275 0.59 0.396-0.008 0-0.014 0-0.022 0-0.188-0.105-0.379-0.202-0.563-0.316-0.020-0.012-0.040-0.027-0.060-0.040-0.022 0.016-0.044 0.033-0.065 0.048-0.046-0.037-0.090-0.074-0.135-0.112-0.045 0.025-0.090 0.048-0.136 0.073 0.039-0.027 0.081-0.057 0.121-0.084-0.001-0.001-0.003-0.003-0.005-0.004-0.064 0.028-0.13 0.057-0.196 0.085 0.063-0.033 0.126-0.065 0.184-0.097-0.061-0.052-0.121-0.104-0.179-0.157-0.036-0.032-0.069-0.069-0.105-0.101-0.222-0.151-0.448-0.295-0.667-0.45 0.026-0.001 0.052-0.002 0.079-0.003 0.129 0.083 0.247 0.161 0.368 0.24-0.086-0.079-0.166-0.164-0.251-0.244 0.648-0.024 1.295-0.047 1.944-0.068 0.124-0.083 0.25-0.168 0.385-0.258-0.092 0.083-0.178 0.173-0.271 0.255 0.013 0 0.027-0.001 0.040-0.001-0.054 0.037-0.106 0.078-0.16 0.114-0.017 0.015-0.032 0.031-0.049 0.046-0.052 0.046-0.105 0.091-0.158 0.137 0.536-0.257 0.384-0.144-0.144 0.119zM471.676 503.131c0.014-0.001 0.027-0.002 0.041-0.003-0.35 0.18-0.7 0.363-1.047 0.555 0.362-0.2 0.691-0.38 1.006-0.552zM488.926 501.2c-1.373-0.060-1-0.063 0 0v0zM490.487 912.831c0.001-0.009 0.001-0.015 0.003-0.024 0.441-0.65 0.959-1.253-0.003 0.024zM487.816 916.283c-1.125 1.42-0.558 0.634 0 0v0zM578.116 818.962c-0.311 1.209-0.852 2.457-1.481 3.689 0.429-1.033 1.537-3.906 1.481-3.689zM565.923 773.752c-0.003-0.030-0.005-0.059-0.009-0.089 0.006 0.035 0.012 0.071 0.018 0.106-0.004-0.005-0.007-0.010-0.009-0.017zM555.808 760.703c0.037 0.003 0.074 0.004 0.11 0.008 0.15 0.012 0.312 0.030 0.478 0.050 0.332 0.061 0.656 0.139 0.985 0.207-0.003 0.003-0.006 0.007-0.009 0.009-0.403-0.067-0.915-0.157-1.563-0.274zM563.849 763.579c0.021-0.303 0.036-0.607 0.057-0.909 0.039 0.012 0.078 0.023 0.116 0.035-0.026 0.84-0.112 1.055-0.173 0.874zM526.348 622.732c0.237 0.246 0.452 0.506 0.677 0.759 0.113 0.143 0.227 0.29 0.339 0.439-0.525-0.594-0.912-1.041-1.183-1.36 0.055 0.056 0.113 0.105 0.167 0.161zM528.542 625.226c0.006 0.015 0.010 0.029 0.016 0.045-0.008-0.009-0.017-0.019-0.025-0.027-0.005-0.015-0.009-0.029-0.015-0.045 0.008 0.009 0.016 0.018 0.024 0.027zM524.705 636.048c-0.032 0.020-0.029 0.11 0.001 0.253-0.072-0.065-0.149-0.132-0.218-0.198-0.201-0.192-0.357-0.328-0.478-0.424-0.102-0.201 0.108-0.145 0.695 0.369zM525.984 637.369c-0.097-0.058-0.183-0.117-0.273-0.175-0.132-0.116-0.263-0.229-0.393-0.344-0.053-0.091-0.104-0.188-0.157-0.271-0.083-0.132-0.152-0.229-0.211-0.31 0.308 0.285 0.697 0.674 1.169 1.178-0.050-0.027-0.097-0.054-0.134-0.077zM529.417 627.803c-0.092-0.258-0.198-0.558-0.318-0.905 0.054 0.124 0.106 0.247 0.156 0.367 0.057 0.177 0.107 0.358 0.161 0.539zM458.994 628.468c-0.171 0.429-0.288 0.722-0.29 0.721-0.029-0.018 0.101-0.322 0.29-0.721zM461.868 656.805c1.852 1.342-0.12 0.109-1.665-1.14-0.177-0.126-0.357-0.247-0.535-0.375-0.003-0.013-0.006-0.027-0.009-0.040 0.089 0.062 0.176 0.122 0.261 0.181-0.094-0.080-0.187-0.158-0.274-0.236-0.637-2.565-1.196-5.148-1.641-7.754-0.004-0.021-0.007-0.038-0.009-0.058-0.060-0.572-0.117-1.143-0.161-1.717-0.186-2.369-0.269-4.748-0.229-7.124 0.026-1.531 0.163-3.047 0.283-4.567 0.166-0.847 0.334-1.693 0.54-2.531 0.385-1.559 0.849-3.098 1.38-4.613 0.109-0.214 0.192-0.375 0.219-0.426 0.787-1.521 1.665-2.993 2.619-4.416 0.016-0.019 0.031-0.039 0.047-0.057 1.029-1.154 2.116-2.255 3.255-3.3 0.209-0.192 0.426-0.375 0.641-0.558 2.285-1.487 4.609-2.824 7.041-4.046 0.195-0.073 0.389-0.149 0.585-0.217 1.687-0.587 3.398-1.102 5.128-1.55 1.649-0.428 3.314-0.793 4.989-1.101 0.095-0.017 0.19-0.030 0.283-0.046 1.614-0.129 3.226-0.235 4.837-0.296-5.556 8.709-9.637 18.135-10.146 28.9-0.645 13.639 6.222 25.903 16.476 34.229-5.004-2.212-9.989-4.469-14.926-6.83-6.486-3.103-12.962-6.365-18.988-10.314zM570.898 766.212c1.757 1.326 3.414 3.154 0 0v0zM581.521 784.881c0.231 1.153 0.455 2.308 0.688 3.463 0.006 0.052 0.009 0.101 0.014 0.151-0.58-2.66-0.739-3.599-0.703-3.613zM582.082 803.296c-0.017 0.656-0.040 1.401-0.245 1.863-0.061 0.136 0.079-0.804 0.245-1.863z","M562.165 842.029c-2.319 1.526-2.724 1.857-2.326 1.625 0.657-0.44 1.309-0.887 1.959-1.341 0.125-0.094 0.247-0.19 0.367-0.284z","M475.171 501.225c0.019-0.012 0.037-0.027 0.055-0.040 0.041-0.037 0.079-0.076 0.12-0.113-0.038 0.001-0.076 0.002-0.114 0.003-0.398 0.267-0.746 0.504-1.038 0.707-0.009 0.005-0.019 0.010-0.028 0.015-0.192-0.127-0.403-0.265-0.624-0.41 0.075 0.069 0.144 0.144 0.22 0.213 0.113 0.077 0.226 0.155 0.34 0.23-0.019 0.009-0.036 0.019-0.056 0.028 0.004 0.004 0.009 0.007 0.012 0.010 0.010-0.005 0.021-0.009 0.031-0.014-0.009 0.006-0.017 0.012-0.026 0.018 0.005 0.004 0.009 0.008 0.014 0.011 0.019-0.010 0.037-0.024 0.056-0.034 0.049 0.031 0.095 0.066 0.144 0.098 0.019-0.013 0.037-0.027 0.055-0.041-0.046-0.030-0.091-0.061-0.139-0.093 0.014-0.008 0.027-0.017 0.041-0.025 0.247-0.113 0.466-0.217 0.641-0.304 0.048-0.040 0.097-0.079 0.144-0.119-0.121 0.059-0.28 0.137-0.475 0.236 0.208-0.125 0.419-0.245 0.626-0.379z","M495.461 911.212c0.411-0.192 0.887-0.416 1.449-0.683-0.018 0.007-0.036 0.013-0.054 0.020-0.466 0.219-0.93 0.441-1.395 0.663z","M444.767 452.152c0.077 0.101 0.152 0.193 0.226 0.282 0.054 0.052 0.109 0.106 0.162 0.155 0.192 0.114 0.387 0.218 0.582 0.323-0.086-0.105-0.206-0.238-0.35-0.392-0.183-0.112-0.387-0.234-0.62-0.368z","M569.212 834.828c0.168-0.242 0.334-0.485 0.5-0.728-1.525 1.707-2.104 2.465-2.183 2.658 0.535-0.59 1.060-1.187 1.574-1.795 0.038-0.043 0.073-0.090 0.109-0.135z","M460.203 655.665c0.414 0.296 0.828 0.593 1.253 0.874 0.136 0.090 0.276 0.175 0.411 0.265-0.428-0.31-1.059-0.757-1.947-1.372 0.094 0.078 0.188 0.155 0.283 0.233z","M547.194 535.484c0.393-1.273 0.355-1.546-0.877 2.389 0.041-0.092 0.082-0.187 0.122-0.283 0.243-0.704 0.492-1.408 0.755-2.106z","M549.72 526.265c-0.016 0.352-0.032 0.747-0.047 1.191 0.002-0.008 0.004-0.015 0.005-0.023 0.015-0.39 0.028-0.778 0.043-1.168z"],"grid":0,"tags":["i-wicked-wire"],"defaultCode":59692},{"paths":["M870.35 571.689l-87.031-21.247c1.457-10.379 2.35-20.94 2.611-31.659l89.316-6.783-89.316-6.783c-0.261-10.719-1.154-21.278-2.611-31.658l87.031-21.247-89.229 7.975c-2.011-10.529-4.617-20.848-7.796-30.912l82.309-35.338-86.663 22.653c-3.717-10.016-7.994-19.76-12.809-29.185l75.311-48.482-81.72 36.659c-5.301-9.225-11.131-18.106-17.435-26.615l66.307-60.231-74.602 49.584c-6.723-8.202-13.917-16.002-21.533-23.37l55.548-70.283-65.484 61.13c-7.963-6.982-16.338-13.505-25.077-19.538l43.285-78.435-54.56 71.052c-8.997-5.58-18.341-10.651-27.992-15.178l29.776-84.49-42.068 79.091c-9.783-4.013-19.846-7.483-30.157-10.358l15.365-88.248-28.373 84.963c-10.266-2.324-20.748-4.069-31.416-5.205l0.563-89.577-14.040 88.48c-5.25-0.301-10.535-0.468-15.859-0.468s-10.608 0.168-15.857 0.467l-14.040-88.48 0.563 89.577c-10.667 1.136-21.15 2.881-31.415 5.204l-28.373-84.963 15.365 88.248c-10.311 2.876-20.374 6.345-30.157 10.358l-42.067-79.092 29.775 84.49c-9.651 4.526-18.995 9.598-27.992 15.177l-54.559-71.053 43.285 78.436c-8.739 6.033-17.113 12.556-25.077 19.538l-65.485-61.129 55.547 70.284c-7.616 7.368-14.81 15.168-21.533 23.369l-74.601-49.585 66.306 60.232c-6.303 8.51-12.134 17.39-17.435 26.615l-81.72-36.66 75.31 48.483c-4.816 9.425-9.093 19.17-12.809 29.186l-86.663-22.653 82.309 35.338c-3.179 10.065-5.784 20.382-7.796 30.912l-89.229-7.975 87.031 21.247c-1.457 10.379-2.35 20.94-2.611 31.659l-89.316 6.784 89.316 6.783c0.261 10.719 1.154 21.278 2.611 31.658l-87.031 21.247 89.229-7.975c2.011 10.529 4.616 20.848 7.796 30.912l-82.309 35.338 86.663-22.653c3.717 10.016 7.994 19.76 12.809 29.185l-75.311 48.482 81.72-36.659c5.301 9.225 11.131 18.106 17.435 26.615l-66.307 60.23 74.602-49.584c6.723 8.202 13.917 16.002 21.533 23.37l-55.548 70.283 65.484-61.13c7.963 6.982 16.338 13.505 25.077 19.538l-43.285 78.435 54.56-71.052c8.997 5.58 18.341 10.651 27.992 15.178l-29.776 84.49 42.068-79.091c9.783 4.013 19.846 7.483 30.157 10.358l-15.365 88.248 28.373-84.963c10.266 2.324 20.748 4.069 31.415 5.205l-0.563 89.577 14.040-88.48c5.251 0.302 10.536 0.469 15.86 0.469s10.608-0.168 15.857-0.467l14.040 88.48-0.563-89.577c10.667-1.136 21.15-2.881 31.415-5.204l28.373 84.963-15.365-88.248c10.311-2.876 20.374-6.345 30.157-10.358l42.067 79.092-29.775-84.49c9.651-4.526 18.995-9.598 27.992-15.177l54.559 71.053-43.285-78.436c8.739-6.033 17.113-12.556 25.077-19.538l65.483 61.131-55.547-70.284c7.616-7.368 14.81-15.168 21.533-23.369l74.601 49.585-66.306-60.232c6.303-8.51 12.134-17.39 17.435-26.615l81.72 36.66-75.31-48.483c4.816-9.425 9.093-19.17 12.809-29.186l86.663 22.653-82.309-35.338c3.179-10.065 5.784-20.382 7.796-30.912l89.231 7.972z"],"grid":0,"tags":["iris"],"defaultCode":59693},{"paths":["M799.291 534.020c-0.45-0.582-0.968-1.115-1.57-1.566-15.637-15.158-31.269-29.903-47.595-44.294-30.877-27.217-61.755-54.432-92.631-81.649-41.649-36.711-83.3-73.423-124.949-110.134-37.6-33.142-75.199-66.282-112.797-99.424-18.661-16.448-37.105-33.192-56.006-49.365-0.265-0.227-0.523-0.461-0.785-0.692-8.126-7.162-19.805 1.726-14.892 11.49 5.049 10.033 10.098 20.066 15.148 30.099 12.201 24.243 24.401 48.486 36.601 72.73 14.696 29.203 29.393 58.406 44.090 87.609 12.716 25.267 25.431 50.533 38.147 75.801 3.83 7.609 7.427 15.457 11.253 23.157-3.206 0.075-6.401 0.163-9.552 0.161-21.928-0.014-43.856-0.028-65.784-0.043-50.379-0.032-100.757-0.064-151.136-0.098-11.653-0.008-23.305-0.015-34.958-0.023-7.832-0.005-13.013 10.624-6.704 16.186 23.439 20.663 46.591 41.7 70.435 61.896 27.441 23.244 54.883 46.487 82.324 69.731 45.058 38.166 90.116 76.331 135.175 114.496 43.287 36.665 86.574 73.33 129.859 109.995 22.123 18.739 44.098 37.674 66.38 56.225 0.315 0.262 0.626 0.53 0.938 0.795 8.186 6.934 19.866-1.605 14.892-11.49-5.476-10.881-10.952-21.763-16.428-32.644-13.148-26.126-26.296-52.252-39.444-78.379-15.831-31.459-31.663-62.917-47.495-94.376-13.754-27.329-27.507-54.659-41.261-81.988-4.415-8.771-8.829-17.544-13.243-26.315 22.020-0.215 44.040-0.43 66.059-0.646 43.028-0.42 86.055-0.841 129.083-1.261 9.896-0.097 19.792-0.193 29.687-0.29 4.218-0.041 6.978-2.338 8.282-5.318 1.795-3.102 1.913-7.054-1.123-10.376zM710.777 531.547c-43.028 0.42-86.055 0.841-129.083 1.261-9.896 0.097-19.792 0.193-29.687 0.29-7.508 0.073-11.384 7.912-8.187 14.267 5.477 10.881 10.952 21.763 16.429 32.644 13.148 26.126 26.296 52.252 39.444 78.379 15.832 31.459 31.663 62.917 47.495 94.376 13.488 26.803 26.978 53.606 40.466 80.409-6.212-5.262-12.425-10.524-18.638-15.787-41.746-35.36-83.492-70.72-125.238-106.080-45.879-38.861-91.759-77.723-137.638-116.583-30.624-25.94-61.249-51.88-91.874-77.819-19.376-16.412-38.345-33.303-57.352-50.145 23.553 0.015 47.105 0.030 70.657 0.046 49.947 0.032 99.896 0.064 149.843 0.097 11.277 0.008 23.078-1.007 34.303 0.324 5.76 0.683 11.258-6.667 9.143-12.002-0.040-0.101-0.080-0.201-0.119-0.302-1.076-2.715-2.867-4.986-5.345-6.141-4.399-8.741-8.798-17.483-13.197-26.224-12.201-24.243-24.401-48.486-36.601-72.73-14.696-29.203-29.393-58.406-44.090-87.609-11.602-23.054-23.204-46.107-34.806-69.162 3.028 2.669 6.056 5.338 9.083 8.007 36.236 31.939 72.472 63.879 108.707 95.818 41.944 36.971 83.887 73.941 125.832 110.912 32.85 28.955 65.701 57.911 98.552 86.867 13.577 11.967 26.898 23.927 39.987 36.321-19.362 0.187-38.724 0.376-58.086 0.565z"],"grid":0,"tags":["lightning"],"defaultCode":59694},{"paths":["M838.632 499.93c7.067-17.696 10.939-36.998 10.878-57.189-0.123-40.97-16.19-79.438-45.241-108.315-12.543-12.469-26.86-22.501-42.376-29.87-4.617-19.28-12.715-37.642-24.111-54.193-23.808-34.578-58.955-57.034-98.966-63.233-16.476-2.552-32.945-2.186-48.872 0.932-14.617-13.233-31.438-23.61-49.818-30.502-37.328-13.998-76.827-12.018-111.221 5.575-15.718 8.039-29.527 18.864-41.026 31.96-19-2.124-38.098-0.56-56.444 4.82-36.108 10.594-65.476 35.024-82.693 68.791-8.613 16.893-13.753 35.495-15.387 54.694-16.246 9.769-30.439 22.698-41.829 38.374-34.921 48.064-35.299 111.344-6.341 162.101-7.139 17.71-11.078 37.042-11.078 57.279 0 61.995 36.898 115.527 89.883 139.806 4.677 19.106 12.784 37.291 24.139 53.678 23.858 34.431 58.993 56.731 98.931 62.792 7.153 1.087 14.3 1.622 21.403 1.622 9.23 0 18.381-0.913 27.356-2.701 14.62 13.155 31.431 23.453 49.785 30.272 16.273 6.044 32.948 9.051 49.426 9.051 21.269 0 42.207-5.010 61.512-14.959 15.665-8.074 29.417-18.923 40.856-32.034 5.262 0.571 10.531 0.873 15.789 0.873 13.685 0 27.291-1.941 40.5-5.863 35.994-10.687 65.221-35.16 82.297-68.911 8.544-16.887 13.617-35.465 15.191-54.631 16.176-9.801 30.297-22.748 41.612-38.427 34.696-48.079 34.883-111.228 5.843-161.79zM463.121 807.079c-0.341 0.171-0.687 0.333-1.030 0.501-5.978 2.842-12.133 5.176-18.417 7.003-24.915-25.378-40.637-59.998-43.356-96.303 49.078-25.531 82.533-76.975 82.374-135.869 3.239-1.118 6.517-2.085 9.826-2.903 0.954-0.225 1.909-0.442 2.867-0.642 3.702 3.599 7.221 7.447 10.548 11.527-0.426 0.803-0.85 1.606-1.262 2.42-18.691 36.942-20.83 81.979-5.867 123.564 4.939 13.726 11.515 26.652 19.515 38.532-8.493 14.535-19.666 27.623-33.404 38.365-6.867 5.369-14.124 9.96-21.671 13.748-0.042 0.019-0.082 0.039-0.123 0.059zM562.92 217.043c0.364-0.179 0.735-0.339 1.1-0.515 5.848-2.725 11.86-4.972 17.992-6.734 24.911 25.52 40.572 60.278 43.187 96.683-49.272 25.423-82.963 76.868-82.981 135.888-3.214 1.099-6.464 2.058-9.746 2.863-1.004 0.234-2.011 0.454-3.021 0.662-3.705-3.624-7.228-7.497-10.555-11.602 0.432-0.809 0.864-1.618 1.281-2.438 18.842-36.955 21.12-82.074 6.25-123.787-4.91-13.773-11.464-26.75-19.448-38.681 8.559-14.545 19.802-27.63 33.61-38.355 6.988-5.427 14.373-10.051 22.054-13.85 0.093-0.044 0.184-0.090 0.277-0.134zM724.227 418.96c-16.119-2.872-32.639-3.244-49.052-0.985-39.936 5.495-74.518 25.895-97.59 57.49-3.556-1.161-7.051-2.475-10.477-3.948-0.877-0.388-1.749-0.785-2.617-1.193-1.027-5.049-1.76-10.18-2.204-15.371 1.758-0.807 3.507-1.639 5.24-2.526 35.804-18.313 61.711-51.069 72.949-92.236 3.734-13.678 5.675-27.714 5.861-41.793 15.296-6.133 31.972-9.535 49.425-9.59 0.149-0.001 0.294-0.001 0.443-0.001 8.802 0 17.475 0.846 25.929 2.491 7.119 1.464 14.078 3.5 20.819 6.093 6.248 34.955-0.375 71.536-18.725 101.569zM629.266 673.471c-30.081-21.442-49.495-52.1-56.773-84.627 39.060 18.583 67.311 55.385 78.28 97.378-7.43-3.595-14.627-7.847-21.507-12.751zM395.563 350.621c30.105 21.597 49.478 52.402 56.67 85.040-39.139-18.752-67.372-55.76-78.236-97.916 7.454 3.632 14.671 7.929 21.567 12.876zM620.669 355.154c-9.135 34.301-29.842 61.902-58.533 78.222 3.202-43.898 27.589-82.036 62.971-104.18-0.694 8.681-2.15 17.368-4.438 25.957zM692.642 454.623c-27.176 21.392-60.518 30.514-93.963 25.75 20.089-23.586 48.249-38.708 80.316-42.91 10.699-1.402 21.446-1.532 32.064-0.453-5.503 6.37-11.641 12.28-18.417 17.614zM529.982 557.554c-9.512-0.7-18.995-0.401-28.334 0.894-7.642-6.438-15.847-12.032-24.518-16.721-2.751-9.907-6.492-19.483-11.182-28.602 3.287-9.19 5.592-18.636 6.939-28.2 7.89-5.154 15.195-11.125 21.826-17.833 3.483 0.267 6.961 0.41 10.432 0.41 6.028 0 12.028-0.418 17.973-1.223 7.649 6.484 15.866 12.124 24.553 16.855 2.684 9.782 6.335 19.244 10.907 28.268-3.278 9.225-5.565 18.702-6.887 28.297-7.851 5.167-15.116 11.145-21.708 17.855zM462.1 591.882c-3.412 43.094-27.187 80.547-61.681 102.707 0.699-8.328 2.103-16.658 4.271-24.902 8.932-33.958 29.226-61.38 57.409-77.805zM328.781 449.405c0.585-0.008 1.166-0.011 1.751-0.011 33.901 0 65.924 12.615 90.691 35.694-7.863 1.535-15.792 2.298-23.708 2.298-33.17-0.001-66.015-13.068-92.163-35.611 7.598-1.456 15.428-2.267 23.429-2.369zM507.356 315.307c12.239 33.705 11.763 69.884-1.070 100.623-22.162-38.419-24.762-84.631-9.884-124.334 4.251 7.477 7.935 15.395 10.955 23.711zM425.365 544.572c-27.476 31.773-68.838 46.651-110.399 42.914 5.289-6.062 11.163-11.703 17.617-16.817 22.464-17.801 49.191-27.176 76.73-27.176 5.328 0 10.689 0.37 16.052 1.079zM517.854 709.076c-12.304-33.575-11.944-69.656 0.748-100.357 22.191 38.24 24.922 84.3 10.226 123.936-4.253-7.433-7.943-15.308-10.974-23.579zM696.075 576.158c-0.441 0.005-0.879 0.007-1.319 0.007-34.446 0-66.939-12.983-91.894-36.68 8.101-1.637 16.275-2.448 24.437-2.448 33.628 0 66.939 13.455 93.239 36.63-7.927 1.553-16.101 2.412-24.463 2.492zM283.17 458.070c11.454 11.513 24.534 21.421 38.942 29.338 23.848 13.104 49.471 19.778 74.824 19.778 13.285 0 26.496-1.855 39.337-5.556 1.754 2.282 3.427 4.615 5.021 6.993 1.179 1.838 2.314 3.708 3.405 5.606-1.985 4.432-4.247 8.754-6.765 12.956-2.885-0.62-5.796-1.165-8.736-1.612-38.973-5.92-77.872 4.461-109.533 29.216-10.637 8.317-20.037 17.937-28.073 28.597-17.022-4.467-33.637-12.168-48.875-23.238-7.532-5.473-14.381-11.523-20.536-18.028-4.61-4.971-8.816-10.204-12.607-15.648 14.656-31.274 41.081-56.018 73.595-68.402zM208.307 555.050c7.409 7.985 15.732 15.374 24.953 21.99 14.602 10.475 30.486 18.376 47.051 23.564-9.791 17.341-16.394 36.704-19.336 57.278-1.844 12.903-2.179 25.807-1.062 38.48-8.092-5.056-15.699-11.020-22.691-17.847-25.491-24.892-39.765-58.238-40.196-93.896-0.154-12.783 1.505-25.174 4.73-36.931 2.1 2.506 4.283 4.962 6.55 7.362zM301.575 605.704c8.659 1.458 17.43 2.205 26.235 2.205 6.973 0 13.969-0.464 20.946-1.402 40.003-5.374 74.695-25.667 97.913-57.199 3.763 1.195 7.46 2.563 11.080 4.107 0.704 0.309 1.401 0.628 2.098 0.949 1.045 5.156 1.79 10.419 2.225 15.769-1.566 0.733-3.126 1.487-4.672 2.284-35.68 18.389-61.437 51.167-72.528 92.296-3.619 13.42-5.505 27.182-5.707 40.983-15.84 6.557-33.188 10.186-51.37 10.186-9.208 0-18.203-0.931-26.898-2.7-6.168-1.382-12.21-3.198-18.089-5.437-6.38-35.106 0.251-71.898 18.764-102.041zM742.521 567.351c-11.803-12.079-25.385-22.426-40.394-30.614-36.364-19.838-76.818-24.713-114.077-13.802-2.502-3.309-4.834-6.722-7.002-10.225-0.443-0.731-0.873-1.47-1.302-2.208 1.923-4.36 4.117-8.633 6.579-12.804 3.079 0.686 6.188 1.284 9.33 1.771 7.315 1.133 14.624 1.693 21.891 1.693 31.511-0.001 62.122-10.545 87.965-30.619 10.898-8.464 20.514-18.286 28.705-29.195 16.545 4.558 32.417 12.143 46.875 22.58 7.526 5.434 14.373 11.446 20.53 17.912 5.212 5.586 9.914 11.504 14.082 17.687-14.702 30.967-40.947 55.46-73.182 67.823zM483.249 272.077c-7.142 14.926-12.041 31.136-14.423 48.17-5.742 41.066 3.808 82.076 26.88 115.607-2.066 3.139-4.268 6.159-6.597 9.056-0.514 0.625-1.034 1.244-1.561 1.856-4.789-0.759-9.573-1.818-14.333-3.162-0.389-2.996-0.855-5.996-1.424-8.999-7.617-40.248-30.571-76.042-64.632-100.789-11.739-8.53-24.318-15.397-37.427-20.525-1.62-17.499-0.258-35.423 4.521-52.928 2.417-8.854 5.605-17.255 9.495-25.131 3.171-6.247 6.787-12.157 10.83-17.681 33.962 6.261 65.943 25.774 88.673 54.526zM312.048 323.31c13.522 0 26.962 1.989 39.957 5.861 2.885 16.793 8.279 33.302 16.137 48.968 18.9 37.681 49.803 66.087 87.091 80.106 0.229 4.922 0.182 9.847-0.147 14.75-4.071 2.208-8.294 4.18-12.653 5.906-28.167-31.544-69.118-51.44-114.635-51.44-14.137 0-27.829 1.929-40.84 5.518-11.231-13.608-20.37-29.374-26.602-46.857-3.135-8.792-5.401-17.747-6.825-26.726-1.092-7.357-1.608-14.723-1.555-22.025 12.762-6.466 26.788-10.831 41.67-12.83 6.129-0.823 12.271-1.231 18.401-1.231zM542.036 752.142c7.079-14.915 11.915-31.106 14.24-48.108 5.605-40.997-4.044-81.89-27.159-115.277 2.063-3.157 4.264-6.193 6.594-9.106 0.492-0.602 0.991-1.198 1.494-1.788 4.798 0.745 9.591 1.784 14.362 3.118 5.514 41.735 28.284 81.987 66.153 109.327 11.734 8.472 24.303 15.279 37.393 20.354 1.668 17.452 0.362 35.337-4.351 52.817-2.378 8.818-5.523 17.189-9.365 25.041-3.149 6.262-6.746 12.187-10.772 17.726-33.885-6.142-65.836-25.499-88.59-54.103zM672.79 694.734c-2.93-16.744-8.36-33.198-16.245-48.802-18.97-37.541-49.883-65.788-87.122-79.663-0.196-3.97-0.216-7.942-0.049-11.904 0.049-0.935 0.105-1.87 0.175-2.804 4.016-2.193 8.181-4.157 12.48-5.879 1.945 2.162 3.949 4.284 6.028 6.35 28.933 28.761 67.294 44.582 108.068 44.582 0.168 0 0.336 0 0.503-0.001 14.099-0.046 27.75-2.012 40.716-5.634 11.239 13.538 20.399 29.236 26.667 46.654 3.154 8.766 5.441 17.697 6.889 26.652 1.11 7.33 1.647 14.672 1.617 21.952-12.707 6.489-26.682 10.887-41.517 12.929-19.589 2.695-39.362 1.118-58.211-4.432zM815.477 468.895c-7.419-7.951-15.75-15.304-24.976-21.88-14.042-10.010-29.26-17.638-45.12-22.767 9.705-17.212 16.283-36.412 19.264-56.814 1.89-12.937 2.263-25.879 1.178-38.593 8.111 5.098 15.734 11.108 22.734 17.984 25.48 25.029 39.69 58.497 40.013 94.239 0.117 12.861-1.599 25.32-4.892 37.133-2.596-3.184-5.333-6.285-8.199-9.301zM725.524 292.635c-10.429-2.112-21.15-3.155-32.037-3.052-16.837 0.161-33.018 3.065-48.132 8.273-2.18-20.189-7.951-40.146-17.234-58.927-6.019-12.178-13.288-23.401-21.615-33.507 8.913-0.657 17.947-0.339 26.988 1.004 34.649 5.148 65.235 24.483 86.125 54.442 7.549 10.826 13.383 22.446 17.57 34.49-3.841-1.060-7.733-1.965-11.665-2.722zM555.593 199.52c-0.466 0.219-0.928 0.446-1.392 0.669-0.067 0.033-0.134 0.065-0.201 0.099-9.409 4.567-18.435 10.203-26.929 16.888-12.822 10.093-23.835 22.078-32.796 35.508-13.144-15.279-28.914-28.244-46.732-38.178-11.877-6.621-24.208-11.638-36.736-15.037 7.552-6.875 15.971-12.777 25.159-17.549 29.337-15.234 63.205-17.106 95.367-5.273 12.346 4.543 23.76 10.86 34.077 18.58-3.313 1.304-6.587 2.735-9.816 4.292zM366.811 226.684c-4.863 9.6-8.796 19.887-11.693 30.761-4.308 16.177-6.109 32.841-5.46 49.467-18.991-4.708-38.716-5.93-58.328-3.421-12.945 1.654-25.345 4.868-36.997 9.51 2.192-11.556 5.897-22.706 11.117-33.106 14.573-29.027 39.579-50.113 70.414-59.378 11.587-3.482 23.425-5.142 35.229-5.142 0.639 0 1.278 0.010 1.918 0.020-2.213 3.648-4.284 7.413-6.201 11.289zM233.243 349.068c0.332 4.374 0.85 8.753 1.537 13.127 1.623 10.944 4.361 21.855 8.238 32.532 5.926 16.32 14.176 31.494 24.38 45.108-29.833 12.8-54.827 34.778-71.413 62.363-18.025-41.284-15.315-89.253 11.541-126.719 7.29-10.17 15.955-19.021 25.717-26.412zM291.817 730.579c0.119 0.029 0.239 0.059 0.358 0.087 0.498 0.119 0.995 0.238 1.493 0.352 1.994 0.47 3.997 0.905 6.014 1.296 9.948 2.021 20.165 3.063 30.539 3.063 0.664 0 1.334-0.005 2-0.013 16.789-0.215 32.916-3.161 47.972-8.4 2.238 20.132 8.055 40.020 17.368 58.726 6.036 12.122 13.314 23.288 21.642 33.341-8.877 0.681-17.878 0.392-26.889-0.919-34.572-5.028-65.135-24.219-86.061-54.040-7.548-10.758-13.395-22.31-17.606-34.29 1.052 0.278 2.11 0.541 3.17 0.796zM471.322 824.188c9.496-4.617 18.596-10.326 27.151-17.106 12.755-10.108 23.703-22.097 32.6-35.519 13.157 15.197 28.923 28.078 46.723 37.93 11.858 6.563 24.162 11.529 36.657 14.882-7.509 6.877-15.884 12.786-25.030 17.571-29.209 15.281-62.98 17.255-95.087 5.554-12.312-4.487-23.704-10.743-34.007-18.399 3.717-1.476 7.384-3.117 10.993-4.914zM658.338 797.061c4.818-9.592 8.709-19.865 11.565-30.72 4.248-16.148 5.994-32.773 5.3-49.352 12.334 3.013 24.975 4.553 37.687 4.553 6.822-0.001 13.667-0.444 20.493-1.338 12.897-1.691 25.246-4.931 36.847-9.593-2.153 11.526-5.814 22.65-10.986 33.033-14.449 29.004-39.328 50.12-70.052 59.461-11.68 3.551-23.616 5.242-35.526 5.241-0.49 0-0.979-0.010-1.47-0.016 2.193-3.643 4.243-7.4 6.142-11.269zM791.209 674.476c-0.343-4.335-0.869-8.675-1.563-13.009-1.652-10.933-4.417-21.827-8.324-32.486-5.959-16.26-14.232-31.371-24.446-44.921 29.705-12.864 54.558-34.861 71.020-62.419 18.084 41.124 15.517 88.974-11.149 126.429-7.232 10.158-15.838 19.008-25.538 26.407z"],"grid":0,"tags":["mandala"],"defaultCode":59695},{"paths":["M842.497 378.478c-13.825-56.193-37.595-109.886-73.473-155.518-4.368-5.555-8.919-10.962-13.624-16.235-22.779-25.341-51.668-51.564-86.324-58.166-26.231-4.997-50.858 2.998-71.442 19.409-20.662 16.473-35.846 39.624-48.002 62.796-12.691 24.192-22.645 49.86-30.964 75.855-2.354 7.356-4.573 14.758-6.664 22.196-2.754-9.79-5.733-19.516-8.948-29.155-10.57-31.698-23.52-63.293-41.792-91.393-16.773-25.795-39.858-51.363-70.883-59.022-37.636-9.292-73.207 11.35-100.281 35.754-36.846 33.213-65.145 76.128-84.582 121.559-19.359 45.25-30.651 93.156-36.507 141.935-5.7 47.474-6.089 95.506-2.963 143.183 2.858 43.587 8.643 87.003 16.653 129.936 6.095 32.668 13.508 65.101 22.272 97.157 4.349 15.907 8.958 31.773 14.244 47.399 0.236 0.699 0.472 1.397 0.716 2.093 1.396 3.977 4.767 6.961 9.143 6.961 28.948 0 57.895 0 86.842 0 4.153 0 8.306 0 12.46 0 7.336 0 11.618-8.012 8.187-14.267-4.454-8.124-8.391-16.559-12.244-24.979-2.057-4.494-4.061-9.013-6.019-13.552-0.506-1.175-1.008-2.351-1.51-3.529-0.061-0.141-0.169-0.398-0.267-0.631-0.265-0.632-0.53-1.264-0.794-1.896-1.195-2.869-2.372-5.746-3.532-8.629-5.118-12.727-9.896-25.591-14.344-38.567-24.626-71.849-39.624-147.484-40.004-223.58-0.227-45.362 4.828-90.67 16.316-134.592 9.831-37.59 23.456-75.661 44.352-108.644 6.878-10.856 13.108-19.296 23.010-28.223 0.939-0.846 1.893-1.674 2.867-2.479 0.465-0.385 0.935-0.76 1.407-1.135 0.038-0.027 0.070-0.051 0.113-0.082 2.042-1.48 4.116-2.899 6.295-4.173 1.838-1.074 3.731-2.016 5.663-2.905 0.016-0.006 0.026-0.009 0.043-0.014 0.476-0.161 0.942-0.357 1.417-0.523 1.116-0.393 2.246-0.747 3.39-1.054 1.024-0.276 2.058-0.482 3.093-0.714 0.317-0.071 0.647-0.104 0.964-0.171 1.999-0.052 3.956-0.277 5.966-0.182 0.918 0.044 1.828 0.169 2.744 0.228-3.125-0.198-0.089 0.018 0.746 0.189 2.017 0.412 3.967 1.015 5.911 1.684 0.303 0.104 0.601 0.225 0.899 0.343 0.005 0.003 0.008 0.004 0.013 0.007 0.867 0.446 1.758 0.836 2.62 1.295 1.966 1.047 3.832 2.245 5.667 3.505 0.398 0.274 0.784 0.567 1.172 0.856 0.819 0.677 1.638 1.353 2.433 2.058 1.876 1.666 3.662 3.434 5.367 5.276 0.896 0.968 1.767 1.958 2.619 2.965 0.396 0.468 0.785 0.944 1.177 1.417 0.011 0.014 0.42 0.527 0.694 0.869 0.366 0.502 1.625 2.188 1.978 2.684 0.926 1.303 1.824 2.624 2.697 3.963 3.316 5.078 6.269 10.389 8.952 15.825 5.972 12.098 10.641 25.257 14.652 39.322 10.655 37.367 15.16 76.311 16.883 115.038 0.521 11.706 0.749 23.421 0.761 35.138 0.006 5.126 4.34 9.481 9.481 9.481 29.304 0 58.608 0 87.912 0 5.223 0 10.446 0 15.669 0 5.129 0 9.476-4.344 9.481-9.481 0.043-42.044 2.797-84.365 11.559-125.563 6.124-28.794 14.164-56.304 30.134-80.438 1.323-1.999 2.709-3.957 4.156-5.867 0.223-0.261 1.411-1.753 1.709-2.108 0.926-1.104 1.876-2.186 2.855-3.244 1.629-1.761 3.333-3.453 5.119-5.055 0.868-0.777 1.761-1.521 2.659-2.262 0.48-0.355 0.959-0.71 1.449-1.051 1.738-1.213 3.541-2.331 5.412-3.328 0.832-0.443 1.684-0.837 2.53-1.252 0.509-0.2 1.017-0.404 1.534-0.585 1.757-0.616 3.554-1.119 5.378-1.493 0.758-0.155 3.939-0.406 0.746-0.189 1.101-0.075 2.189-0.212 3.294-0.249 1.819-0.060 3.605 0.154 5.413 0.204 0.32 0.067 0.652 0.101 0.967 0.171 1.129 0.253 2.258 0.483 3.374 0.79 0.951 0.262 1.893 0.557 2.825 0.879 0.518 0.178 1.538 0.588 1.91 0.727 1.876 0.85 3.716 1.776 5.496 2.816 2.179 1.273 4.253 2.692 6.295 4.173 0.041 0.029 0.091 0.067 0.146 0.108 0.461 0.366 0.922 0.733 1.375 1.108 1.172 0.971 2.318 1.973 3.441 3.001 4.339 3.975 8.315 8.336 12.017 12.907 0.383 0.473 0.763 0.948 1.14 1.426 0.152 0.192 0.263 0.333 0.357 0.45 0.1 0.136 0.236 0.319 0.437 0.588 0.962 1.285 1.91 2.581 2.839 3.891 2.16 3.049 4.225 6.165 6.208 9.332 4.223 6.738 8.082 13.702 11.674 20.795 8.879 17.537 16.094 35.864 22.39 54.471 14.837 43.853 23.104 89.671 25.366 135.881 3.849 78.641-8.753 157.414-32.032 232.427-4.556 14.68-9.532 29.23-14.925 43.623-2.272 6.063-4.618 12.098-7.041 18.104-1.053 2.612-2.122 5.219-3.206 7.818-0.285 0.685-0.572 1.369-0.859 2.054-0.018 0.043-0.035 0.083-0.048 0.114-0.601 1.413-1.204 2.825-1.813 4.234-5.35 12.388-11.092 24.579-17.255 36.581-0.277 0.539-0.567 1.072-0.858 1.603-3.43 6.256 0.85 14.267 8.187 14.267 28.947 0 57.895 0 86.842 0 4.153 0 8.306 0 12.46 0 4.406 0 7.748-2.987 9.143-6.961 5.196-14.808 9.542-29.951 13.741-45.065 10.587-38.111 19.261-76.771 26.045-115.737 9.085-52.181 14.916-105.054 15.894-158.034 1.056-57.311-3.532-115.191-17.25-170.947zM378.977 166.281c-0.382-0.045-0.293-0.038 0 0v0zM316.321 817.777c-0.004-0.009-0.004-0.009 0 0v0zM631.516 268.775c0.009-0.008 0.018-0.015 0.027-0.023 0.364-0.301 1.263-0.936-0.027 0.023zM678.686 270.891c0.073 0.057 0.089 0.070 0 0v0zM707.5 818.203c0.35-0.831 0.169-0.401 0 0v0zM837.29 613.71c-1.152 13.035-2.561 26.047-4.203 39.030-0.807 6.38-1.35 10.374-2.319 17.068-0.895 6.18-1.84 12.352-2.837 18.516-6.519 40.347-15.109 80.377-25.689 119.854-3.337 12.454-6.875 24.857-10.679 37.176-1.122 3.634-2.456 7.257-3.662 10.901-25.551 0-51.101 0-76.652 0 13.782-27.661 24.779-57.060 34.576-86.153 25.435-75.534 40.307-155.511 39.242-235.365-0.631-47.273-6.992-94.68-20.069-140.15-10.808-37.579-25.253-76.269-47.658-108.627-12.885-18.61-30.726-38.713-54.115-43.198-20.404-3.913-39.206 5.112-52.95 19.965-18.939 20.467-29.702 47.912-37.329 74.308-11.267 38.994-16.001 79.931-17.84 120.376-0.401 8.817-0.635 17.638-0.737 26.463-26.164 0-52.327 0-78.491 0-2.084 0-4.167 0-6.251 0-0.466-41.010-3.773-82.241-12.439-122.357-6.35-29.396-15.584-59.967-32.677-85.068-11.792-17.317-28.324-32.761-50.119-34.605-21.695-1.835-41.165 12.143-54.866 27.584-22.959 25.873-37.458 58.732-49.267 90.864-16.713 45.473-26.469 93.169-29.934 141.468-5.936 82.727 6.523 166.492 30.576 245.63 11.252 37.021 24.768 74.029 41.973 108.864-23.78 0-47.558 0-71.338 0-1.891 0-3.782 0-5.673 0-2.695-8.176-5.154-16.436-7.565-24.692-8.074-27.656-15.047-55.637-21.069-83.81-8.436-39.47-14.857-78.687-18.952-117.802-4.795-45.817-6.6-92.033-4.069-138.054 2.576-46.838 9.653-92.866 23.845-137.952 13.883-44.101 34.98-86.687 64.368-122.612 14.949-18.275 32.105-36.051 51.174-48.699 3.909-2.592 7.938-5.008 12.095-7.184 1.934-1.013 3.895-1.972 5.883-2.873 0.321-0.146 1.387-0.598 1.712-0.741 0.976-0.393 1.953-0.781 2.941-1.144 3.653-1.344 7.389-2.468 11.187-3.319 1.801-0.404 3.614-0.72 5.435-1.024 0.114-0.019 0.204-0.035 0.277-0.048 0.112-0.008 0.242-0.017 0.412-0.029 1.058-0.082 2.112-0.207 3.172-0.275 3.429-0.221 6.875-0.196 10.301 0.088 0.739 0.061 1.473 0.145 2.209 0.227 0.272 0.037 0.613 0.086 0.923 0.141 1.745 0.308 3.478 0.651 5.199 1.076 3.324 0.821 6.555 1.914 9.741 3.161 0.066 0.027 0.114 0.044 0.164 0.063 0.090 0.045 0.193 0.094 0.318 0.154 0.701 0.335 1.413 0.647 2.112 0.986 1.608 0.78 3.189 1.614 4.743 2.495 3.063 1.738 6.018 3.664 8.865 5.735 0.407 0.296 0.808 0.601 1.21 0.903 0.188 0.156 1.303 1.026 1.553 1.23 1.46 1.194 2.89 2.424 4.29 3.686 5.548 5.001 10.633 10.502 15.343 16.293 0.558 0.686 1.106 1.38 1.659 2.071 0.155 0.193 0.242 0.301 0.292 0.36 0.078 0.105 0.181 0.244 0.327 0.437 1.236 1.643 2.46 3.295 3.653 4.97 2.35 3.301 4.603 6.669 6.774 10.091 4.373 6.896 8.404 14.005 12.169 21.248 3.811 7.329 7.348 14.8 10.667 22.365 0.433 0.988 0.864 1.979 1.289 2.97 0.113 0.264 0.613 1.443 0.802 1.884 0.192 0.461 0.617 1.484 0.746 1.796 0.459 1.112 0.913 2.226 1.363 3.342 1.534 3.8 3.019 7.619 4.459 11.456 9.176 24.453 16.644 49.575 22.629 74.994 0.815 3.461 1.6 6.929 2.346 10.406 1.941 9.040 16.343 9.047 18.286 0 3.486-16.237 7.705-32.326 12.482-48.229 3.536-11.77 7.406-23.443 11.673-34.97 2.205-5.958 4.535-11.866 6.951-17.742 0.064-0.156 0.431-1.032 0.573-1.373 0.222-0.521 0.444-1.044 0.667-1.564 0.639-1.489 1.287-2.972 1.944-4.453 1.427-3.219 2.894-6.42 4.406-9.6 5.759-12.113 12.152-23.95 19.485-35.187 1.568-2.403 3.179-4.777 4.839-7.117 0.894-1.261 1.801-2.512 2.725-3.752 0.458-0.615 0.921-1.228 1.385-1.838 0.167-0.219 0.247-0.327 0.28-0.375 0.112-0.137 0.292-0.357 0.58-0.714 3.892-4.811 7.943-9.474 12.351-13.823 2.038-2.010 4.14-3.957 6.311-5.822 1.067-0.917 2.157-1.804 3.249-2.689 0.080-0.064 0.137-0.112 0.198-0.161 0.030-0.023 0.050-0.037 0.084-0.063 0.74-0.55 1.479-1.1 2.23-1.635 4.404-3.136 9.067-5.917 13.973-8.197 0.402-0.187 0.807-0.365 1.212-0.545 0.293-0.126 0.634-0.271 0.793-0.331 1.239-0.466 2.474-0.936 3.73-1.354 2.72-0.905 5.495-1.649 8.306-2.217 0.998-0.202 2.002-0.372 3.008-0.53-0.478 0.098 2.488-0.268 3.087-0.312 2.971-0.217 5.953-0.24 8.927-0.078 1.433 0.079 2.86 0.213 4.285 0.371-0.631-0.043 3.139 0.51 3.886 0.66 3.249 0.65 6.458 1.505 9.609 2.528 1.789 0.581 3.548 1.237 5.307 1.902 0.131 0.049 0.965 0.393 1.351 0.549 0.859 0.374 1.715 0.754 2.564 1.15 3.805 1.777 7.508 3.77 11.111 5.925 17.933 10.725 32.997 25.196 47.287 41.094 37.207 41.707 62.354 92.509 77.611 146.013 15.475 54.267 21.197 109.717 21.32 166.117 0.061 27.186-1.238 54.369-3.632 81.447z"],"grid":0,"tags":["mcdonalds"],"defaultCode":59696},{"paths":["M899.024 819.133c0.656 0.094 1.129 0.149 0.353 0-0.838-0.159-1.689-0.268-2.529-0.421-2.692-0.491-5.363-1.101-8.010-1.79-4.099-1.068-8.146-2.342-12.12-3.804-0.97-0.357-1.937-0.725-2.899-1.106-0.622-0.246-1.241-0.497-1.859-0.752-0.013-0.005-0.019-0.008-0.031-0.012-0.102-0.046-0.218-0.099-0.358-0.162-2.377-1.071-4.737-2.168-7.053-3.365-11.269-5.821-19.831-12.060-28.282-21.241-10.174-11.052-16.635-24.675-20.909-39.393-4.841-16.675-8.036-33.716-8.468-51.099-0.296-11.876 0.848-23.648 1.56-35.483 1.352-22.469-4.336-44.34-20.163-59.924 11.649-10.035 22.677-20.785 32.951-32.221 5.241-5.834 10.299-11.835 15.146-18.001 2.549-3.241 3.694-6.112 3.694-10.035 0-7.22 0-14.439 0-21.659 0-16.571 0-33.142 0-49.711 0-1.047-0.179-2.035-0.499-2.951-0.013-0.137-0.021-0.279-0.040-0.412-1.475-34.278-15.234-66.687-35.083-94.355-23.052-32.133-52.927-58.66-85.188-81.271-3.813-2.673-7.672-5.278-11.56-7.839-13.099-8.912-26.613-17.219-40.485-24.843-3.624-1.991-7.258-4.053-11.011-5.8-1.222-0.569-2.385-0.884-3.502-1.005-59.089-33.545-125.793-62.673-194.768-64.321-25.712-0.614-55.284 2.368-77.843 16.070-16.326 9.916-33.286 18.896-49.926 28.277-41.036 23.134-82.071 46.269-123.107 69.403-27.275 15.377-54.977 30.182-81.9 46.173-0.136 0.081-0.276 0.155-0.413 0.233-1.691 0.696-2.949 1.753-3.813 3.019-1.085 1.431-1.595 3.066-1.646 4.723-0.567 4.079-0.347 8.394-0.475 12.45-0.285 9.042-0.558 18.083-0.832 27.125-0.397 13.195-0.79 26.392-1.178 39.588-0.097 3.287 1.87 6.569 4.696 8.187 14.788 8.464 29.577 16.928 44.365 25.392 35.521 20.331 71.042 40.662 106.563 60.993 42.988 24.605 85.976 49.211 128.965 73.816 37.19 21.286 74.379 42.572 111.57 63.859 18.108 10.364 35.999 21.33 54.415 31.146 0.256 0.137 0.504 0.288 0.756 0.432 1.211 0.693 2.459 1.088 3.691 1.225 1.639 0.672 3.556 0.89 5.698 0.427 61.285-13.27 121.573-34.948 173.887-70.055 7.583-5.089 14.989-10.449 22.201-16.058 5.044 4.338 9.031 9.709 11.999 16.736 0.774 1.833 2.067 6.036 2.715 8.766 0.402 1.693 0.729 3.4 1.015 5.116 0.075 0.687 0.147 1.374 0.203 2.063 0.402 4.934 0.252 9.895-0.036 14.831-0.687 11.785-1.857 23.502-1.6 35.325 0.4 18.296 3.502 36.535 8.425 54.137 4.698 16.796 11.5 32.12 22.535 45.72 8.39 10.341 19.001 18.996 30.473 25.718 14.654 8.586 31.486 14.894 48.434 16.885 5.094 0.598 9.481-4.786 9.481-9.481-0.001-5.143-3.666-8.302-8.204-9.262zM651.734 270.429c16.252 8.321 31.901 18.113 46.955 28.46 2.475 1.701 4.935 3.417 7.378 5.144 35.163 24.853 70.403 56.36 92.809 94.358 12.366 20.972 20.325 43.759 21.248 67.73 0.008 0.196 0.006 0.394 0.012 0.591 0.009 0.256 0.009 0.513 0.016 0.769-0.539 0.66-1.069 1.33-1.612 1.985-11.504 13.874-24.019 26.691-37.359 38.516-2.509 2.223-5.040 4.419-7.607 6.572-2.596 2.177-5.228 4.31-7.881 6.416-9.432 7.486-19.219 14.514-29.304 21.108-2.795-29.139-14.782-56.212-31.182-80.503 4.693-2.419 9.525-4.696 14.073-7.362 6.164-3.614 2.509-14.956 0.494-20.321-7.774-20.684-25.934-38.292-45.158-48.575-4.919-2.631-10.149-4.883-15.53-6.378-3.004-0.834-5.521-1.494-8.393-0.114-4.818 2.317-9.547 4.842-14.315 7.261-0.489 0.248-0.978 0.496-1.468 0.744-21.307-17.564-44.15-33.361-67.627-47.627-5.604-3.405-11.256-6.769-17.002-9.951 24.512-14.211 49.023-28.423 73.535-42.633 9.042-5.242 18.085-10.486 27.127-15.728 0.264-0.155 0.527-0.307 0.791-0.46zM179.002 337.48c7.221-4.071 14.443-8.143 21.664-12.214 41.251-23.255 82.501-46.511 123.752-69.768 16.165-9.114 32.594-17.903 48.724-27.139 3.233-1.851 6.449-3.728 9.654-5.622 1.423-0.841 2.847-1.681 4.265-2.533 0.318-0.192 0.64-0.376 0.958-0.569 1.297-0.783 2.555-1.605 3.893-2.326 0.182-0.099 0.369-0.188 0.553-0.284 1.318-0.693 2.656-1.348 4.012-1.964 0.311-0.141 0.625-0.277 0.937-0.415 1.052-0.389 2.088-0.837 3.14-1.227 5.726-2.123 11.628-3.764 17.598-5.038 1.778-0.379 3.564-0.725 5.355-1.041 0.893-0.157 1.787-0.306 2.683-0.448 0.475-0.076 2.607-0.369 2.898-0.417 3.98-0.487 7.972-0.86 11.977-1.090 24.841-1.432 46.973 1.464 70.629 7.021 35.836 8.417 70.159 22.401 102.903 39.066 5.29 2.692 10.538 5.461 15.753 8.293-0.311 0.177-0.622 0.355-0.932 0.532-31.894 18.203-63.607 36.731-95.351 55.193-14.741 8.573-29.474 17.16-44.207 25.744-3.154 1.838-6.309 3.672-9.462 5.511s-6.307 3.673-9.46 5.511c-19.749 11.516-39.492 23.040-59.232 34.57-7.048 4.117-14.093 8.235-21.139 12.353-16.461-9.62-33.967-17.69-51.816-24.726-10.259-4.044-20.63-7.753-30.983-11.207-37.935-12.655-77.725-21.714-117.787-23.352-4.957-0.203-9.929-0.272-14.901-0.201 1.306-0.74 2.614-1.477 3.922-2.214zM565.989 623.535c-0.014 0.473-0.027 0.947-0.041 1.42-0.267 8.785-0.607 17.566-0.955 26.347-0.285 7.195-0.604 14.39-0.91 21.586-10.257-5.871-20.514-11.742-30.771-17.613-35.521-20.331-71.043-40.662-106.563-60.993-42.988-24.605-85.976-49.21-128.965-73.815-37.19-21.287-74.379-42.573-111.57-63.859-12.334-7.059-24.667-14.119-37.001-21.178-4.413-2.526-8.797-5.381-13.306-7.854 0.324-11 0.65-22.001 0.981-33 0.267-8.884 0.536-17.768 0.815-26.651 0.056-1.791 0.116-3.581 0.174-5.372 33.549-7.117 69.011-4.059 102.391 2.406 33.428 6.475 66.732 16.691 98.004 29.817 14.1 6.299 28.016 13.23 41.647 20.757 0.198 0.11 0.397 0.22 0.595 0.331 3.239 1.794 6.465 3.611 9.67 5.473 43.749 25.415 84.187 57.128 117.641 94.414 3.058 3.408 6.062 6.886 9.003 10.431 19.074 22.98 35.445 48.751 45.798 76.349 1.175 3.131 2.27 6.285 3.284 9.462 0.034 0.686 0.277 2.59 0.265 3.581-0.032 2.654-0.107 5.309-0.187 7.963zM583.497 604.837c-0.713-2.172-1.457-4.33-2.232-6.476-5.718-24.894-21.119-47.983-36.303-67.561-0.887-1.143-1.796-2.266-2.695-3.397-27.162-36.266-62.124-67.33-98.14-93.239-11.325-8.147-22.969-15.862-34.879-23.146 24.439-14.169 48.877-28.338 73.317-42.507 2.777-1.61 5.554-3.22 8.331-4.83 3.161-1.833 6.321-3.666 9.482-5.498s6.322-3.666 9.483-5.498c7.167-4.156 14.335-8.311 21.502-12.466 0.638 0.607 1.399 1.162 2.318 1.636 21.931 11.282 42.838 25.023 62.825 39.404 6.7 4.82 13.31 9.807 19.831 14.989-5.698 2.89-11.396 5.78-17.094 8.671-1.813 0.92-2.486 2.441-2.382 3.959-0.239 1.619 0.402 3.282 2.382 4.228 15.185 7.261 28.683 18.185 40.769 29.777 5.8 5.563 11.408 11.433 16.314 17.808 3.531 4.587 7.236 9.699 8.73 15.376 0.81 3.076 4.299 4.226 6.964 2.833 5.435-2.839 10.87-5.678 16.304-8.517 2.498 3.646 4.908 7.376 7.217 11.21 13.398 22.237 22.14 46.329 22.491 71.792-24.594 14.324-50.683 26.259-77.62 35.923-18.505 6.639-37.346 12.283-56.388 17.152-0.174-0.543-0.353-1.082-0.53-1.62zM740.043 613.444c-31.842 21.12-66.665 37.301-102.862 49.399-17.283 5.776-34.851 10.643-52.585 14.812 0.203-17.31 0.407-34.621 0.61-51.931 47.24-11.808 93.503-28.496 136.119-52.191 21.893-12.172 42.781-26.297 62.108-42.282 2.623-2.168 5.219-4.367 7.782-6.606 2.509-2.191 4.995-4.408 7.445-6.665 6.657-6.134 13.094-12.503 19.271-19.119 1.064-1.14 2.101-2.305 3.151-3.459 0 11.803 0 23.608 0 35.412 0 2.812 0 5.624 0 8.437-0.456 0.568-0.906 1.143-1.365 1.708-0.59 0.725-1.19 1.441-1.784 2.161-1.494 1.808-3.006 3.602-4.533 5.381-12.557 14.615-26.245 28.202-40.946 40.614-7.603-3.99-15.952-6.686-24.29-8.375-4.678-0.947-9.413-1.567-14.147-2.154-0.576-0.071-1.154-0.142-1.731-0.211-0.235-0.066-0.433-0.12-0.601-0.164-8.244-4.326-18.424 7.388-10.838 15.383 2.647 2.789 6.37 3.094 9.922 3.553 1.239 0.16 2.48 0.306 3.72 0.461 0.189 0.024 0.757 0.099 1.225 0.159 0.677 0.101 1.973 0.289 2.258 0.335 4.38 0.694 8.729 1.604 12.992 2.828 1.585 0.455 3.146 0.978 4.701 1.52-5.104 3.803-10.309 7.472-15.622 10.996zM789.317 643.232c0.003 0.017 0.007 0.034 0.009 0.051 0.074 0.448 0.188 1.736-0.009-0.051z"],"grid":0,"tags":["mouse-computer"],"defaultCode":59697},{"paths":["M925.463 450.723c-5.414-19.043-15.197-37.064-30.23-50.215-13.079-11.441-28.968-19.084-45.796-23.214-28.026-6.877-57.781-5.3-85.894 0.239-4.057 0.799-8.098 1.697-12.099 2.74-0.701 0.183-1.454 0.327-2.166 0.539-0.127-0.019-0.258-0.027-0.387-0.041-15.618-8.438-32.543-14.767-49.328-20.36-30.186-10.056-61.379-17.079-92.833-21.76-85.247-12.688-174.643-10.971-257.57 13.996-25.463 7.667-50.695 17.38-74.070 30.179-0.243-0.009-0.489-0.032-0.699-0.053-0.337-0.077-0.674-0.146-0.983-0.229-3.162-0.845-6.354-1.588-9.554-2.269-12.071-2.567-24.385-4.275-36.701-5.041-31.729-1.974-66.31 2.716-92.28 22.409-18.23 13.823-30.112 33.242-36.334 55.127-5.362 19.641-6.75 40.556-5.203 60.82 1.099 14.391 3.678 28.837 9.023 42.293 8.713 21.934 23.591 40.316 43.975 52.421 32.822 19.491 73.896 21.948 111.012 17.62 9.447-1.102 19.023-2.4 28.263-4.733 1.085-0.274 2.129-0.808 3.068-1.514 4.040 2.82 8.003 5.763 12.020 8.56 11.993 8.354 24.245 16.334 36.978 23.522 35.727 20.169 74.643 33.843 115.428 38.828 45.136 5.516 92.367 1.917 136.781-7.332 33.759-7.031 66.54-18.235 97.707-32.969 18.945-8.956 36.607-19.868 54.76-30.192 22.27 5.133 46.169 6.598 68.796 4.983 43.315-3.092 86.619-20.935 106.494-62.034 16.346-33.803 17.592-76.54 7.824-112.32zM778.156 427.129c0.020-0.003 0.030-0.005 0.049-0.008 0.569-0.068 1.136-0.146 1.704-0.215 1.282-0.156 2.566-0.302 3.85-0.437 2.708-0.284 5.422-0.521 8.139-0.704 5.83-0.393 11.68-0.545 17.523-0.391 2.78 0.074 5.558 0.216 8.33 0.439 1.524 0.122 3.045 0.268 4.563 0.441 0.494 0.056 0.987 0.118 1.48 0.179 0.438 0.064 0.875 0.128 1.312 0.196 6.017 1.019 11.949 2.322 17.719 4.336 1.19 0.415 2.368 0.864 3.538 1.333-0.035 0.009 2.049 0.921 2.508 1.143 2.898 1.404 5.703 3.003 8.366 4.815 0.435 0.296 2.259 1.678 2.231 1.622 0.965 0.791 1.914 1.6 2.826 2.452 1.101 1.026 2.159 2.097 3.173 3.209 0.34 0.375 0.676 0.753 1.007 1.137 0.191 0.222 1.224 1.553 1.366 1.71 1.623 2.258 3.090 4.62 4.367 7.092 0.315 0.609 0.61 1.226 0.912 1.841 0.062 0.126 0.447 1.015 0.61 1.379 0.677 1.701 1.281 3.432 1.807 5.184 2.36 7.846 2.896 13.013 2.989 21.113 0.108 9.386-0.256 18.827-1.237 28.165-0.61 5.8-1.849 13.206-3.954 20.198-0.384 1.274-0.795 2.54-1.242 3.794-0.258 0.726-0.536 1.443-0.808 2.165-0.055 0.146-0.1 0.266-0.136 0.366-0.021 0.046-0.036 0.077-0.059 0.128-1.164 2.566-2.451 5.068-3.965 7.447-0.558 0.878-1.153 1.729-1.763 2.57 0.172-0.29-1.551 1.854-1.936 2.271-0.721 0.781-1.47 1.538-2.243 2.267-0.519 0.489-3.182 2.623-2.569 2.22-1.716 1.233-3.485 2.378-5.337 3.4-1.161 0.641-2.351 1.208-3.539 1.793-0.165 0.082-0.58 0.262-0.898 0.4-0.628 0.252-1.254 0.504-1.89 0.739-6.176 2.28-12.632 3.744-19.115 4.838-0.825 0.139-1.65 0.271-2.477 0.398-0.241 0.037-1.826 0.263-2.294 0.334-1.584 0.207-3.171 0.397-4.759 0.572-4.432 0.486-8.875 0.865-13.321 1.191-17.444 1.28-34.93 1.925-52.396 2.876 0.714-11.993 1.428-23.986 2.142-35.979 2.123-35.665 4.246-71.328 6.369-106.993 1.667-0.357 3.338-0.695 5.009-1.018 4.002-0.774 8.025-1.369 12.047-2.009zM200.734 568.431c-0.621-0.089-1.242-0.177-1.862-0.273-1.636-0.251-3.268-0.524-4.896-0.826-3.062-0.567-6.107-1.227-9.116-2.030-2.559-0.683-5.093-1.464-7.578-2.382-0.65-0.24-1.294-0.495-1.94-0.747-0.009-0.004-0.013-0.006-0.022-0.009-0.067-0.032-0.128-0.062-0.215-0.102-1.4-0.662-2.793-1.325-4.15-2.074-1.802-0.996-3.527-2.108-5.201-3.302 0.353 0.217-1.814-1.493-2.24-1.885-0.941-0.861-1.845-1.762-2.709-2.699-0.385-0.417-2.107-2.56-1.936-2.271-0.61-0.841-1.205-1.693-1.763-2.57-1.513-2.379-2.801-4.88-3.965-7.447-0.023-0.051-0.038-0.083-0.059-0.128-0.037-0.1-0.082-0.22-0.137-0.366-0.271-0.721-0.549-1.438-0.808-2.165-0.447-1.253-0.858-2.519-1.242-3.794-1.088-3.612-1.937-7.295-2.625-11.004-0.289-1.56-0.545-3.125-0.782-4.693-0.113-0.744-0.326-2.398-0.547-4.502-0.466-4.429-0.769-8.875-0.963-13.323-0.36-8.265-0.546-19.419 0.458-25.896 0.527-3.397 1.266-6.766 2.256-10.059 0.504-1.677 1.082-3.328 1.709-4.964 0.066-0.174 0.119-0.313 0.162-0.43 0.054-0.112 0.118-0.246 0.197-0.417 0.349-0.749 0.701-1.495 1.074-2.232 1.341-2.639 2.894-5.158 4.626-7.555 0.025 0.015 1.446-1.788 1.795-2.183 1.165-1.316 2.393-2.575 3.679-3.774 0.909-0.849 1.854-1.655 2.816-2.443-0.040 0.066 1.843-1.361 2.241-1.632 2.663-1.812 5.468-3.41 8.366-4.815 0.415-0.201 2.576-1.147 2.525-1.15 1.164-0.466 2.337-0.913 3.521-1.326 2.863-0.999 5.779-1.843 8.726-2.558 2.973-0.722 5.975-1.283 8.993-1.778 0.604-0.099 0.899-0.152 1.036-0.18 0.161-0.014 0.464-0.046 0.995-0.107 1.772-0.204 3.546-0.387 5.324-0.53 5.98-0.481 11.986-0.593 17.983-0.426 6 0.167 11.992 0.615 17.956 1.293 1.071 0.122 2.142 0.26 3.212 0.396 0.161 0.029 2.278 0.316 2.772 0.391 2.471 0.373 4.936 0.783 7.393 1.233 2.327 0.426 4.657 0.871 6.976 1.366 0.782 13.134 1.563 26.268 2.346 39.402 2.057 34.546 4.113 69.092 6.169 103.637-15.656-0.857-31.324-1.488-46.97-2.504-7.337-0.476-14.663-1.077-21.963-1.956-0.138-0.014-1.227-0.162-1.616-0.213zM252.825 607.45c-3.762 0.374-7.532 0.666-11.307 0.874-8.621 0.475-17.269 0.515-25.889 0.017-4.437-0.256-8.857-0.679-13.267-1.216-0.002 0-0.002 0-0.004-0.001-0.592-0.088-1.184-0.171-1.775-0.261-1.068-0.163-2.134-0.336-3.2-0.519-2.501-0.43-4.992-0.917-7.469-1.466-4.523-1.002-9.001-2.208-13.402-3.649-2.331-0.763-4.639-1.591-6.921-2.489-0.399-0.157-1.281-0.525-1.676-0.687-1.176-0.514-2.348-1.035-3.505-1.588-4.248-2.026-8.367-4.323-12.302-6.904-1.045-0.685-2.075-1.39-3.093-2.114-0.352-0.25-1.96-1.474-2.222-1.656-1.805-1.445-3.566-2.945-5.259-4.52-1.7-1.582-3.339-3.228-4.912-4.937-0.887-0.963-1.754-1.947-2.599-2.948-0.341-0.404-0.673-0.815-1.012-1.221-0.245-0.301-0.485-0.604-0.725-0.907-0.003-0.005-0.005-0.008-0.009-0.011-3.229-4.357-6.104-8.947-8.572-13.778-0.731-1.431-1.403-2.887-2.087-4.342-0.090-0.192-0.337-0.753-0.467-1.044-0.287-0.693-0.569-1.39-0.84-2.090-1.249-3.221-2.343-6.501-3.298-9.821-1.953-6.793-3.538-15.022-4.19-20.935-2.25-20.416-1.421-41.566 4-61.426 4.899-17.231 13.048-31.567 26.73-43.025 0.258-0.216 1.282-1.046 1.524-1.249 0.293-0.212 1.477-1.094 1.879-1.381 1.685-1.199 3.414-2.337 5.179-3.415 3.246-1.983 6.619-3.733 10.070-5.33 0.476-0.22 0.957-0.43 1.437-0.64 0.771-0.315 1.545-0.622 2.325-0.919 1.892-0.721 3.804-1.388 5.733-2.003 3.702-1.182 7.463-2.175 11.26-3 1.677-0.364 3.362-0.695 5.053-0.996 0.982-0.174 1.966-0.338 2.952-0.491 0.401-0.063 1.648-0.239 1.89-0.278 3.552-0.449 7.12-0.771 10.693-0.982 7.223-0.427 14.47-0.403 21.695-0.017 3.227 0.173 6.451 0.418 9.668 0.731 1.527 0.149 3.051 0.312 4.574 0.491 0.682 0.080 1.363 0.165 2.044 0.248 0.234 0.028 0.408 0.049 0.557 0.067 0.059 0.009 0.131 0.020 0.229 0.034 5.052 0.74 10.083 1.576 15.084 2.606 1.191 0.246 2.364 0.519 3.527 0.799 0.226 3.788 0.451 7.577 0.677 11.365-10.368-1.994-20.965-3.166-31.384-3.759-25.433-1.451-54.137 1.256-75.211 16.942-12.152 9.044-20.676 21.512-24.854 36.094-4.984 17.395-4.039 36.696-2.064 54.493 1.632 14.701 4.574 29.953 12.641 42.633 6.967 10.95 17.014 18.519 28.936 23.368 14.672 5.968 30.966 7.547 46.617 8.791 18.681 1.485 37.423 2.123 56.137 3.145 0.246 4.129 0.491 8.257 0.737 12.387-4.13 0.78-8.294 1.403-12.443 2.025-0.016 0.003-0.024 0.004-0.040 0.006-0.025 0.003-0.039 0.005-0.065 0.008-0.832 0.102-1.664 0.21-2.496 0.31-1.761 0.212-3.523 0.406-5.288 0.58zM599.801 661.574c-42.134 10.356-85.736 13.986-129.039 11.617-39.998-2.189-79.002-14.194-114.347-32.802-14.784-7.784-28.945-16.667-42.702-26.137-7.292-5.020-14.382-10.558-21.923-15.256-1.186-19.933-2.373-39.866-3.559-59.798-2.3-38.65-4.601-77.301-6.902-115.95 0.12-1.135 0.057-2.282-0.201-3.38-0.358-6.030-0.718-12.060-1.077-18.091 0.806-0.463 1.614-0.923 2.422-1.38 7.66-4.279 15.546-8.152 23.549-11.744 5.874-2.636 9.168-4.014 15.753-6.576 6.854-2.667 13.778-5.15 20.761-7.461 37.841-12.52 77.283-20.064 117.018-22.964 75.345-5.499 153.142 1.607 225.451 23.988 12.116 3.751 24.060 8.004 35.799 12.807 0.19 0.078 0.723 0.302 1.061 0.445 0.351 0.15 0.702 0.299 1.051 0.45 1.166 0.503 2.331 1.015 3.49 1.534 1.932 0.865 3.855 1.751 5.765 2.665 3.162 1.513 6.292 3.099 9.354 4.806 0.809 0.457 1.616 0.917 2.422 1.38-1.344 22.564-2.686 45.128-4.030 67.692-2.276 38.235-4.552 76.469-6.828 114.704-0.040 0.35-0.064 0.706-0.064 1.072 0 0 0 0 0 0-0.005 0.089-0.010 0.177-0.016 0.266-0.413 6.944-0.827 13.888-1.24 20.833-14.569 8.35-28.791 17.199-43.825 24.768-28.010 14.103-56.994 24.854-88.144 32.51zM855.751 596.16c-0.302 0.126-0.503 0.209 0 0v0zM911.703 511.543c-0.938 12.277-3.645 25.344-8.514 37.673-6.949 17.593-20.526 32.625-37.669 42.148-1.944 1.079-3.922 2.096-5.928 3.053-1.111 0.53-2.235 1.034-3.359 1.535-0.039 0.017-0.086 0.038-0.137 0.060-0.56 0.23-1.121 0.459-1.685 0.681-4.555 1.793-9.218 3.307-13.945 4.578-4.448 1.196-8.954 2.174-13.491 2.965-1.183 0.206-2.368 0.399-3.556 0.58-0.473 0.072-0.947 0.139-1.42 0.21-0.101 0.015-0.174 0.027-0.252 0.038-0.024 0.003-0.038 0.005-0.064 0.008-2.346 0.29-4.693 0.552-7.047 0.761-16.214 1.447-32.596 0.92-48.748-1.011-0.914-0.109-1.827-0.231-2.74-0.342-0.038-0.005-0.057-0.007-0.090-0.010-0.132-0.020-0.283-0.043-0.466-0.069-1.591-0.234-3.182-0.467-4.77-0.723-2.331-0.376-4.658-0.79-6.977-1.236 0.204-3.43 0.409-6.86 0.613-10.29 16.833-0.935 33.685-1.577 50.506-2.721 14.9-1.014 30.192-2.239 44.59-6.439 11.667-3.404 23.049-9.156 31.142-18.438 9.122-10.463 14.044-23.643 16.551-37.155 3.45-18.599 4.744-38.763 1.98-57.518-2.164-14.679-8.401-28.765-18.905-39.39-19.203-19.423-48.377-24.441-74.612-24.125-13.385 0.161-27.126 1.444-40.435 4.084 0.267-4.49 0.534-8.982 0.802-13.472 0.114-0.026 0.222-0.052 0.337-0.078 4.595-1.016 9.222-1.889 13.868-2.628 1.359-0.216 2.72-0.411 4.081-0.613 0.119-0.018 0.213-0.032 0.302-0.046 0.046-0.006 0.081-0.009 0.137-0.016 0.791-0.098 1.581-0.2 2.372-0.294 3.216-0.382 6.441-0.699 9.671-0.944 6.929-0.527 13.885-0.733 20.832-0.548 3.739 0.1 7.477 0.311 11.202 0.653 1.793 0.165 3.581 0.363 5.367 0.586 0.316 0.045 0.632 0.088 0.946 0.138 1.125 0.18 2.252 0.351 3.374 0.547 7.509 1.311 14.924 3.23 22.062 5.917 0.814 0.306 1.622 0.626 2.43 0.949 0.364 0.146 0.512 0.2 0.558 0.213 0.104 0.052 0.328 0.16 0.781 0.372 1.851 0.864 3.693 1.73 5.499 2.685 3.382 1.787 6.656 3.78 9.784 5.982 0.43 0.302 2.009 1.469 2.264 1.65 0.2 0.17 1.477 1.21 1.851 1.526 1.743 1.475 3.425 3.023 5.040 4.635 3.558 3.552 5.969 6.446 8.243 9.719 6.353 9.144 10.115 17.883 13.1 28.38 4.942 18.099 5.951 37.122 4.526 55.781z","M716.469 414.404c-76.525-32.219-160.005-49.602-243.188-43.601-49.080 3.541-97.916 14.656-142.734 35.217-7.737 3.55-15.578 7.287-22.754 11.903-10.23 6.582-0.732 23.004 9.571 16.374 5.62-3.615 11.687-6.628 17.695-9.524 3.19-1.538 6.408-3.015 9.649-4.439 0.814-0.357 1.631-0.706 2.445-1.062 0.252-0.11 0.425-0.186 0.559-0.246 0.139-0.057 0.323-0.132 0.592-0.243 2.128-0.877 4.257-1.746 6.399-2.587 9.571-3.759 19.305-7.102 29.152-10.062 59.589-17.914 122.071-21.645 184.104-13.518 49.39 6.471 97.63 20.772 143.469 40.072 4.722 1.988 10.432-2.14 11.663-6.622 1.504-5.474-1.883-9.666-6.623-11.662z","M706.624 518.164c-75.544 17.322-153.363 22.793-230.68 18.423-48.192-2.724-93.77-9.496-141.12-18.425-9.517-1.795-31.785-9.332-33.008 6.69-0.39 5.112 4.637 9.481 9.481 9.481 1.098 0 2.117-0.183 3.056-0.507 0.367 0.028 0.733 0.061 1.097 0.087 0.074 0.006 0.12 0.009 0.185 0.012 0.089 0.016 0.174 0.031 0.292 0.050 5.309 0.882 10.597 1.855 15.884 2.854 18.674 3.531 37.374 6.894 56.181 9.652 62.388 9.151 125.561 12.728 188.551 9.085 45.458-2.629 90.738-8.94 135.122-19.118 11.89-2.726 6.857-21.013-5.041-18.285zM312.845 533.784c-0.801 0.207-0.508 0.070 0 0v0z","M704.359 566.18c-65.046 33.54-137.758 49.541-210.853 47.113-28.366-0.942-56.577-4.563-84.238-10.927-11.674-2.685-23.242-5.845-34.637-9.539-4.904-1.59-9.776-3.279-14.606-5.081-2.159-0.806-4.31-1.634-6.451-2.486-0.796-0.317-1.589-0.641-2.384-0.964 0.511-5.076-2.514-10.578-9.097-10.578-3.161 0-5.498 1.279-7.023 3.165-2.732-1.404-5.423-2.884-8.053-4.471-1.284-0.775-2.554-1.574-3.795-2.416-0.52-0.353-1.028-0.722-1.545-1.078-0.026-0.017-0.042-0.028-0.066-0.046-0.619-0.589-1.318-1.126-1.948-1.702-0.256-0.233-0.471-0.546-0.723-0.791-6.98-8.902-22.388 0.351-15.828 10.318 6.262 9.514 19.017 15.111 28.934 19.758 19.594 9.183 40.25 16.114 61.184 21.513 62.316 16.071 128.022 18.789 191.458 8.077 45.072-7.612 88.64-22.554 129.245-43.492 10.851-5.594 1.27-21.963-9.571-16.373z","M310.692 486.221c0.991-0.072 1.992-0.214 2.962-0.449-0.925 0.425-0.375 0.165 0.399-0.105 0.27-0.075 0.538-0.153 0.789-0.244 0.031-0.008 0.063-0.017 0.093-0.025 1.446-0.344 2.88-0.741 4.324-1.095 5.405-1.327 10.839-2.543 16.283-3.701 19.241-4.088 38.648-7.403 58.126-10.135 61.17-8.579 125.239-11.185 187.516-6.407 42.4 3.253 84.464 10.239 125.441 21.678 11.773 3.286 16.797-15.003 5.041-18.286-72.049-20.112-147.557-26.692-222.163-24.182-51.728 1.741-103.549 7.645-154.265 18.057-6.665 1.368-13.316 2.821-19.93 4.424-2.164 0.524-4.358 0.991-6.479 1.672 0.067-0.008 0.129-0.015 0.205-0.023-0.087 0.020-0.171 0.030-0.258 0.053-0.048 0.012-0.094 0.023-0.139 0.033-0.928 0.304-1.842 0.648-2.731 1.064-2.775 1.302-4.933 5.154-4.696 8.187 0 0.001 0 0.001 0 0.002 0.377 4.821 4.046 9.874 9.481 9.481z","M308.637 467.485c0.064-0.021 0.129-0.042 0.193-0.063-1.437 0.163-0.978 0.241-0.193 0.063z"],"grid":0,"tags":["mouthmask"],"defaultCode":59698},{"paths":["M415.296 239.793l-22.106-14.761-24.693 9.843 7.208-25.586-16.991-20.442 26.56-1.051 14.191-22.477 9.208 24.935 25.761 6.552-20.87 16.463z","M292.148 324.615l-26.525-1.73-16.463 20.87-6.551-25.761-24.935-9.208 22.476-14.191 1.052-26.56 20.442 16.991 25.585-7.207-9.842 24.692z","M227.91 459.645l-23.836 11.765-3.823 26.304-18.553-19.034-26.199 4.493 12.37-23.528-12.37-23.527 26.199 4.493 18.553-19.035 3.823 26.305z","M239.793 608.704l-14.761 22.106 9.843 24.693-25.586-7.208-20.442 16.991-1.051-26.56-22.477-14.191 24.935-9.208 6.552-25.761 16.463 20.87z","M324.615 731.852l-1.73 26.525 20.87 16.463-25.761 6.551-9.208 24.935-14.191-22.476-26.56-1.052 16.991-20.442-7.207-25.585 24.692 9.842z","M459.645 796.090l11.765 23.836 26.304 3.823-19.034 18.553 4.493 26.199-23.528-12.37-23.527 12.37 4.493-26.199-19.035-18.553 26.305-3.823z","M608.704 784.207l22.106 14.761 24.693-9.843-7.208 25.586 16.991 20.442-26.56 1.051-14.191 22.477-9.208-24.935-25.761-6.552 20.87-16.463z","M731.852 699.385l26.525 1.73 16.463-20.87 6.551 25.761 24.935 9.208-22.476 14.191-1.052 26.56-20.442-16.991-25.585 7.207 9.842-24.692z","M796.090 564.355l23.836-11.765 3.823-26.304 18.553 19.034 26.199-4.493-12.37 23.528 12.37 23.527-26.199-4.493-18.553 19.035-3.823-26.305z","M784.207 415.296l14.761-22.106-9.843-24.693 25.586 7.208 20.442-16.991 1.051 26.56 22.477 14.191-24.935 9.208-6.552 25.761-16.463-20.87z","M564.355 227.91l-11.765-23.836-26.304-3.823 19.034-18.553-4.493-26.199 23.528 12.37 23.527-12.37-4.493 26.199 19.035 18.553-26.305 3.823z"],"grid":0,"tags":["new-europe"],"defaultCode":59699},{"paths":["M903.243 416.557c-0.252-0.198-0.537-0.382-0.859-0.545-0.201-0.118-0.401-0.214-0.601-0.3-28.262-14.283-58.579-25.919-90.358-28.662-7.155-0.617-14.361-0.695-21.527-0.205 7.928-4.343 16.605-7.46 25.137-10.065 4.060-1.239 8.154-2.364 12.267-3.414 3.786-0.967 8.018-1.479 11.45-3.455 5.818-3.349 8.273-9.481 7.682-15.832 0.023-0.51-0.039-1.056-0.211-1.637-0.104-0.595-0.29-1.104-0.536-1.536-2.007-5.117-6.115-8.986-11.676-10.128-6.144-1.262-13.111 1.573-18.988 3.172-12.162 3.308-24.182 7.368-35.527 12.898-20.561 10.022-37.306 25.682-46.163 47.004-0.497 1.196-0.959 2.404-1.405 3.616-8.155 6.212-15.244 13.331-21.432 21.55-0.348 0.478-0.704 0.968-1.063 1.464-0.742-0.13-1.491-0.259-2.244-0.387 0.161-4.358 0.402-8.712 0.764-13.058 1.269-15.238 4.096-30.916 11.469-44.489 6.806-12.529 17.249-22.101 29.745-28.819 3.311-1.78 6.722-3.381 10.211-4.781 3.677-1.475 7.822-2.35 11.288-4.272 6.178-3.428 8.968-10.184 7.843-16.9-0.011-0.503-0.116-1.043-0.339-1.618-0.151-0.573-0.375-1.065-0.652-1.483-2.481-5.171-6.887-8.943-12.883-9.521-6.623-0.639-13.768 3.147-19.712 5.679-12.141 5.174-23.543 12.052-33.302 20.983-21.376 19.562-30.913 46.939-34.299 75.107-0.744 6.191-1.207 12.413-1.509 18.642-3.938-0.48-7.968-0.942-12.087-1.385-5.158-15.089-9.057-30.989-9.072-46.998-0.010-11.607 2.292-23.616 9.462-33.039 3.377-4.438 8.644-7.169 11.783-11.654 3.61-5.159 3.857-12.101 0.492-17.462-3.353-5.342-9.72-8.201-15.934-7.159-5.975 1.002-10.951 5.787-15.113 9.92-8.703 8.642-14.897 19.503-18.386 31.233-3.003 10.092-4.134 20.56-3.922 31.088-3.993-5.411-8.33-10.575-12.975-15.426-7.582-7.922-15.898-14.979-24.745-21.299 25.383-24.714 61.27-41.467 97.17-34.034 4.872 1.009 9.359 2.185 14.212-0.030 8.163-3.727 11.749-14.008 7.327-21.941-5.867-10.526-23.244-10.613-33.582-11.012-9.090-0.351-18.135 0.305-27.022 1.829-3.969-11.237-19.062-12.166-29.976-12.801-23.554-1.371-47.283 3.982-68.355 14.459-13.955 6.939-26.609 16.224-37.939 26.887-1.22-0.372-2.441-0.737-3.663-1.095-9.153-2.691-18.405-5.042-27.71-7.147 6.414-5.162 13.414-9.567 20.809-13.248 4.434-2.207 8.649-3.909 11.256-8.392 2.446-4.204 2.738-9.231 1.009-13.742-0.040-0.103-0.086-0.199-0.131-0.297-0.089-0.276-0.2-0.555-0.347-0.835-9.682-18.519-32.43-2.342-43.861 5.539-14.153 9.757-26.353 22.046-35.785 36.434-8.601 13.119-14.579 27.506-18.461 42.506-6.924-0.718-13.864-1.165-20.824-1.373-4.314-5.341-8.944-10.427-13.839-15.199-20.139-19.63-44.578-34.473-70.167-45.87-14.912-6.642-30.266-12.247-45.883-16.986-8.674-2.632-17.425-5.009-26.231-7.161-4.325-1.057-8.661-2.063-13.010-3.018-4.315-0.947-8.863-2.418-13.305-1.498-16.567 3.429-16.105 26.641-0.375 30.858 9.554 2.561 19.35 4.281 28.92 6.84 8.972 2.399 17.875 5.061 26.676 8.029 16.15 5.446 31.952 11.971 46.994 19.997-15.101 4.912-28.933 13.479-39.421 25.659-1.549 1.799-2.981 3.647-4.323 5.531-41.399-5.548-83.513-1.013-124.172 7.716-9.151 1.965-21.733 2.559-26.503 11.995-3.885 7.685-0.576 17.31 7.057 21.169 4.157 2.102 8.376 1.766 12.764 0.749 6.537-1.516 13.065-3.034 19.643-4.364 11.371-2.299 22.826-4.234 34.347-5.605 21.311-2.535 42.921-3.395 64.304-1.313-2.607 15.609-0.258 32.039 6.491 47.436 2.533 5.777 5.581 11.307 9.029 16.581-2.743 1.598-4.855 3.235-6.308 4.905-6.223-1.708-11.331 3.298-11.808 9.188-0.806 9.967-0.649 20.071-0.314 30.052 0.835 24.832 3.886 49.699 9.239 73.962 6.821 30.916 17.738 61.249 33.701 88.657 18.222 31.286 43.308 58.297 73.869 77.822 38.025 24.293 82.728 35.64 127.408 38.589 6.336 0.418 12.681 0.649 19.030 0.749 0.367 0.038 0.741 0.063 1.129 0.060 1.523-0.010 3.044-0.010 4.566 0 0.39 0.003 0.763-0.022 1.13-0.060 46.305-0.742 93.013-9.573 133.953-31.952 32.411-17.715 59.566-43.667 79.748-74.511 17.651-26.973 29.88-57.485 37.777-88.663 6.4-25.267 10.098-51.304 11.456-77.326 0.636-12.189 1.080-24.651 0.041-36.84-0.016-0.18-0.026-0.36-0.040-0.539-0.465-5.751-5.346-10.646-11.367-9.289-2.737-3.089-7.753-6.064-14.784-8.885 0.179-3.565 0.448-7.13 1.11-10.692 0.269-1.452 0.584-2.887 0.926-4.311 19.567-10.411 42.266-11.244 63.77-7.21 13.161 2.469 25.994 6.535 38.428 11.467 7.566 3.001 14.98 6.38 22.275 9.987 5.556 2.748 10.578 5.197 16.826 3.024 12.747-4.436 13.552-21.225 3.044-28.262zM439.177 473.308c0.053 0.158 0.102 0.319 0.156 0.477-0.010-0.027-0.020-0.054-0.031-0.080 0.055 0.166 0.122 0.37 0.218 0.65-0.144-0.424-0.223-0.652-0.26-0.759 0.017 0.031 0.027 0.073 0.042 0.108-0.069-0.212-0.11-0.34-0.125-0.397zM452.499 325.632c2.747 0.931 5.674 1.344 8.569 1.953 5.122 1.079 10.229 2.236 15.314 3.48 2.617 0.641 5.228 1.306 7.833 1.994-5.751 7.905-11.002 16.119-15.837 24.626-2.367 0.074-4.731 0.166-7.094 0.286-6.495-2.395-13.092-4.407-19.793-6.1 2.614-9.184 6.245-18.028 11.008-26.239zM501.492 338.063c0.675 0.212 1.349 0.43 2.022 0.646 1.14 0.366 2.277 0.737 3.413 1.114-3.025 3.807-5.907 7.722-8.671 11.726-5.74 0.237-11.458 1.168-16.943 2.813 3.895-6.397 8.065-12.619 12.587-18.6 1.115 0.324 2.229 0.652 3.34 0.987 1.42 0.43 2.837 0.869 4.251 1.314zM537.429 351.938c-1.396 2.057-2.766 4.129-4.103 6.224-7.551-3.215-15.578-5.357-23.797-6.235 2.192-3.008 4.48-5.938 6.855-8.801 7.138 2.637 14.174 5.554 21.044 8.812zM583.532 382.875c-6.945-4.054-14.201-7.536-21.657-10.558 1.022-1.55 2.057-3.091 3.118-4.617 6.587 4.562 12.808 9.623 18.539 15.174zM620.117 450.834c0.257 1.216 0.5 2.435 0.73 3.657 0.003 0.018 0.007 0.035 0.009 0.053 0.077 0.411 0.144 0.824 0.218 1.236-0.431-0.988-0.87-1.972-1.325-2.946-8.876-19.051-23.385-34.83-40.64-46.632-2.578-7.5-6.239-14.441-10.856-20.732 6.894 3.341 13.548 7.166 19.869 11.539 5.246 3.63 10.209 7.65 14.864 12.011 1.652 1.547 3.031 3.338 4.234 5.265 6.024 11.471 10.197 23.797 12.879 36.464 0.005 0.027 0.010 0.056 0.017 0.084zM326.22 381.342c16.869 9.406 31.983 21.842 43.441 37.492 5.501 7.514 10.247 15.625 13.979 24.162 1.464 3.35 2.746 6.784 3.858 10.267 0.268 0.841 0.456 1.672 0.61 2.496-0.041 0.765-0.040 1.534 0.046 2.313 0.221 2 0.796 3.817 1.638 5.434-0.818 5.675-8.297 8.495-11.666 2.781-1.232-2.091-1.477-5.402-2.167-7.715-3.417-11.445-9.119-22.312-16.214-31.888-14.106-19.036-33.37-32.608-54.947-41.418 7.118-1.46 14.257-2.78 21.422-3.922zM443.336 448.36c1.376-6.333 3.299-12.63 5.289-18.854 1.607 0.744 3.332 1.227 5.101 1.416 0.467 0.126 0.989 0.182 1.566 0.148 0.529 0.033 1.008-0.012 1.444-0.116 1.188-0.099 2.374-0.318 3.536-0.697 0.576-0.188 1.116-0.404 1.636-0.635-2.586 8.147-4.935 16.37-7.057 24.654-1.715 6.694-3.291 13.424-4.741 20.18-0.176 0.822-0.379 1.622-0.611 2.389-0.003-0.374-0.016-0.748-0.046-1.125-0.236-2.924-1.409-5.646-2.312-8.573-1.513-4.912-2.847-9.882-4.046-14.883-0.085-1.343-0.031-2.655 0.241-3.904zM532.237 367.911c0.169 0.123 0.333 0.253 0.523 0.347 3.067 1.513 6.023 3.181 8.865 5.020 0.15 0.101 0.305 0.193 0.454 0.295 0.016 0.010 0.031 0.021 0.046 0.031 11.306 7.713 20.526 18.475 25.995 31.010 0.662 1.984 1.298 3.996 2.195 5.743 0.971 2.944 1.758 5.962 2.3 9.055 2.653 17.227-1.532 34.815-9.197 50.263-1.623 3.271-3.461 6.459-7.648 6.007-3.549-0.383-6.035-3.634-5.542-7.146 0.489-3.485 3.217-7.248 4.571-10.509 1.673-4.029 3.090-8.15 4.101-12.396 3.447-14.477 2.255-29.925-5.523-42.853-2.061-3.427-4.507-6.596-7.25-9.49-0.047-0.053-0.083-0.11-0.134-0.162-0.243-0.248-0.497-0.482-0.743-0.725-7.9-7.986-18.111-13.742-28.906-16.65-2.706-0.729-5.52-1.28-8.377-1.641-0.353-0.046-0.705-0.087-1.059-0.127-0.242-0.027-0.483-0.058-0.724-0.081-0.792-0.079-1.586-0.137-2.384-0.181-0.043-0.002-0.084-0.004-0.127-0.007-0.874-0.046-1.75-0.078-2.63-0.080-0.208-0.001-0.416 0.014-0.624 0.016-0.746 0.005-1.491 0.022-2.236 0.059-0.081 0.005-0.161 0.011-0.242 0.016-5.262 0.286-10.44 1.394-15.187 3.53-0.22 0.098-0.437 0.2-0.654 0.302-0.434 0.207-0.868 0.417-1.294 0.642-0.448 0.235-0.891 0.48-1.329 0.735-0.212 0.123-0.425 0.245-0.634 0.373-0.564 0.345-1.115 0.71-1.657 1.088-0.093 0.064-0.191 0.119-0.283 0.185-0.083 0.060-0.158 0.126-0.242 0.186-0.552 0.399-1.091 0.814-1.618 1.246-0.036 0.029-0.070 0.060-0.106 0.089-2.859 2.365-5.334 5.194-7.278 8.38-2.078 3.406-3.588 7.282-4.523 11.153-0.195 0.807-0.336 1.616-0.458 2.425-0.59 2.951-0.927 5.973-1.033 9.002-0.061 1.728-0.137 3.412-0.715 4.853-1.051 2.151-2.898 3.462-5.483 3.658-0.138 0.003-0.276-0.004-0.413-0.011-1.152-0.107-2.104-0.428-2.936-0.94-0.032-0.020-0.065-0.037-0.098-0.058-0.038-0.025-0.073-0.054-0.11-0.079-1.337-0.925-2.35-2.379-2.732-4.152-1.616-7.506 1.22-17.602 3.906-24.606 0.997-2.598 2.217-5.043 3.606-7.352 0.155-0.261 0.3-0.53 0.46-0.786 6.354-10.102 16.32-17.232 28.004-20.525 0.026-0.007 0.051-0.015 0.077-0.022 0.369-0.103 0.748-0.185 1.12-0.281 4.83-1.155 9.581-1.072 14.446-1.801 0.197-0.029 0.382-0.075 0.569-0.12 10.727-0.093 21.29 2.459 30.892 7.074zM544.794 406.921c2.090 3.353 3.614 6.859 4.657 10.455-3.634-0.071-7.29-0.13-10.971-0.177 1.666-4.011 3.395-7.995 5.22-11.939 0.377 0.547 0.744 1.099 1.094 1.661zM506.592 487.235c-3.851-0.023-7.705-0.061-11.557-0.109-0.987-3.703 0.95-8.986 1.755-12.272 3.494-14.271 7.532-28.413 12.262-42.325 1.327-3.905 2.714-7.787 4.16-11.646 0.042-0.113 0.083-0.227 0.126-0.339 3.894-10.366 8.238-20.551 13.084-30.516 3.768 2.117 7.256 4.592 10.473 7.507-3.256 6.834-6.277 13.772-9.081 20.796-0.047 0.102-0.102 0.199-0.144 0.305-1.198 3.024-2.346 6.065-3.47 9.115-0.351 0.951-0.704 1.902-1.048 2.856-0.369 1.023-0.728 2.049-1.088 3.075-0.326 0.928-0.65 1.857-0.97 2.789-0.369 1.075-0.734 2.151-1.094 3.229-0.309 0.925-0.613 1.853-0.915 2.78-0.243 0.745-0.496 1.486-0.735 2.233-0.036 0.112-0.062 0.216-0.095 0.325-3.499 10.947-6.574 22.034-9.294 33.196-0.613 2.509-1.078 6.187-2.369 9.003zM486.535 391.72c0.357-0.774 0.723-1.544 1.088-2.315 3.994 0.161 7.981 0.41 11.964 0.745 4.038 3.313 7.886 6.817 11.549 10.534-1.668 3.86-3.275 7.747-4.818 11.663-0.498 0.003-0.996 0.006-1.493 0.009-5.972-6.482-12.614-12.232-19.795-17.321 0.494-1.108 0.998-2.213 1.507-3.316zM481.229 403.937c4.299 3.126 8.383 6.518 12.206 10.242 0.944 0.92 1.834 1.968 2.734 3.004-6.811 0.084-13.541 0.21-20.192 0.375 1.662-4.579 3.409-9.12 5.252-13.621zM529.196 442.054c0.189-0.565 0.376-1.131 0.569-1.695 0.675-1.991 1.365-3.977 2.073-5.955 0.082-0.231 0.162-0.464 0.246-0.695 0.321-0.894 0.661-1.782 0.989-2.674 3.744 7.223 6.823 14.78 8.836 22.684 0.642 2.52 1.456 5.030 0.128 7.517-3.143 5.886-10.584 3.241-11.894-2.365-0.289-1.527-0.689-3.033-1.12-4.525-0.44-1.523-1.205-3.081-1.501-4.628-0.216-1.135-0.109-2.038 0.14-2.977 0.503-1.565 1.012-3.129 1.534-4.688zM552.481 369.38c-3.371-2.581-6.898-4.914-10.597-7.003 1.328-2.070 2.683-4.122 4.069-6.153 3.762 2.003 7.466 4.105 11.101 6.329-1.566 2.247-3.087 4.526-4.573 6.828zM437.78 369.386c0.592-0.065 1.182-0.137 1.774-0.201 0.601-0.064 1.202-0.126 1.803-0.189 1.441-0.149 2.883-0.287 4.326-0.421 0.632-0.058 1.264-0.12 1.897-0.176 1.679-0.147 3.36-0.28 5.042-0.407 1.29-0.096 2.581-0.183 3.872-0.265 0.334-0.022 0.667-0.043 1.002-0.064 0.144-0.009 0.289-0.015 0.433-0.025-1.541 1.464-3.010 3.020-4.379 4.69-1.572 1.919-2.994 3.942-4.3 6.037-0.307 0.485-0.611 0.975-0.904 1.472-0.085 0.147-0.169 0.295-0.253 0.442-0.169 0.291-0.338 0.583-0.503 0.879-3.734 0.349-7.461 0.741-11.182 1.189 0.292-4.336 0.751-8.654 1.369-12.96zM443.252 391.067c-0.366 1.080-0.71 2.169-1.018 3.269-1.953 6.966-4.219 16.873-2.295 24.536-0.894 0.044-1.785 0.087-2.676 0.133-0.983-9.002-1.454-18.069-1.3-27.113 2.427-0.298 4.856-0.573 7.288-0.825zM389.796 422.262c-2.042 0.18-4.069 0.365-6.077 0.554-5.523-8.999-12.12-17.379-19.551-24.853-6.836-6.876-14.535-13.337-22.785-18.762 8.118-0.989 16.271-1.716 24.458-2.145-2.653 3.111-3.989 7.166-3.447 12.025-0.013 0.493 0.055 1.020 0.225 1.58 0.109 0.577 0.293 1.073 0.534 1.496 1.691 4.296 4.827 7.753 9.292 9.402 4.221 1.559 8.414 0.817 12.594-0.2 2.288 6.72 3.908 13.699 4.757 20.903zM371.762 388.14c-0.715-3.795 1.267-5.824 4.014-7.046 2.137 3.683 4.069 7.472 5.787 11.358-4.159 0.862-8.251 0.808-9.801-4.312zM296.779 364.296c1.478-0.726 3.66-0.783 5.248-1.107 3.875-0.792 7.759-1.542 11.651-2.243 14.099-2.541 28.294-4.42 42.576-5.52 3.703 3.85 7.187 7.891 10.415 12.107-13.617 0.667-27.153 2.157-40.603 4.259-1.722 0.045-3.465 0.479-5.331 0.791-3.676 0.614-7.345 1.275-11.005 1.978-7.901 1.515-15.758 3.237-23.585 5.096-0.012 0.003-0.022 0.009-0.034 0.011 0.376-0.926 0.78-1.839 1.218-2.735 0.154-0.304 0.297-0.613 0.457-0.913 0.084-0.163 0.177-0.321 0.264-0.484 2.29-4.152 5.273-7.922 8.73-11.239zM324.095 349.657c2.365-0.588 4.757-1.063 7.167-1.391 2.377-0.324 4.777-0.495 7.178-0.558-4.433 0.536-8.86 1.117-13.276 1.778-0.357 0.053-0.713 0.116-1.070 0.171zM283.176 391.7c0.047-0.652 0.133-1.292 0.212-1.934 0.379-0.027 0.774-0.071 1.165-0.119 0.362-0.007 0.741-0.051 1.134-0.145 0.232-0.038 0.448-0.092 0.654-0.153 0.307-0.073 0.614-0.143 0.922-0.215 23.418 6.976 44.926 19.482 60.494 37.758-18.77 2.544-35.122 5.505-48.476 8.788-0.153-0.211-0.303-0.423-0.461-0.634-9.258-12.421-16.789-27.45-15.644-43.346zM772.679 371.491c9.595-6.112 20.095-10.586 30.859-14.184 5.765-1.927 11.608-3.611 17.49-5.141 5.554-1.444 13.763-4.919 16.052 2.797 1.236 7.074-6.567 7.808-11.496 9.056-6.085 1.54-12.137 3.232-18.094 5.22-10.072 3.36-20.096 7.507-28.931 13.471-3.768 2.543-7.148 5.358-10.169 8.407-4.051 2.756-7.078 7.613-9.563 11.561-3.967 6.301-6.697 13.302-8.628 20.471-0.137 0.508-0.184 1.005-0.157 1.483-1.335 5.193-2.24 10.584-2.757 16.11-0.295 3.157-0.474 6.323-0.562 9.492-0.075 2.679 0.447 5.771-1.14 8.119-3.664 5.424-10.969 2.23-11.548-3.532-0.156-1.558-0.207-3.156-0.189-4.773 0.733-2.676 0.466-5.796 0.672-8.513 0.125-1.655 0.275-3.308 0.454-4.959 0.006-0.051 0.011-0.104 0.017-0.155 0.008-0.071 0.018-0.141 0.026-0.212 0.088-0.793 0.182-1.585 0.285-2.377 0.016-0.119 0.034-0.237 0.049-0.356 0.093-0.696 0.19-1.391 0.294-2.085 0.865-5.699 2.144-11.309 3.849-16.806 0.183-0.576 0.359-1.157 0.554-1.728 0.030-0.092 0.060-0.183 0.090-0.275 5.918-17.121 17.145-31.283 32.542-41.090zM727.366 423.836c-1.391 6.979-2.185 14.090-2.554 21.184-0.002 0.021-0.003 0.042-0.005 0.064-0.213 2.393-1.115 3.8-2.244 5.922-1.179 2.212-1.899 4.806-3.24 6.906-4.427 6.94-13.677 1.321-11.151-6.010 2.233-6.482 6.523-12.621 10.51-18.097 2.652-3.523 5.563-6.851 8.684-9.969zM684.777 446.382c0.042-7.339 0.182-14.678 0.566-22.007 1.348-25.76 5.985-52.324 21.711-73.482 7.183-9.665 16.468-17.646 26.761-23.836 5.76-3.465 11.827-6.446 18.080-8.91 5.030-1.982 14.202-6.959 17.13 0.534 1.858 7.066-5.041 8.403-10.132 10.336-5.58 2.118-11.059 4.556-16.259 7.491-8.987 5.072-17.205 11.659-23.671 19.728-15.909 19.855-19.935 45.679-21.109 70.403-0.35 7.376-0.449 14.76-0.467 22.143-0.012 5.104 1.010 14.395-6.901 13.65-7.638-0.72-5.739-10.817-5.709-16.050zM637.663 346.84c3.457-9.339 9.181-17.722 16.55-24.405 3.543-3.213 9.171-8.227 13.558-3.199 4.425 5.073-0.995 9.036-4.538 12.102-15.93 13.784-19.477 35.792-17.563 55.781 2.401 25.076 11.019 50.556 22.971 72.709 2.578 5.476-3.329 11.486-8.778 8.329-3.655-2.118-5.652-8.801-7.29-12.338-0.503-1.085-0.989-2.177-1.476-3.269-0.606-1.359-1.199-2.723-1.779-4.093-0.119-0.28-0.242-0.558-0.359-0.839-0.754-1.801-1.489-3.61-2.199-5.428-1.337-3.421-2.604-6.871-3.794-10.347-0.099-0.286-0.196-0.573-0.293-0.86-0.3-0.886-0.594-1.773-0.884-2.662-0.242-0.745-0.478-1.493-0.713-2.24-0.168-0.534-0.338-1.066-0.503-1.6-0.423-1.381-0.833-2.764-1.231-4.152-0.321-1.126-0.635-2.255-0.94-3.386-0.013-0.049-0.027-0.099-0.040-0.148-0.323-1.207-0.636-2.417-0.939-3.63-1.119-4.492-1.898-9.030-2.854-13.553-0.025-0.118-0.058-0.233-0.085-0.35-2.962-17.549-3.013-35.699 3.177-52.42zM541.419 319.124c2.912-2.162 5.897-4.216 8.99-6.14 12.843-7.738 27.002-13.213 41.847-15.296-12.846 8.040-24.445 17.838-34.789 28.911-5.257-2.673-10.617-5.155-16.049-7.475zM684.614 287.28c3.124 0.55 7.86 0.919 10.171 3.403 2.669 2.87 2.052 7.536-1.264 9.622-2.012 1.266-3.884 0.982-6.021 0.474-3.542-0.843-7.119-1.426-10.738-1.839-14.656-1.674-29.803 0.018-43.887 4.302-21.304 6.479-39.978 19.017-55.567 34.704-3.651-2.35-7.382-4.579-11.174-6.709 10.341-10.741 21.842-20.123 34.764-27.708 4.737-2.706 9.611-5.136 14.6-7.269 3.111-0.952 6.158-2.35 9.241-3.546 12.133-4.172 24.827-6.596 37.79-6.914 7.372-0.182 14.814 0.201 22.085 1.481zM593.966 275.271c9.275-0.897 18.761-0.899 27.999 0.423 4.041 0.577 9.562 1.009 11.864 4.434-2.858 0.69-5.695 1.457-8.504 2.337-2.154 0.675-4.29 1.404-6.409 2.186-0.547 0.202-1.106 0.449-1.674 0.713-1.631 0.62-3.25 1.271-4.859 1.949-0.106 0.023-0.214 0.055-0.32 0.074-2.306 0.402-5.183-0.177-7.533-0.137-3.288 0.056-6.574 0.265-9.843 0.63-17.473 1.949-34.019 7.852-49.062 16.916-4.994 3.107-9.737 6.55-14.316 10.226-4.549-1.751-9.134-3.398-13.741-4.946 21.416-18.866 47.691-32.031 76.397-34.806zM506.82 316.534c0.108 0.043 0.213 0.091 0.325 0.126 8 2.517 15.907 5.278 23.715 8.341 0.003 0.001 0.006 0.002 0.009 0.003 8.899 3.546 17.616 7.524 26.074 12.033 1.162 0.625 2.321 1.256 3.473 1.899 0.366 0.203 0.731 0.407 1.095 0.613 1.452 0.819 2.896 1.65 4.328 2.499 0.143 0.085 0.286 0.173 0.43 0.258 1.429 0.85 2.848 1.717 4.259 2.6 12.616 7.95 24.317 17.286 34.483 28.242 5.502 5.93 10.504 12.287 14.926 19.061 1.897 2.906 4.108 5.915 5.215 9.235 2.009 11.671 5.259 23.151 9.042 34.004 0.099 0.282 0.197 0.562 0.297 0.844 0.131 0.373 0.261 0.748 0.393 1.12 0.069 0.194 0.145 0.388 0.215 0.582 0.554 1.538 1.116 3.072 1.698 4.599 0.004 0.011 0.009 0.023 0.013 0.033 1.869 4.91 3.891 9.764 6.033 14.561 0.902 2.581 1.607 5.205 1.913 7.916 0.154 3.11-1.143 6.103-4.117 7.145-0.010 0.003-0.020 0.003-0.030 0.006-0.352 0.112-0.706 0.205-1.066 0.281-0.023 0.004-0.044 0.004-0.066 0.008-6.442 0.224-7.146-4.984-7.848-10.26-0.798-5.998-1.833-11.961-3.226-17.85-0.111-0.47-0.238-0.937-0.355-1.405-0.157-0.662-0.331-1.323-0.5-1.984-0.093-0.355-0.175-0.711-0.27-1.065-0.027-0.1-0.049-0.2-0.076-0.3-0.352-1.304-0.726-2.602-1.112-3.896-0.034-0.114-0.070-0.228-0.104-0.341-0.377-1.255-0.773-2.505-1.183-3.75-0.065-0.199-0.131-0.398-0.197-0.596-0.886-2.651-1.843-5.278-2.879-7.873-0.155-0.389-0.315-0.774-0.473-1.161-0.331-0.81-0.668-1.616-1.014-2.419-0.242-0.564-0.485-1.127-0.734-1.688-0.214-0.481-0.436-0.959-0.656-1.436-0.932-2.038-1.896-4.060-2.924-6.050-0.154-0.297-0.331-0.585-0.495-0.877-3.299-6.232-7.074-12.208-11.356-17.831-10.394-13.649-23.142-24.86-37.25-34.162-0.198-0.18-0.405-0.346-0.623-0.486-6.257-4.050-12.715-7.728-19.358-11.107-0.181-0.092-0.363-0.152-0.545-0.222-9.738-4.9-19.848-9.111-30.067-12.768-0.027-0.009-0.050-0.023-0.077-0.032-0.167-0.059-0.335-0.115-0.502-0.174-0.61-0.217-1.219-0.436-1.829-0.649-0.631-0.22-1.266-0.421-1.897-0.637-0.96-0.327-1.923-0.65-2.886-0.969-1.382-0.459-2.766-0.915-4.153-1.356-0.21-0.066-0.42-0.13-0.631-0.196-2.517-0.795-5.043-1.562-7.578-2.301-1.093-0.321-2.185-0.648-3.281-0.96-0.065-0.019-0.139-0.027-0.208-0.044-3.115-0.878-6.236-1.731-9.37-2.536-4.992-1.283-10.008-2.477-15.040-3.592-3.355-0.743-7.421-1.066-11.017-2.093 0.987-1.377 2.008-2.732 3.070-4.059 0.708-0.875 1.427-1.742 2.164-2.593 0.081-0.094 0.161-0.189 0.243-0.283 1.127-1.294 2.29-2.561 3.483-3.805 0.101-0.104 0.197-0.21 0.299-0.315 0.040-0.042 0.082-0.082 0.122-0.123 13.319 2.859 26.611 6.188 39.671 10.237zM456.793 285.606c6.286-5.692 13.169-10.667 20.462-14.988 5.829-3.454 17.798-12.681 22.71-4.221 1.015 3.311 0.221 6.314-3.037 8.207-4.231 2.459-8.84 4.271-13.073 6.775-7.6 4.495-14.754 9.853-21.142 15.957-2.13 1.362-4.175 4.179-5.741 5.938-0.102 0.115-0.198 0.236-0.3 0.351-0.767 0.869-1.519 1.748-2.256 2.641-0.198 0.241-0.394 0.484-0.592 0.726-0.645 0.795-1.277 1.599-1.898 2.41-0.254 0.332-0.508 0.663-0.759 0.997-0.392 0.525-0.775 1.056-1.158 1.588-1.203 1.661-2.379 3.342-3.501 5.061-0.143 0.219-0.254 0.445-0.35 0.672-5.339 8.514-9.544 17.746-12.591 27.369-10.843 34.244-8.383 72.201-0.268 106.975 0.42 3.363 1.668 6.897 2.55 10.151 0.959 3.538 1.615 8.078 3.391 11.333 0.051 0.192 0.505 1.66 0.704 2.697 0.134 3.020-1.222 5.101-3.964 6.572-3.064 1.164-6.635-0.423-8.124-3.531-2.031-4.235-3.023-9.375-4.246-13.87-1.655-6.081-3.086-12.222-4.336-18.4-0.269-1.331-0.528-2.664-0.778-3.999-0.162-0.864-0.321-1.728-0.476-2.594-1.166-6.567-2.112-13.171-2.813-19.808-0.986-9.951-1.261-19.847-1.283-29.838 0-0.292-0.032-0.576-0.050-0.864 0.052-0.282 0.092-0.575 0.101-0.887 0.208-6.702 0.698-13.375 1.522-20.030 0.756-5.428 1.725-10.809 2.94-16.155 0.079-0.346 0.119-0.68 0.134-1.004 2.079-8.64 4.884-17.087 8.549-25.215 7.019-15.568 17.003-29.544 29.672-41.015zM408.142 355.722c-0.583 2.917-1.093 5.849-1.533 8.796-1.119 0.203-2.236 0.411-3.354 0.62-2.015-3.504-4.192-6.921-6.49-10.257 3.796 0.207 7.589 0.479 11.377 0.841zM385.073 354.876c0.335 0.444 0.667 0.889 0.995 1.337 0.593 0.8 1.177 1.607 1.752 2.42 0.913 1.299 1.817 2.606 2.687 3.932 0.037 0.056 0.075 0.11 0.112 0.166 2.144 3.275 4.161 6.631 6.059 10.064 2.666 4.945 5.034 10.007 7.091 15.223 0.364 1.521 0.595 3.034 0.636 4.522 0.005 0.186 0.009 0.371 0.014 0.556-0.087 9.234 0.378 18.453 1.306 27.521 0.196 1.857 0.408 3.714 0.633 5.568 1.028 8.575 2.414 17.127 4.189 25.598 0.185 2.048 0.080 4.095-0.639 6.139-1.684 4.792-8.050 6.387-11.084 2.323-0.064-0.12-0.133-0.237-0.207-0.349-0.675-1.239-0.913-2.525-1.053-3.836 0.083-2.005 0.793-4.125 1.098-5.97 3.083-18.643 0.637-37.935-5.952-55.633-0.001-0.002-0.001-0.004-0.002-0.006-0.004-0.009-0.008-0.020-0.011-0.029-1.355-3.633-2.883-7.2-4.575-10.68-1.737-3.627-3.654-7.165-5.803-10.558-0.75-1.218-1.519-2.424-2.309-3.615-0.006-0.008-0.009-0.016-0.014-0.025-0.031-0.046-0.064-0.090-0.094-0.137-2.141-3.217-4.425-6.335-6.833-9.353-0.026-0.032-0.052-0.064-0.077-0.096-0.549-0.686-1.103-1.369-1.664-2.045-0.253-0.307-0.498-0.62-0.753-0.925-2.302-2.752-5.791-8.039-9.474-10.214-0.723-0.716-1.453-1.426-2.189-2.129 2.546-2.010 4.198-4.658 5.033-7.526 0.475-1.423 0.761-2.907 0.827-4.409 1.39 1.274 2.769 2.564 4.123 3.884 5.838 5.695 11.266 11.793 16.178 18.285zM249.33 287.076c-7.579-2.235-15.219-4.268-22.9-6.125-3.706-0.896-7.422-1.751-11.146-2.568-3.225-0.707-7.591-0.79-9.893-3.436-1.827-2.099-2.063-5.221-0.544-7.573 2.321-3.594 6.11-2.846 9.625-2.095 7.593 1.622 15.155 3.392 22.674 5.33 37.179 9.584 75.098 23.327 106.927 45.553-7.202-0.289-14.382 0.31-21.477 1.525-22.921-13.364-47.859-23.119-73.265-30.611zM145.568 381.683c-5.531 1.189-22.79 8.485-22.964-2.548-0.081-5.117 4.602-6.192 8.599-7.145 5.376-1.281 10.77-2.489 16.181-3.612 19.733-4.099 39.704-7.106 59.825-8.402 17.561-1.131 35.281-1.013 52.772 1.069-2.080 3.941-3.807 8.045-5.17 12.301-36.441-3.866-73.59 0.673-109.243 8.338zM266.903 368.446c0.143-0.307 0.286-0.613 0.434-0.918 0.132-0.278 0.266-0.555 0.402-0.832 1.176-2.345 2.49-4.633 3.945-6.875 0.534-0.807 1.083-1.609 1.66-2.403 17.262-23.72 47.647-33.874 76.098-31.401 3.209 0.721 5.813 3.304 6.002 6.216 0.063 2.962-2.238 5.287-5.141 6.203-1.244 0.2-2.57 0.089-3.965-0.003-3.689-0.244-7.36-0.323-11.052-0.062-12.414 0.88-24.75 4.604-35.259 11.35-3.060 1.964-5.875 4.151-8.447 6.519-0.182 0.119-0.368 0.236-0.538 0.365-8.244 6.247-13.829 17.307-16.202 27.114-0.148 0.611-0.159 1.29-0.052 1.966-1.628 8.193-1.332 16.904 1.177 25.673 1.735 6.064 4.34 11.932 7.431 17.422 1.755 3.117 3.695 6.126 5.769 9.040 1.676 2.356 4.523 4.95 5.024 7.897 1.201 7.057-7.425 9.241-11.569 4.544-4.853-5.5-8.78-12.387-12.119-18.876-10.283-19.984-12.713-42.914-3.598-62.94zM762.179 521.257c-0.158 1.444-0.325 2.886-0.5 4.328-0.095 0.783-0.192 1.565-0.291 2.348-0.046 0.366-0.162 1.23-0.226 1.703-0.396 2.843-0.81 5.684-1.264 8.519-1.068 6.662-2.308 13.297-3.731 19.892-3.112 14.42-7.095 28.661-12.081 42.547-1.298 3.614-2.663 7.205-4.101 10.767-0.327 0.812-0.66 1.621-0.993 2.431-0.163 0.396-0.265 0.648-0.334 0.813-0.018 0.037-0.068 0.149-0.174 0.393-0.807 1.853-1.614 3.704-2.451 5.544-3.297 7.242-6.907 14.342-10.848 21.255-4.102 7.196-8.562 14.189-13.389 20.922-1.166 1.628-2.357 3.238-3.564 4.836-0.21 0.28-0.425 0.558-0.637 0.835-0.030 0.038-0.050 0.063-0.091 0.115-0.751 0.952-1.503 1.902-2.266 2.844-2.652 3.273-5.398 6.47-8.236 9.584-5.813 6.378-12.012 12.404-18.564 18.021-7.008 6.007-12.261 9.941-20.738 15.408-35.497 22.892-76.939 33.807-119.204 36.522-6.519 0.419-13.047 0.647-19.577 0.732-0.261 0.004-0.516 0.017-0.768 0.038-0.989-0.005-1.979-0.005-2.969 0-0.25-0.021-0.505-0.034-0.765-0.038-44.315-0.581-89.047-9.019-127.153-30.272-8.053-4.491-15.813-9.505-23.207-15.013-0.338-0.252-1.688-1.28-1.884-1.423-0.673-0.525-1.344-1.054-2.011-1.589-1.779-1.426-3.534-2.881-5.264-4.364-3.304-2.833-6.519-5.769-9.64-8.803-6.185-6.012-11.996-12.406-17.414-19.117-0.593-0.734-1.177-1.473-1.763-2.212-0.082-0.102-0.247-0.315-0.375-0.479-0.201-0.263-0.404-0.524-0.602-0.789-1.284-1.708-2.555-3.423-3.796-5.161-2.383-3.336-4.675-6.736-6.88-10.192-4.33-6.791-8.317-13.799-11.974-20.975-1.795-3.523-3.511-7.086-5.149-10.685-0.837-1.839-1.648-3.689-2.451-5.544-0.093-0.214-0.148-0.339-0.18-0.411-0.048-0.12-0.106-0.26-0.183-0.448-0.428-1.041-0.858-2.081-1.277-3.126-5.569-13.862-10.074-28.144-13.655-42.645-1.695-6.865-3.183-13.779-4.476-20.73-0.606-3.257-1.169-6.522-1.691-9.794-0.246-1.539-0.482-3.080-0.708-4.622-0.104-0.709-0.207-1.419-0.307-2.129-0.037-0.258-0.187-1.362-0.263-1.911-0.050-0.389-0.105-0.812-0.123-0.955-0.099-0.784-0.197-1.567-0.293-2.351-0.187-1.539-0.365-3.079-0.535-4.62-0.316-2.868-0.6-5.74-0.854-8.614-0.469-5.312-0.835-10.633-1.094-15.96-0.303-6.232-0.46-12.474-0.452-18.715 2.294 1.067 4.646 2.024 6.994 2.932 11.955 4.617 24.618 7.452 37.167 9.903 39.045 7.625 78.998 11.019 118.674 13.184 28.418 1.551 56.878 2.232 85.337 2.247 47.695-0.027 95.478-1.795 142.933-6.72 31.643-3.283 64.816-6.793 95.012-17.421 3.211-1.13 6.531-2.363 9.751-3.823-0.020 3.886-0.111 7.771-0.232 11.636-0.33 10.475-1.076 20.936-2.221 31.351zM893.595 436.113c-3.785-0.749-7.69-3.641-11.211-5.303-4.108-1.94-8.258-3.787-12.444-5.553-13.987-5.903-28.433-10.862-43.354-13.795-21.271-4.181-43.465-4.156-63.549 3.767 2.552-5.75 5.919-11.076 10.262-15.776 1.914-1.541 4.443-1.647 6.92-2.054 11.416-1.874 23.172-1.777 34.647-0.53 29.014 3.151 56.896 14.226 82.732 27.33 6.199 3.625 3.458 13.391-4.002 11.913z"],"grid":0,"tags":["noodles"],"defaultCode":59700},{"paths":["M782.825 873.741c-4.675-10.181-9.069-20.494-13.447-30.805-0.067-0.159-0.213-0.504-0.337-0.795-0.165-0.392-0.33-0.783-0.495-1.176-0.536-1.273-1.070-2.548-1.602-3.822-1.234-2.953-2.461-5.911-3.681-8.87-2.633-6.388-5.233-12.789-7.802-19.201-5.971-14.908-11.777-29.883-17.416-44.919-29.705-79.215-55.508-160.349-72.518-243.299-9.642-47.019-16.436-94.87-16.497-142.948-0.005-3.598-1.663-6.129-3.991-7.607-3.072-12.632-14.386-21.818-25.593-27.839-11.361-6.104-23.698-10.301-36.311-13.306 18.541-27.659 39.862-64.592 55.619-116.533 42.91-141.446-236.007-21.456-171.641 0s-128.732 107.274-42.911 107.274c13.816 0 24.281 2.568 32.14 6.86-14.767 2.777-29.269 6.884-42.914 13.26-12.691 5.931-27.29 15.679-30.544 30.319-2.293 1.483-3.919 4-3.923 7.57-0.055 42.267-5.581 84.349-13.636 125.781-8.567 44.061-20.019 87.543-33.123 130.459-12.019 39.363-25.476 78.285-40.014 116.787-6.035 15.984-12.261 31.896-18.673 47.732-2.806 6.929-5.647 13.844-8.526 20.743-0.624 1.495-1.25 2.99-1.876 4.484-0.215 0.513-0.431 1.025-0.647 1.537-0.071 0.168-0.494 1.17-0.667 1.579-1.186 2.803-2.38 5.603-3.579 8.401-5.438 12.681-11.113 25.244-16.786 37.819-0.078 0.173-0.159 0.342-0.24 0.514-2.986 6.35 0.52 14.244 8.187 14.267 29.533 0.088 59.066 0.176 88.599 0.265 47.406 0.141 94.814 0.283 142.22 0.424 17.742 0.053 35.482 0.108 53.223 0.053 44.52-0.137 89.040-0.274 133.56-0.411 35.279-0.108 70.592 0.243 105.867-0.325 0.595-0.009 1.191-0.004 1.786-0.006 7.716-0.022 11.107-7.906 8.186-14.265zM768.853 841.692c-0.012-0.029-0.014-0.032 0 0v0zM626.872 377.543c0.070-0.658 0.064-0.404 0 0v0zM601.862 354.986c3.995 1.676 7.898 3.65 11.605 5.89 3.717 2.245 5.169 3.273 7.683 5.646 1.029 0.972 2.002 2.002 2.914 3.085-0.262-0.212 1.439 2.242 1.76 2.77 0.236 0.388 0.426 0.839 0.618 1.245-1.074-2.272-0.095 0.018 0.096 0.577 0.177 0.521 0.254 1.070 0.383 1.602-0.637-2.627-0.046-0.050-0.031 0.73-0.009 0.441-0.044 0.876-0.075 1.313-0.030 0.14-0.066 0.277-0.107 0.379-0.196 0.489-0.329 1.084-0.466 1.593-0.006 0.022-0.009 0.034-0.014 0.055-0.596 1.122-1.209 2.202-1.91 3.267-0.032 0.049-0.078 0.113-0.128 0.18-0.594 0.712-1.214 1.402-1.86 2.065-0.984 1.010-2.034 1.948-3.104 2.864-0.102 0.087-0.47 0.386-0.631 0.52-0.6 0.448-1.213 0.881-1.83 1.303-3.105 2.125-6.396 3.975-9.769 5.64-15.954 7.878-34.886 11.924-52.741 14.329-2.365 0.319-4.738 0.598-7.114 0.857-11.888-16.43 2.378-33.917 24.421-65.016 10.493 2.157 20.751 5.097 30.299 9.104zM623.954 383.63c-0.148 0.188-0.226 0.281 0 0v0zM401.977 372.819c0.52-0.992 1.077-1.949 1.698-2.895 0.062-0.095 0.107-0.166 0.154-0.238 0.064-0.071 0.134-0.146 0.22-0.244 0.351-0.395 0.694-0.793 1.055-1.179 0.95-1.018 1.975-1.947 3.002-2.884 0.060-0.055 1.1-0.904 1.306-1.090 0.343-0.256 0.687-0.514 1.037-0.757 1.611-1.12 3.256-2.183 4.948-3.174 15.449-9.057 33.822-13.388 51.585-16.311 1.801-0.296 3.607-0.566 5.415-0.824 10.763 21.237 3.064 51.474-1.929 66.365-15.22-2.177-30.627-5.756-44.336-11.509-3.527-1.48-6.979-3.202-10.29-5.116-1.572-0.908-3.117-1.865-4.615-2.891-0.518-0.354-1.031-0.715-1.537-1.085-0.105-0.078-0.196-0.146-0.279-0.208-0.441-0.357-0.876-0.722-1.305-1.095-1.027-0.938-2.052-1.866-3.002-2.884-0.36-0.386-0.705-0.784-1.055-1.179-0.086-0.098-0.155-0.173-0.22-0.244-0.046-0.072-0.091-0.143-0.154-0.238-0.66-1.004-1.234-2.029-1.826-3.074-0.003-0.005-0.004-0.008-0.007-0.011-0.213-0.715-0.421-1.435-0.635-2.149-0.020-0.066-0.036-0.119-0.053-0.173-0.028-0.398-0.050-0.797-0.050-1.199 0-0.415 0.030-0.827 0.057-1.239 0.016-0.046 0.028-0.080 0.046-0.134 0.15-0.454 0.937-2.511 0.769-2.34zM684.499 869.322c-46.591 0.143-93.183 0.286-139.774 0.43-17.379 0.053-34.752 0.070-52.131 0.019-45.74-0.137-91.479-0.273-137.22-0.409-22.496-0.067-44.992-0.134-67.488-0.201-7.877-0.024-15.806-0.258-23.719-0.296 2.494-5.589 4.943-11.199 7.378-16.812 11.873-27.376 23.162-55.007 33.887-82.853 14.605-37.924 28.173-76.258 40.402-115.015 13.535-42.897 25.481-86.346 34.728-130.379 8.337-39.693 14.678-80.073 16.697-120.635 1.801 1.464 3.685 2.825 5.603 4.076 16.942 11.054 37.861 16.432 57.572 19.802 26.12 4.466 52.855 5.569 79.265 3.469 25.517-2.029 51.524-6.563 74.867-17.472 5.465-2.553 11.145-5.791 16.143-9.768 1.681 35.144 6.562 70.161 13.022 104.702 8.283 44.286 19.426 88.018 32.224 131.203 11.754 39.663 24.951 78.895 39.24 117.714 10.63 28.88 21.861 57.542 33.738 85.933 3.672 8.779 7.4 17.535 11.207 26.257-25.213 0.079-50.425 0.155-75.639 0.233z","M559.415 484.956c10.64 1.644 21.285 1.813 31.769-0.926 10.409-2.719 19.959-7.981 28.998-13.681 5.148-3.246 0.396-11.455-4.785-8.187-7.989 5.038-16.273 9.759-25.41 12.363-9.17 2.613-18.665 2.739-28.050 1.289-5.97-0.922-8.542 8.213-2.521 9.143z","M591.292 505.739c10.409-2.719 19.958-7.981 28.998-13.681 5.148-3.246 0.396-11.455-4.785-8.187-7.989 5.038-16.273 9.759-25.41 12.363-9.17 2.613-18.665 2.739-28.051 1.289-5.97-0.923-8.542 8.212-2.521 9.143 10.64 1.644 21.285 1.813 31.77-0.926z","M593.018 526.713c10.409-2.719 19.958-7.981 28.998-13.681 5.148-3.246 0.396-11.455-4.785-8.187-7.989 5.038-16.273 9.759-25.41 12.363-9.17 2.613-18.665 2.739-28.051 1.289-5.969-0.923-8.542 8.212-2.52 9.143 10.639 1.644 21.284 1.812 31.769-0.926z","M619.239 527.816c-7.989 5.038-16.273 9.759-25.41 12.363-9.17 2.613-18.665 2.739-28.051 1.289-5.97-0.923-8.542 8.212-2.52 9.143 10.639 1.644 21.284 1.813 31.769-0.926 10.409-2.719 19.958-7.981 28.998-13.681 5.149-3.246 0.396-11.455-4.785-8.187z"],"grid":0,"tags":["nuclear-factory"],"defaultCode":59701},{"paths":["M847.738 225.925c-53.601-19.758-116.601-2.541-152.707 41.695-36.48 44.694-41.89 108.95-11.839 158.578 29.897 49.372 88.456 74.817 144.97 63.771 55.075-10.764 99.917-57.086 108.435-112.63 1.126-7.342 1.794-14.704 1.832-22.134-0.293-57.545-36.725-109.388-90.691-129.281zM842.104 466.416c-47.371 17.179-100.683 2.6-132.877-36.078-31.771-38.17-35.238-94.286-9.66-136.552 25.518-42.17 76.409-64.773 124.814-54.804 48.315 9.95 85.748 49.238 93.728 97.856 0.996 6.064 1.326 12.23 1.358 18.369-0.25 48.86-31.084 94.426-77.363 111.209z","M647.65 377.339c1.126-7.342 1.794-14.704 1.832-22.134-0.293-57.545-36.725-109.388-90.691-129.281-53.601-19.758-116.601-2.541-152.707 41.695-23.625 28.944-34.2 66.093-30.569 102.159-5.282-0.279-10.569-0.251-15.836 0.077 0.525-4.863 0.831-9.741 0.855-14.65-0.293-57.545-36.725-109.388-90.691-129.281-53.601-19.758-116.601-2.541-152.707 41.695-36.48 44.694-41.89 108.95-11.839 158.578 26.487 43.74 75.469 68.677 125.596 66.122-0.536 4.839-0.823 9.726-0.848 14.644-0.004 0.841 0.089 1.618 0.254 2.344 0.132 24.082 6.48 48.183 19.429 69.568 29.896 49.372 88.456 74.817 144.97 63.771 55.075-10.764 99.917-57.086 108.435-112.63 1.122-7.314 1.788-14.647 1.831-22.046 0.028-0.327 0.046-0.661 0.045-1.008-0.026-4.963-0.338-9.879-0.888-14.739 11.605 0.731 23.393 0.031 35.096-2.256 55.074-10.764 99.915-57.086 108.433-112.629zM266.102 446.464c15.559-25.712 40.556-44.129 68.666-52.344-11.528 32.763-36.968 60.114-70.559 72.296-2.864 1.039-5.751 1.956-8.653 2.764 2.678-7.868 6.178-15.497 10.546-22.716zM479.279 468.813c-22.593-6.515-43.309-19.622-59.001-38.475-9.090-10.921-15.852-23.314-20.29-36.428 37.013 10.741 66.484 38.998 79.292 74.903zM131.331 430.338c-31.771-38.17-35.238-94.286-9.66-136.552 25.518-42.17 76.409-64.773 124.814-54.804 48.315 9.95 85.748 49.238 93.728 97.856 0.996 6.064 1.326 12.23 1.358 18.369-0.029 5.81-0.505 11.571-1.374 17.246-30.133 6.19-58.214 22.209-78.194 46.449-13.157 15.963-22.516 34.427-27.58 54.135-38.649 3.511-77.529-11.985-103.093-42.698zM408.64 619.095c-47.371 17.179-100.683 2.6-132.877-36.078-21.679-26.045-30.168-60.445-25.254-93.101 50.74-10.019 92.729-50.221 105.578-99.972 7.594-0.774 15.29-0.808 22.983-0.055 3.211 12.601 8.237 24.846 15.176 36.307 20.205 33.366 53.506 55.783 90.414 63.415 0.983 6.033 1.312 12.167 1.344 18.273-0.251 48.86-31.086 94.427-77.364 111.21zM553.156 466.416c-17.198 6.237-35.177 8.268-52.647 6.5-11.302-43.184-43.162-79.37-86.193-95.232-6.377-2.35-12.889-4.162-19.471-5.483-3.753-26.761 1.457-54.757 15.774-78.414 25.518-42.17 76.409-64.773 124.814-54.804 48.315 9.95 85.748 49.238 93.728 97.856 0.996 6.064 1.326 12.23 1.358 18.369-0.25 48.859-31.084 94.425-77.363 111.208z","M852.426 667.128c-2.425-55.191-37.977-104.274-89.971-123.731-15.091-5.647-31.288-8.34-47.38-8.421-57.34 0.292-108.977 36.441-129.060 90.102-5.027 13.432-7.707 27.741-8.293 42.072-0.079 0.524-0.131 1.067-0.128 1.645 0.002 0.467 0.027 0.932 0.035 1.399-0.015 0.755-0.030 1.509-0.035 2.263-0.003 0.588 0.050 1.139 0.132 1.67 2.437 55.395 38.266 104.673 90.56 123.949 53.403 19.685 116.136 2.675 152.313-41.217 19.36-23.488 30.505-52.388 31.822-82.703 0.083-0.539 0.138-1.1 0.136-1.699-0.002-0.481-0.027-0.957-0.035-1.436 0.015-0.741 0.031-1.483 0.035-2.226 0.004-0.585-0.049-1.134-0.13-1.664zM756.232 780.005c-47.138 17.125-100.258 2.73-132.48-35.605-17.224-20.491-26.537-46.733-27.161-73.367 0.831-48.087 31.21-92.791 76.735-109.572 13.444-4.956 27.432-7.451 41.749-7.524 48.627 0.247 94.049 30.796 110.995 76.77 4.697 12.743 7.179 25.975 7.488 39.513-0.834 48.338-31.503 93.137-77.326 109.784z"],"grid":0,"tags":["olympics"],"defaultCode":59702},{"paths":["M812.437 291.977c-13.29-58.457-47.034-95.128-101.242-110.013-54.208-14.873-120.649-5.306-199.297 28.699-78.659-34.005-144.962-43.571-198.897-28.699-53.947 14.885-87.691 51.556-101.243 110.013-13.553 58.469-2.53 131.81 33.082 220.023-35.612 88.227-46.636 161.568-33.084 220.023 13.552 58.469 47.296 95.127 101.243 110.013 53.934 14.873 120.238 5.306 198.897-28.699 78.648 34.005 145.088 43.572 199.297 28.699 54.208-14.886 87.952-51.543 101.242-110.013 13.279-58.455 2.118-131.796-33.481-220.023 35.601-88.214 46.762-161.555 33.483-220.023zM748.662 682.199c-15.42 48.105-44.779 81.051-88.089 98.851-43.322 17.813-92.873 16.081-148.676-5.181-54.208 21.262-103.372 22.994-147.479 5.181-44.12-17.8-74.014-50.746-89.683-98.851-15.681-48.093-12.095-104.83 10.762-170.199-22.857-65.368-26.445-122.094-10.762-170.198 15.67-48.093 45.564-81.040 89.683-98.851 44.107-17.8 93.271-16.069 147.479 5.181 55.803-21.251 105.354-22.981 148.676-5.181 43.31 17.811 72.669 50.758 88.089 98.851 15.407 48.104 11.684 104.83-11.161 170.198 22.845 65.369 26.569 122.106 11.161 170.199z"],"grid":0,"tags":["onder-stroom"],"defaultCode":59703},{"paths":["M877.936 328.592c-13.522-4.504-28.113-6.788-42.53-8.168 7.56-6.834 15.118-13.669 22.678-20.503 9.072-8.201-4.372-21.579-13.409-13.409-11.863 10.725-23.726 21.451-35.591 32.176-8.893-0.305-17.8-0.289-26.701 0.032-1.093-0.172-2.217-0.116-3.317 0.137-1.641 0.073-3.282 0.156-4.922 0.249 13.493-12.841 26.985-25.682 40.478-38.523 2.82-2.683 5.639-5.367 8.458-8.050 8.858-8.43-4.565-21.825-13.409-13.409-19.448 18.509-38.897 37.019-58.345 55.527-2.572 2.448-5.145 4.897-7.718 7.345-5.422 0.716-10.83 1.538-16.222 2.458-1.862-0.184-3.756 0.179-5.44 0.96-0.083 0.015-0.168 0.030-0.252 0.046 10.227-13.513 20.453-27.025 30.679-40.538 2.12-2.801 4.239-5.602 6.359-8.402 3.093-4.087 0.648-10.604-3.402-12.973-4.863-2.844-9.872-0.695-12.973 3.401-14.73 19.465-29.462 38.929-44.192 58.395-1.575 2.081-3.15 4.162-4.725 6.243-5.019 1.253-10.011 2.591-14.977 4.004-3.315-0.96-7.312 0.016-9.676 2.38-0.071 0.071-0.13 0.147-0.198 0.219 8.31-13.245 16.62-26.489 24.93-39.733 6.504-10.367-9.896-19.895-16.374-9.571-12.431 19.813-24.863 39.627-37.294 59.44-2.597 0.974-5.184 1.97-7.765 2.985-1.501-1.282-3.117-1.966-4.724-2.163 4.251-13.786 8.501-27.571 12.752-41.357 3.604-11.688-14.695-16.686-18.286-5.041-6.243 20.248-12.486 40.495-18.729 60.743-0.025 0.079-0.037 0.154-0.059 0.232-11.955 5.519-23.718 11.456-35.271 17.76-4.251-10.065-11.741-18.509-21.504-23.96 2.861-11.717 6.19-23.311 10.024-34.722 0.913-1.321 1.481-2.86 1.549-4.524 0.372-1.066 0.747-2.13 1.127-3.191 13.662-0.744 27.324-1.489 40.986-2.233 12.137-0.661 12.214-19.629 0-18.963-10.49 0.572-20.981 1.143-31.471 1.714 1.009-1.753 1.401-3.924 0.829-6.419 1.431-3.236 2.904-6.453 4.427-9.646 17.184 0.802 34.368 1.605 51.553 2.407 12.2 0.57 12.17-18.395 0-18.963-14.015-0.654-28.028-1.308-42.043-1.964 0.059-0.106 0.118-0.212 0.176-0.319 3.159-1.685 4.79-4.958 4.843-8.484 1.521-2.579 3.077-5.139 4.668-7.679 20.47 3.232 40.939 6.464 61.409 9.696 5.052 0.797 10.199-1.295 11.663-6.622 1.238-4.507-1.534-10.86-6.622-11.663-18.294-2.888-36.587-5.777-54.881-8.665 0.141-0.197 0.279-0.396 0.421-0.593 0.662-0.918 1.316-1.815 1.967-2.698 2.792-1.031 4.974-3.341 5.28-6.934 1.692-2.15 3.427-4.289 5.263-6.481 20.825 5.842 41.65 11.686 62.475 17.529 11.769 3.301 16.792-14.988 5.041-18.286-17.795-4.993-35.589-9.985-53.384-14.978 1.512-1.572 3.044-3.126 4.591-4.663 2.513-0.842 4.659-2.65 5.6-5.428 0.985-0.925 1.981-1.838 2.979-2.749 14.375 4.067 28.751 8.132 43.126 12.198 11.763 3.327 16.784-14.964 5.041-18.285-10.141-2.869-20.284-5.737-30.425-8.606 0.476-0.349 0.948-0.702 1.427-1.047 4.029-2.901 8.162-5.806 12.54-8.167 10.744-5.795 1.18-22.172-9.571-16.374-8.652 4.666-16.802 10.648-24.489 17.082 0.032-6.19 0.064-12.378 0.097-18.568 0.064-12.205-18.899-12.219-18.963 0-0.062 11.976-0.124 23.951-0.187 35.927-4.379 4.313-8.608 8.781-12.719 13.358-0.885-14.493-1.769-28.988-2.654-43.481-0.741-12.125-19.708-12.208-18.963 0 1.322 21.652 2.643 43.304 3.965 64.956-3.306 4.398-6.495 8.886-9.581 13.443-2.433-13.166-4.866-26.333-7.298-39.499-0.931-5.038-7.031-7.895-11.663-6.622-5.293 1.454-7.556 6.61-6.622 11.663 3.593 19.441 7.184 38.883 10.777 58.323-2.415 4.267-4.744 8.578-6.98 12.931-2.467-8.906-4.933-17.811-7.4-26.717-3.253-11.745-21.553-6.757-18.286 5.041 4.449 16.060 8.896 32.119 13.345 48.18-1.085 2.574-2.152 5.155-3.183 7.75-4.989-8.487-9.978-16.973-14.967-25.46-6.181-10.514-22.578-0.982-16.374 9.571 7.646 13.005 15.292 26.010 22.937 39.015-3.599 10.891-6.752 21.933-9.491 33.078-13.445-1.413-27.392 3.016-37.553 11.961-8.26-15.948-17.289-31.535-27.090-46.625 5.403-18.754 10.805-37.51 16.208-56.264 3.384-11.749-14.909-16.765-18.286-5.041-3.807 13.216-7.615 26.432-11.421 39.649-0.554-0.216-1.128-0.384-1.721-0.502-2.409-3.319-4.858-6.608-7.347-9.866 0.416-21.653 0.832-43.306 1.248-64.959 0.234-12.207-18.729-12.207-18.963 0-0.27 14.056-0.54 28.114-0.81 42.17-5.231-6.049-10.615-11.963-16.151-17.732-1.52-22.218-3.039-44.436-4.559-66.655-0.23-3.367-0.461-6.733-0.691-10.1-0.35-5.11-4.107-9.481-9.481-9.481-4.861 0-9.832 4.345-9.481 9.481 1.297 18.958 2.593 37.916 3.89 56.876-0.132-0.12-0.265-0.24-0.396-0.36-0.356-0.387-0.735-0.726-1.132-1.030-3.66-3.323-7.37-6.592-11.146-9.789-1.57-1.329-3.154-2.644-4.744-3.953-0.037-0.265-0.073-0.531-0.132-0.803-5.208-24.212-10.417-48.424-15.625-72.636-0.752-3.497-1.505-6.994-2.257-10.49-2.566-11.925-20.85-6.878-18.286 5.041 4.379 20.353 8.757 40.706 13.136 61.059-8.368-5.992-16.965-11.66-25.779-16.963-3.974-15.17-7.947-30.341-11.922-45.512-3.090-11.795-21.385-6.793-18.286 5.041 2.427 9.267 4.855 18.533 7.283 27.801-6.65-3.351-13.412-6.486-20.288-9.372-5.997-2.517-12.104-5.035-18.382-6.786-11.773-3.285-16.797 15.004-5.041 18.286 4.837 1.35 9.566 3.201 14.218 5.070 1.042 0.418 2.076 0.859 3.118 1.279 0.042 0.018 0.073 0.032 0.119 0.052 0.774 0.338 1.55 0.67 2.323 1.010 1.058 0.466 2.11 0.945 3.162 1.424-12.253 7.124-24.507 14.249-36.76 21.373-10.545 6.132-1.010 22.526 9.571 16.375 15.827-9.203 31.654-18.405 47.481-27.607 2.111 1.147 4.214 2.31 6.3 3.5 1.056 0.602 2.091 1.23 3.139 1.841 0.419 0.299 0.858 0.56 1.318 0.773 4.324 2.546 8.587 5.165 12.784 7.867-17.197 9.95-34.392 19.9-51.589 29.85-3.065 1.774-6.131 3.548-9.196 5.321-10.56 6.11-1.022 22.503 9.571 16.375 21.555-12.472 43.11-24.944 64.666-37.416 1.3-0.752 2.601-1.505 3.901-2.257 8.306 6.021 16.368 12.345 24.175 18.992-18.054 7.795-36.107 15.59-54.162 23.385-3.251 1.404-6.503 2.807-9.755 4.212-4.702 2.030-5.763 8.935-3.401 12.973 2.842 4.858 8.252 5.44 12.973 3.402 22.244-9.605 44.488-19.209 66.732-28.813 1.014-0.437 2.026-0.875 3.040-1.312 6.84 6.442 13.486 13.132 19.953 20.057-17.036 5.226-34.072 10.452-51.108 15.679-11.633 3.569-6.672 21.879 5.041 18.286 19.991-6.133 39.982-12.266 59.973-18.399 0.41 0.48 0.828 0.949 1.236 1.432 3.549 4.187 7.008 8.446 10.397 12.759 0.601 2.571 2.2 4.395 4.233 5.468 0.281 0.369 0.558 0.74 0.837 1.109-14.046 2.797-28.092 5.594-42.139 8.392-5.024 1-7.909 6.982-6.622 11.663 1.439 5.238 6.625 7.626 11.663 6.622 16.43-3.272 32.86-6.544 49.289-9.816 10.492 15.197 20.134 30.984 28.976 47.202-11.195 0.129-22.161 3.685-31.363 10.355-15.984-2.988-32.091-5.25-48.254-6.72-10.316-14.342-20.633-28.684-30.949-43.026-2.986-4.151-8.256-6.16-12.973-3.401-4.101 2.399-6.408 8.793-3.401 12.973 7.412 10.304 14.822 20.607 22.234 30.911-0.352 0.255-0.693 0.54-1.016 0.869-3.404-0.125-6.809-0.208-10.213-0.259-15.202-12.443-30.402-24.887-45.604-37.33-3.959-3.241-9.535-3.874-13.409 0-3.345 3.345-3.982 10.149 0 13.409 9.905 8.109 19.811 16.217 29.716 24.325-0.69-0.008-1.359 0.062-2.001 0.206-6.033 0.328-12.060 0.781-18.079 1.361-19.936-13.595-39.872-27.188-59.807-40.783-10.108-6.893-19.605 9.532-9.571 16.374 13.728 9.362 27.457 18.723 41.186 28.085-4.597 0.759-9.187 1.589-13.765 2.508-0.338 0.068-0.675 0.143-1.013 0.211-21.616-9.695-43.233-19.389-64.849-29.083-3.198-1.435-6.395-2.868-9.593-4.303-4.669-2.094-10.194-1.349-12.973 3.401-2.37 4.052-1.294 10.867 3.402 12.973 18.056 8.097 36.11 16.194 54.166 24.293-9.487 2.716-18.876 5.815-28.107 9.312-12.798-5.571-25.596-11.143-38.393-16.713-4.691-2.042-10.174-1.382-12.973 3.401-2.347 4.013-1.319 10.918 3.402 12.973 8.027 3.494 16.053 6.988 24.080 10.482-5.588 2.648-11.096 5.453-16.499 8.439-5.207 2.879-10.468 5.866-15.278 9.387-4.126 3.020-6.175 8.23-3.402 12.973 2.382 4.072 8.817 6.443 12.973 3.402 3.737-2.734 7.773-5.106 11.78-7.414 2.445-1.408 4.918-2.768 7.411-4.088-1.712 12.145-3.426 24.289-5.138 36.434-0.714 5.064 1.238 10.184 6.622 11.663 4.44 1.22 10.944-1.519 11.663-6.622 2.409-17.080 4.818-34.159 7.227-51.239 0.273-0.119 0.545-0.242 0.818-0.361 0.345-0.15 0.692-0.297 1.039-0.445 0.955-0.397 1.91-0.793 2.868-1.182 5.806-2.361 11.677-4.544 17.595-6.586-2.963 20.691-5.926 41.383-8.888 62.074-0.725 5.062 1.245 10.186 6.622 11.663 4.449 1.223 10.933-1.521 11.663-6.622 3.501-24.446 7.001-48.893 10.502-73.339 8.613-2.423 17.31-4.545 26.075-6.344-5.306 20.013-10.613 40.026-15.918 60.039-3.131 11.807 15.156 16.845 18.286 5.041 6.072-22.902 12.144-45.802 18.216-68.704 4.875-0.729 9.763-1.372 14.662-1.919 1.62 0.326 3.165 0.119 4.543-0.488 1.729-0.174 3.46-0.327 5.191-0.478-5.966 15.422-11.931 30.843-17.896 46.265-1.848 4.778 2.038 10.404 6.622 11.663 5.357 1.472 9.809-1.828 11.663-6.622 6.784-17.538 13.568-35.075 20.352-52.613 0.088-0.003 0.175-0.009 0.264-0.012 5.689-0.207 11.379-0.288 17.065-0.272 1.878 0.586 3.85 0.639 5.702 0.052 0.019 0 0.038 0.001 0.057 0.001-5.653 11.123-11.305 22.245-16.958 33.367-5.517 10.856 10.837 20.465 16.374 9.571 7.136-14.042 14.272-28.083 21.408-42.125 16.226 1.007 32.394 2.869 48.446 5.526-10.999 18.899-8.833 43.219 4.536 60.482-50.416 63.375-82.715 139.447-103.168 217.485-16.533 63.077-26.010 128.426-29.434 193.527-0.64 12.163-1.182 24.385-1.008 36.569 0.247 17.349 15.086 33.996 33.185 33.185 17.767-0.795 33.451-14.587 33.185-33.185-0.346-24.255 1.421-48.66 3.635-72.788 1.125-12.252 2.497-24.48 4.079-36.682 7.106-50.953 18.086-101.485 34.417-150.3 4.67-13.959 9.799-27.759 15.404-41.369 15.096-35.044 33.582-68.659 56.486-99.217 12.445 11.299 29.776 16.362 46.823 13.307 18.453-3.307 33.010-16.427 39.748-33.078 16.436 2.291 32.769 5.549 48.832 9.813 2.011 13.522 4.021 27.046 6.032 40.568 0.754 5.070 7.155 7.861 11.663 6.622 5.43-1.492 7.378-6.578 6.622-11.663-1.442-9.701-2.884-19.4-4.327-29.101 1.251 0.556 2.598 0.839 3.943 0.752 4.124 1.384 8.223 2.842 12.297 4.369 0.755 16.21 1.509 32.42 2.264 48.63 0.566 12.151 19.532 12.22 18.963 0-0.632-13.584-1.265-27.169-1.897-40.753 1.107 0.489 2.211 0.99 3.314 1.49 0.587 0.367 1.224 0.662 1.907 0.873 3.868 1.785 7.707 3.636 11.508 5.563-1.3 20.476-2.6 40.953-3.9 61.43-0.774 12.187 18.192 12.139 18.963 0 1.022-16.1 2.044-32.199 3.066-48.3 2.26 1.743 5.333 2.315 8.418 1.879 3.062 1.917 6.094 3.879 9.090 5.896-3.695 20.267-7.391 40.533-11.086 60.8-0.918 5.032 1.378 10.222 6.622 11.663 4.601 1.265 10.74-1.558 11.663-6.622 3.257-17.864 6.515-35.728 9.772-53.592 0.425 0.335 0.851 0.667 1.274 1.003 1.472 1.17 2.934 2.354 4.382 3.553 0.466 0.385 0.924 0.777 1.388 1.164 0.357 0.345 0.733 0.667 1.134 0.951 1.893 1.6 3.766 3.226 5.618 4.874-2.567 13.907-5.132 27.816-7.699 41.723-0.928 5.030 1.385 10.224 6.622 11.663 4.61 1.267 10.729-1.561 11.663-6.623 1.901-10.305 3.803-20.611 5.704-30.916 0.482 0.515 0.969 1.024 1.445 1.544 2.54 2.767 5.014 5.599 7.365 8.529 0.228 0.284 0.45 0.576 0.676 0.864 0.136 0.182 0.273 0.364 0.404 0.55 2.957 4.172 8.278 6.147 12.973 3.401 4.125-2.413 6.377-8.773 3.401-12.973-5.902-8.329-12.911-15.989-20.355-23.134 6.047-0.533 12.094-1.067 18.141-1.6 5.101-0.45 9.481-4.035 9.481-9.481 0-4.781-4.351-9.934-9.481-9.481-12.589 1.11-25.178 2.222-37.767 3.332-4.816-3.901-9.749-7.64-14.77-11.251 15.385-2.318 30.77-4.636 46.155-6.955 5.068-0.763 7.863-7.148 6.622-11.663-1.49-5.422-6.58-7.388-11.663-6.622-21.562 3.248-43.124 6.498-64.686 9.746-4.391-2.63-8.839-5.163-13.341-7.6 13.11-3.712 26.22-7.424 39.33-11.135 11.723-3.319 6.74-21.622-5.041-18.286-19.904 5.635-39.806 11.27-59.709 16.905-4.26-1.899-8.558-3.714-12.886-5.458 8.915-3.391 17.831-6.781 26.746-10.172 4.783-1.819 8.072-6.391 6.622-11.663-1.259-4.582-6.851-8.452-11.663-6.622-16.332 6.211-32.665 12.422-48.997 18.633-2.387-0.756-4.783-1.482-7.183-2.191 8.069-5.817 16.137-11.635 24.206-17.452 4.148-2.99 6.162-8.253 3.402-12.973-2.396-4.097-8.796-6.412-12.973-3.402-12.765 9.204-25.531 18.406-38.296 27.61-12.532-2.901-25.197-5.245-37.952-7.105 0.008-0.167 0.023-0.332 0.028-0.498 0.032-0.364 0.046-0.74 0.041-1.128-0.121-8.361-2.092-16.339-5.578-23.493 7.901-8.646 12.755-20.107 13.241-32.126 0.013-0.152 0.010-0.316 0.018-0.471 18.094-10.113 36.818-19.338 56.025-27.429 11.915 11.696 23.83 23.393 35.745 35.089 8.716 8.556 22.135-4.842 13.409-13.409-9.964-9.781-19.928-19.562-29.892-29.343 8.702-3.262 17.49-6.281 26.349-9.037 13.6 16.357 27.2 32.716 40.8 49.074 3.276 3.941 10.022 3.387 13.409 0 3.9-3.9 3.284-9.459 0-13.409-11.46-13.784-22.92-27.568-34.38-41.353 9.567-2.512 19.205-4.702 28.896-6.548 12.425 18.815 24.851 37.63 37.277 56.446 2.002 3.033 4.006 6.065 6.009 9.098 6.696 10.139 23.125 0.652 16.374-9.571-13.063-19.779-26.125-39.56-39.188-59.339 1.585-0.218 3.172-0.434 4.759-0.634 9.079-1.14 18.202-1.966 27.34-2.496 10.707 21.252 21.415 42.504 32.122 63.756 1.658 3.291 3.317 6.583 4.975 9.875 5.492 10.901 21.857 1.311 16.374-9.571-10.869-21.571-21.736-43.143-32.605-64.713 5.805-0.020 11.61 0.085 17.41 0.341 3.844 0.17 7.684 0.409 11.519 0.707 8.63 17.219 17.26 34.44 25.891 51.659 5.469 10.912 21.832 1.32 16.374-9.571-6.597-13.162-13.193-26.325-19.791-39.488 2.632 0.423 5.26 0.878 7.878 1.382 6.072 1.169 12.24 2.429 18.119 4.387 11.604 3.865 16.581-14.442 5.040-18.286zM498.624 382.881c6.592-9.164 18.248-14.174 29.522-12.049 14.276 2.691 24.377 15.003 24.615 29.439-0.202 12.227-7.532 23.519-19.119 27.908-12.024 4.555-25.819 0.885-33.962-9.051-1.393-1.7-2.556-3.539-3.511-5.467-0.029-0.064-0.053-0.129-0.084-0.192-0.514-1.046-0.94-2.105-1.319-3.17-0.123-0.352-0.255-0.701-0.364-1.057-0.052-0.166-0.093-0.333-0.142-0.5-0.17-0.587-0.331-1.177-0.465-1.773-0.011-0.051-0.021-0.101-0.032-0.153-0.146-0.669-0.27-1.344-0.371-2.021-0.013-0.088-0.024-0.176-0.035-0.265-0.081-0.576-0.139-1.154-0.187-1.732-0.022-0.287-0.041-0.575-0.054-0.861-0.016-0.301-0.023-0.601-0.030-0.901-0.088-6.331 1.896-12.598 5.538-18.156zM456.519 448.994c-16.202-6.209-26.194-24.405-21.575-41.839 5.049-19.061 24.582-29.436 42.668-24.996-4.102 10.373-4.387 21.781-1.174 32.523-10.707 8.597-17.747 20.755-19.919 34.312zM522.441 489.942c-14.131 5.288-30.294 0.96-39.865-10.729-5.777-7.056-8.342-16.071-7.653-24.889 0.033-0.372 0.080-0.739 0.123-1.106 0.037-0.338 0.074-0.677 0.12-1.015 1.16-7.895 4.826-14.956 10.476-20.41 11.427 13.364 29.307 19.546 46.913 16.318 3.591-0.659 7.013-1.736 10.232-3.171 1.413 3.787 2.204 7.872 2.266 12.123-0.209 14.395-8.933 27.761-22.613 32.88z"],"grid":0,"tags":["palm-tree"],"defaultCode":59704},{"paths":["M781.591 388.045c-31.741-31.741-63.482-63.483-95.223-95.224-4.545-4.545-9.090-9.090-13.635-13.635-3.633-3.633-9.763-3.612-13.409 0-14.377 14.246-28.754 28.491-43.13 42.737-32.165 31.872-64.331 63.744-96.496 95.616-34.235 33.923-68.471 67.847-102.705 101.769-20.263 20.078-40.526 40.156-60.789 60.234-1.006 0.997-2.092 1.953-3.036 3.008-4.558 5.093-3.062 15.899-3.258 22.231-0.681 22.007-1.362 44.012-2.044 66.019-0.051 1.665-0.102 3.33-0.155 4.995-0.153 4.946 4.471 9.725 9.481 9.481 15.192-0.737 30.383-1.474 45.576-2.212 9.858-0.478 19.716-0.957 29.574-1.435 5.55-0.269 13.59 0.576 17.979-3.326 3.828-3.404 7.308-7.308 10.927-10.928 9.292-9.292 18.585-18.585 27.877-27.877 28.664-28.663 57.329-57.329 85.993-85.993 29.417-29.417 58.835-58.835 88.254-88.253 15.497-15.497 31.552-30.604 46.57-46.57 0.222-0.237 0.46-0.46 0.69-0.69 8.64-8.64-4.764-22.053-13.409-13.409-8.656 8.656-17.311 17.311-25.967 25.968-20.672 20.671-41.342 41.342-62.014 62.013-25.112 25.112-50.223 50.223-75.335 75.335-21.621 21.621-43.241 43.241-64.863 64.863-7.164 7.164-14.328 14.328-21.492 21.493-2.682 2.682-5.661 5.277-8.302 8.076-23.704 1.15-47.408 2.301-71.112 3.451-0.385 0.019-0.77 0.038-1.155 0.056 0.677-21.875 1.355-43.749 2.032-65.623 0.071-2.294 0.142-4.588 0.213-6.882 9.245-9.162 18.492-18.323 27.738-27.485 24.334-24.111 48.667-48.224 73.002-72.335 29.564-29.295 59.128-58.59 88.694-87.884 25.463-25.23 50.925-50.461 76.388-75.692 8.395-8.318 16.79-16.637 25.185-24.955 1.895-1.878 3.907-3.718 5.885-5.591 29.477 29.476 58.953 58.953 88.43 88.43 2.311 2.311 4.621 4.621 6.931 6.931-10.296 10.296-20.592 20.592-30.888 30.888-30.081 30.081-60.161 60.161-90.241 90.241-36.148 36.144-72.294 72.291-108.441 108.437-31.442 31.442-62.884 62.884-94.326 94.326-10.308 10.309-20.617 20.617-30.926 30.926-4.241 4.241-8.863 8.329-12.969 12.755-42.013 0.588-84.026 1.177-126.038 1.765-2.908 0.041-5.817 0.081-8.725 0.121 1.124-39.675 2.247-79.351 3.371-119.026 0.132-4.654 0.264-9.307 0.395-13.961 11.643-11.643 23.287-23.287 34.93-34.929 30.080-30.081 60.161-60.161 90.241-90.241 36.146-36.146 72.293-72.292 108.438-108.438 31.442-31.442 62.884-62.884 94.326-94.326 15.23-15.23 31.024-30.072 45.774-45.774 0.201-0.214 0.417-0.417 0.625-0.625 8.64-8.64-4.764-22.053-13.409-13.409-5.4 5.4-10.799 10.799-16.199 16.199-14.235 14.235-28.471 28.471-42.706 42.706-20.126 20.126-40.252 40.252-60.378 60.378-22.959 22.959-45.919 45.919-68.879 68.879-23.078 23.078-46.157 46.157-69.235 69.235-20.147 20.147-40.294 40.294-60.441 60.441-14.271 14.271-28.541 28.541-42.812 42.812-5.415 5.415-11.25 10.622-16.345 16.345-4.709 5.289-3.066 16.906-3.252 23.434-0.406 14.325-0.811 28.65-1.216 42.976-0.773 27.291-1.545 54.58-2.318 81.871-0.047 1.691-0.096 3.38-0.143 5.071-0.143 5.074 4.46 9.552 9.481 9.481 21.019-0.294 42.036-0.589 63.055-0.883 27.061-0.378 54.123-0.758 81.184-1.137 4.637-0.064 8.646-0.453 12.193-3.851 2.739-2.624 5.371-5.37 8.053-8.053 12.292-12.292 24.585-24.585 36.876-36.877 18.899-18.899 37.798-37.798 56.696-56.696 22.709-22.709 45.418-45.418 68.128-68.128 23.348-23.348 46.696-46.696 70.044-70.044 21.143-21.143 42.286-42.286 63.428-63.428 16.051-16.051 32.101-32.101 48.153-48.153 7.846-7.846 15.848-15.567 23.553-23.552 0.343-0.357 0.701-0.702 1.051-1.051 3.623-3.623 3.631-9.782 0.002-13.411z"],"grid":0,"tags":["paperclip"],"defaultCode":59705},{"paths":["M858.253 176.367c-0.009-0.379 0-0.759 0-1.139 0-5.126-4.344-9.481-9.481-9.481-5.994 0-11.987 0-17.982 0-16.314 0-32.628 0-48.942 0-24.132 0-48.264 0-72.396 0-29.449 0-58.897 0-88.345 0-32.421 0-64.842 0-97.262 0-32.571 0-65.143 0-97.713 0-30.37 0-60.74 0-91.11 0-25.667 0-51.334 0-77.001 0-18.462 0-36.925 0-55.387 0-8.745 0-17.525-0.226-26.267 0-0.379 0.009-0.759 0-1.138 0-5.126 0-9.481 4.344-9.481 9.481 0 5.994 0 11.988 0 17.982 0 16.314 0 32.628 0 48.942 0 24.132 0 48.264 0 72.396 0 29.449 0 58.897 0 88.346 0 32.421 0 64.841 0 97.262 0 32.571 0 65.143 0 97.713 0 30.37 0 60.74 0 91.11 0 25.667 0 51.334 0 77.001 0 18.462 0 36.925 0 55.387 0 8.745-0.226 17.525 0 26.267 0.009 0.379 0 0.759 0 1.138 0 5.126 4.344 9.481 9.481 9.481 5.994 0 11.987 0 17.982 0 16.314 0 32.628 0 48.942 0 24.132 0 48.264 0 72.396 0 29.449 0 58.897 0 88.346 0 32.421 0 64.842 0 97.262 0 32.571 0 65.143 0 97.713 0 30.37 0 60.74 0 91.109 0 25.667 0 51.334 0 77.001 0 18.462 0 36.925 0 55.387 0 8.745 0 17.525 0.226 26.267 0 0.379-0.009 0.759 0 1.139 0 2.906 0 5.112-1.083 6.636-2.721 1.71-1.526 2.845-3.775 2.845-6.76 0-5.994 0-11.987 0-17.982 0-16.314 0-32.628 0-48.942 0-24.132 0-48.264 0-72.396 0-29.449 0-58.897 0-88.346 0-32.421 0-64.841 0-97.262 0-32.571 0-65.143 0-97.713 0-30.37 0-60.74 0-91.11 0-25.667 0-51.334 0-77.001 0-18.462 0-36.925 0-55.387-0.001-8.745 0.225-17.524-0.001-26.267zM202.634 839.29c-5.932 0-11.944-0.231-17.924-0.221 0-2.76 0-5.52 0-8.279 0-16.314 0-32.628 0-48.942 0-24.132 0-48.264 0-72.396 0-29.449 0-58.897 0-88.346 0-32.421 0-64.841 0-97.262 0-32.571 0-65.143 0-97.713 0-30.37 0-60.74 0-91.11 0-25.667 0-51.334 0-77.001 0-18.462 0-36.925 0-55.387 0-5.932 0.231-11.944 0.221-17.924 2.76 0 5.52 0 8.279 0 16.314 0 32.628 0 48.942 0 0.866 0 1.732 0 2.598 0v427.433h16.579c0 25.836 0 51.673 0 77.509 0 25.55 0 51.1 0 76.65 0 18.383 0 36.765 0 55.148 0 5.938-0.097 11.893-0.092 17.84-1.072 0-2.144 0-3.216 0-18.463 0-36.925 0-55.387 0zM280.293 839.29c0-2.805 0-5.608 0-8.413 0-16.234 0-32.469 0-48.704 0-24.016 0-48.030 0-72.046 0-29.457 0-58.913 0-88.37 0-3.205 0-6.409 0-9.614h15.314v-427.434c6.314 0 12.628 0 18.942 0 9.104 0 18.207 0 27.311 0v427.433h15.946c0 25.836 0 51.673 0 77.509 0 25.55 0 51.1 0 76.65 0 18.383 0 36.765 0 55.148 0 5.938-0.097 11.893-0.092 17.84-7.563 0-15.128 0-22.691 0-18.243-0-36.487-0-54.73-0zM376.768 839.29c0-2.805 0-5.608 0-8.413 0-16.234 0-32.469 0-48.704 0-24.016 0-48.030 0-72.046 0-29.457 0-58.913 0-88.37 0-3.205 0-6.409 0-9.614h15.946v-427.434c3.392 0 6.786 0 10.178 0 17.129 0 34.258 0 51.388 0 0 3.847 0 7.693 0 11.54 0 16.234 0 32.469 0 48.704 0 24.016 0 48.030 0 72.046 0 29.457 0 58.914 0 88.371 0 32.116 0 64.232 0 96.348 0 32.416 0 64.833 0 97.25 0 30.228 0 60.456 0 90.684 0 25.55 0 51.1 0 76.65 0 18.383 0 36.765 0 55.148 0 5.938-0.097 11.893-0.092 17.84-9.353 0-18.705 0-28.057 0-16.455 0-32.909 0-49.363 0zM473.243 839.29c0-2.805 0-5.608 0-8.413 0-16.234 0-32.469 0-48.704 0-24.016 0-48.030 0-72.046 0-29.457 0-58.913 0-88.37 0-32.116 0-64.232 0-96.348 0-32.416 0-64.833 0-97.25 0-30.228 0-60.456 0-90.685 0-25.55 0-51.099 0-76.65 0-18.383 0-36.765 0-55.148 0-6.979 0.134-13.979 0.076-20.966 8.946 0 17.891 0 26.835 0 11.551 0 23.104 0 34.655 0v427.433h15.946c0 25.836 0 51.673 0 77.509 0 25.55 0 51.1 0 76.65 0 18.383 0 36.765 0 55.148 0 5.938-0.097 11.893-0.092 17.84-8.94 0-17.879 0-26.819 0-16.867-0.001-33.733-0.001-50.601-0.001zM569.719 839.29c0-2.805 0-5.608 0-8.413 0-16.234 0-32.469 0-48.704 0-24.016 0-48.030 0-72.046 0-29.457 0-58.913 0-88.37 0-3.205 0-6.409 0-9.614h15.946v-427.434c4.068 0 8.135 0 12.203 0 10.21 0 20.419 0 30.629 0v427.433h18.734c0 25.836 0 51.673 0 77.509 0 25.55 0 51.1 0 76.65 0 18.383 0 36.765 0 55.148 0 5.938-0.097 11.893-0.092 17.84-8.677 0-17.355 0-26.033 0-17.128-0-34.258-0-51.387-0zM666.195 839.29c0-2.805 0-5.608 0-8.413 0-16.234 0-32.469 0-48.704 0-24.016 0-48.030 0-72.046 0-29.457 0-58.913 0-88.37 0-3.205 0-6.409 0-9.614h13.157v-427.434c3.209 0 6.417 0 9.626 0 13.471 0 26.943 0 40.413 0v427.433h14.316c0 25.836 0 51.673 0 77.509 0 25.55 0 51.1 0 76.65 0 18.383 0 36.765 0 55.148 0 5.938-0.097 11.893-0.092 17.84-11.388 0-22.775 0-34.164 0-14.418-0-28.838-0-43.256-0zM781.849 839.29c-6.392 0-12.785 0-19.177 0 0-2.805 0-5.608 0-8.413 0-16.234 0-32.469 0-48.704 0-24.016 0-48.030 0-72.046 0-29.457 0-58.913 0-88.37 0-3.205 0-6.409 0-9.614h17.576v-427.434c13.706 0 27.413 0 41.119 0 5.932 0 11.944 0.231 17.924 0.221 0 2.76 0 5.52 0 8.28 0 16.314 0 32.628 0 48.942 0 24.132 0 48.264 0 72.396 0 29.449 0 58.897 0 88.346 0 32.421 0 64.841 0 97.262 0 32.571 0 65.143 0 97.713 0 30.37 0 60.74 0 91.11 0 25.667 0 51.334 0 77.001 0 18.462 0 36.925 0 55.387 0 5.967-0.097 11.949-0.092 17.924-2.803 0-5.605 0-8.408 0-16.314-0.001-32.628-0.001-48.942-0.001z"],"grid":0,"tags":["piano"],"defaultCode":59706},{"paths":["M947.433 501.672c0-32.043-77.093-60.268-194.112-76.809-13.489-36.425-35.489-69.694-63.722-96.38-37.669-35.606-86.11-59.615-137.407-67.363-13.321-2.012-26.718-3.122-40.192-3.157-52.724 0.138-105.073 16.164-148.238 46.593-42.311 29.827-74.926 71.722-93.042 120.246-0.008 0.020-0.014 0.039-0.021 0.059-117.031 16.54-194.132 44.768-194.132 76.812 0 31.801 75.927 67.542 191.461 89.92 15.074 45.083 43.073 85.761 79.918 115.823 41.016 33.465 91.245 53.652 144.029 57.832 53.15 4.209 107.364-8.459 153.078-35.911 43.725-26.257 79.595-65.733 100.779-112.193 3.804-8.343 7.128-16.867 9.993-25.522 115.617-22.376 191.608-58.135 191.608-89.949zM347.359 342.318c35.208-33.436 80.273-55.218 128.198-62.714 12.042-1.884 24.26-2.646 36.443-2.679 49.422 0.13 97.665 15.263 138.157 43.646 38.578 27.042 69.019 66.203 85.276 110.455 13.424 36.54 17.534 76.038 12.038 114.397-57.401 13.86-141.607 22.612-235.47 22.612-93.905 0-178.143-8.76-235.546-22.63-3.827-26.622-3.093-53.916 2.347-80.171 9.723-46.934 33.816-89.922 68.557-122.916zM198.814 501.672c0-14.768 22.77-28.408 61.271-39.433-5.124 25.57-6.234 51.964-3.353 77.89-36.468-10.85-57.919-24.122-57.919-38.457zM663.125 693.612c-37.282 30.574-84.372 49.223-132.424 52.774-49.392 3.65-99.085-7.679-141.648-33.101-41.030-24.506-73.948-61.196-93.989-104.573-2.003-4.336-3.861-8.741-5.58-13.199 65.12 11.21 141.213 18.193 222.515 18.193 81.258 0 157.314-6.975 222.41-18.174-14.739 38.188-39.538 72.046-71.285 98.080zM767.121 540.17c2.92-25.86 1.875-52.168-3.235-77.941 38.518 11.026 61.3 24.67 61.3 39.442 0 14.353-21.51 27.641-58.065 38.499z"],"grid":0,"tags":["planet-ring"],"defaultCode":59707},{"paths":["M794.035 283.171c-31.634-9.039-63.268-18.076-94.902-27.115-50.242-14.355-100.485-28.71-150.727-43.065-11.111-3.174-22.23-6.971-33.495-9.57-3.602-0.832-6.23 0.117-9.54 1.063-5.758 1.645-11.517 3.29-17.275 4.936-47.922 13.692-95.845 27.384-143.768 41.077-37.502 10.715-75.003 21.43-112.505 32.144-0.619 0.177-1.238 0.354-1.856 0.531-6.040 1.726-8.575 8.526-5.667 13.928 9.3 17.271 18.601 34.543 27.9 51.814 22.25 41.322 44.5 82.644 66.751 123.966 26.974 50.094 53.948 100.19 80.923 150.284 23.232 43.145 46.464 86.291 69.696 129.435 11.231 20.856 21.741 42.343 33.786 62.746 0.163 0.277 0.306 0.569 0.459 0.852 1.941 3.605 5.074 4.917 8.162 4.673 3.103 0.263 6.259-1.045 8.213-4.673 9.3-17.271 18.6-34.543 27.9-51.815 22.25-41.322 44.5-82.644 66.751-123.966 26.974-50.094 53.948-100.19 80.923-150.284 23.232-43.145 46.464-86.291 69.696-129.435 11.252-20.896 23.012-41.599 33.786-62.746 0.146-0.287 0.306-0.569 0.459-0.852 2.908-5.403 0.372-12.203-5.668-13.928zM509.48 743.114c-6.811 1.894-13.622 3.789-20.433 5.682-2.468-4.582-4.935-9.165-7.403-13.748 0.271-0.075 0.541-0.151 0.812-0.226 10.688-2.972 21.376-5.945 32.064-8.917 11.741-3.265 6.755-21.567-5.040-18.286-12.352 3.435-24.704 6.87-37.056 10.305-2.468-4.582-4.935-9.166-7.403-13.748 5.812-1.617 11.623-3.232 17.435-4.849 10.688-2.972 21.376-5.945 32.064-8.917 11.741-3.265 6.755-21.567-5.040-18.286-17.893 4.976-35.786 9.953-53.678 14.929-2.468-4.582-4.935-9.165-7.403-13.748 11.353-3.157 22.705-6.315 34.057-9.472 10.688-2.972 21.376-5.945 32.064-8.917 11.741-3.265 6.755-21.567-5.040-18.286-23.433 6.518-46.868 13.034-70.301 19.552-2.467-4.582-4.935-9.165-7.402-13.748 16.893-4.698 33.787-9.396 50.68-14.095 10.688-2.972 21.376-5.945 32.064-8.917 11.741-3.265 6.755-21.566-5.040-18.285-28.975 8.058-57.95 16.117-86.924 24.175-2.468-4.582-4.935-9.166-7.403-13.748 22.435-6.24 44.869-12.479 67.303-18.718 10.688-2.972 21.376-5.945 32.064-8.917 11.741-3.265 6.755-21.566-5.040-18.285-29.555 8.219-59.109 16.439-88.664 24.658-4.961 1.38-9.921 2.759-14.882 4.139-2.468-4.582-4.935-9.165-7.403-13.748 27.975-7.781 55.951-15.561 83.926-23.341 10.688-2.972 21.376-5.945 32.064-8.917 11.741-3.265 6.755-21.566-5.040-18.285-29.555 8.219-59.109 16.439-88.664 24.658-10.502 2.92-21.003 5.842-31.506 8.762-2.467-4.582-4.935-9.165-7.402-13.748 33.516-9.321 67.033-18.642 100.549-27.964 10.688-2.972 21.376-5.945 32.064-8.917 11.741-3.265 6.755-21.566-5.040-18.286-29.555 8.219-59.109 16.439-88.664 24.658-16.043 4.462-32.085 8.923-48.128 13.385-2.468-4.582-4.935-9.165-7.403-13.748 39.057-10.862 78.115-21.725 117.172-32.587 10.688-2.972 21.376-5.945 32.064-8.917 11.741-3.265 6.755-21.566-5.040-18.286-29.555 8.219-59.109 16.439-88.664 24.658-21.584 6.003-43.167 12.005-64.751 18.008-2.468-4.582-4.935-9.165-7.403-13.748 44.599-12.404 89.197-24.806 133.795-37.21 10.688-2.972 21.376-5.945 32.064-8.917 11.741-3.265 6.755-21.566-5.040-18.286-29.555 8.219-59.109 16.439-88.664 24.658-27.125 7.543-54.249 15.087-81.374 22.631-2.467-4.582-4.935-9.166-7.402-13.748 3.112-0.866 6.224-1.731 9.336-2.597 47.027-13.079 94.054-26.158 141.082-39.236 10.688-2.972 21.376-5.945 32.064-8.917 11.741-3.265 6.755-21.566-5.040-18.286-29.555 8.219-59.109 16.439-88.664 24.658-32.666 9.084-65.331 18.169-97.997 27.254-2.468-4.582-4.935-9.165-7.403-13.748 8.653-2.406 17.306-4.813 25.959-7.219 47.027-13.079 94.054-26.158 141.082-39.236 10.688-2.972 21.376-5.945 32.064-8.917 11.741-3.265 6.755-21.566-5.040-18.286-29.555 8.219-59.109 16.439-88.664 24.658-38.207 10.626-76.413 21.252-114.62 31.877-2.468-4.582-4.935-9.165-7.403-13.748 14.194-3.947 28.388-7.895 42.582-11.842 47.027-13.079 94.054-26.158 141.082-39.236 10.688-2.972 21.376-5.945 32.064-8.917 11.741-3.265 6.755-21.566-5.040-18.286-29.555 8.219-59.109 16.439-88.664 24.658-43.748 12.167-87.495 24.333-131.243 36.5-2.468-4.582-4.935-9.166-7.402-13.748 19.735-5.489 39.47-10.977 59.204-16.466 47.027-13.079 94.054-26.158 141.082-39.236 10.688-2.972 21.376-5.945 32.064-8.917 11.741-3.265 6.755-21.566-5.040-18.285-29.555 8.219-59.109 16.439-88.664 24.658-47.027 13.079-94.054 26.158-141.082 39.236-2.261 0.629-4.523 1.257-6.784 1.887-2.468-4.582-4.935-9.166-7.403-13.748 25.276-7.030 50.551-14.059 75.828-21.089 47.027-13.079 94.054-26.158 141.082-39.236 10.688-2.972 21.376-5.945 32.064-8.917 11.741-3.265 6.755-21.566-5.040-18.285-29.553 8.227-59.108 16.447-88.662 24.666-47.027 13.079-94.054 26.158-141.082 39.236-7.802 2.17-15.605 4.34-23.407 6.51-1.449-2.692-2.898-5.384-4.347-8.075-1.828-3.395-3.561-6.912-5.358-10.39 27.762-7.932 55.525-15.864 83.286-23.796 50.035-14.296 100.069-28.591 150.104-42.888 10.663-3.046 21.325-6.093 31.988-9.139 30.794 8.798 61.588 17.597 92.382 26.395 50.035 14.296 100.069 28.591 150.104 42.888 7.699 2.2 15.398 4.399 23.097 6.599-7.385 13.716-14.77 27.431-22.156 41.147-22.25 41.322-44.5 82.644-66.751 123.966-26.974 50.094-53.948 100.19-80.923 150.284-23.232 43.145-46.464 86.291-69.696 129.436-8.654 16.072-17.604 32.032-26.181 48.166-4.537-8.425-9.074-16.85-13.61-25.276 5.418-1.507 10.835-3.013 16.253-4.52 11.743-3.265 6.756-21.567-5.039-18.286z"],"grid":0,"tags":["pyramid"],"defaultCode":59708},{"paths":["M153.219 686.851c28.848 0.056 57.696 0.111 86.544 0.167 45.632 0.088 91.263 0.175 136.895 0.264 10.563 0.020 21.127 0.041 31.689 0.061 2.24 0.004 4.067-0.635 5.486-1.677 2.985-1.297 5.28-4.060 5.304-8.295 0.227-39.948 22.787-80.521 61.231-95.249 37.319-14.297 78.908-1.267 103.084 30.354 14.218 18.597 21.39 41.6 21.523 64.895 0.016 2.796 1.031 4.944 2.575 6.46 1.527 1.805 3.827 3.015 6.906 3.022 28.848 0.056 57.696 0.111 86.544 0.167 45.632 0.088 91.263 0.175 136.895 0.264 10.563 0.020 21.127 0.041 31.689 0.061 2.585 0.005 4.617-0.848 6.108-2.186 2.47-1.447 4.251-4.038 4.246-7.786-0.132-81.041-23.037-161.892-67.786-229.676-42.3-64.075-102.859-115.191-174.417-143.502-71.488-28.283-152.326-31.387-225.838-8.933-73.463 22.439-137.371 69.221-183.923 129.956-48.866 63.755-77.007 141.925-82.722 221.87-0.681 9.524-1.013 19.067-1.062 28.614-0.799 5.221 2.204 11.139 9.028 11.152zM299.853 668.169c-11.382-0.022-22.762-0.044-34.144-0.065 1.741-51.685 17.054-102.361 45.483-145.758 27.765-42.384 68.277-77.25 115.575-95.924 48.632-19.2 102.592-21.582 152.591-6.289 48.592 14.862 91.516 46.057 122.335 86.323 32.869 42.946 52.329 95.687 56.128 149.573 0.285 4.041 0.474 8.087 0.595 12.135-11.393-0.022-22.787-0.044-34.18-0.065-1.724-43.397-14.673-86.317-38.636-122.681-24.428-37.070-59.206-66.408-100.479-82.958-41.371-16.589-88.507-18.383-131.099-5.312-42.394 13.009-79.186 39.963-106.061 75.017-28.090 36.639-44.209 81.416-47.631 127.347-0.214 2.883-0.371 5.769-0.479 8.658zM623.527 667.905c-3.561-44.842-30.444-86.251-73.032-103.395-44.261-17.817-95.095-1.584-123.971 35.477-15.377 19.736-24.146 43.583-25.974 68.376-10.776-0.021-21.552-0.042-32.328-0.063 3.434-58.639 37.802-115.897 93.897-137.933 28.603-11.237 60.052-12.661 89.428-3.648 28.315 8.687 53.347 26.946 71.319 50.414 20.039 26.166 31.127 58.113 33.014 90.833-3.246-0.006-6.49-0.012-9.736-0.019-7.539-0.013-15.077-0.027-22.617-0.043zM674.862 668.004c-3.626-67.027-43.244-129.924-106.69-155.468-31.709-12.767-67.994-14.12-100.65-4.102-32.381 9.934-60.561 30.437-81.152 57.174-22.706 29.484-35.247 65.647-37.137 102.656-9.143-0.018-18.286-0.035-27.429-0.053-0.986-0.002-1.971-0.004-2.957-0.006 1.688-39.995 13.673-79.074 35.69-112.692 21.743-33.2 53.574-60.635 90.631-75.22 38.27-15.062 80.566-16.924 119.878-4.86 38.058 11.678 71.748 36.198 95.865 67.791 27.424 35.924 42.417 79.895 44.351 124.839-10.133-0.020-20.267-0.039-30.4-0.059zM777.371 668.201c-1.739-55.141-18.013-109.755-48.425-155.952-30.56-46.422-74.248-83.304-125.994-103.885-51.602-20.524-110.157-22.753-163.244-6.516-52.92 16.186-98.951 49.821-132.526 93.549-35.311 45.987-55.6 102.258-59.811 159.952-0.309 4.235-0.512 8.476-0.64 12.719-10.747-0.021-21.494-0.042-32.241-0.062 1.784-63.070 20.367-125.048 55.098-177.937 33.69-51.302 82.747-93.323 140.074-115.844 58.598-23.020 123.706-25.762 183.897-7.296 58.61 17.981 110.376 55.609 147.547 104.189 39.594 51.745 63.051 115.183 67.727 180.099 0.409 5.676 0.663 11.36 0.804 17.047-8.867-0.017-17.734-0.034-26.6-0.051-1.887-0.005-3.776-0.009-5.666-0.012zM391.416 322.477c68.661-27.165 145.131-30.505 215.755-8.933 68.871 21.037 129.689 65.173 173.35 122.234 46.464 60.725 73.927 135.123 79.373 211.306 0.506 7.084 0.815 14.179 0.966 21.276-10.756-0.021-21.511-0.042-32.266-0.062-1.745-66.58-21.293-132.588-58.047-188.329-36.374-55.164-88.389-99.108-149.92-123.581-61.711-24.544-131.645-27.22-195.12-7.747-63.182 19.384-118.085 59.646-158.12 111.911-41.98 54.805-66.128 121.964-71.076 190.663-0.402 5.578-0.653 11.163-0.796 16.753-3.536-0.007-7.071-0.013-10.607-0.020-7.212-0.014-14.423-0.027-21.635-0.042 1.815-74.239 23.55-147.324 64.368-209.59 39.403-60.111 96.711-109.308 163.776-135.841z","M581.844 673.78c0 38.544-31.246 69.789-69.789 69.789s-69.789-31.246-69.789-69.789c0-38.544 31.246-69.789 69.789-69.789s69.789 31.246 69.789 69.789z"],"grid":0,"tags":["rainbow"],"defaultCode":59709},{"paths":["M747.96 628.663c21.911-16.763 34.209-39.361 34.209-63.647 0-24.603-12.61-47.549-35.507-64.611-22.062-16.439-51.246-25.492-82.174-25.492-15.48 0-30.424 2.231-44.53 6.639-9.463-12.508-22.74-23.098-38.811-30.888-18.813-9.118-40.615-13.939-63.048-13.939-42.946 0-81.635 17.357-102.464 45.618-30.345 0.222-58.969 9.176-80.717 25.269-20.858 15.434-33.271 35.766-35.452 57.8-35.712 16.154-57.636 45.438-57.636 77.57 0 35.020 26.052 66.459 66.867 81.339 4.107 18.749 15.911 36.13 33.725 49.454 18.062 13.508 41.566 22.247 66.562 24.809 21.844 25.15 58.107 40.048 97.976 40.048 51.906 0 97.203-25.986 112.327-63.079 14.241 4.503 29.676 6.857 45.2 6.857 30.929 0 60.112-9.053 82.174-25.492 22.897-17.060 35.507-40.005 35.507-64.61 0.001-24.285-12.297-46.883-34.208-63.645zM664.488 763.448c-16.649 0-33.122-3.073-47.634-8.888l-10.093-4.043-2.632 10.548c-3.959 15.862-15.557 30.491-32.659 41.194-17.941 11.227-40.851 17.41-64.508 17.41-35.26 0-68.128-13.822-85.779-36.072l-2.579-3.251-4.138-0.311c-46.611-3.505-83.62-30.464-88-64.1l-0.778-5.983-5.749-1.829c-35.93-11.43-59.145-36.999-59.145-65.142 0-25.855 19.664-49.743 51.318-62.343l5.911-2.352 0.063-6.362c0.388-38.941 44.668-70.623 98.709-70.623 1.184 0 2.361 0.021 3.536 0.051l5.313 0.134 2.887-4.463c16.239-25.11 51.396-41.335 89.569-41.335 38.722 0 74.087 16.556 90.096 42.177l4.097 6.558 7.249-2.696c14.011-5.211 29.134-7.853 44.947-7.853 54.433 0 98.718 31.913 98.718 71.139 0 21.572-13.509 41.781-37.064 55.447l-14.138 8.201 14.138 8.201c23.555 13.664 37.064 33.874 37.064 55.446 0.001 39.227-44.284 71.139-98.717 71.139z","M610.337 374.402c-0.179 1.074-0.016 2.192 0.576 3.105 9.881 15.195 19.761 30.391 29.642 45.587 2.079 3.198 7.77 3.076 8.665-1.132 3.82-17.962 7.641-35.923 11.461-53.885 0.243-1.141 0.121-2.206-0.27-3.112 0.335-16.567-14.763-29.566-31.357-26.394-16.618 3.177-24.522 21.040-18.717 35.831z","M495.902 331.31c9.881 15.195 19.761 30.391 29.642 45.587 2.079 3.198 7.77 3.075 8.665-1.132 3.821-17.962 7.641-35.923 11.462-53.885 0.243-1.141 0.12-2.206-0.27-3.112 0.335-16.567-14.762-29.566-31.357-26.394-16.619 3.177-24.523 21.040-18.718 35.831-0.179 1.073-0.017 2.192 0.576 3.104z","M561.351 224.782c9.881 15.196 19.761 30.391 29.642 45.587 2.079 3.198 7.77 3.076 8.665-1.132 3.821-17.962 7.641-35.923 11.462-53.885 0.243-1.141 0.12-2.206-0.27-3.112 0.335-16.567-14.763-29.565-31.357-26.394-16.619 3.177-24.523 21.040-18.718 35.831-0.18 1.074-0.017 2.192 0.576 3.104z","M385.893 258.203c9.881 15.195 19.761 30.391 29.642 45.587 2.079 3.198 7.77 3.075 8.665-1.132 3.821-17.962 7.641-35.923 11.462-53.885 0.243-1.141 0.12-2.206-0.27-3.112 0.335-16.567-14.763-29.566-31.357-26.394-16.619 3.177-24.523 21.040-18.718 35.831-0.18 1.073-0.017 2.191 0.576 3.104z","M374.687 394.144c9.881 15.196 19.761 30.391 29.642 45.587 2.079 3.198 7.77 3.076 8.665-1.132 3.82-17.962 7.641-35.923 11.461-53.884 0.243-1.141 0.121-2.206-0.27-3.113 0.335-16.567-14.762-29.565-31.356-26.393-16.619 3.176-24.523 21.040-18.718 35.831-0.18 1.073-0.017 2.191 0.576 3.104z","M281.939 339.49c9.881 15.195 19.761 30.391 29.642 45.587 2.079 3.198 7.769 3.076 8.665-1.132 3.82-17.962 7.641-35.923 11.461-53.885 0.243-1.141 0.121-2.206-0.27-3.112 0.335-16.567-14.763-29.565-31.357-26.394-16.619 3.177-24.523 21.040-18.718 35.831-0.179 1.073-0.016 2.192 0.577 3.104z","M467.16 637.865c0.051 0.167 0.15 0.562 0.239 0.907 0.020-0.053 0.041-0.096 0.059-0.12 0.017 0.158 0.029 0.324 0.033 0.471 0.012 0.044 0.023 0.082 0.033 0.116-0.005 0.045-0.006 0.094-0.011 0.136-0.012 0.020-0.023 0.035-0.036 0.056-0.007 0.033-0.014 0.062-0.025 0.082-0.099 0.192-0.158 0.262-0.195 0.265-0.195 0.315-0.374 0.643-0.403 0.874-0.004 0.030-0.005 0.050-0.008 0.078-0.774 0.77-1.535 1.527-2.34 2.256 0.083-0.171-2.224 1.517-2.942 1.929-1.246 0.715-2.536 1.344-3.841 1.945-0.277 0.113-1.112 0.467-1.518 0.619-0.858 0.322-1.724 0.627-2.594 0.914-1.811 0.598-3.647 1.126-5.495 1.595-1.924 0.488-3.864 0.91-5.814 1.276-0.852 0.159-1.708 0.303-2.564 0.446-0.509 0.084-1.021 0.159-1.533 0.233-0.084 0.009-0.179 0.021-0.283 0.033-4.081 0.456-8.173 0.734-12.28 0.738-2.008 0.001-4.017-0.056-6.022-0.183-0.841-0.053-1.681-0.118-2.52-0.195-0.41-0.038-2.078-0.253-2.254-0.262-3.298-0.522-6.572-1.242-9.727-2.344-0.686-0.239-2.092-0.878-1.687-0.675-0.554-0.267-1.105-0.539-1.641-0.84-0.734-0.412-1.418-0.897-2.138-1.331-0.061-0.037-0.109-0.063-0.151-0.083-0.072-0.086-0.156-0.184-0.262-0.303-0.373-0.422-0.772-0.829-1.164-1.239-0.1-0.15-0.215-0.333-0.339-0.559-0.068-0.124-0.128-0.233-0.181-0.329-0.102-0.785-0.432-1.592-0.556-2.386-0.793-5.063-7.128-7.869-11.663-6.622-5.4 1.484-7.417 6.585-6.622 11.663 2.99 19.104 27.236 23.951 43.039 24.577 18.322 0.725 40.422-2.454 55.118-14.311 7.342-5.924 11.445-15.116 8.575-24.464-3.572-11.632-21.881-6.67-18.287 5.041zM398.189 645.42c0.243 0.294 0.191 0.267 0 0v0zM438.318 651.927c0.472-0.065 0.405-0.050 0 0v0zM467.414 638.282c-0.062-0.377-0.038-0.274 0 0v0zM467.488 638.72c-0.006-0.031-0.009-0.053-0.014-0.082 0.045-0.038 0.078 0.037 0.074 0.328 0 0.029-0.006 0.051-0.007 0.080-0.013-0.089-0.030-0.192-0.053-0.326zM467.51 639.423c-0.141 0.889-0.586 1.061 0 0v0z","M467.493 639.122c-0.027-0.1-0.059-0.22-0.093-0.351-0.122 0.313-0.255 1.010-0.141 1.003 0.074-0.119 0.149-0.237 0.22-0.346 0.014-0.077 0.017-0.184 0.014-0.306z","M624.714 624.441c0.051 0.167 0.15 0.563 0.239 0.907 0.021-0.053 0.041-0.096 0.060-0.12 0.017 0.158 0.029 0.324 0.033 0.471 0.011 0.044 0.023 0.082 0.033 0.116-0.004 0.045-0.006 0.094-0.011 0.136-0.013 0.020-0.022 0.035-0.036 0.056-0.007 0.033-0.014 0.062-0.025 0.082-0.099 0.192-0.159 0.262-0.196 0.264-0.195 0.315-0.373 0.643-0.403 0.874-0.004 0.030-0.005 0.050-0.008 0.078-0.775 0.771-1.535 1.527-2.34 2.256 0.083-0.171-2.224 1.517-2.942 1.929-1.246 0.715-2.536 1.344-3.841 1.944-0.277 0.113-1.112 0.468-1.518 0.62-0.858 0.321-1.724 0.626-2.594 0.914-1.812 0.598-3.647 1.126-5.495 1.595-1.923 0.488-3.864 0.91-5.814 1.276-0.852 0.159-1.708 0.303-2.563 0.446-0.51 0.084-1.023 0.159-1.535 0.234-0.083 0.009-0.178 0.021-0.282 0.032-4.081 0.456-8.173 0.735-12.28 0.738-2.008 0.002-4.017-0.056-6.022-0.183-0.841-0.053-1.681-0.118-2.52-0.195-0.411-0.038-2.078-0.253-2.254-0.261-3.298-0.522-6.572-1.242-9.727-2.344-0.686-0.24-2.092-0.878-1.687-0.675-0.554-0.267-1.105-0.539-1.642-0.84-0.734-0.412-1.418-0.897-2.138-1.33-0.061-0.037-0.109-0.064-0.151-0.084-0.072-0.086-0.156-0.184-0.262-0.303-0.372-0.422-0.772-0.829-1.164-1.239-0.1-0.151-0.215-0.333-0.339-0.56-0.069-0.124-0.128-0.233-0.181-0.329-0.102-0.785-0.432-1.592-0.556-2.386-0.793-5.063-7.128-7.869-11.663-6.622-5.4 1.484-7.417 6.585-6.622 11.663 2.99 19.104 27.236 23.951 43.039 24.577 18.323 0.725 40.422-2.454 55.118-14.311 7.342-5.924 11.445-15.116 8.575-24.463-3.572-11.632-21.881-6.671-18.286 5.041zM555.743 631.996c0.242 0.294 0.19 0.267 0 0v0zM595.868 638.503c0.476-0.065 0.409-0.049 0 0v0zM624.968 624.858c-0.062-0.377-0.039-0.274 0 0v0zM625.042 625.297c-0.006-0.032-0.009-0.053-0.014-0.082 0.045-0.038 0.078 0.036 0.074 0.328 0 0.029-0.006 0.051-0.007 0.080-0.013-0.090-0.030-0.192-0.053-0.326zM625.064 625.998c-0.142 0.89-0.587 1.063 0 0v0z","M625.047 625.698c-0.027-0.1-0.060-0.22-0.093-0.351-0.122 0.314-0.255 1.010-0.141 1.003 0.074-0.119 0.149-0.237 0.22-0.346 0.013-0.076 0.016-0.185 0.014-0.306z"],"grid":0,"tags":["rainy-day"],"defaultCode":59710},{"paths":["M863.906 400.593c0-68.038-26.495-132.005-74.606-180.115s-112.077-74.607-180.115-74.607-132.005 26.495-180.115 74.607c-8.432 8.433-16.185 17.362-23.263 26.705-6.037 5.024-11.885 10.34-17.508 15.962-8.432 8.433-16.185 17.362-23.263 26.705-6.037 5.024-11.885 10.34-17.508 15.962-8.432 8.433-16.185 17.362-23.263 26.705-6.037 5.024-11.885 10.34-17.508 15.962-8.432 8.433-16.185 17.362-23.263 26.705-6.037 5.024-11.885 10.34-17.508 15.962-8.432 8.433-16.185 17.362-23.263 26.705-6.037 5.024-11.885 10.34-17.508 15.962-48.111 48.11-74.606 112.077-74.606 180.115s26.495 132.005 74.606 180.115c48.11 48.111 112.077 74.607 180.115 74.607s132.005-26.495 180.115-74.607c8.432-8.433 16.185-17.362 23.263-26.705 6.037-5.024 11.885-10.34 17.508-15.962 8.432-8.433 16.185-17.362 23.263-26.705 6.037-5.024 11.885-10.34 17.508-15.962 8.432-8.433 16.185-17.362 23.263-26.705 6.037-5.024 11.885-10.34 17.508-15.962 8.432-8.433 16.185-17.362 23.263-26.705 6.037-5.024 11.885-10.34 17.508-15.962 8.432-8.433 16.185-17.362 23.263-26.705 6.037-5.024 11.885-10.34 17.508-15.962 48.111-48.11 74.606-112.077 74.606-180.115zM365.365 326.458c-0.344 1.138-0.664 2.284-0.993 3.427-1.141 0.386-2.281 0.773-3.416 1.175 0.517-0.953 1.040-1.904 1.57-2.85 0.944-0.589 1.888-1.178 2.839-1.751zM706.094 615.636c-3.261 1.471-6.555 2.863-9.879 4.182 3.041-15.837 4.609-32.077 4.609-48.559 0-68.038-26.495-132.005-74.606-180.115s-112.077-74.607-180.115-74.607c-20.427 0-40.482 2.405-59.857 7.050 1.163-3.376 2.402-6.723 3.718-10.040 30.066-13.565 62.936-20.714 96.908-20.714 62.973 0 122.177 24.523 166.706 69.052s69.052 103.733 69.052 166.706c0.001 30.294-5.69 59.71-16.537 87.045zM308.425 398.882c3.26-1.471 6.555-2.863 9.879-4.182-3.041 15.837-4.609 32.077-4.609 48.559 0 68.038 26.495 132.005 74.606 180.115s112.077 74.607 180.115 74.607c20.427 0 40.482-2.405 59.857-7.050-1.163 3.376-2.402 6.723-3.718 10.040-30.067 13.565-62.936 20.714-96.909 20.714-62.973 0-122.177-24.523-166.706-69.052s-69.052-103.733-69.052-166.706c-0.001-30.294 5.69-59.71 16.538-87.045zM568.415 679.017c-62.973 0-122.177-24.523-166.706-69.052s-69.052-103.733-69.052-166.706c0-19.026 2.254-37.703 6.606-55.74 5.202-1.51 10.462-2.843 15.777-3.993-0.372 5.657-0.576 11.345-0.576 17.066 0 68.038 26.495 132.005 74.606 180.115s112.077 74.607 180.115 74.607c9.618 0 19.151-0.548 28.573-1.594-0.907 5.366-2.003 10.682-3.273 15.945-21.197 6.153-43.386 9.352-66.071 9.352zM345.477 366.255c1.163-3.376 2.402-6.723 3.718-10.040 3.26-1.471 6.555-2.863 9.879-4.182-0.745 3.884-1.406 7.79-1.972 11.72-3.9 0.743-7.775 1.58-11.624 2.502zM640.209 634.325c-10.205 1.333-20.561 2.025-31.023 2.025-62.973 0-122.177-24.523-166.706-69.052s-69.052-103.733-69.052-166.706c0-6.85 0.308-13.652 0.883-20.399 10.205-1.333 20.561-2.025 31.023-2.025 62.973 0 122.177 24.523 166.706 69.052s69.052 103.733 69.052 166.706c0 6.85-0.308 13.652-0.883 20.399zM657.417 650.765c3.901-0.743 7.776-1.58 11.625-2.502-1.163 3.376-2.402 6.723-3.718 10.040-3.261 1.471-6.555 2.863-9.879 4.182 0.745-3.884 1.406-7.79 1.971-11.72zM659.479 630.992c0.372-5.657 0.576-11.345 0.576-17.066 0-68.038-26.495-132.005-74.606-180.115s-112.077-74.607-180.115-74.607c-9.618 0-19.151 0.548-28.573 1.594 0.907-5.366 2.003-10.682 3.273-15.945 21.197-6.153 43.386-9.352 66.071-9.352 62.973 0 122.177 24.523 166.706 69.052s69.052 103.733 69.052 166.706c0 19.026-2.254 37.703-6.606 55.74-5.202 1.51-10.463 2.843-15.777 3.993zM324.595 369.125c-0.344 1.138-0.664 2.284-0.993 3.427-1.141 0.386-2.281 0.773-3.416 1.175 0.517-0.953 1.040-1.904 1.57-2.85 0.944-0.589 1.888-1.178 2.839-1.751zM283.824 411.791c-7.18 23.727-10.901 48.646-10.901 74.135 0 68.038 26.495 132.005 74.606 180.115s112.077 74.607 180.115 74.607c29.467 0 58.166-4.978 85.147-14.521-0.518 0.953-1.040 1.904-1.57 2.85-36.967 23.037-79.707 35.374-124.348 35.374-62.973 0-122.177-24.523-166.706-69.052s-69.052-103.733-69.052-166.706c0-40.945 10.377-80.291 29.87-115.051 0.944-0.589 1.888-1.178 2.839-1.751zM649.153 688.061c0.344-1.138 0.664-2.284 0.993-3.427 1.141-0.386 2.281-0.773 3.416-1.175-0.518 0.953-1.040 1.904-1.57 2.85-0.944 0.589-1.888 1.178-2.839 1.751zM689.924 645.394c0.344-1.138 0.664-2.284 0.993-3.427 1.141-0.386 2.281-0.773 3.416-1.175-0.518 0.953-1.040 1.904-1.57 2.85-0.944 0.589-1.888 1.178-2.839 1.751zM730.694 602.727c7.181-23.727 10.901-48.646 10.901-74.135 0-68.038-26.495-132.005-74.606-180.115s-112.077-74.607-180.115-74.607c-29.467 0-58.166 4.978-85.147 14.521 0.517-0.953 1.040-1.904 1.57-2.85 36.967-23.037 79.707-35.374 124.348-35.374 62.973 0 122.177 24.523 166.706 69.052s69.052 103.733 69.052 166.706c0 40.945-10.377 80.291-29.87 115.051-0.944 0.589-1.888 1.178-2.839 1.751zM245.184 447.781c-8.57 25.713-13.030 52.919-13.030 80.812 0 68.038 26.495 132.005 74.606 180.115s112.077 74.607 180.115 74.607c31.82 0 62.747-5.797 91.581-16.888-38.739 26.39-84.451 40.592-132.351 40.592-62.973 0-122.177-24.523-166.706-69.052s-69.052-103.733-69.052-166.706c0-44.293 12.148-86.712 34.838-123.479zM769.335 566.738c8.57-25.713 13.030-52.919 13.030-80.812 0-68.038-26.495-132.005-74.606-180.115s-112.077-74.607-180.115-74.607c-31.82 0-62.747 5.797-91.581 16.888 38.739-26.39 84.451-40.592 132.351-40.592 62.973 0 122.177 24.523 166.706 69.052s69.052 103.733 69.052 166.706c0 44.293-12.148 86.712-34.838 123.479zM405.333 849.684c-62.973 0-122.177-24.523-166.706-69.052s-69.052-103.733-69.052-166.706c0-44.292 12.148-86.711 34.838-123.478-8.57 25.713-13.030 52.919-13.030 80.812 0 68.038 26.495 132.005 74.606 180.115s112.077 74.607 180.115 74.607c31.82 0 62.747-5.797 91.581-16.888-38.738 26.389-84.451 40.591-132.351 40.591zM748.53 263.144c-48.11-48.111-112.077-74.607-180.115-74.607-31.82 0-62.747 5.797-91.581 16.888 38.739-26.39 84.451-40.592 132.351-40.592 62.973 0 122.177 24.523 166.706 69.052s69.052 103.733 69.052 166.706c0 44.292-12.147 86.711-34.838 123.478 8.57-25.713 13.030-52.919 13.030-80.812 0-68.037-26.495-132.004-74.606-180.114z"],"grid":0,"tags":["rings"],"defaultCode":59711},{"paths":["M249.122 118.348c0.061 0.174 0.138 0.331 0.219 0.464-0.059-0.145-0.111-0.284-0.157-0.421-0.020-0.013-0.041-0.028-0.062-0.043z","M493.591 147.24c-0.006 0.047-0.011 0.096-0.018 0.143 0.42-2.795 0.162-1.201 0.042-0.327-0.001 0.009-0.002 0.016-0.003 0.025-0.008 0.057-0.014 0.111-0.021 0.159z","M800.154 871.201c0.058 0.165 0.097 0.342 0.106 0.521-0.011-0.020-0.019-0.038-0.029-0.058-0.026-0.152-0.076-0.324-0.138-0.506-0.094-0.064-0.182-0.132-0.279-0.192-0.471-0.828-0.169-0.704 0.121-0.229-0.292-0.716-0.695-1.494-0.824-1.903-2.043-6.499-3.143-13.321-4.178-20.038-0.34-2.21-0.576-4.448-0.962-6.649 0.546 3.115-0.007-0.053-0.175-1.374-0.164-1.282-0.323-2.564-0.479-3.847-0.685-5.648-1.292-11.306-1.855-16.967-1.319-13.271-2.395-26.566-3.367-39.867-2.468-33.765-4.276-67.578-5.924-101.392-1.952-40.070-3.618-80.153-5.224-120.238-1.682-41.99-3.282-83.982-4.963-125.972-1.606-40.13-3.271-80.26-5.219-120.375-1.646-33.906-3.453-67.81-5.913-101.667-1.785-24.569-3.74-49.203-7.411-73.575-1.033-6.853-2.139-13.791-4.125-20.444-1.554-5.203-3.753-11.15-8.772-13.97-15.343-8.617-20.666 14.9-22.534 24.755-4.119 21.725-5.916 43.964-7.708 65.977-2.614 32.124-4.451 64.312-6.115 96.497-2.020 39.055-3.704 78.126-5.306 117.2-1.724 42.064-3.333 84.133-4.991 126.199-1.604 40.685-3.244 81.369-5.116 122.043-1.63 35.405-3.407 70.808-5.736 106.174-1.723 26.149-3.583 52.345-6.862 78.353-0.131 1.040-0.271 2.079-0.404 3.118 0 0 0 0 0 0.001-0.099 0.688-0.192 1.377-0.289 2.065-0.204 1.429-0.43 2.854-0.65 4.281-0.138-0.89-0.286-1.78-0.417-2.671-0.159-1.085-0.31-2.17-0.465-3.255 0.016 0.129 0.032 0.256 0.050 0.407-0.081-0.65-0.173-1.3-0.257-1.95-0.326-2.512-0.633-5.025-0.927-7.541-1.418-12.151-2.533-24.337-3.534-36.529-2.637-32.124-4.481-64.314-6.152-96.501-2.024-38.999-3.711-78.016-5.312-117.036-1.719-41.898-3.323-83.799-4.974-125.7-1.61-40.878-3.254-81.757-5.13-122.624-1.63-35.486-3.404-70.971-5.727-106.419-1.718-26.202-3.576-52.447-6.818-78.511-1.135-9.126-2.336-18.286-4.258-27.287-1.135-5.314-2.467-11.068-5.315-15.763-4.181-6.891-13.11-9.217-19.221-3.194-3.86 3.804-5.504 9.621-6.803 14.72-4.774 18.739-6.251 38.533-8.030 57.728-2.796 30.184-4.656 60.456-6.34 90.72-2.121 38.114-3.84 76.248-5.452 114.386-1.761 41.658-3.372 83.322-5.001 124.985-1.615 41.269-3.237 82.538-5.048 123.8-1.621 36.948-3.371 73.894-5.592 110.812-1.702 28.289-3.572 56.597-6.573 84.782-0.558 5.235-1.177 10.461-1.845 15.683 0.011-0.079 0.022-0.145 0.035-0.231-0.027 0.177-0.049 0.356-0.074 0.534-0.001 0.009-0.002 0.017-0.004 0.027-0.050 0.372-0.101 0.744-0.154 1.116-0.163 1.145-0.325 2.291-0.495 3.435-0.107 0.718-0.23 1.434-0.342 2.15-0.261-1.725-0.51-3.45-0.753-5.173-0.067-0.479-0.131-0.959-0.199-1.438-0.155-1.201-0.312-2.402-0.463-3.603-0.322-2.586-0.627-5.172-0.919-7.762-0.657-5.843-1.247-11.694-1.795-17.549-2.81-30.036-4.672-60.162-6.357-90.28-2.129-38.026-3.849-76.076-5.462-114.128-1.771-41.791-3.388-83.588-5.022-125.384-1.615-41.297-3.237-82.592-5.044-123.88-1.616-36.896-3.356-73.79-5.561-110.656-1.706-28.532-3.579-57.083-6.58-85.513-1.726-16.346-2.705-34.228-8.3-49.851-2.212-6.176-5.936-12.914-13.46-13.014-7.42-0.1-11.239 6.317-13.522 12.375-2.162 5.738-3.235 11.923-4.26 17.945-1.749 10.281-2.999 20.653-4.112 31.019-3.013 28.065-4.883 56.256-6.586 84.427-2.219 36.695-3.964 73.419-5.581 110.145-1.822 41.382-3.451 82.772-5.071 124.163-1.631 41.682-3.241 83.363-4.999 125.040-1.606 38.071-3.318 76.139-5.423 114.186-1.688 30.504-3.551 61.015-6.349 91.44-0.546 5.935-1.132 11.867-1.785 17.792-0.29 2.631-0.593 5.261-0.913 7.889-0.147 1.203-0.297 2.405-0.451 3.607-0.072 0.564-0.148 1.127-0.22 1.691-0.005 0.034-0.008 0.055-0.013 0.092-0.305 2.13-0.613 4.263-0.939 6.394-0.040-0.254-0.085-0.506-0.124-0.76-0.161-1.053-0.317-2.108-0.468-3.163-0.144-1.001-0.706-5.407-0.239-1.644-0.635-5.116-1.287-10.227-1.843-15.352-3.045-28.027-4.918-56.184-6.628-84.319-2.225-36.621-3.972-73.272-5.59-109.925-1.819-41.196-3.443-82.4-5.056-123.604-1.638-41.857-3.253-83.714-5.016-125.565-1.606-38.134-3.316-76.265-5.416-114.376-1.682-30.518-3.538-61.043-6.311-91.484-1.782-19.569-3.315-39.666-7.987-58.806-1.28-5.24-2.864-11.466-6.813-15.397-6.036-6.008-14.824-4.238-19.225 2.647-2.838 4.44-4.177 9.982-5.305 15.073-1.953 8.806-3.142 17.785-4.28 26.725-3.279 25.761-5.133 51.712-6.852 77.615-2.35 35.4-4.133 70.838-5.769 106.278-1.876 40.637-3.517 81.284-5.12 121.932-1.654 41.921-3.257 83.844-4.97 125.763-1.606 39.283-3.295 78.563-5.318 117.826-1.663 32.285-3.498 64.572-6.102 96.797-0.997 12.349-2.109 24.693-3.515 37.002-0.292 2.558-0.598 5.115-0.923 7.671-0.148 1.166-0.311 2.331-0.455 3.499 0.467-3.762-0.095 0.643-0.239 1.644-0.186 1.29-0.39 2.578-0.59 3.867-0.158-1.020-0.328-2.039-0.477-3.062-0.159-1.091-0.308-2.185-0.465-3.276-0.003-0.017-0.004-0.026-0.006-0.042-0.066-0.507-0.134-1.015-0.199-1.522-3.301-25.586-5.152-51.369-6.872-77.101-2.359-35.289-4.145-70.615-5.783-105.943-1.889-40.744-3.536-81.498-5.145-122.253-1.655-41.929-3.258-83.861-4.97-125.788-1.6-39.2-3.282-78.398-5.291-117.579-1.668-32.521-3.506-65.044-6.113-97.506-1.786-22.252-3.61-44.699-7.643-66.679-1.762-9.6-4.304-27.136-17.119-27.405-10.133-0.213-11.844 12.807-5.157 17.388-0.058-0.165-0.097-0.342-0.106-0.521 0.011 0.020 0.019 0.038 0.029 0.058 0.026 0.152 0.076 0.323 0.138 0.506 0.094 0.064 0.181 0.132 0.279 0.192 0.471 0.829 0.169 0.704-0.121 0.229 0.292 0.716 0.695 1.494 0.824 1.903 2.043 6.499 3.142 13.321 4.178 20.039 0.341 2.211 0.576 4.447 0.962 6.649-0.545-3.115 0.007 0.053 0.175 1.374 0.164 1.282 0.323 2.564 0.479 3.847 0.685 5.648 1.292 11.306 1.855 16.967 1.319 13.271 2.394 26.566 3.367 39.866 2.467 33.765 4.276 67.578 5.923 101.392 1.952 40.070 3.618 80.153 5.224 120.238 1.682 41.99 3.282 83.982 4.963 125.972 1.605 40.13 3.271 80.26 5.219 120.375 1.646 33.905 3.453 67.81 5.913 101.666 1.784 24.569 3.739 49.203 7.41 73.575 1.033 6.853 2.139 13.791 4.125 20.444 1.553 5.203 3.752 11.15 8.772 13.97 15.343 8.617 20.666-14.901 22.534-24.755 4.118-21.726 5.916-43.964 7.707-65.977 2.614-32.124 4.45-64.312 6.114-96.497 2.020-39.055 3.704-78.126 5.305-117.2 1.724-42.064 3.332-84.133 4.991-126.199 1.604-40.685 3.244-81.369 5.116-122.043 1.63-35.405 3.406-70.808 5.736-106.174 1.723-26.149 3.583-52.345 6.861-78.353 0.131-1.040 0.271-2.079 0.404-3.119 0.099-0.688 0.192-1.377 0.289-2.065 0.204-1.427 0.429-2.852 0.65-4.276 0.137 0.889 0.285 1.777 0.416 2.666 0.159 1.085 0.31 2.17 0.465 3.255-0.016-0.129-0.032-0.256-0.050-0.407 0.081 0.65 0.173 1.3 0.257 1.95 0.326 2.512 0.633 5.025 0.927 7.541 1.418 12.151 2.533 24.337 3.534 36.529 2.637 32.124 4.481 64.314 6.152 96.502 2.024 38.999 3.711 78.016 5.312 117.036 1.719 41.898 3.322 83.799 4.973 125.7 1.61 40.878 3.254 81.757 5.13 122.624 1.629 35.486 3.404 70.971 5.727 106.419 1.717 26.202 3.575 52.447 6.817 78.511 1.135 9.126 2.336 18.286 4.258 27.287 1.135 5.314 2.467 11.068 5.315 15.763 4.181 6.891 13.11 9.217 19.221 3.194 3.86-3.804 5.504-9.621 6.803-14.72 4.774-18.739 6.252-38.533 8.030-57.728 2.796-30.184 4.655-60.456 6.34-90.72 2.121-38.114 3.84-76.248 5.452-114.386 1.761-41.658 3.372-83.322 5.001-124.985 1.615-41.269 3.237-82.538 5.048-123.8 1.621-36.948 3.371-73.894 5.592-110.812 1.702-28.289 3.572-56.598 6.573-84.782 0.558-5.235 1.177-10.462 1.844-15.683-0.011 0.079-0.022 0.145-0.035 0.231 0.027-0.177 0.049-0.356 0.074-0.534 0.001-0.009 0.002-0.016 0.003-0.025 0.051-0.373 0.101-0.745 0.154-1.117 0.163-1.145 0.325-2.291 0.495-3.435 0.107-0.718 0.23-1.434 0.342-2.15 0.261 1.725 0.51 3.45 0.752 5.173 0.067 0.477 0.131 0.956 0.198 1.433 0.155 1.203 0.313 2.405 0.463 3.609 0.322 2.586 0.628 5.172 0.919 7.762 0.658 5.843 1.247 11.694 1.795 17.549 2.81 30.036 4.672 60.162 6.357 90.28 2.129 38.026 3.849 76.076 5.462 114.128 1.771 41.791 3.388 83.588 5.022 125.384 1.615 41.297 3.236 82.592 5.044 123.88 1.616 36.896 3.356 73.79 5.561 110.656 1.706 28.532 3.579 57.083 6.58 85.513 1.726 16.346 2.705 34.228 8.3 49.851 2.212 6.176 5.936 12.914 13.46 13.015 7.42 0.099 11.239-6.317 13.522-12.375 2.162-5.738 3.235-11.923 4.26-17.945 1.749-10.281 2.999-20.653 4.112-31.020 3.013-28.065 4.883-56.256 6.587-84.427 2.219-36.695 3.964-73.419 5.581-110.145 1.822-41.382 3.451-82.772 5.071-124.163 1.631-41.682 3.241-83.363 4.999-125.040 1.606-38.071 3.318-76.139 5.423-114.186 1.688-30.504 3.552-61.015 6.349-91.44 0.546-5.935 1.132-11.867 1.785-17.792 0.29-2.631 0.593-5.261 0.914-7.889 0.147-1.203 0.297-2.405 0.451-3.608 0.072-0.564 0.148-1.127 0.22-1.691 0.005-0.034 0.009-0.055 0.013-0.092 0.305-2.13 0.613-4.264 0.939-6.395 0.040 0.254 0.086 0.507 0.125 0.761 0.161 1.053 0.317 2.108 0.468 3.163 0.144 1.001 0.706 5.407 0.239 1.645 0.635 5.116 1.287 10.227 1.844 15.352 3.045 28.027 4.918 56.184 6.628 84.319 2.225 36.621 3.972 73.272 5.59 109.925 1.819 41.196 3.443 82.4 5.056 123.604 1.638 41.857 3.253 83.714 5.016 125.566 1.606 38.134 3.316 76.265 5.416 114.376 1.682 30.518 3.538 61.043 6.311 91.484 1.782 19.568 3.315 39.666 7.988 58.806 1.279 5.24 2.864 11.466 6.813 15.397 6.036 6.008 14.824 4.238 19.225-2.648 2.838-4.44 4.177-9.982 5.306-15.073 1.953-8.806 3.142-17.785 4.28-26.725 3.279-25.761 5.134-51.712 6.853-77.615 2.35-35.4 4.134-70.838 5.769-106.278 1.876-40.637 3.517-81.284 5.121-121.933 1.655-41.921 3.257-83.844 4.971-125.763 1.606-39.283 3.295-78.563 5.318-117.826 1.664-32.285 3.499-64.572 6.103-96.797 0.998-12.349 2.11-24.693 3.516-37.002 0.292-2.558 0.598-5.115 0.922-7.671 0.148-1.166 0.311-2.331 0.456-3.499-0.467 3.762 0.095-0.643 0.239-1.645 0.186-1.292 0.391-2.582 0.59-3.872 0.158 1.022 0.329 2.043 0.479 3.067 0.159 1.091 0.308 2.185 0.465 3.276 0.003 0.018 0.004 0.028 0.007 0.046 0.065 0.505 0.134 1.012 0.198 1.517 3.301 25.586 5.153 51.369 6.873 77.101 2.359 35.289 4.145 70.615 5.783 105.943 1.889 40.744 3.537 81.498 5.146 122.253 1.655 41.929 3.258 83.861 4.97 125.788 1.6 39.2 3.282 78.398 5.291 117.579 1.668 32.521 3.506 65.044 6.113 97.506 1.786 22.252 3.611 44.699 7.644 66.679 1.762 9.6 4.305 27.136 17.119 27.405 10.132 0.215 11.844-12.805 5.156-17.386zM249.032 117.762c0.001 0.001 0.001 0.001 0.002 0.002v0c-0.001-0.001-0.001-0.001-0.002-0.002zM253.318 119.855c0.313 0.034 0.631 0.061 0.962 0.067-0.343-0.007-0.659-0.032-0.962-0.067zM252.666 119.758c0.047 0.009 0.094 0.017 0.141 0.025-0.046-0.009-0.095-0.016-0.141-0.025zM319.627 871.746c-0.044-0.068-0.087-0.137-0.129-0.204 0.516 0.388 0.424 0.415 0.129 0.204zM380.106 117.246c0.169-0.289 0.292-0.519 0.279-0.548 0.044 0.093-0.088 0.307-0.279 0.548zM429.462 871.554c-0.025 0.019-0.050 0.041-0.073 0.058 0.001-0.010 0-0.019 0.002-0.033 0.024-0.015 0.055-0.035 0.082-0.052-0.003 0.008-0.008 0.020-0.011 0.027zM429.472 871.226c0.109-0.387 0.305-0.912 0.493-1.087-0.046 0.132-0.090 0.265-0.135 0.397-0.107 0.203-0.231 0.441-0.358 0.689zM429.241 871.68c-0.007 0.014-0.014 0.027-0.021 0.041-0.071 0.040-0.073 0.028 0.021-0.041zM489.088 117.583c-0.136-0.201-0.241-0.428-0.303-0.69 0.046 0.191 0.165 0.435 0.303 0.69zM560.175 871.967c0.136 0.201 0.24 0.428 0.303 0.69-0.046-0.191-0.166-0.435-0.303-0.69zM619.433 119.013c0.107-0.202 0.23-0.441 0.358-0.688-0.109 0.387-0.305 0.912-0.493 1.087 0.046-0.133 0.090-0.265 0.135-0.398zM619.789 118.024c0.004-0.008 0.009-0.021 0.011-0.027 0.024-0.019 0.050-0.041 0.073-0.057-0.001 0.010 0 0.018-0.002 0.032-0.023 0.015-0.055 0.035-0.082 0.052zM620.023 117.87c0.007-0.014 0.013-0.027 0.021-0.041 0.070-0.041 0.073-0.028-0.021 0.041zM669.159 872.304c-0.169 0.289-0.293 0.519-0.279 0.548-0.044-0.093 0.087-0.307 0.279-0.548zM729.645 117.804c0.044 0.068 0.087 0.137 0.129 0.204-0.516-0.388-0.424-0.415-0.129-0.204zM800.245 871.788c-0.001-0.001-0.001-0.001-0.002-0.002v0c-0 0.001 0.001 0.001 0.002 0.002zM795.959 869.695c-0.313-0.034-0.631-0.061-0.962-0.067 0.342 0.007 0.658 0.032 0.962 0.067zM796.609 869.792c-0.047-0.009-0.094-0.017-0.141-0.025 0.047 0.009 0.096 0.015 0.141 0.025z","M673.947 843.196c0 0.001 0 0.001 0 0.002-0.343-2.757-0.109-0.768 0-0.002z","M375.317 146.354c0-0.001 0-0.001 0-0.002 0.343 2.757 0.11 0.768 0 0.002z","M800.154 871.201c-0.061-0.174-0.138-0.331-0.219-0.464 0.059 0.145 0.111 0.284 0.157 0.42 0.021 0.014 0.041 0.029 0.062 0.044z","M555.672 842.309c0.006-0.047 0.011-0.096 0.018-0.143-0.42 2.794-0.162 1.202-0.043 0.329 0.001-0.009 0.002-0.017 0.004-0.027 0.008-0.057 0.015-0.11 0.021-0.159z"],"grid":0,"tags":["sine-wave-small"],"defaultCode":59712},{"paths":["M444.101 722.437l101.438 99.789 189.457-0.859v-67.069h-155.842l-42.817-42.817 117.465-108-2.716-248.946 106.018-111.697-50.771-50.772-132.257 132.257 0.433 0.434h-0.904v117.452l-104.409-104.409v-182.303h-71.801v213.096h1.051l114.002 114.002-103.322 103.322-41.034-36.68h-178.738v68.016h149.565z","M380.162 677.918c31.001 12.841 45.722 48.382 32.881 79.383s-48.382 45.722-79.383 32.881c-31.001-12.841-45.722-48.382-32.881-79.383s48.382-45.722 79.383-32.881z","M189.353 853.315h645.294v15.188h-645.294v-15.188z"],"grid":0,"tags":["slippery"],"defaultCode":59713},{"paths":["M810.387 300.095c-42.968-60.096-103.307-106.335-172.658-131.877-71.946-26.499-152.389-29.261-226.096-8.269-70.785 20.16-135.012 62.154-181.778 118.997-47.898 58.218-76.955 130-82.768 205.193-5.846 75.631 12.399 152.556 51.774 217.406 38.020 62.619 94.988 113.559 161.8 143.726 70.439 31.805 149.807 40.628 225.549 25.165 72.211-14.743 139.319-52.17 190.221-105.414 51.387-53.752 86.025-123.058 97.175-196.651 2.829-18.673 4.344-37.484 4.379-56.371-0.138-75.556-23.604-150.374-67.598-211.905zM794.735 713.32c-40.189 56.624-97.98 100.842-163.235 124.611-68.656 25.007-144.534 27.866-214.826 7.834-67.676-19.287-128.248-59.419-173.016-113.64-44.854-54.327-72.358-122.682-77.657-192.922-5.441-72.108 11.463-144.725 48.91-206.644 36.243-59.929 90.473-107.901 154.176-136.937 65.774-29.979 141.311-38.221 212.083-23.773 69.245 14.137 133.024 49.461 181.853 100.538 48.981 51.236 81.242 116.973 92.1 186.999 2.697 17.393 3.867 35.020 3.899 52.614-0.132 72.049-22.574 142.551-64.286 201.321z","M433.361 399.181c0 59.434-15.070 107.615-33.659 107.615s-33.659-48.181-33.659-107.615c0-59.434 15.070-107.615 33.659-107.615s33.659 48.181 33.659 107.615z","M647.642 399.181c0 59.434-15.070 107.615-33.659 107.615s-33.659-48.181-33.659-107.615c0-59.434 15.070-107.615 33.659-107.615s33.659 48.181 33.659 107.615z","M802.875 524.81c-20.508 0-41.016 0-61.524 0-12.202 0-12.222 18.963 0 18.963 6.323 0 12.646 0 18.97 0-1.942 48.192-17.722 94.899-45.643 134.408-28.657 40.549-70.093 72.328-116.749 89.337-49.085 17.894-103.195 20.054-153.497 5.858-48.626-13.724-92.066-42.46-124.276-81.324-32.103-38.735-51.876-87.704-55.704-137.856-0.265-3.471-0.451-6.946-0.576-10.423 6.611 0 13.224 0 19.835 0 12.202 0 12.222-18.963 0-18.963-20.508 0-41.016 0-61.524 0-12.202 0-12.222 18.963 0 18.963 7.58 0 15.162 0 22.742 0 1.951 51.798 18.771 102.71 48.96 144.993 31.557 44.2 75.775 78.076 126.766 96.82 52.211 19.193 110.672 21.175 164.174 6.074 51.736-14.601 98.825-45.196 133.039-86.679 35.015-42.454 56.291-94.601 60.759-149.473 0.318-3.907 0.534-7.82 0.673-11.735 7.858 0 15.717 0 23.575 0 12.201 0 12.221-18.963-0.001-18.963z"],"grid":0,"tags":["smiley"],"defaultCode":59714},{"paths":["M339.114 772.549l159.591-137.851c23.502-20.299 37.056-49.753 37.188-80.81l1.475-348.024c0.010-2.521-0.984-4.944-2.763-6.73s-4.197-2.791-6.719-2.791h-174.491c-2.54 0-4.973 1.018-6.756 2.827s-2.764 4.258-2.726 6.798l4.141 272.3c0.39 25.591-10.314 50.073-29.368 67.163l-138.341 124.103c-18.68 16.989-29.517 41.215-29.73 66.465s10.211 49.657 28.601 66.962c17.501 16.467 39.865 24.755 62.275 24.755 21.052 0 42.146-7.318 59.273-22.042l34.112-29.465c1.024-0.448 1.989-1.075 2.835-1.903 0.55-0.539 1.011-1.132 1.402-1.758zM364.325 300.859h153.678l-0.036 8.599h-153.512l-0.13-8.599zM518.208 252.573h-154.617l-0.157-10.36h154.818l-0.044 10.36zM518.127 271.536l-0.044 10.36h-154.048l-0.157-10.36h154.249zM518.365 215.306l-0.034 7.944h-155.186l-0.12-7.944h155.341zM331.352 559.548c23.14-20.757 36.139-50.486 35.666-81.567l-2.275-149.559h153.142l-0.652 153.952c-0.267 0.125-0.533 0.261-0.793 0.412-34.799 20.395-76.92 57.185-79.966 116.627-1.294 25.266 5.019 45.974 8.976 56.229l-114.128 98.58-101.422-103.667 101.451-91.007z","M870.625 199.135c-1.779-1.787-4.197-2.791-6.719-2.791h-174.49c-2.54 0-4.973 1.018-6.756 2.827s-2.764 4.258-2.726 6.798l4.141 272.3c0.39 25.591-10.314 50.073-29.368 67.163l-138.342 124.102c-18.68 16.989-29.517 41.215-29.73 66.465s10.211 49.657 28.6 66.962c17.502 16.467 39.865 24.755 62.275 24.755 21.053 0 42.146-7.318 59.273-22.042l34.112-29.465c1.024-0.448 1.989-1.075 2.835-1.903 0.551-0.539 1.012-1.132 1.403-1.758l159.591-137.851c23.502-20.299 37.056-49.753 37.188-80.81l1.475-348.024c0.009-2.52-0.985-4.943-2.764-6.729zM700.344 300.859h153.678l-0.036 8.599h-153.511l-0.131-8.599zM854.226 252.573h-154.616l-0.157-10.36h154.818l-0.045 10.36zM854.146 271.536l-0.044 10.36h-154.047l-0.157-10.36h154.248zM854.384 215.306l-0.034 7.944h-155.186l-0.12-7.944h155.341zM667.371 559.548c23.14-20.757 36.139-50.486 35.666-81.567l-2.275-149.559h153.142l-0.652 153.953c-0.267 0.125-0.533 0.26-0.793 0.412-34.799 20.395-76.92 57.185-79.966 116.627-1.294 25.266 5.019 45.974 8.976 56.229l-114.127 98.579-101.423-103.667 101.451-91.007z"],"grid":0,"tags":["socks"],"defaultCode":59715},{"paths":["M830.258 663.349c15.909 7.050 31.818 14.101 47.727 21.151v-20.616c-6.885-3.051-13.769-6.102-20.654-9.153-16.331-7.237-32.663-14.475-48.994-21.713 9.36-22.829 16.083-46.74 19.821-71.198 2.026-13.264 3.288-26.605 3.73-40 11.195 0 22.389 0 33.583 0 4.171 0 8.342 0 12.514 0v-18.963c-15.358 0-30.715 0-46.073 0-1.012-33.155-7.131-66.021-18.064-97.208 10.11-3.901 20.22-7.801 30.33-11.703 11.269-4.348 22.537-8.696 33.807-13.045v-20.231c-6.995 2.699-13.992 5.399-20.987 8.098-16.638 6.42-33.277 12.84-49.915 19.26-8.995-21.506-20.343-42.047-33.966-61.121-8.652-12.115-18.115-23.577-28.285-34.331 7.909-7.909 15.817-15.817 23.726-23.726 33.146-33.146 66.294-66.294 99.44-99.44 3.309-3.309 6.645-6.6 9.988-9.887v-13.509h-13.409c-0.248 0.248-0.497 0.497-0.745 0.745-31.716 31.715-63.43 63.43-95.146 95.146-12.426 12.426-24.853 24.854-37.28 37.28-24.015-22.596-51.395-41.478-81.177-55.836 4.374-9.869 8.748-19.739 13.121-29.608 7.050-15.909 14.101-31.818 21.151-47.727h-20.616c-3.051 6.885-6.102 13.769-9.153 20.654-7.237 16.332-14.475 32.663-21.713 48.995-3.867-1.592-7.769-3.112-11.706-4.553-31.839-11.657-65.582-17.985-99.492-19.010 0-11.079 0-22.159 0-33.238 0-4.282 0-8.564 0-12.846h-18.963c0 15.355 0 30.71 0 46.065-26.509 0.746-52.923 4.727-78.408 11.966-6.343 1.801-12.624 3.814-18.837 6.011-3.888-10.078-7.777-20.157-11.666-30.235-4.348-11.269-8.696-22.538-13.044-33.807h-20.231c2.699 6.995 5.399 13.992 8.098 20.987 6.414 16.624 12.828 33.249 19.243 49.873-35.202 14.849-67.716 36.010-95.524 62.205-7.879-7.879-15.758-15.758-23.637-23.637-33.146-33.146-66.294-66.294-99.44-99.44-3.309-3.309-6.6-6.645-9.887-9.988h-13.512v13.409c0.248 0.248 0.497 0.497 0.745 0.745 31.716 31.716 63.43 63.43 95.146 95.146 12.391 12.391 24.784 24.784 37.175 37.175-4.644 4.933-9.139 10.010-13.455 15.239-16.776 20.327-30.911 42.544-42.181 66.085-9.901-4.388-19.802-8.775-29.703-13.163-15.909-7.050-31.818-14.101-47.727-21.151v20.616c6.885 3.051 13.769 6.102 20.654 9.153 16.378 7.258 32.757 14.516 49.135 21.775-12.508 30.594-20.318 63.103-22.922 96.403-0.401 5.132-0.66 10.271-0.809 15.412-11.071 0-22.141 0-33.212 0-4.282 0-8.564 0-12.846 0v18.963c15.36 0 30.72 0 46.079 0 1.021 32.873 7.135 65.533 18.020 96.543-10.098 3.896-20.195 7.792-30.292 11.688-11.269 4.348-22.538 8.696-33.807 13.044v20.231c6.995-2.699 13.992-5.399 20.987-8.098 16.629-6.416 33.257-12.832 49.886-19.248 6.047 14.441 13.149 28.449 21.296 41.859 11.702 19.259 25.464 37.253 40.923 53.643-7.889 7.889-15.776 15.776-23.665 23.665-33.146 33.146-66.294 66.294-99.44 99.44-3.309 3.309-6.645 6.6-9.988 9.887v13.51h13.409c0.248-0.248 0.497-0.497 0.745-0.745 31.716-31.716 63.43-63.43 95.146-95.146 12.401-12.401 24.802-24.802 37.202-37.202 23.996 22.637 51.429 41.619 81.225 55.826-4.364 9.847-8.728 19.694-13.092 29.541-7.050 15.909-14.101 31.818-21.151 47.727h20.616c3.051-6.885 6.102-13.769 9.153-20.654 7.241-16.339 14.482-32.678 21.723-49.017 35.662 14.457 73.617 22.35 111.867 23.487 0 11.223 0 22.447 0 33.671 0 4.171 0 8.343 0 12.514h18.963c0-15.392 0-30.784 0-46.176 18.301-0.527 36.595-2.596 54.663-6.254 14.23-2.88 28.233-6.779 41.903-11.61 3.888 10.078 7.777 20.156 11.665 30.234 4.348 11.269 8.696 22.538 13.044 33.807h20.231c-2.699-6.995-5.399-13.992-8.098-20.987-6.414-16.624-12.828-33.248-19.243-49.872 35.191-14.842 67.717-35.996 95.531-62.199 7.877 7.877 15.753 15.753 23.631 23.631 33.146 33.146 66.294 66.294 99.44 99.44 3.309 3.309 6.6 6.645 9.887 9.988h13.512v-13.409c-0.248-0.248-0.497-0.497-0.745-0.745-31.716-31.716-63.43-63.43-95.146-95.146-12.39-12.39-24.782-24.782-37.172-37.172 22.631-24.042 41.477-51.563 55.753-81.273 9.861 4.368 19.722 8.738 29.583 13.108zM790.921 625.301c-27.462-12.17-54.924-24.341-82.386-36.51-3.009-1.334-6.020-2.668-9.029-4.001 5.191-13.231 8.97-27.085 11.13-41.361 1.086-7.176 1.838-14.376 2.218-21.605 33.356 0 66.713 0 100.069 0-1.23 35.645-8.719 70.677-22.001 103.478zM647.406 633.997c-26.613-26.613-53.224-53.224-79.837-79.837-4.257-4.257-8.486-8.553-12.711-12.859 1.196 0.53 2.39 1.059 3.586 1.589 38.68 17.142 77.36 34.283 116.040 51.425-4.148 8.229-8.925 16.176-14.318 23.767-3.933 5.538-8.2 10.853-12.76 15.915zM390.091 647.318c26.583-26.583 53.166-53.166 79.749-79.749 4.257-4.257 8.553-8.486 12.859-12.711-0.53 1.195-1.059 2.39-1.589 3.586-17.147 38.693-34.295 77.386-51.442 116.079-14.309-7.289-27.617-16.458-39.577-27.205zM371.060 627.507c-10.468-12.632-18.94-26.529-25.409-41.207 34.8-13.427 69.599-26.854 104.398-40.281 7.854-3.030 15.716-6.041 23.577-9.052-2.65 2.651-5.301 5.301-7.951 7.951-29.674 29.674-59.347 59.347-89.022 89.022-1.91-2.101-3.777-4.242-5.592-6.432zM633.696 376.896c-26.512 26.512-53.023 53.023-79.535 79.535-4.257 4.257-8.553 8.486-12.859 12.711 0.53-1.195 1.059-2.39 1.589-3.586 17.126-38.646 34.253-77.29 51.379-115.936 14.335 7.357 27.58 16.558 39.426 27.275zM678.173 437.768c-34.74 13.404-69.481 26.809-104.221 40.213-7.854 3.030-15.716 6.041-23.577 9.052 2.65-2.65 5.301-5.301 7.951-7.951 29.587-29.587 59.173-59.173 88.76-88.76 12.667 14.059 23.204 30.055 31.087 47.446zM692.151 484.33c0.97 6.13 1.528 12.324 1.806 18.529-37.517 0-75.035 0-112.553 0-6.387 0-12.784-0.056-19.185-0.119 1.527-0.589 3.054-1.179 4.581-1.767 39.42-15.21 78.841-30.42 118.262-45.631 3.126 9.37 5.517 19.055 7.089 28.989zM531.813 444.035c-3.323 7.499-6.657 14.993-9.991 22.487 0-3.378 0-6.757 0-10.135 0-42.112 0-84.224 0-126.336 8.924 0.457 17.867 1.582 26.758 3.425 9.81 2.034 19.328 4.872 28.495 8.427-15.088 34.044-30.175 68.088-45.262 102.132zM502.858 443.334c0 6.148-0.051 12.305-0.112 18.466-0.592-1.533-1.183-3.066-1.775-4.599-15.187-39.363-30.376-78.727-45.564-118.090 15.287-5.058 31.25-8.136 47.45-9.028 0.001 37.751 0.001 75.501 0.001 113.252zM477.981 450.048c3.030 7.854 6.041 15.716 9.052 23.577-2.65-2.651-5.301-5.301-7.951-7.951-29.636-29.636-59.272-59.272-88.908-88.908 14.225-12.693 30.345-23.073 47.641-30.818 13.389 34.699 26.778 69.4 40.166 104.1zM456.431 469.84c4.257 4.257 8.486 8.553 12.711 12.859-1.196-0.53-2.39-1.059-3.586-1.589-38.692-17.147-77.384-34.295-116.076-51.441 2.009-3.987 4.169-7.913 6.493-11.764 6.040-10.009 13.003-19.295 20.728-27.794 26.577 26.576 53.153 53.152 79.73 79.729zM444.035 492.187c8.008 3.549 16.011 7.11 24.016 10.67-3.887 0-7.776 0-11.663 0-42.016 0-84.032 0-126.048 0 0.929-19.025 4.768-37.941 11.561-55.933 34.045 15.088 68.090 30.176 102.135 45.263zM443.334 521.821c5.576 0 11.161 0.043 16.748 0.096-0.96 0.371-1.921 0.741-2.881 1.111-39.416 15.208-78.833 30.417-118.249 45.625-4.873-15.18-7.743-30.949-8.581-46.833 37.655 0.001 75.31 0.001 112.963 0.001zM492.188 579.965c3.549-8.008 7.11-16.011 10.67-24.016 0 4.13 0 8.261 0 12.391 0 41.858 0 83.716 0 125.574-13.87-0.676-27.681-2.917-41.133-6.763-5.029-1.438-9.976-3.102-14.838-4.968 15.099-34.073 30.199-68.145 45.3-102.218zM521.821 581.403c0-5.816 0.046-11.64 0.102-17.469 0.368 0.955 0.737 1.91 1.105 2.863 15.225 39.459 30.45 78.918 45.675 118.377-15.223 4.919-31 7.834-46.882 8.694 0-37.488 0-74.977 0-112.466zM546.019 573.952c-3.030-7.854-6.041-15.715-9.052-23.577 2.65 2.65 5.301 5.301 7.951 7.951 29.69 29.69 59.381 59.381 89.071 89.071-14.152 12.745-30.313 23.309-47.656 31.038-13.438-34.827-26.876-69.655-40.314-104.483zM579.965 531.813c-7.499-3.323-14.993-6.657-22.487-9.991 3.621 0 7.242 0 10.863 0 41.846 0 83.69 0 125.536 0-1.072 19.004-5.061 37.623-11.783 55.251-34.043-15.088-68.087-30.175-102.129-45.261zM809.674 465.936c1.918 12.213 2.939 24.563 3.289 36.923-30.339 0-60.677 0-91.016 0-3.018 0-6.035 0-9.053 0-0.89-18.498-4.285-36.832-10.081-54.367 31.119-12.007 62.239-24.015 93.358-36.021 6.093 17.323 10.636 35.222 13.502 53.465zM789.371 394.864c-28.072 10.832-56.145 21.663-84.216 32.494-3.033 1.17-6.065 2.34-9.098 3.51-5.392-12.294-12.025-24.054-19.876-35.030-4.793-6.702-9.973-13.079-15.493-19.117 23.608-23.608 47.216-47.216 70.824-70.824 24.478 26.036 44.025 56.261 57.86 88.967zM718.095 292.496c-21.498 21.498-42.997 42.997-64.495 64.495-2.114 2.113-4.228 4.228-6.342 6.342-13.595-12.354-28.809-22.846-45.264-31.146 13.517-30.5 27.034-61 40.549-91.5 27.58 13.305 53.106 30.773 75.551 51.809zM572.075 216.859c18.268 3.739 36.090 9.181 53.245 16.178-12.177 27.476-24.353 54.953-36.53 82.429-1.333 3.008-2.667 6.018-4 9.027-1.388-0.545-2.782-1.080-4.185-1.595-19.068-7.004-38.909-10.828-58.783-11.692 0-33.403 0-66.807 0-100.211 16.891 0.539 33.727 2.48 50.254 5.862zM502.858 210.972c0 30.475 0 60.951 0 91.427 0 2.958 0 5.917 0 8.876-18.46 0.936-36.745 4.384-54.259 10.191-12.063-31.264-24.127-62.529-36.19-93.794 29.026-10.164 59.675-15.767 90.449-16.7zM387.819 237.55c2.313-1.057 4.647-2.073 6.988-3.067 10.851 28.121 21.7 56.242 32.551 84.363 1.206 3.125 2.412 6.25 3.617 9.375-19.753 8.631-38.174 20.394-54.321 35.024-23.571-23.571-47.142-47.142-70.713-70.713 24.049-22.551 51.737-41.207 81.878-54.982zM254.558 355.731c10.895-17.93 23.651-34.613 37.955-49.808 21.493 21.493 42.984 42.984 64.477 64.477 2.084 2.084 4.168 4.168 6.251 6.251-2.182 2.405-4.314 4.866-6.381 7.393-9.64 11.786-17.876 24.533-24.61 37.989-30.539-13.534-61.079-27.068-91.618-40.602 4.207-8.767 8.849-17.346 13.925-25.701zM233.024 398.674c27.48 12.178 54.96 24.357 82.441 36.535 3.047 1.35 6.095 2.701 9.142 4.051-7.201 18.503-11.694 38.067-13.199 58.136-0.137 1.819-0.238 3.64-0.323 5.461-33.334 0-66.668 0-100.003 0 1.15-35.755 8.555-71.083 21.943-104.183zM211.793 535.897c-0.357-4.691-0.592-9.384-0.732-14.076 30.446 0 60.892 0 91.339 0 2.903 0 5.806 0 8.709 0 0.896 18.247 4.296 36.361 10.047 53.699-31.139 12.015-62.279 24.030-93.418 36.045-8.551-24.402-13.983-49.892-15.944-75.668zM279.431 703.341c-18.507-22.335-33.624-47.44-44.905-74.165 28.107-10.845 56.214-21.689 84.32-32.534 3.027-1.168 6.056-2.336 9.083-3.505 3.405 7.745 7.294 15.278 11.67 22.529 6.813 11.291 14.762 21.908 23.653 31.673-23.584 23.585-47.169 47.169-70.754 70.754-4.504-4.772-8.869-9.686-13.066-14.751zM305.93 731.478c21.49-21.49 42.98-42.98 64.469-64.469 2.086-2.086 4.171-4.171 6.257-6.257 13.594 12.394 28.858 22.946 45.317 31.133-13.513 30.491-27.026 60.983-40.538 91.474-27.608-13.348-53.093-30.899-75.505-51.882zM429.491 801.669c-10.492-2.98-20.782-6.547-30.837-10.649 12.185-27.495 24.37-54.991 36.555-82.486 1.34-3.024 2.68-6.048 4.020-9.072 20.425 7.845 41.918 12.319 63.627 13.334 0 33.376 0 66.752 0 100.128-24.746-0.725-49.421-4.454-73.366-11.255zM521.821 812.895c0-30.315 0-60.631 0-90.946 0-3.048 0-6.098 0-9.146 10.214-0.474 20.421-1.71 30.535-3.735 7.889-1.58 15.625-3.657 23.178-6.186 12.011 31.13 24.022 62.259 36.033 93.389-28.942 10.055-59.268 15.622-89.747 16.624zM629.187 789.504c-10.849-28.116-21.697-56.233-32.545-84.35-1.173-3.041-2.347-6.081-3.52-9.121 19.834-8.847 38.079-20.912 54.031-35.47 23.664 23.664 47.328 47.328 70.992 70.992-25.952 24.345-56.215 44.144-88.958 57.95zM757.105 687.014c-7.781 10.943-16.331 21.347-25.539 31.143-21.518-21.518-43.037-43.037-64.556-64.556-2.15-2.15-4.3-4.3-6.45-6.45 12.361-13.557 22.917-28.758 31.233-45.165 30.504 13.519 61.008 27.036 91.511 40.555-7.418 15.475-16.165 30.363-26.199 44.473z"],"grid":0,"tags":["spiderweb"],"defaultCode":59716},{"paths":["M571.497 450.957h-98.021l-203.385 435.867h98.022l48.72-104.409h212.727l48.72 104.409h98.022l-203.386-435.867h-1.418zM457.473 695.32l65.723-140.848 65.723 140.848h-131.446z","M204.973 461.112l56.396-35.544 73.822 117.13-56.396 35.544-73.822-117.13z","M83.41 736.137l129.244-49.663 23.911 62.228-129.244 49.663-23.911-62.228z","M139.809 246.296l23.792-62.269 129.327 49.413-23.792 62.269-129.327-49.413z","M733.281 362.109l52.529-41.043 85.245 109.1-52.529 41.043-85.245-109.1z","M789.489 732.697l133.592-36.357 17.505 64.322-133.592 36.357-17.505-64.322z","M504.203 217.421l112.838-80.219 38.624 54.329-112.838 80.219-38.624-54.329z"],"grid":0,"tags":["stad-antwerpen-weird"],"defaultCode":59717},{"paths":["M538.572 559.287c53.271 63.485 106.541 126.97 159.811 190.455 15.732 18.748 31.463 37.495 47.194 56.243 4.949-3.938 9.797-7.997 14.539-12.174-69.006-82.239-138.012-164.476-207.018-246.714 71.771 41.437 143.542 82.874 215.313 124.311 21.255 12.271 42.508 24.543 63.763 36.814 3.304-5.38 6.479-10.849 9.515-16.404-93.036-53.714-186.072-107.429-279.108-161.143 81.615 14.391 163.229 28.782 244.845 43.173 24.207 4.269 48.414 8.536 72.621 12.805 1.245-6.172 2.339-12.4 3.277-18.678-105.817-18.659-211.633-37.316-317.45-55.975 81.616-14.391 163.23-28.782 244.845-43.173 24.201-4.268 48.404-8.535 72.605-12.802-0.938-6.278-2.032-12.505-3.277-18.678-105.822 18.66-211.644 37.318-317.467 55.978 71.771-41.437 143.542-82.874 215.313-124.311 21.265-12.278 42.53-24.555 63.796-36.833-3.036-5.555-6.21-11.023-9.515-16.404-93.026 53.708-186.051 107.417-279.076 161.125 53.271-63.485 106.541-126.97 159.811-190.455 15.735-18.752 31.471-37.506 47.206-56.258-4.742-4.178-9.59-8.237-14.539-12.174-69.001 82.233-138.003 164.466-207.005 246.699 28.345-77.876 56.69-155.752 85.034-233.628 8.359-22.966 16.718-45.933 25.078-68.899-5.873-2.296-11.819-4.448-17.832-6.453-36.7 100.832-73.399 201.663-110.099 302.494 0-82.874 0-165.748 0-248.622 0-24.325 0-48.649 0-72.974-2.91-0.066-5.827-0.105-8.752-0.105-3.414 0-6.817 0.048-10.211 0.139 0 107.187 0 214.374 0 321.562-28.345-77.876-56.689-155.752-85.034-233.628-8.303-22.811-16.606-45.623-24.909-68.435-6.006 2.027-11.942 4.202-17.807 6.519 36.643 100.676 73.286 201.353 109.929 302.030-53.271-63.485-106.541-126.97-159.811-190.455-15.536-18.516-31.074-37.032-46.61-55.548-4.938 3.952-9.776 8.023-14.505 12.215 68.8 81.993 137.6 163.985 206.4 245.978-71.771-41.437-143.542-82.874-215.313-124.311-20.896-12.064-41.792-24.128-62.689-36.193-3.294 5.386-6.459 10.86-9.483 16.421 92.668 53.502 185.336 107.004 278.005 160.505-81.616-14.391-163.23-28.782-244.845-43.173-23.738-4.186-47.476-8.371-71.214-12.557-1.241 6.173-2.331 12.402-3.264 18.68 105.344 18.577 210.687 37.151 316.030 55.726-81.616 14.391-163.23 28.782-244.845 43.173-23.728 4.184-47.457 8.367-71.185 12.552 0.934 6.279 2.023 12.507 3.264 18.679 105.353-18.576 210.706-37.153 316.059-55.729-71.771 41.437-143.542 82.874-215.313 124.311-20.897 12.065-41.793 24.129-62.691 36.195 3.026 5.561 6.19 11.035 9.483 16.421 92.667-53.501 185.335-107.002 278.002-160.504-53.271 63.485-106.542 126.97-159.811 190.455-15.53 18.508-31.059 37.015-46.589 55.523 4.729 4.192 9.567 8.263 14.505 12.215 68.807-82.002 137.614-164.003 206.421-246.005-28.345 77.876-56.69 155.752-85.034 233.628-8.298 22.8-16.597 45.6-24.896 68.401 5.864 2.318 11.802 4.493 17.807 6.519 36.647-100.688 73.295-201.375 109.942-302.064 0 82.874 0 165.748 0 248.622 0 24.313 0 48.627 0 72.94 3.392 0.090 6.795 0.139 10.211 0.139 2.926 0 5.843-0.039 8.752-0.105 0-107.199 0-214.397 0-321.596 28.345 77.876 56.69 155.752 85.035 233.628 8.355 22.956 16.71 45.91 25.065 68.866 6.013-2.005 11.958-4.157 17.832-6.453-36.705-100.841-73.408-201.683-110.112-302.526z"],"grid":0,"tags":["star"],"defaultCode":59718},{"paths":["M512 155.496c-196.891 0-356.504 159.612-356.504 356.504s159.612 356.504 356.504 356.504 356.504-159.612 356.504-356.504-159.612-356.504-356.504-356.504zM212.744 576.948c0-43.299 0-86.597 0-129.896 202.784 129.896 405.568-129.896 608.353 0 0 43.299 0 86.597 0 129.896-202.784-129.896-405.568 129.896-608.353 0z"],"grid":0,"tags":["stop"],"defaultCode":59719},{"paths":["M763.083 274.326c32.568-32.568 65.135-65.135 97.703-97.702 3.185-3.186 6.396-6.354 9.614-9.518v-13.506h-13.409c-0.269 0.269-0.539 0.539-0.809 0.809-30.992 30.992-61.984 61.984-92.976 92.976-37.461 37.461-74.923 74.923-112.384 112.384-2.095 2.095-4.191 4.191-6.286 6.286-1.646-1.489-3.317-2.956-5.021-4.392-12.073-10.164-25.225-18.791-39.16-25.774 19.953-45.023 39.906-90.047 59.858-135.069 6.976-15.74 13.95-31.479 20.926-47.219h-20.616c-2.977 6.717-5.953 13.434-8.931 20.151-21.465 48.435-42.93 96.87-64.395 145.306-1.359 3.064-2.716 6.13-4.075 9.195-17.283-6.698-35.515-10.995-54.22-12.666-2.36-0.211-4.724-0.373-7.089-0.495 0-49.524 0-99.047 0-148.571 0-4.306 0-8.614 0-12.92h-18.963c0 50.935 0 101.868 0 152.803 0 2.882 0 5.764 0 8.646-17.982 0.839-35.846 4.167-52.938 9.822-17.727-45.943-35.453-91.884-53.179-137.826-4.302-11.148-8.603-22.296-12.904-33.444h-20.231c2.653 6.877 5.307 13.753 7.96 20.63 19.071 49.427 38.142 98.854 57.213 148.281 1.175 3.045 2.35 6.092 3.525 9.137-7.285 3.211-14.376 6.86-21.213 10.944-11.275 6.736-21.875 14.626-31.61 23.473-35.049-35.049-70.099-70.099-105.149-105.149-32.568-32.568-65.135-65.135-97.702-97.703-3.186-3.185-6.354-6.396-9.518-9.614h-13.504v13.409c0.269 0.269 0.539 0.539 0.809 0.809 30.992 30.992 61.984 61.984 92.976 92.976 37.461 37.461 74.923 74.923 112.384 112.384 2.097 2.096 4.195 4.194 6.291 6.291-12.053 13.245-22.319 28.107-30.3 44.12-44.98-19.934-89.961-39.868-134.941-59.802-15.74-6.976-31.479-13.95-47.219-20.926v20.616c6.717 2.977 13.434 5.953 20.151 8.931 48.435 21.465 96.87 42.93 145.306 64.395 3.045 1.349 6.089 2.698 9.134 4.048-7.627 19.917-11.992 40.847-13 62.002-49.557 0-99.114 0-148.67 0-4.306 0-8.614 0-12.92 0v18.963c50.935 0 101.868 0 152.803 0 2.929 0 5.857 0 8.786 0 0.435 9.194 1.5 18.387 3.214 27.513 1.585 8.44 3.751 16.71 6.441 24.769-45.933 17.723-91.866 35.446-137.799 53.168-11.148 4.302-22.296 8.603-33.444 12.904v20.231c6.877-2.653 13.753-5.307 20.63-7.96 49.427-19.071 98.854-38.142 148.281-57.213 3.062-1.181 6.122-2.362 9.183-3.543 8.639 19.313 20.387 37.093 34.558 52.654-35.112 35.112-70.224 70.223-105.335 105.335-32.568 32.568-65.135 65.135-97.703 97.702-3.185 3.186-6.396 6.354-9.614 9.518v13.504h13.409c0.269-0.269 0.539-0.539 0.809-0.809 30.992-30.992 61.984-61.984 92.976-92.976 37.461-37.461 74.923-74.923 112.384-112.384 2.161-2.161 4.322-4.322 6.482-6.482 13.203 12.020 28.004 22.287 43.969 30.4-19.947 45.010-39.894 90.021-59.841 135.031-6.976 15.74-13.951 31.479-20.926 47.219h20.616c2.977-6.717 5.953-13.434 8.931-20.151 21.465-48.435 42.93-96.87 64.395-145.306 1.342-3.026 2.683-6.054 4.024-9.080 12.172 4.761 24.88 8.307 37.971 10.461 7.992 1.316 16.025 2.141 24.055 2.495 0 49.817 0 99.633 0 149.449 0 4.045 0 8.089 0 12.133h18.963c0-50.974 0-101.949 0-152.924 0-2.905 0-5.81 0-8.715 17.747-0.891 35.317-4.133 52.247-9.699 17.735 45.965 35.47 91.93 53.205 137.894 4.302 11.148 8.603 22.296 12.904 33.444h20.231c-2.653-6.877-5.307-13.753-7.96-20.63-19.071-49.427-38.142-98.854-57.213-148.281-1.179-3.056-2.358-6.112-3.537-9.168 2.236-0.98 4.457-2 6.662-3.064 16.793-8.115 32.37-18.74 46.187-31.308 35.045 35.045 70.090 70.090 105.134 105.134 32.568 32.568 65.135 65.135 97.702 97.703 3.186 3.185 6.354 6.396 9.518 9.614h13.504v-13.409c-0.269-0.269-0.539-0.539-0.809-0.809-30.992-30.992-61.984-61.984-92.976-92.976-37.461-37.461-74.923-74.923-112.384-112.384-2.095-2.095-4.191-4.191-6.287-6.287 9.925-10.919 18.639-22.929 25.866-35.759 1.55-2.752 3.013-5.547 4.416-8.371 44.985 19.935 89.971 39.872 134.955 59.807 15.74 6.976 31.479 13.95 47.219 20.926v-20.616c-6.717-2.976-13.434-5.953-20.151-8.93-48.435-21.465-96.87-42.93-145.306-64.395-3.030-1.344-6.061-2.686-9.091-4.029 0.172-0.434 0.348-0.867 0.518-1.302 7.378-19.447 11.42-39.735 12.332-60.053 49.856 0 99.711 0 149.566 0 4.045 0 8.089 0 12.133 0v-18.963c-50.974 0-101.949 0-152.924 0-2.943 0-5.887 0-8.831 0-0.907-17.966-4.236-35.757-9.846-52.811 46.053-17.769 92.105-35.538 138.158-53.307 11.148-4.302 22.296-8.603 33.444-12.904v-20.231c-6.877 2.653-13.753 5.307-20.63 7.96-49.427 19.071-98.854 38.142-148.281 57.213-3.141 1.212-6.281 2.424-9.423 3.635-8.398-19.226-19.843-37.173-34.118-52.946 35.044-35.045 70.089-70.090 105.134-105.135zM508.328 690.167c-73.46-1.434-140.713-49.949-164.673-119.552-12.096-35.139-13.081-73.469-2.586-109.137 10.309-35.035 31.523-66.059 59.913-88.95 58.1-46.841 142.385-51.045 205.434-11.688 63.285 39.505 95.879 116.838 79.606 189.729-1.996 8.941-4.69 17.693-7.939 26.256-26.892 68.988-95.852 114.783-169.755 113.341z"],"grid":0,"tags":["sun"],"defaultCode":59720},{"paths":["M867.081 155.97h-13.41l-311.901 311.901 138.225-311.901h-20.743l-136.969 309.068v-309.068h-18.963v304.548l-117.507-304.548h-20.325l122.013 316.227-316.227-316.227h-13.409v13.41l311.901 311.901-311.901-138.225v20.742l310.555 137.628h-310.555v18.963h302.839l-302.839 116.847v20.326l316.227-122.014-316.227 316.227v13.41h13.409l311.902-311.901-138.225 311.901h20.743l137.627-310.554v310.554h18.963v-302.841l116.849 302.841h20.325l-122.013-316.226 316.226 316.226h13.41v-13.41l-311.901-311.901 311.901 138.225v-20.742l-309.067-136.969h309.067v-18.963h-304.548l304.548-117.507v-20.326l-316.227 122.014 316.227-316.227z"],"grid":0,"tags":["sunny-day"],"defaultCode":59721},{"paths":["M841.007 507.438c0-115.369-147.301-208.893-329.007-208.893s-329.007 93.524-329.007 208.893c0 69.883 54.051 131.748 137.055 169.67 0.731 2.115 2.125 4.080 4.105 4.961 92.929 41.361 201.611 48.447 300.268 25.361 26.061-6.098 51.431-14.638 75.868-25.554 2.034-0.908 3.355-2.847 4.068-4.952 82.775-37.936 136.652-99.716 136.652-169.486zM338.73 662.412c0.157-2.237 0.39-4.464 0.643-6.693 0.001-0.004 0.001-0.008 0.001-0.012-0.019 0.133-0.041 0.273-0.064 0.42 0.027-0.166 0.049-0.333 0.073-0.5 0.136-1.177 0.134-0.971 0.041-0.278 0.054-0.379 0.109-0.759 0.167-1.137 0.203-1.309 0.427-2.615 0.671-3.917 0.983-5.225 2.311-10.389 4.028-15.421 0.452-1.326 0.931-2.643 1.438-3.949 0.24-0.617 0.493-1.23 0.737-1.845 0.004-0.009 0.005-0.012 0.009-0.021 0.046-0.097 0.101-0.21 0.166-0.347 1.3-2.74 2.599-5.46 4.109-8.094 1.505-2.626 3.146-5.173 4.923-7.623 0.213-0.295 0.434-0.583 0.651-0.874 0.196-0.243 0.887-1.128 1.105-1.382 1.031-1.208 2.061-2.411 3.145-3.572 2.315-2.478 4.79-4.808 7.402-6.973 0.153-0.126 0.801-0.644 1.187-0.955 0.386-0.286 1.019-0.761 1.218-0.905 1.526-1.1 3.089-2.147 4.686-3.141 3.154-1.964 6.435-3.72 9.81-5.274 0.272-0.125 1.77-0.767 1.989-0.871 0.64-0.258 1.281-0.516 1.927-0.761 1.927-0.731 3.876-1.403 5.842-2.020 9.378-2.938 17.706-4.344 26.287-5.029 29.982-2.391 60.031 3.1 88.9 10.78 0.621 0.181 1.279 0.294 1.969 0.33 1.23 0.089 2.364-0.066 3.395-0.41 26.855-6.927 54.509-12.015 82.351-11.157 10.873 0.336 18.143 1.13 28.341 3.638 4.047 0.996 8.043 2.203 11.95 3.654 0.79 0.294 1.572 0.605 2.354 0.917 0.302 0.128 1.126 0.47 1.49 0.634 1.916 0.866 3.803 1.794 5.654 2.792 3.083 1.663 6.066 3.514 8.914 5.554 0.278 0.199 1.378 1.042 1.545 1.159 0.338 0.273 0.681 0.541 1.015 0.82 1.324 1.103 2.61 2.249 3.857 3.438 2.336 2.228 4.455 4.624 6.538 7.085 0.107 0.127 0.193 0.229 0.269 0.316 0.027 0.039 0.062 0.088 0.108 0.151 0.411 0.566 0.829 1.125 1.232 1.695 0.909 1.287 1.78 2.602 2.61 3.941 1.57 2.531 2.999 5.149 4.287 7.835 0.285 0.594 0.554 1.198 0.834 1.795 0.112 0.237 0.214 0.48 0.32 0.72 0.487 1.235 0.982 2.466 1.431 3.717 1.815 5.060 3.193 10.273 4.191 15.554 0.278 1.471 0.502 2.949 0.745 4.425 0.009 0.053 0.014 0.087 0.023 0.134 0.070 0.627 0.154 1.253 0.223 1.879 0.286 2.619 0.488 5.246 0.611 7.877 0.107 2.311 0.147 4.623 0.129 6.936-41.203 17.737-85.826 27.937-130.419 31.838-49.868 4.361-100.565 1.472-149.391-9.735-23.185-5.322-46.045-12.441-67.935-21.792 0.056-1.782 0.142-3.565 0.267-5.347zM530.303 324.275c-13.68 12.294 32.978 76.549-18.954 76.549s-23.989-43.439-23.989-76.589c16.892-2.998 34.533-3.165 42.944 0.040z","M339.383 655.627c-0.003 0.027-0.006 0.051-0.009 0.080 0.019-0.129 0.036-0.248 0.050-0.357-0.012 0.093-0.027 0.186-0.041 0.278z","M488.581 682.72c0.148-18.012 5.836-35.149 15.224-50.423 1.78-2.896 3.677-5.719 5.687-8.46 0.42-0.574 0.847-1.142 1.275-1.709 0.006-0.008 0.009-0.011 0.014-0.020 0.056-0.068 0.121-0.148 0.208-0.255 0.801-0.988 1.6-1.977 2.426-2.945 1.55-1.818 3.141-3.63 4.872-5.28 8.845-8.443-4.578-21.84-13.409-13.41-21.788 20.799-35.017 52.654-35.262 82.501-0.099 12.205 18.864 12.216 18.964-0z"],"grid":0,"tags":["troath"],"defaultCode":59722},{"paths":["M604.158 317.746c25.090 0 50.18 0 75.27 0 4.334 0 8.669 0 13.003 0-14.304 14.304-28.608 28.608-42.911 42.911-6.502 6.502-13.005 13.005-19.507 19.507-8.64 8.64 4.764 22.053 13.409 13.409 17.741-17.741 35.483-35.483 53.224-53.224 3.064-3.064 6.13-6.13 9.194-9.194 0 20.229 0 40.457 0 60.686 0 9.196 0 18.391 0 27.587 0 12.202 18.963 12.223 18.963 0 0-25.090 0-50.18 0-75.27 0-4.334 0-8.669 0-13.003 14.304 14.304 28.608 28.608 42.911 42.911 6.502 6.502 13.005 13.005 19.507 19.507 8.64 8.64 22.053-4.764 13.409-13.409-17.742-17.741-35.483-35.483-53.224-53.223-3.064-3.065-6.13-6.13-9.194-9.195 20.229 0 40.457 0 60.686 0 9.196 0 18.391 0 27.587 0 12.202 0 12.222-18.963 0-18.963-25.090 0-50.18 0-75.27 0-4.334 0-8.669 0-13.003 0 14.304-14.304 28.608-28.608 42.911-42.911 6.502-6.502 13.005-13.005 19.507-19.507 8.64-8.64-4.765-22.053-13.409-13.409-17.741 17.741-35.483 35.483-53.224 53.224-3.064 3.064-6.13 6.13-9.194 9.194 0-20.229 0-40.457 0-60.686 0-9.195 0-18.391 0-27.587 0-12.202-18.963-12.222-18.963 0 0 25.090 0 50.18 0 75.271 0 4.334 0 8.669 0 13.003-14.304-14.304-28.608-28.608-42.911-42.911-6.502-6.502-13.005-13.005-19.507-19.507-8.64-8.64-22.053 4.764-13.409 13.409 17.742 17.741 35.483 35.483 53.224 53.224 3.064 3.064 6.13 6.13 9.194 9.194-20.229 0-40.457 0-60.686 0-9.195 0-18.391 0-27.586 0-12.203-0.001-12.223 18.962-0.001 18.962z","M818.5 536.744c-33.041 57.649-88.709 100.162-153.325 116.039-18.97 4.662-38.315 6.879-57.841 6.934-80.756-0.21-157.79-41.125-202.427-108.622-47.029-71.114-53.597-164.588-15.636-241.207 21.633-43.662 55.94-79.957 98.197-104.176 7.707-4.417 4.881-18.603-4.785-17.669-48.414 4.676-95.411 19.734-137.139 44.841-40.45 24.338-75.299 57.479-101.864 96.48-26.761 39.29-44.738 84.752-51.902 131.755-7.45 48.882-4.155 99.258 10.524 146.539 13.943 44.908 37.711 86.456 69.148 121.404 30.93 34.385 69.474 62.22 111.97 80.497 44.954 19.335 93.842 28.606 142.783 26.539 48.643-2.055 96.494-15.003 139.462-37.914 41.724-22.246 78.012-53.73 106.569-91.344 28.741-37.855 48.967-82.397 58.536-128.957 2.467-12.004 4.22-24.158 5.399-36.354 0.933-9.657-13.25-12.495-17.669-4.785z"],"grid":0,"tags":["turkey-weird"],"defaultCode":59723},{"paths":["M808.206 761.382c0 8.348-1.815 14.561-5.441 18.635-3.63 4.076-9.070 6.113-16.324 6.113h-1.49c-4.77 0-8.772-0.894-12.001-2.685-3.23-1.789-5.665-4.521-7.305-8.198s-2.459-8.298-2.459-13.865v-65.146h-17.89v67.532c0 7.852 1.439 14.636 4.324 20.35 2.881 5.716 7.305 10.137 13.268 13.266 5.963 3.132 13.566 4.696 22.809 4.696 9.143 0 16.697-1.564 22.66-4.696 5.963-3.13 10.41-7.55 13.342-13.266 2.93-5.714 4.398-12.498 4.398-20.35v-67.532h-17.889v65.146z","M489.933 236.251l44.277 81.077h23.853v-104.354h-17.89v80.696l-44.277-80.696h-23.703l-0.15 104.354h17.89z","M547.627 463.498c-4.524-4.42-9.914-7.776-16.175-10.063-6.262-2.285-13.17-3.428-20.722-3.428h-36.375l-0.149 104.354h36.971c7.552 0 14.436-1.141 20.647-3.428 6.21-2.285 11.554-5.641 16.026-10.063s7.901-9.889 10.286-16.398c2.386-6.509 3.577-13.939 3.577-22.289 0-8.444-1.218-15.9-3.652-22.361-2.436-6.461-5.914-11.901-10.434-16.325zM541.365 518.732c-1.64 4.572-3.951 8.326-6.932 11.255-2.982 2.934-6.611 5.069-10.884 6.411-4.274 1.341-8.995 2.013-14.162 2.013h-17.293v-72.454h17.144c7.055 0 13.168 1.218 18.336 3.654 5.166 2.435 9.168 6.311 12.001 11.628s4.249 12.298 4.249 20.945c0.001 6.462-0.818 11.976-2.459 16.547z","M283.327 465.957v-15.95h-77.67l-0.149 104.354h79.311v-15.951h-61.421v-29.667h50.985v-15.952h-50.985v-26.835z","M767.284 301.377v-29.667h50.985v-15.952h-50.985v-26.835h59.93v-15.95h-77.669l-0.15 104.354h79.31v-15.951z","M483.969 800.589h17.89v-42.635h49.493v-16.101h-49.493v-29.667h56.948v-15.95h-74.688z","M794.566 554.361v-104.354h-17.74l-0.15 14.609h0.129l-0.129 89.745z","M266.928 776.931l-44.277-80.695h-23.703l-0.15 104.353h17.89v-81.077l44.276 81.077h23.854v-104.353h-17.89z","M274.383 226.465c-4.524-4.42-9.914-7.776-16.175-10.063-6.262-2.285-13.17-3.428-20.722-3.428h-36.375l-0.149 104.354h36.971c7.552 0 14.435-1.141 20.648-3.428 6.209-2.285 11.553-5.641 16.026-10.063s7.901-9.889 10.286-16.398 3.577-13.939 3.577-22.289c0-8.444-1.218-15.9-3.652-22.361-2.437-6.461-5.915-11.901-10.435-16.325zM268.121 281.699c-1.639 4.572-3.951 8.326-6.933 11.255-2.982 2.934-6.61 5.069-10.883 6.411-4.274 1.341-8.996 2.013-14.162 2.013h-17.293v-72.454h17.144c7.055 0 13.168 1.218 18.336 3.654 5.166 2.435 9.169 6.311 12.001 11.628s4.249 12.298 4.249 20.945c0.001 6.462-0.818 11.976-2.459 16.547z"],"grid":0,"tags":["undefined"],"defaultCode":59724},{"paths":["M883.792 452.666c-0.301-4.453-3.32-8.506-9.094-8.143-12.998-0.181-23.303-1.954-36.468-6.186-2.906-0.934-5.785-1.957-8.632-3.057-3.834-1.482-4.116-1.609-7.909-3.351-5.785-2.657-11.434-5.602-16.964-8.751-23.27-13.253-44.359-29.931-65.536-46.217-39.238-30.178-84.287-64.32-136.786-59.302-34.49 3.297-64.552 21.418-90.397 43.55-22.838-19.612-49.361-36.707-79.33-42.040-26.123-4.649-51.637 0.074-75.68 10.761-47.933 21.309-84.956 60.846-129.207 88.189-6.251 3.863-12.645 7.501-19.213 10.798-7.216 3.622-11.166 5.367-18.47 7.955-6.61 2.342-13.379 4.246-20.263 5.599-1.803 0.355-3.614 0.667-5.43 0.95 0.101-0.016-1.078 0.147-1.594 0.222-0.601 0.064-2.046 0.229-2.302 0.255-0.286 0.029-0.573 0.049-0.859 0.077-0.128-0.006-0.257-0.010-0.384 0.001-0.316 0.027-0.629 0.066-0.939 0.118-3.005 0.247-6.016 0.388-9.032 0.43-12.334 0.172-12.053 18.053 0 18.963 1.251 0.095 2.494 0.255 3.742 0.357 0.014 0.001 0.021 0.001 0.035 0.003 0.065 0.012 0.121 0.024 0.201 0.038 0.704 0.13 1.413 0.229 2.117 0.359 2.58 0.475 5.136 1.083 7.654 1.819 2.497 0.729 4.917 1.636 7.35 2.549 0.019 0.008 0.029 0.010 0.046 0.017 0.509 0.231 1.022 0.453 1.53 0.688 1.271 0.588 2.526 1.207 3.766 1.855 4.699 2.455 9.138 5.342 13.407 8.479 0.365 0.268 0.725 0.545 1.086 0.82 0.13 0.104 0.285 0.229 0.468 0.379 1.146 0.941 2.297 1.874 3.424 2.84 2.134 1.83 4.213 3.725 6.243 5.671 8.632 8.272 16.393 17.415 23.779 26.8 0.532 0.676 1.060 1.355 1.59 2.032 0.077 0.099 0.137 0.175 0.188 0.24 0.043 0.056 0.088 0.116 0.147 0.192 0.988 1.29 1.974 2.582 2.953 3.879 1.994 2.64 3.967 5.294 5.927 7.96 4.048 5.502 8.040 11.045 12.033 16.588 17.514 24.316 35.177 48.658 55.657 70.601 22.197 23.783 47.872 44.661 76.892 59.554 35.488 18.212 74.67 27.249 114.39 29.195 5.728 0.281 11.46 0.404 17.195 0.415 43.65-0.071 87.325-6.67 127.636-23.871 31.132-13.284 59.064-33.098 82.779-57.182 20.93-21.257 38.487-45.53 55.141-70.196 7.456-11.043 14.756-22.193 22.377-33.125 3.516-5.042 7.109-10.029 10.825-14.926 0.227-0.299 0.514-0.671 0.7-0.91 0.282-0.36 0.563-0.722 0.846-1.081 0.939-1.19 1.886-2.372 2.844-3.545 1.874-2.294 3.792-4.553 5.76-6.767 3.633-4.085 7.445-8.018 11.496-11.69 1.947-1.765 3.967-3.432 6.005-5.091 0.045-0.032 0.082-0.060 0.133-0.097 0.462-0.337 0.917-0.682 1.381-1.016 1.073-0.776 2.162-1.53 3.266-2.259 2.108-1.393 4.273-2.697 6.496-3.9 1.063-0.576 2.139-1.127 3.227-1.654 0.585-0.283 1.179-0.55 1.766-0.828 0.17-0.081 0.343-0.155 0.515-0.23 4.721-1.775 9.441-3.303 14.416-4.223 1.005-0.186 4.721-0.621 1.811-0.332 1.386-0.137 2.767-0.303 4.157-0.409 2-0.126 3.665-0.754 5.008-1.7 3.026-2.082 4.406-5.715 4.084-9.12zM386.412 474.542c1.244-3.191 2.487-6.381 3.731-9.572 10.926-0.73 21.91-1.625 32.85-2.887-5.223 27.491-10.446 54.982-15.669 82.473-0.243 1.279-0.486 2.558-0.729 3.837-13.061-4.504-25.967-9.452-38.74-14.532-1.317-0.523-2.63-1.057-3.946-1.584 7.502-19.246 15.003-38.49 22.504-57.735zM334.122 556.739c-7.447-28.303-14.894-56.606-22.34-84.909-0.398-1.514-0.796-3.028-1.195-4.543 19.666-0.51 39.333-1.019 58.999-1.529-11.822 30.327-23.643 60.653-35.465 90.981zM441.297 467.027c0.487-2.565 0.975-5.129 1.462-7.693 9.413-1.557 18.745-3.485 27.92-5.944 9.161-2.455 20.134-5.845 29.33-11.324 0 9.049 0 18.098 0 27.147 0 29.219 0 58.437 0 87.656 0 3.804 0 7.607 0 11.411-2.069-0.079-4.137-0.177-6.203-0.31-3.742-0.241-7.479-0.571-11.206-0.983-1.65-0.183-3.298-0.387-4.944-0.602-0.393-0.056-1.157-0.162-1.539-0.218-1.055-0.155-2.109-0.315-3.162-0.482-16.338-2.587-32.404-6.573-48.237-11.4 5.527-29.086 11.053-58.173 16.578-87.259zM518.972 522.315c0-26.892 0-53.784 0-80.676 6.992 3.99 14.836 6.818 21.553 8.889 8.149 2.512 16.472 4.52 24.888 6.176 5.763 30.332 11.526 60.664 17.289 90.997 0.578 3.044 1.157 6.087 1.735 9.131-8.11 2.265-16.278 4.31-24.517 6.051-3.988 0.843-7.991 1.61-12.010 2.292-1.836 0.311-3.674 0.604-5.515 0.879-0.782 0.117-1.566 0.228-2.349 0.339-0.027 0.004-0.047 0.007-0.074 0.010-0.564 0.073-1.127 0.145-1.691 0.215-6.412 0.79-12.854 1.321-19.309 1.601 0.001-15.301 0.001-30.602 0.001-45.905zM602.639 551.358c-5.78-30.422-11.56-60.846-17.34-91.268-0.007-0.034-0.012-0.068-0.019-0.101 14.562 1.991 29.247 3.215 43.704 4.296 6.893 0.516 13.793 0.939 20.695 1.318 5.457 20.741 10.914 41.482 16.372 62.223-20.855 8.407-41.941 16.631-63.412 23.532zM669.197 465.246c19.648 0.768 39.295 1.535 58.943 2.303-11.81 29.021-23.62 58.042-35.43 87.063-7.509-28.542-15.020-57.084-22.529-85.625-0.327-1.247-0.655-2.494-0.983-3.74zM744.82 476.536c1.216-2.988 2.432-5.975 3.648-8.963 21.101-0.146 42.2-0.59 63.292-1.275-25.352 10.8-50.652 21.731-76.008 32.524 3.024-7.429 6.046-14.857 9.069-22.286zM289.397 397.173c20.325-15.652 40.688-31.632 63.266-43.963 11.301-6.171 19.264-9.766 31.573-13.187 2.614-0.726 5.251-1.37 7.909-1.919 1.398-0.289 2.8-0.553 4.208-0.79 0.623-0.104 1.248-0.198 1.873-0.293 0.371-0.047 1.424-0.191 1.553-0.204 5.926-0.625 11.868-0.84 17.821-0.501 12.216 0.698 27.858 5.031 39.773 10.756 17.326 8.326 32.803 19.844 47.045 32.66 2.386 2.147 5.075 2.789 7.579 2.434 2.506 0.357 5.198-0.284 7.587-2.434 23-20.696 48.68-37.707 79.050-42.658 0.119-0.020 1.521-0.202 1.773-0.24 0.368-0.044 0.735-0.091 1.103-0.124 1.483-0.135 2.964-0.277 4.451-0.368 3.212-0.197 6.433-0.245 9.649-0.145 2.881 0.089 5.748 0.323 8.614 0.621 0.31 0.032 0.62 0.074 0.93 0.112 0.284 0.046 1.483 0.217 1.65 0.246 1.547 0.267 3.094 0.531 4.634 0.843 12.12 2.459 22.247 6.315 31.986 11.087 46.668 22.869 83.171 61.683 127.664 88.081 6.208 3.684 12.58 7.106 19.099 10.186-19.061 0.608-38.128 1.028-57.197 1.201-7.616 0.069-15.236 0.097-22.854 0.089-20.872-0.815-41.744-1.631-62.616-2.447-3.583-0.139-7.166-0.28-10.749-0.42-1.821-0.071-3.366 0.295-4.641 0.963-1.303-0.068-2.606-0.123-3.907-0.195-16.358-0.905-32.706-2.151-48.983-4.038-1.884-0.218-3.767-0.446-5.649-0.683-0.927-0.117-1.854-0.238-2.781-0.357-0.028-0.004-0.047-0.007-0.072-0.009-0.443-0.061-0.886-0.12-1.327-0.182-3.548-0.494-7.091-1.028-10.626-1.609-6.645-1.093-13.266-2.35-19.826-3.871-5.727-1.329-11.416-2.854-16.988-4.732-2.133-0.719-4.226-1.527-6.319-2.345 0.262 0.092-1.536-0.642-2.274-0.987-1.081-0.506-2.152-1.035-3.207-1.595-1.817-0.964-3.546-2.040-5.265-3.166-0.284-0.186-0.557-0.402-0.835-0.602-0.642-0.571-1.304-1.111-1.918-1.715-0.549-0.539-1.028-1.157-1.581-1.689-0.012-0.012-0.019-0.017-0.030-0.027-0.058-0.102-0.12-0.214-0.199-0.349-0.304-0.523-0.587-1.168-0.924-1.696-0.070-0.165-0.139-0.328-0.174-0.484-0.009-0.045-0.023-0.089-0.035-0.135-0.063-0.057-0.149-0.238-0.188-0.529-0.015-0.036-0.030-0.067-0.046-0.101 0-0.022 0-0.044 0-0.066 0.010 0.020 0.020 0.038 0.033 0.060-0.002-0.025-0.008-0.044-0.009-0.069-0.017-0.423-0.029-0.843-0.025-1.267 0.062-6.136-4.55-9.171-9.243-9.149-4.819-0.107-9.72 2.935-9.72 9.149 0 0 0 0.001 0 0.001-0.003 0.052-0.023 0.187-0.043 0.342-0.202 0.639-0.326 1.358-0.493 1.991-0.012 0.048-0.020 0.080-0.030 0.122-0.447 0.653-0.806 1.431-1.215 2.112-0.065 0.109-0.149 0.213-0.229 0.318-0.568 0.536-1.057 1.235-1.605 1.783-0.616 0.615-1.271 1.181-1.92 1.761-0.171 0.153-0.3 0.27-0.41 0.372-0.093 0.057-0.203 0.126-0.351 0.223-3.684 2.413-7.427 4.427-11.419 6.283-0.531 0.207-1.057 0.428-1.588 0.633-1.251 0.486-2.511 0.949-3.778 1.392-2.499 0.875-5.026 1.672-7.568 2.411-11.677 3.397-23.68 5.646-35.703 7.43-0.029 0.004-0.058 0.009-0.087 0.013-0.618 0.092-1.236 0.188-1.856 0.277-0.923 0.133-1.847 0.262-2.771 0.391-0.138 0.019-0.243 0.034-0.331 0.046-0.093 0.011-0.204 0.026-0.356 0.046-1.901 0.245-3.803 0.486-5.708 0.714-3.771 0.45-7.546 0.86-11.325 1.236-7.888 0.786-15.79 1.425-23.698 1.957-1.437 0.097-2.877 0.172-4.314 0.263-0.108 0.004-0.217 0.005-0.323 0.012-24.59 0.637-49.18 1.274-73.77 1.912-3.583 0.093-7.166 0.186-10.75 0.279-0.004 0-0.008 0.001-0.011 0.001-3.344-0.011-6.687-0.027-10.030-0.054-24.472-0.205-48.939-0.866-73.39-1.863 26.69-12.933 51.135-31.589 74.459-49.55zM211.309 465.536c23.101 0.975 46.215 1.653 69.334 1.936 3.467 0.043 6.936 0.072 10.405 0.098 3.351 12.736 6.702 25.472 10.052 38.208-28.905-12.691-57.629-25.81-86.41-38.725-1.126-0.506-2.254-1.011-3.381-1.516zM190.050 480.322c-0.214-0.167-0.183-0.145 0 0v0zM769.311 532.563c-7.762 11.6-15.508 23.214-23.649 34.552-2.096 2.92-4.218 5.823-6.371 8.701-1.047 1.4-2.102 2.794-3.161 4.184-0.191 0.25-0.574 0.747-0.772 1.004-0.575 0.739-1.15 1.477-1.728 2.212-4.597 5.838-9.345 11.557-14.277 17.116-10.355 11.669-21.536 22.617-33.647 32.462-1.411 1.146-2.833 2.279-4.27 3.392-0.297 0.225-0.969 0.736-1.176 0.89-0.96 0.72-1.922 1.436-2.89 2.144-3.312 2.42-6.684 4.756-10.114 7.006-7.232 4.745-14.721 9.098-22.423 13.035-8.361 4.274-15.144 7.257-23.321 10.325-9.025 3.388-18.243 6.259-27.583 8.648-21.225 5.431-42.459 8.227-64.296 9.207-6.168 0.277-12.339 0.399-18.514 0.409-21.322-0.040-42.054-1.786-62.716-6.21-9.324-1.997-18.544-4.488-27.59-7.504-8.752-2.917-15.941-5.763-23.647-9.359-15.032-7.016-29.302-15.612-42.614-25.505-0.873-0.649-1.742-1.304-2.607-1.962-0.287-0.219-0.431-0.327-0.502-0.38-0.056-0.046-0.199-0.159-0.517-0.411-1.572-1.239-3.135-2.49-4.682-3.76-3.066-2.518-6.079-5.102-9.038-7.745-5.824-5.204-11.44-10.639-16.868-16.256-10.542-10.91-20.359-22.501-29.72-34.434-0.528-0.673-1.054-1.349-1.581-2.023-0.22-0.282-0.439-0.564-0.657-0.847-0.061-0.080-0.128-0.168-0.209-0.271-1.119-1.459-2.235-2.92-3.345-4.387-2.198-2.904-4.376-5.824-6.539-8.754-4.233-5.734-8.408-11.511-12.575-17.292-10.978-15.234-21.83-30.805-33.915-45.272 25.063 11.289 50.154 22.523 75.384 33.425 3.916 14.885 7.833 29.769 11.749 44.654 1.423 5.409 2.846 10.818 4.27 16.228 1.058 4.021 5.015 6.96 9.143 6.96 4.459 0 7.609-3.026 9.143-6.96 5.189-13.313 10.378-26.625 15.568-39.937 32.586 13.225 65.905 25.506 100.449 32.276 31.453 6.164 63.036 6.738 94.653 1.468 36.75-6.126 72.141-19.038 106.694-32.613 4.017-1.579 8.020-3.193 12.027-4.797 2.151 8.177 4.303 16.355 6.454 24.531 1.423 5.409 2.846 10.818 4.27 16.228 1.058 4.021 5.015 6.961 9.143 6.961 4.502 0 7.547-3.042 9.143-6.961 8.598-21.129 17.196-42.256 25.794-63.385 23.872-10.107 47.669-20.403 71.494-30.61-10.024 12.668-18.952 26.299-27.866 39.618z","M519.004 415.657c0.003 0.039 0.009 0.073 0.012 0.108 0.072 0.17 0.138 0.351 0.188 0.529 0.093 0.082 0.112-0.108-0.2-0.637z"],"grid":0,"tags":["vampire"],"defaultCode":59725},{"paths":["M780.968 785.814c-3.392-3.654-10.017-3.654-13.409 0-9.499 10.234-18.999 20.469-28.498 30.702-9.498-10.233-18.996-20.468-28.494-30.702-3.392-3.654-10.017-3.654-13.409 0-9.499 10.234-18.996 20.468-28.495 30.702-9.498-10.234-18.995-20.468-28.493-30.702-3.392-3.654-10.017-3.654-13.409 0-9.498 10.233-18.994 20.468-28.492 30.701-9.497-10.233-18.992-20.468-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.234-18.995 20.468-28.492 30.702-9.498-10.233-18.995-20.468-28.493-30.702-3.392-3.654-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.493 30.702-9.497-10.233-18.994-20.468-28.491-30.702-3.392-3.654-10.017-3.654-13.409 0-9.497 10.233-18.993 20.468-28.49 30.701-9.497-10.233-18.993-20.468-28.489-30.701-3.392-3.654-10.017-3.654-13.409 0-9.497 10.233-18.993 20.468-28.491 30.701-9.497-10.233-18.992-20.468-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.994 20.468-28.492 30.701-9.497-10.233-18.992-20.468-28.489-30.701-8.319-8.965-21.705 4.469-13.409 13.409 11.73 12.642 23.462 25.284 35.192 37.926 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.994-20.467 28.492-30.701 9.497 10.233 18.992 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.497-10.233 18.993-20.467 28.491-30.701 9.497 10.233 18.993 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.497-10.233 18.993-20.467 28.49-30.701 9.497 10.233 18.993 20.468 28.491 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.995-20.468 28.493-30.701 9.498 10.233 18.995 20.468 28.493 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.994-20.467 28.492-30.701 9.497 10.233 18.992 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.995-20.468 28.493-30.701 9.498 10.233 18.995 20.468 28.493 30.701 3.392 3.655 10.017 3.654 13.409 0 9.499-10.233 18.996-20.468 28.495-30.702 9.498 10.234 18.996 20.468 28.494 30.702 3.392 3.655 10.017 3.654 13.409 0 9.499-10.234 18.999-20.469 28.498-30.703 9.499 10.234 18.999 20.469 28.498 30.703 8.32 8.964 21.706-4.47 13.409-13.409-11.735-12.642-23.47-25.284-35.204-37.926z","M781.394 710.943c-3.392-3.655-10.017-3.654-13.409 0-9.499 10.233-18.999 20.468-28.498 30.702-9.498-10.234-18.996-20.469-28.494-30.702-3.392-3.655-10.017-3.654-13.409 0-9.499 10.233-18.996 20.468-28.495 30.702-9.498-10.234-18.995-20.468-28.493-30.702-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.995 20.467-28.492 30.701-9.497-10.233-18.992-20.467-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.492 30.701-9.498-10.233-18.995-20.468-28.493-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.493 30.701-9.497-10.233-18.994-20.468-28.491-30.701-3.392-3.655-10.017-3.654-13.409 0-9.497 10.233-18.993 20.467-28.49 30.701-9.497-10.233-18.993-20.468-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.497 10.233-18.993 20.467-28.491 30.701-9.497-10.233-18.992-20.468-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.994 20.467-28.492 30.701-9.497-10.233-18.992-20.468-28.489-30.701-8.319-8.966-21.705 4.469-13.409 13.409 11.73 12.642 23.462 25.284 35.192 37.926 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.994-20.468 28.492-30.701 9.497 10.233 18.992 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.497-10.233 18.993-20.468 28.491-30.701 9.497 10.233 18.993 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.497-10.233 18.993-20.468 28.49-30.701 9.497 10.233 18.993 20.468 28.491 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.995-20.468 28.493-30.702 9.498 10.233 18.995 20.468 28.493 30.702 3.392 3.654 10.017 3.654 13.409 0 9.498-10.233 18.994-20.468 28.492-30.701 9.497 10.233 18.992 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.995-20.468 28.493-30.702 9.498 10.233 18.995 20.468 28.493 30.702 3.392 3.655 10.017 3.654 13.409 0 9.499-10.234 18.996-20.468 28.495-30.702 9.498 10.234 18.996 20.468 28.494 30.702 3.392 3.655 10.017 3.654 13.409 0 9.499-10.234 18.999-20.469 28.498-30.703 9.499 10.234 18.999 20.469 28.498 30.703 8.32 8.964 21.706-4.47 13.409-13.409-11.735-12.642-23.47-25.284-35.204-37.926z","M781.82 636.073c-3.392-3.654-10.017-3.654-13.409 0-9.499 10.234-18.999 20.468-28.498 30.702-9.498-10.234-18.996-20.468-28.494-30.702-3.392-3.655-10.017-3.654-13.409 0-9.499 10.233-18.996 20.468-28.495 30.702-9.498-10.233-18.995-20.468-28.493-30.702-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.994 20.468-28.492 30.701-9.497-10.233-18.992-20.467-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.492 30.702-9.498-10.234-18.995-20.468-28.493-30.702-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.493 30.701-9.497-10.233-18.994-20.468-28.491-30.701-3.392-3.655-10.017-3.654-13.409 0-9.497 10.233-18.993 20.468-28.49 30.701-9.497-10.233-18.993-20.467-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.497 10.233-18.993 20.468-28.491 30.701-9.497-10.233-18.992-20.467-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.994 20.468-28.492 30.701-9.497-10.233-18.992-20.467-28.489-30.701-8.319-8.965-21.705 4.469-13.409 13.409 11.73 12.642 23.462 25.284 35.192 37.926 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.994-20.468 28.492-30.701 9.497 10.233 18.992 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.497-10.233 18.993-20.468 28.491-30.701 9.497 10.233 18.993 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.497-10.233 18.993-20.468 28.49-30.701 9.497 10.233 18.993 20.468 28.491 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.995-20.468 28.493-30.702 9.498 10.233 18.995 20.468 28.493 30.702 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.994-20.468 28.492-30.701 9.497 10.233 18.992 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.995-20.468 28.493-30.702 9.498 10.233 18.995 20.468 28.493 30.702 3.392 3.655 10.017 3.654 13.409 0 9.499-10.233 18.996-20.468 28.495-30.702 9.498 10.233 18.996 20.468 28.494 30.702 3.392 3.655 10.017 3.654 13.409 0 9.499-10.234 18.999-20.469 28.498-30.703 9.499 10.234 18.999 20.469 28.498 30.703 8.32 8.964 21.706-4.47 13.409-13.409-11.735-12.642-23.47-25.283-35.204-37.926z","M782.246 561.203c-3.392-3.654-10.017-3.654-13.409 0-9.499 10.234-18.999 20.469-28.498 30.702-9.498-10.233-18.996-20.468-28.494-30.702-3.392-3.654-10.017-3.654-13.409 0-9.499 10.234-18.996 20.468-28.495 30.702-9.498-10.233-18.995-20.468-28.493-30.702-3.392-3.654-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.492 30.701-9.497-10.233-18.992-20.468-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.492 30.702-9.498-10.233-18.995-20.468-28.493-30.702-3.392-3.654-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.493 30.701-9.497-10.233-18.994-20.468-28.491-30.701-3.392-3.654-10.017-3.654-13.409 0-9.497 10.233-18.993 20.468-28.49 30.701-9.497-10.233-18.993-20.467-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.497 10.233-18.993 20.468-28.491 30.701-9.497-10.233-18.992-20.467-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.994 20.468-28.492 30.701-9.497-10.233-18.992-20.468-28.489-30.701-8.319-8.965-21.705 4.469-13.409 13.409 11.73 12.642 23.462 25.284 35.193 37.926 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.994-20.467 28.492-30.701 9.497 10.233 18.992 20.467 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.497-10.233 18.993-20.467 28.491-30.701 9.497 10.233 18.993 20.467 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.497-10.233 18.993-20.467 28.49-30.701 9.497 10.233 18.993 20.467 28.491 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.995-20.468 28.493-30.701 9.498 10.233 18.995 20.468 28.493 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.994-20.467 28.492-30.701 9.497 10.233 18.992 20.467 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.995-20.468 28.493-30.701 9.498 10.233 18.995 20.468 28.493 30.701 3.392 3.655 10.017 3.654 13.409 0 9.499-10.233 18.996-20.468 28.495-30.702 9.498 10.233 18.996 20.468 28.494 30.702 3.392 3.655 10.017 3.654 13.409 0 9.499-10.234 18.999-20.469 28.498-30.703 9.499 10.234 18.999 20.469 28.498 30.703 8.32 8.964 21.706-4.47 13.409-13.409-11.736-12.642-23.47-25.284-35.205-37.926z","M782.673 486.333c-3.392-3.654-10.017-3.654-13.409 0-9.499 10.234-18.999 20.469-28.498 30.703-9.498-10.234-18.996-20.469-28.494-30.703-3.392-3.654-10.017-3.654-13.409 0-9.499 10.234-18.996 20.468-28.495 30.702-9.498-10.233-18.995-20.468-28.493-30.702-3.392-3.654-10.017-3.654-13.409 0-9.498 10.233-18.994 20.468-28.492 30.701-9.497-10.233-18.992-20.468-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.234-18.995 20.468-28.492 30.702-9.498-10.233-18.995-20.468-28.493-30.702-3.392-3.654-10.017-3.654-13.409 0-9.498 10.234-18.995 20.468-28.493 30.702-9.497-10.233-18.994-20.468-28.491-30.702-3.392-3.654-10.017-3.654-13.409 0-9.497 10.233-18.993 20.468-28.49 30.701-9.497-10.233-18.993-20.468-28.489-30.701-3.392-3.654-10.017-3.654-13.409 0-9.497 10.233-18.993 20.468-28.491 30.701-9.497-10.233-18.992-20.468-28.489-30.701-3.392-3.654-10.017-3.654-13.409 0-9.498 10.233-18.994 20.468-28.492 30.701-9.497-10.233-18.992-20.468-28.489-30.701-8.319-8.965-21.705 4.469-13.409 13.41 11.731 12.642 23.462 25.284 35.193 37.926 3.392 3.654 10.017 3.654 13.409 0 9.498-10.233 18.994-20.468 28.492-30.701 9.497 10.233 18.992 20.468 28.489 30.701 3.392 3.654 10.017 3.654 13.409 0 9.497-10.233 18.993-20.468 28.491-30.701 9.497 10.233 18.993 20.468 28.49 30.701 3.392 3.654 10.017 3.654 13.409 0 9.497-10.233 18.993-20.468 28.49-30.701 9.497 10.233 18.993 20.468 28.491 30.701 3.392 3.654 10.017 3.654 13.409 0 9.498-10.234 18.995-20.468 28.493-30.702 9.498 10.233 18.995 20.468 28.493 30.702 3.392 3.654 10.017 3.654 13.409 0 9.498-10.233 18.994-20.468 28.492-30.701 9.497 10.233 18.992 20.468 28.489 30.701 3.392 3.654 10.017 3.654 13.409 0 9.498-10.234 18.995-20.468 28.493-30.702 9.498 10.233 18.995 20.468 28.493 30.702 3.392 3.654 10.017 3.654 13.409 0 9.499-10.234 18.996-20.468 28.495-30.702 9.498 10.234 18.996 20.468 28.494 30.702 3.392 3.654 10.017 3.654 13.409 0 9.499-10.234 18.999-20.469 28.498-30.703 9.499 10.234 18.999 20.469 28.498 30.703 8.32 8.964 21.706-4.47 13.409-13.41-11.737-12.642-23.471-25.284-35.206-37.926z","M783.098 411.462c-3.392-3.655-10.017-3.654-13.409 0-9.499 10.233-18.999 20.468-28.498 30.702-9.498-10.234-18.996-20.469-28.494-30.702-3.392-3.655-10.017-3.654-13.409 0-9.499 10.233-18.996 20.468-28.495 30.702-9.498-10.234-18.995-20.468-28.493-30.702-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.994 20.467-28.492 30.701-9.497-10.233-18.992-20.467-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.492 30.701-9.498-10.233-18.995-20.468-28.493-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.493 30.701-9.497-10.233-18.994-20.468-28.491-30.701-3.392-3.655-10.017-3.654-13.409 0-9.497 10.233-18.993 20.467-28.49 30.701-9.497-10.233-18.993-20.467-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.497 10.233-18.993 20.467-28.491 30.701-9.497-10.233-18.992-20.467-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.994 20.467-28.492 30.701-9.497-10.233-18.992-20.467-28.489-30.701-8.319-8.966-21.705 4.469-13.409 13.409 11.73 12.642 23.462 25.284 35.192 37.926 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.994-20.468 28.492-30.701 9.497 10.233 18.992 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.497-10.233 18.993-20.468 28.491-30.701 9.497 10.233 18.993 20.468 28.489 30.701 3.392 3.654 10.017 3.654 13.409 0 9.497-10.233 18.993-20.468 28.49-30.701 9.497 10.233 18.993 20.468 28.491 30.701 3.392 3.654 10.017 3.654 13.409 0 9.498-10.234 18.995-20.468 28.493-30.702 9.498 10.233 18.995 20.468 28.493 30.702 3.392 3.654 10.017 3.654 13.409 0 9.498-10.233 18.994-20.468 28.492-30.701 9.497 10.233 18.992 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.234 18.995-20.468 28.493-30.702 9.498 10.233 18.995 20.468 28.493 30.702 3.392 3.654 10.017 3.654 13.409 0 9.499-10.234 18.996-20.468 28.495-30.702 9.498 10.233 18.996 20.468 28.494 30.702 3.392 3.655 10.017 3.654 13.409 0 9.499-10.234 18.999-20.469 28.498-30.703 9.499 10.234 18.999 20.469 28.498 30.703 8.32 8.964 21.706-4.47 13.409-13.409-11.735-12.642-23.47-25.284-35.204-37.926z","M783.525 336.593c-3.392-3.655-10.017-3.654-13.409 0-9.499 10.234-18.999 20.468-28.498 30.702-9.498-10.234-18.996-20.468-28.494-30.702-3.392-3.655-10.017-3.654-13.409 0-9.499 10.233-18.996 20.468-28.495 30.702-9.498-10.233-18.995-20.468-28.493-30.702-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.492 30.701-9.497-10.233-18.992-20.468-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.492 30.701-9.498-10.233-18.995-20.468-28.493-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.493 30.701-9.497-10.233-18.994-20.468-28.491-30.701-3.392-3.655-10.017-3.654-13.409 0-9.497 10.233-18.993 20.467-28.49 30.701-9.497-10.233-18.993-20.467-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.497 10.233-18.993 20.467-28.491 30.701-9.497-10.233-18.992-20.467-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.994 20.468-28.492 30.701-9.497-10.233-18.992-20.468-28.489-30.701-8.319-8.965-21.705 4.469-13.409 13.409 11.73 12.642 23.462 25.284 35.192 37.926 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.994-20.468 28.492-30.701 9.497 10.233 18.992 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.497-10.233 18.993-20.468 28.491-30.701 9.497 10.233 18.993 20.467 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.497-10.233 18.993-20.468 28.49-30.701 9.497 10.233 18.993 20.468 28.491 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.995-20.468 28.493-30.702 9.498 10.234 18.995 20.468 28.493 30.702 3.392 3.654 10.017 3.654 13.409 0 9.498-10.233 18.994-20.468 28.492-30.701 9.497 10.233 18.992 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.995-20.468 28.493-30.702 9.498 10.234 18.995 20.468 28.493 30.702 3.392 3.655 10.017 3.654 13.409 0 9.499-10.233 18.996-20.468 28.495-30.702 9.498 10.233 18.996 20.468 28.494 30.702 3.392 3.655 10.017 3.654 13.409 0 9.499-10.234 18.999-20.469 28.498-30.703 9.499 10.234 18.999 20.469 28.498 30.703 8.32 8.964 21.706-4.47 13.409-13.409-11.736-12.643-23.47-25.284-35.204-37.926z","M783.951 261.722c-3.392-3.654-10.017-3.654-13.409 0-9.499 10.234-18.999 20.469-28.498 30.702-9.498-10.233-18.996-20.468-28.494-30.702-3.392-3.655-10.017-3.654-13.409 0-9.499 10.234-18.996 20.468-28.495 30.702-9.498-10.234-18.995-20.468-28.493-30.702-3.392-3.654-10.017-3.654-13.409 0-9.498 10.233-18.994 20.468-28.492 30.701-9.497-10.233-18.992-20.468-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.492 30.702-9.498-10.233-18.995-20.468-28.493-30.702-3.392-3.654-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.493 30.701-9.497-10.233-18.994-20.468-28.491-30.701-3.392-3.654-10.017-3.654-13.409 0-9.497 10.233-18.993 20.468-28.49 30.701-9.497-10.233-18.993-20.468-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.497 10.233-18.993 20.468-28.491 30.701-9.497-10.233-18.992-20.468-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.994 20.468-28.492 30.701-9.497-10.233-18.992-20.468-28.489-30.701-8.319-8.965-21.705 4.469-13.409 13.409 11.73 12.642 23.462 25.284 35.192 37.926 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.994-20.467 28.492-30.701 9.497 10.233 18.992 20.467 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.497-10.233 18.993-20.467 28.491-30.701 9.497 10.233 18.993 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.497-10.233 18.993-20.467 28.49-30.701 9.497 10.233 18.993 20.467 28.491 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.995-20.468 28.493-30.702 9.498 10.234 18.995 20.468 28.493 30.702 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.994-20.467 28.492-30.701 9.497 10.233 18.992 20.467 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.995-20.468 28.493-30.702 9.498 10.234 18.995 20.468 28.493 30.702 3.392 3.655 10.017 3.654 13.409 0 9.499-10.233 18.996-20.468 28.495-30.702 9.498 10.233 18.996 20.468 28.494 30.702 3.392 3.655 10.017 3.654 13.409 0 9.499-10.234 18.999-20.469 28.498-30.703 9.499 10.234 18.999 20.469 28.498 30.703 8.32 8.964 21.706-4.47 13.409-13.409-11.735-12.643-23.47-25.284-35.204-37.926z","M243.032 238.186c3.392 3.655 10.017 3.654 13.409 0 9.499-10.233 18.999-20.468 28.498-30.702 9.498 10.234 18.996 20.469 28.494 30.702 3.392 3.655 10.017 3.654 13.409 0 9.499-10.233 18.996-20.468 28.495-30.702 9.498 10.234 18.995 20.468 28.493 30.702 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.994-20.467 28.492-30.701 9.497 10.233 18.992 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.995-20.468 28.492-30.701 9.498 10.233 18.995 20.468 28.493 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.995-20.468 28.493-30.701 9.497 10.233 18.994 20.468 28.491 30.701 3.392 3.655 10.017 3.654 13.409 0 9.497-10.233 18.993-20.467 28.49-30.701 9.497 10.233 18.993 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.497-10.233 18.993-20.467 28.491-30.701 9.497 10.233 18.992 20.468 28.489 30.701 3.392 3.655 10.017 3.654 13.409 0 9.498-10.233 18.994-20.467 28.492-30.701 9.497 10.233 18.992 20.468 28.489 30.701 8.319 8.966 21.705-4.469 13.409-13.409-11.731-12.642-23.462-25.284-35.193-37.926-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.994 20.467-28.492 30.701-9.497-10.233-18.992-20.468-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.497 10.233-18.993 20.467-28.491 30.701-9.497-10.233-18.993-20.468-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.497 10.233-18.993 20.467-28.49 30.701-9.497-10.233-18.993-20.468-28.491-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.493 30.701-9.498-10.233-18.995-20.468-28.493-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.994 20.467-28.492 30.701-9.497-10.233-18.992-20.468-28.489-30.701-3.392-3.655-10.017-3.654-13.409 0-9.498 10.233-18.995 20.468-28.493 30.701-9.498-10.233-18.995-20.468-28.493-30.701-3.392-3.655-10.017-3.654-13.409 0-9.499 10.233-18.996 20.468-28.495 30.702-9.498-10.234-18.996-20.468-28.494-30.702-3.392-3.655-10.017-3.654-13.409 0-9.499 10.234-18.999 20.469-28.498 30.703-9.499-10.234-18.999-20.469-28.498-30.703-8.32-8.964-21.706 4.47-13.409 13.409 11.736 12.642 23.47 25.284 35.205 37.926z"],"grid":0,"tags":["waves"],"defaultCode":59726},{"paths":["M446.578 637.71c0 12.202 18.963 12.222 18.963 0 0-15.313 0-30.625 0-45.938 0-36.76 0-73.519 0-110.279 0-44.287 0-88.574 0-132.861 0-38.291 0-76.583 0-114.874 0-18.646 0.653-37.425 0-56.063-0.009-0.261 0-0.523 0-0.784 0-12.202-18.963-12.222-18.963 0 0 15.313 0 30.625 0 45.938 0 36.76 0 73.519 0 110.279 0 44.287 0 88.574 0 132.861 0 38.291 0 76.583 0 114.874 0 18.646-0.654 37.425 0 56.063 0.009 0.26 0 0.522 0 0.784z","M532.859 637.71c0 12.202 18.963 12.222 18.963 0 0-15.313 0-30.625 0-45.938 0-36.76 0-73.519 0-110.279 0-44.287 0-88.574 0-132.861 0-38.291 0-76.583 0-114.874 0-18.646 0.653-37.425 0-56.063-0.009-0.261 0-0.523 0-0.784 0-12.202-18.963-12.222-18.963 0 0 15.313 0 30.625 0 45.938 0 36.76 0 73.519 0 110.279 0 44.287 0 88.574 0 132.861 0 38.291 0 76.583 0 114.874 0 18.646-0.654 37.425 0 56.063 0.009 0.26 0 0.522 0 0.784z","M836.614 748.599c-13.12 20.93-26.242 41.862-39.362 62.792-11.127-17.749-22.253-35.499-33.38-53.249-1.994-3.181-3.988-6.362-5.983-9.543-3.838-6.122-12.536-6.123-16.374 0-13.119 20.93-26.237 41.86-39.356 62.79-11.126-17.749-22.25-35.498-33.376-53.247-1.994-3.181-3.988-6.362-5.982-9.543-3.838-6.123-12.536-6.123-16.374 0-13.119 20.929-26.237 41.86-39.355 62.79-11.125-17.748-22.248-35.498-33.373-53.246-1.994-3.181-3.988-6.362-5.982-9.543-3.838-6.123-12.536-6.123-16.374 0-13.119 20.93-26.238 41.86-39.357 62.79-11.125-17.748-22.249-35.498-33.374-53.247-1.994-3.181-3.988-6.362-5.982-9.543-3.838-6.123-12.536-6.123-16.374 0-13.119 20.93-26.238 41.86-39.357 62.79-11.125-17.749-22.249-35.498-33.374-53.247-1.994-3.181-3.988-6.362-5.982-9.543-3.838-6.123-12.536-6.123-16.374 0-13.118 20.929-26.235 41.86-39.353 62.789-11.124-17.748-22.247-35.497-33.371-53.246-1.994-3.181-3.988-6.362-5.981-9.543-3.837-6.123-12.536-6.123-16.374 0-13.118 20.929-26.234 41.86-39.352 62.789-11.124-17.748-22.248-35.497-33.372-53.246-1.994-3.181-3.988-6.362-5.981-9.543-6.466-10.317-22.88-0.81-16.374 9.571 13.853 22.103 27.706 44.206 41.559 66.309 1.994 3.181 3.988 6.362 5.981 9.543 3.837 6.123 12.536 6.123 16.374 0 13.118-20.929 26.234-41.859 39.352-62.789 11.124 17.748 22.247 35.497 33.371 53.245 1.994 3.181 3.988 6.362 5.981 9.543 3.837 6.123 12.536 6.123 16.374 0 13.118-20.929 26.235-41.86 39.354-62.79 11.125 17.748 22.249 35.498 33.374 53.246 1.994 3.181 3.988 6.362 5.982 9.543 3.838 6.123 12.536 6.123 16.374 0 13.119-20.93 26.238-41.86 39.357-62.79 11.125 17.748 22.249 35.498 33.374 53.247 1.994 3.181 3.988 6.362 5.982 9.543 3.838 6.123 12.536 6.123 16.374 0 13.119-20.93 26.238-41.86 39.357-62.79 11.125 17.748 22.249 35.498 33.373 53.247 1.994 3.181 3.988 6.362 5.982 9.543 3.838 6.123 12.536 6.123 16.374 0 13.119-20.93 26.237-41.86 39.356-62.79 11.126 17.749 22.25 35.498 33.376 53.247 1.994 3.181 3.988 6.362 5.982 9.543 3.838 6.123 12.536 6.123 16.374 0 13.119-20.93 26.237-41.861 39.357-62.791 11.127 17.749 22.253 35.499 33.38 53.248 1.994 3.181 3.988 6.362 5.983 9.543 3.838 6.123 12.535 6.123 16.374 0 13.855-22.103 27.712-44.206 41.567-66.309 1.994-3.181 3.988-6.362 5.983-9.543 6.497-10.369-9.904-19.897-16.377-9.57z","M280.178 538.629c58.293 0 105.719-47.425 105.719-105.719s-47.425-105.719-105.719-105.719-105.719 47.425-105.719 105.719 47.425 105.719 105.719 105.719zM280.178 346.155c47.837 0 86.756 38.919 86.756 86.756s-38.919 86.756-86.756 86.756-86.756-38.919-86.756-86.756 38.919-86.756 86.756-86.756z","M402.963 624.91c0 24.873-20.164 45.037-45.037 45.037s-45.037-20.164-45.037-45.037c0-24.873 20.164-45.037 45.037-45.037s45.037 20.164 45.037 45.037z","M679.822 624.91c0 24.873-20.164 45.037-45.037 45.037s-45.037-20.164-45.037-45.037c0-24.873 20.164-45.037 45.037-45.037s45.037 20.164 45.037 45.037z","M734.341 538.629c58.293 0 105.719-47.425 105.719-105.719s-47.425-105.719-105.719-105.719-105.719 47.425-105.719 105.719 47.425 105.719 105.719 105.719zM734.341 346.155c47.837 0 86.756 38.919 86.756 86.756s-38.919 86.756-86.756 86.756-86.756-38.919-86.756-86.756 38.919-86.756 86.756-86.756z","M280.178 497.858c35.813 0 64.948-29.136 64.948-64.948s-29.136-64.948-64.948-64.948-64.948 29.136-64.948 64.948 29.136 64.948 64.948 64.948zM280.178 386.925c25.356 0 45.985 20.629 45.985 45.985s-20.629 45.985-45.985 45.985-45.985-20.629-45.985-45.985 20.629-45.985 45.985-45.985z","M734.341 497.858c35.813 0 64.948-29.136 64.948-64.948s-29.136-64.948-64.948-64.948-64.948 29.136-64.948 64.948 29.136 64.948 64.948 64.948zM734.341 386.925c25.356 0 45.985 20.629 45.985 45.985s-20.629 45.985-45.985 45.985-45.985-20.629-45.985-45.985 20.629-45.985 45.985-45.985z"],"grid":0,"tags":["weird-mask-ii"],"defaultCode":59727},{"paths":["M392.562 393.513c0 32.773-26.568 59.341-59.341 59.341s-59.341-26.568-59.341-59.341c0-32.773 26.568-59.341 59.341-59.341s59.341 26.568 59.341 59.341z","M762.971 393.513c0 32.773-26.568 59.341-59.341 59.341s-59.341-26.568-59.341-59.341c0-32.773 26.568-59.341 59.341-59.341s59.341 26.568 59.341 59.341z","M310.175 196.815c-0.020 0.279-0.040 0.558-0.040 0.85 0.103 39.342 13.76 77.059 40.69 105.975 25.444 27.32 60.279 44.927 96.152 54.048 8.493 2.159 17.098 3.852 25.765 5.134 0.034 0.303 0.070 0.606 0.102 0.909 0.265 2.472 0.494 4.946 0.691 7.424 0.395 4.965 0.654 9.939 0.78 14.918 0.246 9.684-0.013 19.382-0.78 29.039-0.197 2.478-0.427 4.953-0.691 7.424-0.118 1.097-0.241 2.193-0.372 3.289-0.053 0.448-0.302 2.353-0.367 2.888-0.643 4.596-1.397 9.176-2.278 13.732-1.835 9.476-4.191 18.852-7.103 28.055-1.458 4.607-3.054 9.17-4.795 13.679-2.052 5.315-2.253 5.791-4.641 10.952-3.959 8.553-8.482 16.85-13.603 24.763-2.455 3.794-5.062 7.48-7.773 11.096-0.207 0.276-0.333 0.446-0.412 0.556-0.083 0.1-0.224 0.271-0.465 0.569-0.724 0.897-1.442 1.801-2.177 2.689-1.466 1.774-2.967 3.518-4.504 5.23-6.046 6.735-12.65 12.908-19.725 18.549-0.033 0.027-0.053 0.043-0.081 0.064-0.444 0.338-0.888 0.674-1.336 1.007-0.818 0.609-1.642 1.208-2.473 1.8-1.873 1.333-3.776 2.624-5.709 3.868-3.892 2.507-7.905 4.83-12.019 6.953-1.847 0.953-3.714 1.867-5.6 2.74-1.068 0.494-2.143 0.969-3.22 1.443-0.070 0.030-0.119 0.052-0.167 0.074-0.039 0.015-0.064 0.027-0.107 0.044-0.611 0.247-1.22 0.497-1.832 0.739-4.344 1.719-8.77 3.228-13.257 4.527-4.75 1.376-9.568 2.515-14.428 3.427-2.216 0.415-4.44 0.774-6.67 1.104-0.092 0.013-0.158 0.024-0.235 0.035-0.059 0.007-0.124 0.014-0.213 0.026-0.57 0.069-1.14 0.139-1.71 0.205-1.437 0.165-2.877 0.311-4.318 0.439-3.611 0.32-7.229 0.511-10.85 0.606-0.187-0.907-0.375-1.815-0.544-2.726-0.415-2.216-0.774-4.44-1.105-6.67-0.013-0.091-0.023-0.156-0.035-0.232-0.007-0.059-0.015-0.125-0.026-0.215-0.069-0.57-0.139-1.14-0.205-1.71-0.165-1.437-0.311-2.877-0.439-4.318-0.46-5.187-0.667-10.391-0.68-15.598-0.030-12.201-18.993-12.224-18.963 0 0.103 41.666 14.599 81.637 43.179 112.213 26.945 28.829 63.748 47.4 101.674 57.027 40.225 10.211 82.791 11.076 123.488 3.133 38.813-7.576 76.632-24.067 106.122-50.783 30.289-27.439 48.287-64.983 51.988-105.557 0.486-5.331 0.705-10.68 0.719-16.033 0.030-12.203-18.933-12.221-18.963 0-0.013 5.353-0.232 10.702-0.719 16.033-0.104 1.153-0.222 2.304-0.351 3.454-0.064 0.571-0.135 1.142-0.201 1.712-0.018 0.152-0.032 0.276-0.045 0.389-0.004 0.024-0.006 0.036-0.009 0.063-0.358 2.511-0.768 5.013-1.242 7.504-0.15 0.785-0.314 1.566-0.475 2.349-4.27-0.079-8.534-0.291-12.788-0.679-1.153-0.105-2.304-0.222-3.454-0.351-0.571-0.064-1.142-0.135-1.712-0.201-0.152-0.018-0.276-0.032-0.389-0.045-0.024-0.004-0.037-0.006-0.063-0.009-2.51-0.358-5.013-0.768-7.504-1.242-9.44-1.795-18.715-4.462-27.641-8.021-0.34-0.136-1.678-0.7-1.97-0.818-0.88-0.384-1.759-0.771-2.631-1.172-2.125-0.977-4.225-2.004-6.299-3.082-3.994-2.075-7.89-4.337-11.675-6.774-1.933-1.245-3.836-2.534-5.709-3.868-0.83-0.592-1.655-1.192-2.473-1.8-0.409-0.304-0.814-0.611-1.221-0.918-0.064-0.048-0.108-0.082-0.162-0.122-0.089-0.072-0.195-0.157-0.333-0.267-3.575-2.864-7.045-5.846-10.37-8.999-3.235-3.068-6.34-6.274-9.311-9.599-1.448-1.62-2.864-3.269-4.249-4.945-0.653-0.79-1.292-1.591-1.937-2.387-0.138-0.171-0.272-0.344-0.408-0.516-0.061-0.082-0.829-1.066-0.942-1.217-5.513-7.387-10.511-15.122-14.93-23.213-2.208-4.042-4.277-8.16-6.211-12.339-0.445-0.961-0.883-1.926-1.313-2.894-0.164-0.369-0.871-1.996-1.092-2.497-0.19-0.466-0.889-2.155-1.062-2.582-0.498-1.238-0.986-2.481-1.462-3.728-3.369-8.82-6.19-17.846-8.498-27-1.201-4.764-2.263-9.564-3.189-14.389-0.413-2.154-0.8-4.314-1.16-6.479-0.202-1.219-0.396-2.441-0.582-3.664-0.092-0.605-0.39-2.68-0.466-3.195-0.054-0.449-0.308-2.439-0.36-2.879-0.131-1.095-0.255-2.192-0.372-3.289-0.264-2.472-0.494-4.946-0.691-7.424-0.395-4.965-0.654-9.939-0.78-14.918-0.246-9.684 0.013-19.382 0.78-29.039 0.197-2.478 0.428-4.952 0.691-7.424 0.026-0.24 0.055-0.48 0.082-0.719 4.595-0.649 9.172-1.406 13.724-2.289 36.742-7.122 72.549-22.714 100.477-47.977 28.709-25.971 45.748-61.52 49.259-99.948 0.46-5.033 0.667-10.082 0.68-15.135 0.002-0.746-0.069-1.446-0.201-2.101 4.617-5.334 2.349-16.036-6.837-16.013-41.666 0.103-81.637 14.599-112.214 43.178-28.829 26.946-47.4 63.748-57.027 101.675-1.802 7.1-3.307 14.272-4.53 21.495-0.247 0.020-0.495 0.044-0.743 0.064-4.549 0.354-9.108 0.589-13.669 0.704-9.127 0.231-18.266-0.013-27.367-0.737-0.634-0.050-1.267-0.12-1.901-0.175-0.414-2.463-0.859-4.922-1.338-7.373-7.576-38.813-24.067-76.632-50.784-106.122-27.439-30.289-64.983-48.287-105.557-51.989-5.331-0.486-10.681-0.705-16.033-0.719-9.958-0.022-11.794 12.612-5.481 17.267zM339.628 252.455c-0.173-0.401-0.611-1.489 0 0v0zM684.425 252.334c0.194-0.452 0.481-1.102 0 0v0zM564.557 302.090c2.052-5.315 2.253-5.791 4.641-10.952 3.958-8.553 8.482-16.85 13.602-24.763 2.456-3.794 5.062-7.48 7.773-11.096 0.207-0.276 0.333-0.446 0.412-0.556 0.083-0.1 0.224-0.271 0.465-0.569 0.725-0.897 1.442-1.801 2.177-2.689 1.466-1.774 2.967-3.518 4.504-5.23 6.046-6.735 12.65-12.908 19.725-18.549 0.033-0.027 0.054-0.043 0.081-0.064 0.444-0.338 0.888-0.674 1.336-1.007 0.818-0.609 1.642-1.208 2.473-1.8 1.873-1.333 3.776-2.624 5.709-3.868 3.892-2.507 7.905-4.83 12.020-6.953 1.846-0.953 3.714-1.867 5.6-2.74 1.068-0.494 2.143-0.969 3.22-1.443 0.070-0.031 0.119-0.053 0.167-0.074 0.039-0.015 0.064-0.027 0.106-0.043 0.611-0.247 1.22-0.497 1.833-0.739 4.343-1.719 8.77-3.228 13.257-4.527 4.749-1.376 9.567-2.515 14.427-3.427 2.216-0.415 4.44-0.774 6.67-1.104 0.092-0.013 0.157-0.024 0.234-0.035 0.059-0.007 0.124-0.014 0.213-0.026 0.57-0.069 1.14-0.139 1.71-0.205 1.437-0.165 2.877-0.311 4.318-0.439 1.218-0.108 2.438-0.199 3.658-0.281-0.042 4.636-0.241 9.268-0.664 13.887-0.512 5.597-0.616 6.415-1.732 12.266-1.7 8.917-4.26 17.618-7.579 26.064-0.178 0.452-0.364 0.902-0.549 1.352-0.003 0.008-0.006 0.013-0.009 0.021-0.418 0.958-0.842 1.913-1.279 2.862-0.923 2.004-1.895 3.986-2.915 5.943-1.959 3.762-4.094 7.432-6.393 10.996-1.106 1.716-2.253 3.408-3.434 5.074-0.59 0.832-1.189 1.655-1.797 2.474-0.303 0.409-0.611 0.815-0.917 1.221-0.042 0.055-0.068 0.090-0.103 0.137-0.076 0.093-0.165 0.203-0.287 0.355-2.63 3.27-5.36 6.451-8.245 9.5-2.888 3.052-5.905 5.982-9.035 8.786-1.523 1.364-3.073 2.697-4.647 4.002-0.789 0.654-1.588 1.294-2.386 1.938-0.172 0.138-0.347 0.274-0.521 0.411-0.104 0.078-1.064 0.824-1.214 0.935-6.869 5.114-14.060 9.755-21.573 13.867-3.923 2.147-7.923 4.155-11.985 6.027-0.961 0.444-1.927 0.88-2.895 1.307-0.359 0.159-1.689 0.731-1.982 0.862-1.895 0.79-3.801 1.553-5.719 2.286-8.437 3.226-17.075 5.921-25.837 8.116-6.097 1.527-12.257 2.802-18.454 3.854 1.823-9.351 4.152-18.605 7.026-27.688 1.455-4.606 3.052-9.17 4.793-13.678zM530.499 365.020c-2.724 27.621-1.358 55.662 3.953 82.87 7.576 38.813 24.067 76.632 50.784 106.122 27.439 30.289 64.983 48.287 105.557 51.989 2.546 0.232 5.096 0.4 7.649 0.517-0.752 2.182-1.553 4.347-2.408 6.491-0.136 0.34-0.7 1.678-0.818 1.97-0.384 0.88-0.77 1.759-1.171 2.632-0.977 2.125-2.004 4.225-3.082 6.299-2.075 3.994-4.337 7.89-6.774 11.675-1.245 1.932-2.534 3.836-3.868 5.709-0.592 0.831-1.191 1.655-1.8 2.473-0.304 0.409-0.612 0.815-0.918 1.221-0.048 0.064-0.081 0.107-0.12 0.16-0.072 0.089-0.158 0.195-0.269 0.334-2.864 3.575-5.846 7.045-8.999 10.369-3.068 3.235-6.274 6.34-9.599 9.311-1.62 1.448-3.269 2.864-4.945 4.25-0.79 0.653-1.591 1.292-2.387 1.938-0.17 0.137-0.343 0.271-0.514 0.406-0.074 0.055-1.067 0.83-1.219 0.943-7.388 5.513-15.122 10.511-23.213 14.93-4.042 2.208-8.159 4.277-12.339 6.211-0.961 0.445-1.926 0.883-2.894 1.313-0.369 0.164-1.994 0.87-2.496 1.091-0.464 0.189-2.156 0.89-2.584 1.062-1.238 0.499-2.481 0.985-3.728 1.462-8.82 3.368-17.846 6.19-27 8.498-4.763 1.201-9.563 2.263-14.388 3.189-2.154 0.413-4.314 0.8-6.479 1.16-1.22 0.203-2.441 0.396-3.664 0.582-0.605 0.092-2.677 0.389-3.193 0.466-0.447 0.054-2.441 0.308-2.88 0.36-1.096 0.131-2.192 0.254-3.289 0.372-2.471 0.265-4.946 0.494-7.424 0.691-4.965 0.394-9.939 0.654-14.918 0.78-9.684 0.246-19.382-0.013-29.039-0.78-2.478-0.197-4.953-0.428-7.424-0.691-1.097-0.118-2.193-0.241-3.289-0.372-0.448-0.053-2.353-0.302-2.888-0.368-4.596-0.643-9.175-1.397-13.731-2.278-9.476-1.834-18.852-4.191-28.055-7.103-4.607-1.457-9.17-3.054-13.679-4.795-5.315-2.052-5.791-2.253-10.952-4.641-8.553-3.959-16.85-8.482-24.763-13.602-3.794-2.455-7.48-5.062-11.096-7.773-0.276-0.207-0.447-0.333-0.556-0.412-0.1-0.083-0.271-0.224-0.569-0.465-0.897-0.724-1.801-1.442-2.689-2.177-1.774-1.466-3.518-2.968-5.23-4.505-6.735-6.046-12.908-12.65-18.548-19.725-0.026-0.032-0.042-0.052-0.064-0.080-0.338-0.445-0.675-0.889-1.008-1.337-0.609-0.818-1.208-1.642-1.8-2.473-1.334-1.873-2.624-3.776-3.868-5.709-2.507-3.893-4.829-7.905-6.953-12.020-0.953-1.847-1.867-3.714-2.74-5.6-0.494-1.068-0.969-2.143-1.443-3.22-0.030-0.069-0.052-0.119-0.074-0.166-0.015-0.039-0.027-0.065-0.044-0.108-0.247-0.61-0.496-1.22-0.739-1.832-0.814-2.057-1.578-4.135-2.297-6.227 38.076-2.192 74.197-16.556 102.353-42.872 28.829-26.946 47.4-63.748 57.027-101.675 8.006-31.542 10.265-64.522 7.038-96.913 12.827 0.952 25.723 0.962 38.556 0.071zM335.15 199.582c0.572 0.064 1.142 0.135 1.712 0.201 0.152 0.018 0.275 0.032 0.387 0.045 0.024 0.004 0.038 0.006 0.064 0.009 2.511 0.358 5.013 0.768 7.504 1.242 9.44 1.795 18.715 4.462 27.641 8.021 0.34 0.136 1.676 0.7 1.97 0.818 0.88 0.385 1.759 0.771 2.632 1.172 2.124 0.977 4.225 2.004 6.299 3.082 3.994 2.075 7.89 4.337 11.675 6.774 1.933 1.245 3.836 2.534 5.709 3.868 0.831 0.592 1.655 1.192 2.473 1.8 0.409 0.304 0.815 0.612 1.222 0.918 0.064 0.048 0.107 0.081 0.161 0.121 0.089 0.072 0.195 0.157 0.333 0.268 3.575 2.864 7.045 5.846 10.37 8.999 3.235 3.068 6.34 6.274 9.311 9.599 1.448 1.62 2.864 3.269 4.249 4.945 0.653 0.79 1.292 1.591 1.938 2.387 0.137 0.17 0.271 0.343 0.407 0.516 0.059 0.079 0.83 1.066 0.942 1.218 5.513 7.387 10.511 15.122 14.931 23.213 2.208 4.042 4.277 8.16 6.211 12.339 0.445 0.961 0.883 1.926 1.313 2.894 0.164 0.369 0.87 1.993 1.091 2.496 0.189 0.464 0.889 2.156 1.062 2.584 0.498 1.238 0.986 2.481 1.462 3.728 3.368 8.82 6.19 17.846 8.498 27 1.114 4.416 2.094 8.866 2.971 13.336-1.365-0.242-2.734-0.471-4.096-0.736-8.805-1.708-17.518-3.894-26.073-6.587-4.352-1.37-8.663-2.871-12.922-4.509-1.793-0.689-3.576-1.404-5.349-2.145-0.293-0.131-1.654-0.717-1.977-0.86-1.089-0.482-2.174-0.974-3.255-1.474-7.953-3.687-15.671-7.892-23.037-12.646-3.58-2.311-7.053-4.766-10.469-7.313-0.283-0.21-0.454-0.337-0.564-0.416-0.101-0.084-0.27-0.223-0.561-0.459-0.797-0.644-1.6-1.281-2.39-1.933-1.676-1.382-3.324-2.797-4.943-4.247-6.36-5.696-12.182-11.922-17.516-18.586-0.039-0.048-0.066-0.082-0.095-0.118-0.25-0.329-0.501-0.659-0.748-0.99-0.611-0.816-1.211-1.639-1.802-2.469-1.261-1.766-2.48-3.562-3.656-5.385-2.37-3.672-4.564-7.458-6.573-11.34-0.954-1.845-1.867-3.712-2.735-5.599-0.437-0.949-0.859-1.906-1.279-2.862-0.002-0.005-0.005-0.012-0.008-0.018-0.234-0.573-0.467-1.146-0.696-1.723-1.621-4.092-3.045-8.263-4.271-12.49-1.301-4.482-2.379-9.030-3.24-13.617-0.377-2.012-0.706-4.032-1.003-6.057-0.029-0.276-0.26-2.013-0.298-2.348-0.146-1.293-0.277-2.588-0.392-3.886-0.393-4.436-0.581-8.884-0.624-13.337 0.86 0.064 1.72 0.125 2.58 0.204 1.151 0.106 2.302 0.223 3.452 0.352z","M814.974 558.684c0.021-12.203-18.942-12.221-18.963 0-0.013 7.583-0.325 15.164-1.003 22.718-0.155 1.729-0.329 3.457-0.521 5.183-0.112 0.999-0.231 1.997-0.353 2.995-0.046 0.375-0.095 0.75-0.143 1.125-0.008 0.051-0.015 0.103-0.026 0.174-0.502 3.486-1.063 6.963-1.714 10.426-2.579 13.701-6.435 27.162-11.597 40.114-0.293 0.734-0.593 1.464-0.889 2.196-0.121 0.299-0.2 0.494-0.251 0.621 0.029-0.075 0.043-0.114-0.014 0.018-0.676 1.56-1.361 3.116-2.069 4.66-1.408 3.069-2.89 6.104-4.446 9.101-3.020 5.82-6.317 11.497-9.869 17.008-1.73 2.683-3.52 5.327-5.37 7.928-0.96 1.35-1.935 2.689-2.925 4.016-0.457 0.613-0.919 1.22-1.381 1.829-0.005 0.007-0.006 0.008-0.010 0.014-0.203 0.261-0.407 0.522-0.613 0.782-4.028 5.083-8.256 10.002-12.702 14.724-4.453 4.728-9.109 9.265-13.943 13.604-2.472 2.22-4.992 4.388-7.554 6.504-1.185 0.979-2.379 1.947-3.582 2.904-0.603 0.479-1.208 0.954-1.814 1.429-0.181 0.142-0.275 0.216-0.322 0.255-0.131 0.097-0.373 0.277-0.814 0.609-10.578 7.95-21.709 15.121-33.315 21.477-5.884 3.223-11.881 6.24-17.969 9.059-2.842 1.315-5.705 2.584-8.585 3.813-0.405 0.169-1.298 0.543-1.55 0.648-0.739 0.304-1.479 0.606-2.221 0.905-1.609 0.649-3.223 1.284-4.841 1.906-12.836 4.935-25.979 9.061-39.31 12.429-6.879 1.738-13.809 3.274-20.777 4.613-3.366 0.647-6.741 1.248-10.123 1.802-1.627 0.267-3.256 0.523-4.886 0.77-0.951 0.144-1.904 0.284-2.857 0.421-0.313 0.045-1.48 0.207-1.986 0.279-0.456 0.059-1.402 0.184-1.631 0.212-0.82 0.104-1.64 0.206-2.46 0.305-1.78 0.214-3.56 0.417-5.343 0.608-3.569 0.381-7.143 0.713-10.722 0.997-7.031 0.557-14.078 0.926-21.129 1.108-14.108 0.366-28.237-0.013-42.304-1.142-3.577-0.287-7.152-0.623-10.721-1.008-1.644-0.177-3.288-0.365-4.931-0.563-0.82-0.099-1.64-0.201-2.46-0.305-0.351-0.045-1.208-0.159-1.63-0.214-6.916-0.957-13.806-2.094-20.66-3.426-13.607-2.645-27.070-6.042-40.283-10.233-6.523-2.070-12.986-4.333-19.372-6.797-1.494-0.576-2.983-1.163-4.468-1.762-0.741-0.299-1.481-0.6-2.221-0.905-0.369-0.152-0.738-0.305-1.106-0.458-0.096-0.040-0.168-0.069-0.246-0.101-0.023-0.009-0.036-0.016-0.063-0.027-3.045-1.304-6.075-2.646-9.079-4.042-12.106-5.623-23.851-12.036-35.063-19.281-5.639-3.643-11.113-7.515-16.474-11.553-0.152-0.115-0.254-0.191-0.332-0.248-0.056-0.044-0.116-0.091-0.191-0.15-0.606-0.475-1.211-0.95-1.814-1.429-1.304-1.036-2.596-2.086-3.878-3.149-2.558-2.12-5.074-4.292-7.543-6.516-9.658-8.698-18.517-18.195-26.596-28.372-0.167-0.21-0.282-0.355-0.364-0.459 0.041 0.050 0.054 0.064-0.023-0.037-0.461-0.609-0.923-1.216-1.381-1.829-1.067-1.43-2.115-2.872-3.147-4.328-1.845-2.606-3.631-5.253-5.356-7.939-3.544-5.518-6.83-11.203-9.84-17.030-1.55-3.001-3.027-6.040-4.43-9.113-0.651-1.428-1.282-2.864-1.906-4.305-0.057-0.132-0.043-0.092-0.014-0.018-0.051-0.127-0.13-0.322-0.251-0.621-0.346-0.854-0.696-1.707-1.035-2.563-2.557-6.452-4.795-13.032-6.708-19.703-1.932-6.737-3.536-13.566-4.819-20.456-0.627-3.363-1.171-6.739-1.651-10.126-0.048-0.361-0.121-0.903-0.156-1.186-0.121-0.997-0.241-1.996-0.353-2.995-0.209-1.87-0.395-3.742-0.56-5.617-0.652-7.41-0.951-14.845-0.964-22.282-0.021-12.201-18.984-12.223-18.963 0 0.012 7.058 0.305 14.127 0.876 21.177-0.556 1.175-0.879 2.551-0.876 4.141 0.050 31.322 4.948 62.888 16.13 92.222 10.318 27.069 25.368 51.888 44.625 73.538 18.595 20.907 40.989 38.511 65.182 52.502 24.719 14.295 51.594 25.036 79.164 32.391 28.396 7.576 57.829 11.669 87.197 12.491 29.482 0.825 59.119-1.772 88.018-7.667 28.21-5.754 55.726-14.951 81.607-27.59 25.251-12.332 48.869-28.319 69.273-47.678 20.374-19.331 37.55-42.315 49.83-67.594 13.517-27.822 21.246-57.809 23.904-88.587 0.69-7.99 1.006-16.007 1.019-24.026 0.003-1.592-0.323-2.971-0.883-4.148 0.587-7.043 0.871-14.105 0.884-21.17zM750.424 724.804c-0.142 0.188-0.224 0.297-0.271 0.361-0.091 0.113-0.215 0.268-0.387 0.485-1.047 1.316-2.094 2.632-3.162 3.931-2.133 2.593-4.324 5.14-6.568 7.637-8.886 9.89-18.616 19.013-28.994 27.321-0.707 0.566-1.419 1.125-2.13 1.687-0.13 0.102-0.219 0.174-0.293 0.232-0.066 0.050-0.145 0.11-0.247 0.187-1.342 1.019-2.688 2.032-4.047 3.029-2.722 1.998-5.483 3.942-8.279 5.834-5.619 3.802-11.381 7.393-17.263 10.773-5.925 3.405-11.971 6.596-18.119 9.578-2.972 1.442-5.969 2.835-8.987 4.18-1.538 0.686-3.082 1.356-4.632 2.018-0.259 0.109-0.519 0.218-0.778 0.324-0.861 0.352-1.72 0.708-2.583 1.056-12.916 5.214-26.172 9.58-39.636 13.138-13.502 3.569-27.217 6.326-41.041 8.303-0.214 0.030-1.072 0.151-1.545 0.217-0.515 0.066-1.738 0.228-2.013 0.263-1.759 0.222-3.52 0.431-5.283 0.629-3.529 0.394-7.064 0.739-10.602 1.033-7.088 0.59-14.192 0.98-21.302 1.172-14.088 0.379-28.197-0.021-42.241-1.205-3.538-0.299-7.071-0.647-10.6-1.045-1.626-0.184-3.252-0.378-4.876-0.583-0.344-0.044-1.514-0.197-1.998-0.261-0.505-0.072-1.658-0.233-1.964-0.278-6.995-1.009-13.962-2.217-20.887-3.63-13.604-2.774-27.050-6.334-40.225-10.715-6.584-2.189-13.1-4.584-19.53-7.19-0.739-0.3-1.475-0.605-2.213-0.906-0.259-0.106-0.517-0.214-0.775-0.322-1.672-0.715-3.338-1.439-4.999-2.182-3.136-1.402-6.248-2.857-9.335-4.364-12.115-5.916-23.837-12.649-34.994-20.223-2.793-1.896-5.55-3.845-8.27-5.845-1.253-0.922-2.494-1.858-3.733-2.799-0.101-0.077-0.179-0.137-0.247-0.187-0.073-0.059-0.163-0.13-0.293-0.232-0.813-0.642-1.626-1.281-2.433-1.929-5.136-4.123-10.112-8.447-14.904-12.965-4.88-4.601-9.571-9.405-14.045-14.402-2.24-2.502-4.426-5.052-6.556-7.649-1.067-1.301-2.113-2.617-3.155-3.936-0.092-0.116-0.158-0.199-0.214-0.269-0.053-0.071-0.117-0.155-0.204-0.271-0.547-0.724-1.095-1.447-1.637-2.175-3.396-4.571-6.607-9.277-9.645-14.092 2.478 2.935 5.027 5.816 7.66 8.631 18.715 20.008 41.053 36.719 65.015 49.926 24.89 13.718 51.773 23.961 79.299 30.949 28.37 7.201 57.683 11.092 86.935 11.881 29.522 0.796 59.172-1.687 88.162-7.324 28.191-5.482 55.688-14.267 81.727-26.403 25.047-11.674 48.536-26.836 69.057-45.379 7.593-6.861 14.765-14.236 21.418-22.059-3.067 4.848-6.31 9.585-9.739 14.183-0.461 0.623-0.93 1.243-1.4 1.863z"],"grid":0,"tags":["weird-mask"],"defaultCode":59728},{"paths":["M789.574 480.345c12.632 0 25.265 0 37.898 0 8.914 0 17.852 0.192 26.763 0 0.386-0.009 0.774 0 1.161 0 7.439 0 14.566-6.541 14.222-14.222-0.345-7.706-6.249-14.222-14.222-14.222-6.106 0-12.213 0-18.319 0-13.864 0-27.727 0-41.591 0 19.247-18 38.496-36 57.743-54 4.074-3.811 8.148-7.62 12.223-11.431 5.611-5.248 5.303-14.81 0-20.113-5.596-5.596-14.487-5.262-20.113 0-28.63 26.775-57.26 53.549-85.89 80.323-1.861 1.74-3.722 3.481-5.583 5.221-13.603 0-27.205 0-40.808 0-30.027 0-60.053 0-90.080 0-32.252 0-64.503 0-96.756 0 0-8 0-16 0-24 0-2.12 0-4.239 0-6.359 0-21.279 0-42.559 0-63.838 18.098 0 36.197 0 54.294 0 45.002 0 90.004 0 135.005 0 21.759 0 43.618 0.608 65.371 0 0.306-0.009 0.613 0 0.919 0 7.689 0 14.222-6.517 14.222-14.222 0-20.048 0-40.094 0-60.141 0-31.96 0-63.92 0-95.881 0-7.345 0-14.691 0-22.036 0-7.439-6.541-14.566-14.222-14.222-7.706 0.345-14.222 6.249-14.222 14.222 0 20.048 0 40.094 0 60.141 0 31.96 0 63.92 0 95.881 0 2.605 0 5.209 0 7.814-13.205 0-26.409 0-39.613 0-23.948 0-47.897 0-71.845 0 0-14.561 0-29.121 0-43.682 0-30.805 0-61.611 0-92.416 0-7.126 0-14.252 0-21.378 0-7.439-6.541-14.566-14.222-14.222-7.706 0.345-14.222 6.249-14.222 14.222 0 19.301 0 38.603 0 57.904 0 30.805 0 61.611 0 92.416 0 2.386 0 4.771 0 7.156-9.645 0-19.289 0-28.934 0-24.177 0-48.354 0-72.53 0 0-0.203 0-0.407 0-0.611 0-24.17 0-48.339 0-72.51 0-2.12 0-4.239 0-6.359 0-16.691 0-33.382 0-50.074 0-6.897 0.11-13.808 0.073-20.711 0.019-4.14 0.016-8.278-0.073-12.411-0.009-0.386 0-0.774 0-1.161 0-7.439-6.541-14.566-14.222-14.222-7.706 0.345-14.222 6.249-14.222 14.222 0 2.12 0 4.239 0 6.359 0 3.987 0 7.973 0 11.96 0 2.12 0 4.239 0 6.359 0 14.501 0 29.002 0 43.504 0 2.12 0 4.239 0 6.359 0 22.599 0 45.198 0 67.797 0 2.12 0 4.239 0 6.359 0 5.046 0 10.092 0 15.138-18.098 0-36.197 0-54.294 0-21.477 0-42.954 0-64.431 0 0-14.561 0-29.121 0-43.682 0-30.805 0-61.611 0-92.416 0-7.126 0-14.252 0-21.378 0-7.439-6.541-14.566-14.222-14.222-7.706 0.345-14.222 6.249-14.222 14.222 0 19.301 0 38.603 0 57.904 0 30.805 0 61.611 0 92.416 0 2.386 0 4.771 0 7.156-14.043 0-28.086 0-42.129 0-14.744 0-29.487 0-44.23 0-2.601 0-5.217-0.050-7.837-0.096 0-15.275 0-30.549 0-45.824 0-31.96 0-63.92 0-95.881 0-7.345 0-14.691 0-22.036 0-7.439-6.541-14.566-14.222-14.222-7.706 0.345-14.222 6.249-14.222 14.222 0 20.048 0 40.094 0 60.141 0 31.96 0 63.92 0 95.881 0 7.345 0 14.691 0 22.036 0 7.689 6.517 14.222 14.222 14.222 17.946 0 35.89 0 53.835 0 43.074 0 86.149 0 129.223 0 24.177 0 48.354 0 72.53 0 0 13.379 0 26.759 0 40.138 0 2.12 0 4.239 0 6.359 0 15.899 0 31.8 0 47.699-24.352 0-48.704 0-73.057 0-30.964 0-61.928 0-92.892 0-19.918 0-39.835 0-59.752 0-27.064-25.31-54.129-50.62-81.193-75.931-4.074-3.811-8.148-7.62-12.224-11.431-5.608-5.245-14.554-5.559-20.113 0-5.304 5.304-5.63 14.848 0 20.113 23.969 22.416 47.939 44.832 71.909 67.248-11.31 0-22.619 0-33.929 0-8.914 0-17.852-0.192-26.763 0-0.386 0.009-0.774 0-1.161 0-7.439 0-14.566 6.541-14.222 14.222 0.345 7.706 6.249 14.222 14.222 14.222 6.106 0 12.213 0 18.319 0 15.228 0 30.457 0 45.686 0-19.685 19.685-39.37 39.37-59.054 59.054-3.942 3.942-7.885 7.885-11.827 11.827-5.432 5.431-5.432 14.682 0 20.113 5.45 5.45 14.665 5.449 20.113 0 27.702-27.702 55.404-55.404 83.107-83.106 2.629-2.629 5.258-5.259 7.889-7.889 12.702 0 25.404 0 38.106 0 30.027 0 60.053 0 90.080 0 32.252 0 64.503 0 96.756 0 0 5.385 0 10.772 0 16.157 0 2.12 0 4.239 0 6.359 0 31.079 0 62.159 0 93.238 0 2.12 0 4.239 0 6.359 0 21.279 0 42.559 0 63.838-18.098 0-36.197 0-54.294 0-45.002 0-90.003 0-135.005 0-21.759 0-43.618-0.608-65.371 0-0.306 0.009-0.613 0-0.919 0-7.689 0-14.222 6.517-14.222 14.222 0 20.047 0 40.094 0 60.141 0 31.96 0 63.92 0 95.881 0 7.345 0 14.691 0 22.036 0 7.439 6.541 14.566 14.222 14.222 7.706-0.345 14.222-6.249 14.222-14.222 0-20.048 0-40.094 0-60.141 0-31.96 0-63.92 0-95.881 0-2.605 0-5.209 0-7.814 13.205 0 26.409 0 39.613 0 18.195 0 36.39 0 54.584 0 0 14.561 0 29.121 0 43.681 0 30.805 0 61.611 0 92.416 0 7.126 0 14.252 0 21.378 0 7.439 6.541 14.566 14.222 14.222 7.706-0.345 14.222-6.249 14.222-14.222 0-19.301 0-38.603 0-57.904 0-30.805 0-61.611 0-92.416 0-2.386 0-4.771 0-7.156 15.398 0 30.797 0 46.195 0 24.177 0 48.354 0 72.53 0 0 0.203 0 0.407 0 0.611 0 24.17 0 48.339 0 72.51 0 2.12 0 4.239 0 6.359 0 16.691 0 33.382 0 50.074 0 6.897-0.11 13.808-0.073 20.711-0.019 4.139-0.016 8.278 0.073 12.411 0.009 0.386 0 0.774 0 1.161 0 7.439 6.541 14.566 14.222 14.222 7.706-0.345 14.222-6.249 14.222-14.222 0-2.12 0-4.239 0-6.359 0-3.987 0-7.973 0-11.96 0-2.12 0-4.239 0-6.359 0-14.501 0-29.002 0-43.504 0-2.12 0-4.239 0-6.359 0-22.599 0-45.198 0-67.797 0-2.12 0-4.239 0-6.359 0-5.046 0-10.092 0-15.138 18.098 0 36.197 0 54.294 0 15.723 0 31.447 0 47.17 0 0 14.561 0 29.121 0 43.681 0 30.805 0 61.611 0 92.416 0 7.126 0 14.252 0 21.378 0 7.439 6.541 14.566 14.222 14.222 7.706-0.345 14.222-6.249 14.222-14.222 0-19.301 0-38.603 0-57.904 0-30.805 0-61.611 0-92.416 0-2.386 0-4.771 0-7.156 19.796 0 39.594 0 59.39 0 14.744 0 29.487 0 44.23 0 2.601 0 5.217 0.050 7.837 0.096 0 15.275 0 30.549 0 45.824 0 31.96 0 63.92 0 95.881 0 7.345 0 14.691 0 22.036 0 7.439 6.541 14.566 14.222 14.222 7.706-0.345 14.222-6.249 14.222-14.222 0-20.048 0-40.094 0-60.141 0-31.96 0-63.92 0-95.881 0-7.345 0-14.691 0-22.036 0-7.689-6.517-14.222-14.222-14.222-17.946 0-35.89 0-53.835 0-43.074 0-86.149 0-129.223 0-24.177 0-48.354 0-72.53 0 0-13.379 0-26.759 0-40.138 0-2.12 0-4.239 0-6.359 0-30.766 0-61.534 0-92.301 0-2.12 0-4.239 0-6.359 0-13.598 0-27.196 0-40.793 24.352 0 48.704 0 73.057 0 30.964 0 61.928 0 92.892 0 19.059 0 38.117 0 57.176 0 26.995 26.995 53.99 53.99 80.985 80.985 3.942 3.942 7.885 7.885 11.827 11.827 5.432 5.432 14.682 5.432 20.113 0 5.45-5.45 5.449-14.665 0-20.113-24.232-24.233-48.466-48.466-72.698-72.698z"],"grid":0,"tags":["weird-religion-ii"],"defaultCode":59729},{"paths":["M837.762 419.904c-22.735-10.362-47.813-11.606-72.161-7.065-9.521 1.776-18.767 4.829-28.059 7.513-42.599 12.304-85.199 24.609-127.798 36.913-29.225 8.441-58.56 16.582-87.73 25.227 0-16.911 0-33.822 0-50.734 0-51.983 0-103.967 0-155.95 0-21.69 0.537-43.471 0.224-65.182 0.009-0.757 0.015-1.513 0.016-2.269 8.416 0 16.832 0 25.248 0 27.831 0 55.662 0 83.494 0 33.823 0 67.646 0 101.469 0 29.126 0 58.252 0 87.378 0 14.217 0 28.566 0.568 42.775 0 0.204-0.009 0.41 0 0.613 0 12.202 0 12.222-18.963 0-18.963-11.657 0-23.313 0-34.97 0-27.831 0-55.662 0-83.494 0-33.823 0-67.646 0-101.469 0-29.126 0-58.252 0-87.378 0-14.217 0-28.566-0.568-42.775 0-0.204 0.009-0.41 0-0.613 0-2.16 0-4.178 0.777-5.795 2.054-2.172 1.5-3.686 3.975-3.686 7.428 0 20.868 0 41.735 0 62.602 0 49.773 0 99.545 0 149.318 0 25.819 0 51.637 0 77.456-24.259 7.007-48.52 14.015-72.779 21.021-43.915 12.684-87.83 25.369-131.744 38.053-11.633 3.36-23.267 6.72-34.899 10.081-0.734 0.212-1.466 0.442-2.204 0.637-2.004 0.529-4.050 0.946-6.083 1.354-1.313 0.264-2.63 0.51-3.951 0.738-0.974 0.168-1.949 0.323-2.927 0.473-0.413 0.064-0.613 0.097-0.701 0.113-0.135 0.015-0.333 0.038-0.632 0.075-5.808 0.701-11.662 1.039-17.513 0.92-2.753-0.056-5.505-0.21-8.247-0.471-0.438-0.042-2.69-0.31-2.726-0.297-1.289-0.188-2.576-0.398-3.857-0.637-5.070-0.944-10.066-2.284-14.912-4.048-1.064-0.387-2.115-0.8-3.165-1.223-0.068-0.032-0.13-0.061-0.214-0.1-0.454-0.21-0.913-0.411-1.366-0.623-2.236-1.043-4.427-2.184-6.562-3.42-1.986-1.15-3.924-2.385-5.806-3.7-0.673-0.471-1.333-0.961-1.991-1.453-0.090-0.101-1.932-1.567-2.275-1.861-3.457-2.968-6.561-6.246-9.495-9.725-0.252-0.299-0.408-0.478-0.509-0.591-0.061-0.095-0.161-0.244-0.335-0.49-0.594-0.846-1.208-1.674-1.786-2.531-1.281-1.897-2.477-3.852-3.581-5.858-1.051-1.908-1.972-3.867-2.897-5.839-0.101-0.216-0.172-0.36-0.226-0.468-0.052-0.156-0.134-0.391-0.267-0.758-0.433-1.187-0.88-2.366-1.277-3.566-1.329-4.016-2.272-8.122-2.966-12.289-0.054-0.431-0.247-1.807-0.285-2.191-0.104-1.056-0.188-2.114-0.25-3.173-0.14-2.379-0.175-4.764-0.109-7.147 0.064-2.306 0.278-4.59 0.477-6.886 0.029-0.336 0.043-0.536 0.048-0.66 0.034-0.173 0.082-0.431 0.151-0.838 0.23-1.349 0.459-2.695 0.736-4.035 1.007-4.893 2.43-9.698 4.214-14.363 0.188-0.492 0.386-0.98 0.576-1.472 0.043-0.109 0.075-0.192 0.107-0.278 0.005-0.011 0.008-0.017 0.013-0.029 0.486-1.107 0.984-2.209 1.506-3.301 1.187-2.479 2.475-4.911 3.854-7.289 1.354-2.333 2.796-4.616 4.318-6.844 1.947-2.851 2.902-4.111 4.33-5.87 17.13-21.098 39.965-35.566 65.429-45.72 7.953-3.172 16.068-5.899 24.283-8.305 11.687-3.422 6.714-21.728-5.041-18.286-51.794 15.166-108.538 48.154-121.477 104.876-9.273 40.65 9.678 83.485 48.203 101.044 22.735 10.362 47.813 11.606 72.161 7.065 9.521-1.776 18.767-4.829 28.059-7.513 42.599-12.304 85.199-24.609 127.798-36.913 29.581-8.544 59.273-16.783 88.795-25.546 0 28.048 0 56.097 0 84.145 0 51.983 0 103.967 0 155.95 0 21.691-0.538 43.473-0.224 65.184-0.009 0.756-0.015 1.511-0.017 2.266-8.416 0-16.832 0-25.248 0-27.831 0-55.662 0-83.493 0-33.823 0-67.646 0-101.469 0-29.126 0-58.252 0-87.378 0-14.217 0-28.566-0.568-42.775 0-0.204 0.009-0.41 0-0.613 0-12.202 0-12.222 18.963 0 18.963 11.657 0 23.313 0 34.97 0 27.831 0 55.662 0 83.494 0 33.823 0 67.646 0 101.469 0 29.126 0 58.252 0 87.379 0 14.217 0 28.566 0.568 42.775 0 0.204-0.009 0.41 0 0.613 0 2.159 0 4.178-0.777 5.795-2.054 2.172-1.5 3.686-3.975 3.686-7.428 0-20.868 0-41.735 0-62.602 0-49.773 0-99.545 0-149.318 0-36.952 0-73.904 0-110.857 23.905-6.904 47.809-13.81 71.714-20.714 43.915-12.684 87.83-25.369 131.744-38.053 11.633-3.36 23.267-6.72 34.899-10.081 0.734-0.212 1.466-0.442 2.204-0.637 2.004-0.529 4.050-0.946 6.083-1.354 1.313-0.264 2.63-0.51 3.951-0.738 0.974-0.168 1.949-0.323 2.927-0.473 0.411-0.063 0.613-0.096 0.7-0.113 0.136-0.015 0.333-0.038 0.633-0.075 5.808-0.701 11.662-1.039 17.513-0.92 2.753 0.056 5.505 0.21 8.247 0.471 0.438 0.042 2.69 0.31 2.726 0.297 1.289 0.188 2.576 0.398 3.857 0.637 5.070 0.944 10.066 2.285 14.912 4.048 1.063 0.387 2.115 0.8 3.165 1.223 0.069 0.032 0.13 0.061 0.215 0.101 0.454 0.21 0.913 0.411 1.366 0.623 2.236 1.043 4.427 2.184 6.562 3.42 1.986 1.151 3.924 2.385 5.806 3.7 0.673 0.471 1.333 0.961 1.991 1.453 0.090 0.101 1.932 1.567 2.275 1.861 3.457 2.968 6.561 6.246 9.495 9.725 0.252 0.299 0.408 0.478 0.509 0.591 0.061 0.095 0.161 0.244 0.335 0.49 0.594 0.846 1.208 1.674 1.786 2.531 1.281 1.897 2.477 3.852 3.581 5.858 1.051 1.908 1.972 3.867 2.897 5.839 0.101 0.216 0.172 0.36 0.226 0.468 0.052 0.156 0.134 0.391 0.267 0.758 0.434 1.187 0.88 2.366 1.277 3.566 1.329 4.016 2.272 8.122 2.966 12.289 0.054 0.431 0.247 1.807 0.286 2.191 0.104 1.056 0.188 2.114 0.25 3.173 0.14 2.379 0.175 4.764 0.109 7.147-0.064 2.306-0.278 4.59-0.477 6.886-0.029 0.336-0.043 0.536-0.048 0.659-0.034 0.173-0.082 0.431-0.151 0.838-0.23 1.349-0.459 2.695-0.736 4.035-1.007 4.893-2.43 9.698-4.214 14.363-0.188 0.492-0.386 0.98-0.576 1.472-0.043 0.109-0.075 0.193-0.108 0.279-0.005 0.011-0.008 0.017-0.013 0.029-0.486 1.107-0.984 2.209-1.506 3.301-1.187 2.479-2.475 4.911-3.854 7.289-1.354 2.333-2.796 4.616-4.318 6.844-1.947 2.851-2.902 4.111-4.33 5.87-17.13 21.098-39.965 35.566-65.429 45.72-7.953 3.172-16.068 5.899-24.283 8.305-11.687 3.422-6.714 21.728 5.041 18.286 51.794-15.166 108.538-48.154 121.477-104.876 9.271-40.651-9.68-83.485-48.205-101.044z","M382.644 299.075c0 14.86-12.046 26.906-26.906 26.906s-26.906-12.046-26.906-26.906c0-14.86 12.046-26.906 26.906-26.906s26.906 12.046 26.906 26.906z","M389.084 697.974c1.054 14.822-10.108 27.692-24.931 28.746s-27.692-10.108-28.746-24.931c-1.054-14.822 10.108-27.692 24.931-28.746s27.692 10.108 28.746 24.931z","M689.403 292.902c2.381 14.668-7.58 28.488-22.248 30.869s-28.488-7.58-30.869-22.248c-2.381-14.668 7.58-28.488 22.248-30.869s28.488 7.58 30.869 22.248z","M687.715 682.159c5.687 13.729-0.833 29.468-14.561 35.155s-29.468-0.833-35.155-14.561c-5.687-13.729 0.833-29.468 14.561-35.155s29.468 0.833 35.155 14.561z"],"grid":0,"tags":["weird-religion"],"defaultCode":59730},{"paths":["M230.47 294.415c-34.067-26.848-38.096-83.939-8.136-115.303s87.175-29.958 115.556 2.843c16.592 19.175 22.841 45.067 26.739 70.122 22.778 146.417-16.607 294.772-20.848 442.889-0.53 18.528 0.010 38.662 11.529 53.183 7.596 9.575 18.987 15.313 30.387 19.718 23.918 9.243 50.819 13.845 75.178 5.835 33.558-11.035 55.984-44.518 62.829-79.175s0.6-70.504-7.66-104.85c-14.588-60.653-35.542-120.184-41.335-182.298s5.849-129.409 48.428-175.002c42.578-45.593 121.381-59.586 168.038-18.178 38.281 33.975 44.388 91.364 40.294 142.383s-15.603 103.125-2.632 152.638c9.012 34.402 29.522 65.689 33.257 101.056 4.806 45.51-18.156 95.594 4.901 135.124 9.577 16.419 25.699 27.8 38.237 42.085s21.663 34.918 13.462 52.066c-8.728 18.248-32.188 23.373-52.415 23.621-23.258 0.285-48.106-3.622-65.365-19.216-20.357-18.392-25.24-48.474-24.159-75.887 1.62-41.118 13.732-82.433 5.989-122.849-6.295-32.861-25.174-61.856-35.574-93.657-19.614-59.98-7.965-125.064 1.775-187.414 2.582-16.527 5.001-33.554 1.185-49.841s-15.328-31.872-31.65-35.532c-16.466-3.691-33.722 5.744-43.805 19.274s-14.329 30.452-17.498 47.025c-13.871 72.561-11.275 148.22 7.538 219.659 16.759 63.639 45.789 132.968 16.324 191.811-29.178 58.27-73.353 93.622-140.585 106.759s-112.033-6.203-145.655-30.347c-28.27-20.301-40.202-56.501-45.159-90.95-16.687-115.974 26.151-231.652 34.136-348.547 1.345-19.693 1.589-40.093-5.746-58.419s-47.56-40.625-47.56-40.625z"],"grid":0,"tags":["worm"],"defaultCode":59731},{"paths":["M857.321 369.132c-18.487-44.631-45.126-84.785-79.175-119.345s-73.802-61.794-118.153-80.942c-45.927-19.831-94.784-30.076-145.212-30.451-50.437-0.399-99.432 9.142-145.649 28.285-44.631 18.487-84.785 45.126-119.345 79.175s-61.794 73.802-80.942 118.153c-19.831 45.927-30.076 94.784-30.451 145.212s9.142 99.431 28.285 145.649c18.487 44.631 45.126 84.785 79.175 119.345s73.802 61.794 118.153 80.942c45.927 19.831 94.784 30.076 145.212 30.451 0.958 0.008 1.913 0.011 2.869 0.011 49.417 0 97.44-9.516 142.78-28.297 44.631-18.487 84.785-45.126 119.345-79.175s61.794-73.802 80.942-118.153c19.831-45.927 30.076-94.784 30.451-145.212s-9.142-99.431-28.285-145.649zM512.485 512.493c-4.438-0.033-8.837-0.234-13.191-0.587-91.673 6.068-164.479 81.999-165.174 175.345-0.727 97.729 77.865 177.553 175.572 178.368-0.109 0-0.217 0.001-0.326 0-32.041-0.238-63.056-4.731-92.511-12.938-2.805-0.781-5.596-1.597-8.373-2.445s-5.538-1.73-8.285-2.644c-2.747-0.915-5.478-1.862-8.195-2.842s-5.417-1.991-8.102-3.035c-2.685-1.044-5.353-2.119-8.006-3.226-9.283-3.873-18.366-8.132-27.226-12.754-5.063-2.641-10.054-5.401-14.97-8.276-8.602-5.032-16.971-10.416-25.089-16.134-4.638-3.267-9.195-6.643-13.666-10.123s-8.855-7.066-13.15-10.752c-2.148-1.843-4.272-3.712-6.374-5.605-6.306-5.68-12.407-11.584-18.289-17.699-3.922-4.076-7.745-8.246-11.47-12.506-0.931-1.065-1.856-2.135-2.774-3.211-3.673-4.306-7.245-8.699-10.711-13.178-4.333-5.599-8.502-11.331-12.498-17.19-9.592-14.060-18.196-28.846-25.713-44.258-5.011-10.274-9.537-20.826-13.552-31.626-1.004-2.7-1.975-5.416-2.914-8.146-0.469-1.365-0.931-2.734-1.384-4.107-0.906-2.746-1.78-5.506-2.621-8.28-0.42-1.387-0.832-2.778-1.235-4.173-1.211-4.183-2.346-8.398-3.405-12.643-0.705-2.83-1.378-5.674-2.015-8.53-1.274-5.713-2.41-11.477-3.404-17.29-3.478-20.344-5.216-41.277-5.057-62.638 1.454-195.299 160.953-352.44 356.251-350.986 0.109 0.001 0.217 0.004 0.325 0.005 0.055 0 0.109-0.001 0.164-0.001 97.784 0.728 176.464 80.588 175.735 178.371-0.723 97.785-80.583 176.465-178.368 175.737z"],"grid":0,"tags":["ying-yang"],"defaultCode":59732}],"colorThemes":[[[0,0,0,1],[255,255,255,1]]],"colorThemeIdx":0,"preferences":{"showGlyphs":true,"showCodes":false,"showQuickUse":true,"showQuickUse2":false,"showSVGs":false,"fontPref":{"prefix":"und-","metadata":{"fontFamily":"undefined","majorVersion":1,"minorVersion":0},"metrics":{"emSize":1024,"baseline":6.25,"whitespace":50},"embed":false,"cssVars":true,"cssVarsFormat":"scss","showSelector":false,"showMetrics":false,"showMetadata":false,"showVersion":true},"imagePref":{"prefix":"icon-","png":true,"useClassSelector":true,"color":0,"bgColor":16777215,"name":"icomoon","classSelector":".icon"},"historySize":50,"gridSize":16,"showLiga":true},"IcoMoonType":"icon-set"}'
        );

        /***/
      },

    /***/
    /*!********************************************!*\
  !*** ./resources/assets/js/lib/Ajaxify.js ***!
  \********************************************/
    './resources/assets/js/lib/Ajaxify.js':
      /*! exports provided: default */
      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */
        __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Ajaxify;
          }
        );
        /* harmony import */
        var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! @babel/runtime/helpers/asyncToGenerator */
            './node_modules/@babel/runtime/helpers/asyncToGenerator.js'
          );
        /* harmony import */
        var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/
          __webpack_require__.n(
            _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__
          );
        /* harmony import */
        var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! core-js/modules/es.array.index-of.js */
            './node_modules/core-js/modules/es.array.index-of.js'
          );
        /* harmony import */
        var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_1___default =
          /*#__PURE__*/
          __webpack_require__.n(
            core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_1__
          );
        /* harmony import */
        var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! core-js/modules/es.promise.js */
            './node_modules/core-js/modules/es.promise.js'
          );
        /* harmony import */
        var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2___default =
          /*#__PURE__*/
          __webpack_require__.n(
            core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2__
          );
        /* harmony import */
        var jquery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! jquery */
          './node_modules/jquery/dist/jquery.js'
        );
        /* harmony import */
        var jquery__WEBPACK_IMPORTED_MODULE_3___default =
          /*#__PURE__*/
          __webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_3__);

        class Ajaxify {
          constructor(contentId) {
            this.$ = jquery__WEBPACK_IMPORTED_MODULE_3___default.a;
            this.$body =
              jquery__WEBPACK_IMPORTED_MODULE_3___default()(
                document.body
              );
            this.container = `#${contentId}`;
            this.$container =
              jquery__WEBPACK_IMPORTED_MODULE_3___default()(
                '#content'
              );
            this.listener();
          }
          listener() {
            this.$body.on('click', 'a', (e) => {
              this.url = Ajaxify.getUrl(e);
              if (
                !(
                  this.isExternal(this.url) || // Check if link goes to external page
                  (this.isAdmin(this.url) && // Check if link is to backend (admin)
                    !jquery__WEBPACK_IMPORTED_MODULE_3___default()(
                      e.currentTarget
                    ).data('noajax') &&
                    !jquery__WEBPACK_IMPORTED_MODULE_3___default()(
                      e.currentTarget
                    ).data('download'))
                )
              ) {
                // Check if is a download file link
                // if none of these are true do a ajax page load
                e.preventDefault();
                this.changePage(this.url);
              }
            });

            // Back button listener
            jquery__WEBPACK_IMPORTED_MODULE_3___default()(
              window
            ).bind('popstate', () => {
              this.changePage(window.location.pathname);
            });
          }
          changePage(url) {
            var _this = this;
            return _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()(
              function* () {
                window.emitter.emit('PageSwitch', {
                  loading: true,
                  bodyClassList: document.body.classList,
                });
                let $ = _this.$;
                let $contentContainer = $(_this.container);
                let $body = _this.$body;
                let html = yield fetch(url)
                  .then((resp) => resp.text())
                  .then((html) => {
                    const parser = new DOMParser();
                    const doc = parser.parseFromString(
                      html,
                      'text/html'
                    );
                    return {
                      node: doc.getElementById(
                        _this.container.split('#')[1]
                      ),
                      title: doc.title,
                      bodyClasses: doc.body.getAttribute('class'),
                      menu: doc.querySelector('header'),
                    };
                  });
                _this.$root = $contentContainer;
                _this.$container.html(html.node);
                $body.attr('class', html.bodyClasses);
                $body.find('header').replaceWith(html.menu);
                Ajaxify.setUrlAndTitle(url, html.title);
                window.emitter.emit('PageSwitch', {
                  loading: false,
                  bodyClassList: document.body.classList,
                });
                $('html, body').scrollTop($('html').offset().top);
              }
            )();
          }
          static setUrlAndTitle(url, title) {
            window.history.pushState({}, '', url);
            document.title = title;
          }
          static getUrl(e) {
            return jquery__WEBPACK_IMPORTED_MODULE_3___default()(
              e.currentTarget
            ).attr('href');
          }
          isAdmin(url) {
            return url.indexOf('/wp/wp-admin/') !== -1;
          }
          isExternal(url) {
            const host = window.location.host;
            const link =
              jquery__WEBPACK_IMPORTED_MODULE_3___default()('<a>', {
                href: url,
              })[0].host;
            return link !== host;
          }
          LazyLoadImages() {
            window.APP.lazyLoadInstanceImage.update();
            window.APP.lazyLoadInstanceVideo.update();
          }
        }

        /***/
      },

    /***/
    /*!********************************************!*\
  !*** ./resources/assets/js/lib/Loading.js ***!
  \********************************************/
    './resources/assets/js/lib/Loading.js':
      /*! exports provided: default */
      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */
        __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Loading;
          }
        );
        /* harmony import */
        var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! jquery */
          './node_modules/jquery/dist/jquery.js'
        );
        /* harmony import */
        var jquery__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/
          __webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);

        class Loading {
          constructor(contentId) {
            this.$ = jquery__WEBPACK_IMPORTED_MODULE_0___default.a;
            this.$body =
              jquery__WEBPACK_IMPORTED_MODULE_0___default()(
                document.body
              );
            this.$html =
              jquery__WEBPACK_IMPORTED_MODULE_0___default()('html');
            this.$container =
              jquery__WEBPACK_IMPORTED_MODULE_0___default()(
                '#content'
              );
            this.$header =
              jquery__WEBPACK_IMPORTED_MODULE_0___default()(
                '.section-header'
              );
            this.$loadingpage =
              jquery__WEBPACK_IMPORTED_MODULE_0___default()(
                '.loading-page'
              );
            console.log(this.$container);
            this.firstLoad = true;
            this.loadingSentence = 0;
            // show different loading sentences
            this.loadingSentenceLength =
              jquery__WEBPACK_IMPORTED_MODULE_0___default()(
                '.loading-page p'
              ).length;
            this.loadingDelay = 2000;
            window.emitter.emit('PageSwitch', {
              loading: true,
            });
            this.init();
          }
          init() {
            window.emitter.on('PageSwitch', (e) => {
              if (e.loading) {
                console.log("addClass('loading')");
                this.$loadingpage.removeClass('loaded');
                this.$loadingpage.addClass('loading');
                this.$container.removeClass('loaded');
                this.$container.addClass('loading');
                jquery__WEBPACK_IMPORTED_MODULE_0___default()(
                  '.loading-page p'
                ).removeClass('show');
              }
              if (!e.loading) {
                console.log("removeClass('loading')");
                this.$container.removeClass('loading');
                this.$loadingpage.removeClass('loading');
                if (this.firstLoad == true) {
                  setTimeout(() => {
                    this.$html.addClass('first-load');
                    this.firstLoad = false;
                  }, 2000);
                } else {
                  this.$container.addClass('loaded');
                  this.$loadingpage.addClass('loaded');
                }
                // different loading words
                jquery__WEBPACK_IMPORTED_MODULE_0___default()(
                  '.loading-page p'
                )
                  .eq(this.loadingSentence)
                  .addClass('show');
                if (
                  this.loadingSentence < this.loadingSentenceLength
                ) {
                  this.loadingSentence++;
                } else {
                  this.loadingSentence = 0;
                }
              }
            });
          }
        }

        /***/
      },

    /***/
    /*!******************************************!*\
  !*** ./resources/assets/js/lib/Vimeo.js ***!
  \******************************************/
    './resources/assets/js/lib/Vimeo.js':
      /*! exports provided: default */
      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */
        __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return VimeoPlayer;
          }
        );
        /* harmony import */
        var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! core-js/modules/es.array.filter.js */
            './node_modules/core-js/modules/es.array.filter.js'
          );
        /* harmony import */
        var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/
          __webpack_require__.n(
            core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_0__
          );
        /* harmony import */
        var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! jquery */
          './node_modules/jquery/dist/jquery.js'
        );
        /* harmony import */
        var jquery__WEBPACK_IMPORTED_MODULE_1___default =
          /*#__PURE__*/
          __webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);
        /* harmony import */
        var _vimeo_player__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! @vimeo/player */
            './node_modules/@vimeo/player/dist/player.es.js'
          );

        class VimeoPlayer {
          constructor() {
            this.Players = [];
            this.Player = false;
            window.emitter.on('PageSwitch', (e) => {
              if (!e.filter) {
                if (
                  !e.loading &&
                  e.bodyClassList.contains('single-work')
                ) {
                  this.init();
                }
                if (
                  e.loading &&
                  e.bodyClassList.contains('single-work') &&
                  this.Player == true
                ) {
                  this.destroyPlayer();
                }
              }
            });
          }
          destroyPlayer() {
            setTimeout(() => {
              for (let i = 1; i < this.Players.length; i++) {
                this.Players[i].destroy();
              }
            }, 800);
            this.Player = false;
          }
          init() {
            const videoLinks =
              document.querySelectorAll('.vimeo-embed');
            let i = 1;
            let player = [];
            videoLinks.forEach((videoLink) => {
              player[i] =
                new _vimeo_player__WEBPACK_IMPORTED_MODULE_2__[
                  'default'
                ](videoLink);
              jquery__WEBPACK_IMPORTED_MODULE_1___default()(
                '.js-play'
              ).on('click', (e) => {
                let videoIndex =
                  jquery__WEBPACK_IMPORTED_MODULE_1___default()(
                    e.currentTarget
                  ).data('js-play');
                jquery__WEBPACK_IMPORTED_MODULE_1___default()(
                  '.js-play-' + videoIndex
                ).addClass('hide');
                player[videoIndex].play();
              });
              i++;
            });
            this.Players = player;
            this.Player = true;
          }
        }

        /***/
      },

    /***/
    /*!******************************************!*\
  !*** ./resources/assets/js/lib/utils.js ***!
  \******************************************/
    './resources/assets/js/lib/utils.js':
      /*! exports provided: addClass, removeClass, hasClass, wait, debounce, shuffle */
      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */
        __webpack_require__.d(
          __webpack_exports__,
          'addClass',
          function () {
            return addClass;
          }
        );
        /* harmony export (binding) */
        __webpack_require__.d(
          __webpack_exports__,
          'removeClass',
          function () {
            return removeClass;
          }
        );
        /* harmony export (binding) */
        __webpack_require__.d(
          __webpack_exports__,
          'hasClass',
          function () {
            return hasClass;
          }
        );
        /* harmony export (binding) */
        __webpack_require__.d(
          __webpack_exports__,
          'wait',
          function () {
            return wait;
          }
        );
        /* harmony export (binding) */
        __webpack_require__.d(
          __webpack_exports__,
          'debounce',
          function () {
            return debounce;
          }
        );
        /* harmony export (binding) */
        __webpack_require__.d(
          __webpack_exports__,
          'shuffle',
          function () {
            return shuffle;
          }
        );
        /* harmony import */
        var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! core-js/modules/es.promise.js */
            './node_modules/core-js/modules/es.promise.js'
          );
        /* harmony import */
        var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/
          __webpack_require__.n(
            core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_0__
          );

        let add = function add(el, className) {
          if (!el.classList.contains(className)) {
            el.classList.add(className);
          }
        };
        const addClass = (elem, className) => {
          if (elem instanceof NodeList) {
            elem.forEach((el) => {
              add(el, className);
            });
          } else {
            add(elem, className);
          }
        };
        let remove = function remove(el, className) {
          if (el.classList.contains(className)) {
            el.classList.remove(className);
          }
        };
        const removeClass = (elem, className) => {
          if (elem instanceof NodeList) {
            elem.forEach((el) => {
              remove(el, className);
            });
          } else {
            remove(elem, className);
          }
        };
        const hasClass = (elem, className) => {
          return elem.classList.contains(className);
        };
        const wait = (selector) => {
          return new Promise((resolve, reject) => {
            const waitForEl = (selector, count = 0) => {
              const el = document.querySelector(selector);
              if (!!el) {
                resolve(el);
              } else {
                setTimeout(() => {
                  count++;
                  if (count < 10) {
                    waitForEl(selector, count);
                  } else {
                    reject();
                  }
                }, 100);
              }
            };
            waitForEl(selector);
          });
        };
        const debounce = (fn, time) => {
          let timeout;
          return function () {
            const functionCall = () => fn.apply(this, arguments);
            clearTimeout(timeout);
            timeout = setTimeout(functionCall, time);
          };
        };
        const shuffle = (array) => {
          var currentIndex = array.length,
            temporaryValue,
            randomIndex;

          // While there remain elements to shuffle...
          while (0 !== currentIndex) {
            // Pick a remaining element...
            randomIndex = Math.floor(Math.random() * currentIndex);
            currentIndex -= 1;

            // And swap it with the current element.
            temporaryValue = array[currentIndex];
            array[currentIndex] = array[randomIndex];
            array[randomIndex] = temporaryValue;
          }
          return array;
        };

        /***/
      },

    /***/
    /*!*************************************!*\
  !*** ./resources/assets/js/main.js ***!
  \*************************************/
    './resources/assets/js/main.js':
      /*! no exports provided */
      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */
        var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! jquery */
          './node_modules/jquery/dist/jquery.js'
        );
        /* harmony import */
        var jquery__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/
          __webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
        /* harmony import */
        var lazysizes__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! lazysizes */
            './node_modules/lazysizes/lazysizes.js'
          );
        /* harmony import */
        var lazysizes__WEBPACK_IMPORTED_MODULE_1___default =
          /*#__PURE__*/
          __webpack_require__.n(
            lazysizes__WEBPACK_IMPORTED_MODULE_1__
          );
        /* harmony import */
        var lazysizes_plugins_unveilhooks_ls_unveilhooks__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! lazysizes/plugins/unveilhooks/ls.unveilhooks */
            './node_modules/lazysizes/plugins/unveilhooks/ls.unveilhooks.js'
          );
        /* harmony import */
        var lazysizes_plugins_unveilhooks_ls_unveilhooks__WEBPACK_IMPORTED_MODULE_2___default =
          /*#__PURE__*/
          __webpack_require__.n(
            lazysizes_plugins_unveilhooks_ls_unveilhooks__WEBPACK_IMPORTED_MODULE_2__
          );
        /* harmony import */
        var nanoevents__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(
            /*! nanoevents */
            './node_modules/nanoevents/index.js'
          );
        /* harmony import */
        var nanoevents__WEBPACK_IMPORTED_MODULE_3___default =
          /*#__PURE__*/
          __webpack_require__.n(
            nanoevents__WEBPACK_IMPORTED_MODULE_3__
          );
        /* harmony import */
        var _lib_Ajaxify__WEBPACK_IMPORTED_MODULE_4__ =
          __webpack_require__(
            /*! ./lib/Ajaxify */
            './resources/assets/js/lib/Ajaxify.js'
          );
        /* harmony import */
        var _lib_Loading__WEBPACK_IMPORTED_MODULE_5__ =
          __webpack_require__(
            /*! ./lib/Loading */
            './resources/assets/js/lib/Loading.js'
          );
        /* harmony import */
        var _components_Slider__WEBPACK_IMPORTED_MODULE_6__ =
          __webpack_require__(
            /*! ./components/Slider */
            './resources/assets/js/components/Slider.js'
          );
        /* harmony import */
        var _pages_Work__WEBPACK_IMPORTED_MODULE_7__ =
          __webpack_require__(
            /*! ./pages/Work */
            './resources/assets/js/pages/Work.js'
          );
        /* harmony import */
        var _components_Layout__WEBPACK_IMPORTED_MODULE_8__ =
          __webpack_require__(
            /*! ./components/Layout */
            './resources/assets/js/components/Layout.js'
          );
        /* harmony import */
        var _components_Logo__WEBPACK_IMPORTED_MODULE_9__ =
          __webpack_require__(
            /*! ./components/Logo */
            './resources/assets/js/components/Logo.js'
          );
        /* harmony import */
        var _lib_Vimeo__WEBPACK_IMPORTED_MODULE_10__ =
          __webpack_require__(
            /*! ./lib/Vimeo */
            './resources/assets/js/lib/Vimeo.js'
          );
        /* harmony import */
        var _components_Selection__WEBPACK_IMPORTED_MODULE_11__ =
          __webpack_require__(
            /*! ./components/Selection */
            './resources/assets/js/components/Selection.js'
          );
        /* harmony import */
        var vanilla_lazyload__WEBPACK_IMPORTED_MODULE_12__ =
          __webpack_require__(
            /*! vanilla-lazyload */
            './node_modules/vanilla-lazyload/dist/lazyload.min.js'
          );
        /* harmony import */
        var vanilla_lazyload__WEBPACK_IMPORTED_MODULE_12___default =
          /*#__PURE__*/
          __webpack_require__.n(
            vanilla_lazyload__WEBPACK_IMPORTED_MODULE_12__
          );

        window.$ = jquery__WEBPACK_IMPORTED_MODULE_0___default.a;
        window.jQuery = window.$;
        const APP = window.APP || {};
        const initApp = () => {
          window.APP = APP;
          APP.Layout =
            new _components_Layout__WEBPACK_IMPORTED_MODULE_8__[
              'default'
            ]();

          // Instance using native lazy loading
          window.APP.lazyLoadInstanceImage =
            new vanilla_lazyload__WEBPACK_IMPORTED_MODULE_12___default.a(
              {
                elements_selector: 'img.lazy',
                class_loaded: 'lazyloaded',
                use_native: true,
                load_delay: 100,
                cancel_on_exit: true,
              }
            );

          // Instance without native lazy loading
          window.APP.lazyLoadInstanceVideo =
            new vanilla_lazyload__WEBPACK_IMPORTED_MODULE_12___default.a(
              {
                elements_selector: 'video.lazy',
                class_loaded: 'lazyloaded',
                load_delay: 1500,
              }
            );
          window.emitter =
            new nanoevents__WEBPACK_IMPORTED_MODULE_3___default.a();
          new _lib_Loading__WEBPACK_IMPORTED_MODULE_5__['default'](
            'content'
          );
          new _lib_Ajaxify__WEBPACK_IMPORTED_MODULE_4__['default'](
            'content'
          );
          new _pages_Work__WEBPACK_IMPORTED_MODULE_7__['default'](
            APP
          );
          new _components_Logo__WEBPACK_IMPORTED_MODULE_9__[
            'default'
          ]();
          new _lib_Vimeo__WEBPACK_IMPORTED_MODULE_10__['default']();
          new _components_Selection__WEBPACK_IMPORTED_MODULE_11__[
            'default'
          ]();
          new _components_Slider__WEBPACK_IMPORTED_MODULE_6__[
            'default'
          ]();
          window.emitter.on('PageSwitch', () => {
            window.APP.lazyLoadInstanceImage.update();
            window.APP.lazyLoadInstanceVideo.update();
          });
          window.emitter.emit('PageSwitch', {
            loading: false,
            bodyClassList: document.body.classList,
          });
        };
        if (
          document.readyState === 'complete' ||
          (document.readyState !== 'loading' &&
            !document.documentElement.doScroll)
        ) {
          initApp();
        } else {
          document.addEventListener('DOMContentLoaded', initApp);
        }

        /***/
      },

    /***/
    /*!*******************************************!*\
  !*** ./resources/assets/js/pages/Work.js ***!
  \*******************************************/
    './resources/assets/js/pages/Work.js':
      /*! exports provided: default */
      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */
        __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return Work;
          }
        );
        /* harmony import */
        var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! @babel/runtime/helpers/asyncToGenerator */
            './node_modules/@babel/runtime/helpers/asyncToGenerator.js'
          );
        /* harmony import */
        var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/
          __webpack_require__.n(
            _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__
          );
        /* harmony import */
        var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! @babel/runtime/helpers/defineProperty */
            './node_modules/@babel/runtime/helpers/defineProperty.js'
          );
        /* harmony import */
        var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default =
          /*#__PURE__*/
          __webpack_require__.n(
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__
          );
        /* harmony import */
        var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! core-js/modules/es.array.filter.js */
            './node_modules/core-js/modules/es.array.filter.js'
          );
        /* harmony import */
        var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_2___default =
          /*#__PURE__*/
          __webpack_require__.n(
            core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_2__
          );
        /* harmony import */
        var core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(
            /*! core-js/modules/es.array.from.js */
            './node_modules/core-js/modules/es.array.from.js'
          );
        /* harmony import */
        var core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_3___default =
          /*#__PURE__*/
          __webpack_require__.n(
            core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_3__
          );
        /* harmony import */
        var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_4__ =
          __webpack_require__(
            /*! core-js/modules/es.promise.js */
            './node_modules/core-js/modules/es.promise.js'
          );
        /* harmony import */
        var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_4___default =
          /*#__PURE__*/
          __webpack_require__.n(
            core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_4__
          );
        /* harmony import */
        var isotope_layout__WEBPACK_IMPORTED_MODULE_5__ =
          __webpack_require__(
            /*! isotope-layout */
            './node_modules/isotope-layout/js/isotope.js'
          );
        /* harmony import */
        var isotope_layout__WEBPACK_IMPORTED_MODULE_5___default =
          /*#__PURE__*/
          __webpack_require__.n(
            isotope_layout__WEBPACK_IMPORTED_MODULE_5__
          );
        /* harmony import */
        var isotope_horizontal__WEBPACK_IMPORTED_MODULE_6__ =
          __webpack_require__(
            /*! isotope-horizontal */
            './node_modules/isotope-horizontal/horizontal.js'
          );
        /* harmony import */
        var isotope_horizontal__WEBPACK_IMPORTED_MODULE_6___default =
          /*#__PURE__*/
          __webpack_require__.n(
            isotope_horizontal__WEBPACK_IMPORTED_MODULE_6__
          );
        /* harmony import */
        var imagesloaded__WEBPACK_IMPORTED_MODULE_7__ =
          __webpack_require__(
            /*! imagesloaded */
            './node_modules/imagesloaded/imagesloaded.js'
          );
        /* harmony import */
        var imagesloaded__WEBPACK_IMPORTED_MODULE_7___default =
          /*#__PURE__*/
          __webpack_require__.n(
            imagesloaded__WEBPACK_IMPORTED_MODULE_7__
          );
        /* harmony import */
        var jquery__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! jquery */
          './node_modules/jquery/dist/jquery.js'
        );
        /* harmony import */
        var jquery__WEBPACK_IMPORTED_MODULE_8___default =
          /*#__PURE__*/
          __webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_8__);
        /* harmony import */
        var _lib_utils__WEBPACK_IMPORTED_MODULE_9__ =
          __webpack_require__(
            /*! ../lib/utils */
            './resources/assets/js/lib/utils.js'
          );

        class Work {
          constructor(APP) {
            _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(
              this,
              '$body',
              jquery__WEBPACK_IMPORTED_MODULE_8___default()(
                document.body
              )
            );
            this.isotope = '';
            this.APP = APP;
            window.emitter.on('PageSwitch', (e) => {
              // LEAVES HOME DESTROY ISOTOPE
              if (!e.filter) {
                if (e.loading && e.bodyClassList.contains('home')) {
                  if (this.isotope) {
                    this.destroy();
                  }
                }
                if (!e.loading && e.bodyClassList.contains('home')) {
                  this.init();
                }
              }
            });
          }
          init() {
            var _this = this;
            return _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()(
              function* () {
                yield Object(
                  _lib_utils__WEBPACK_IMPORTED_MODULE_9__['wait']
                )('.work-list');
                _this.initializeIsotope();
              }
            )();
          }
          initializeIsotope() {
            var _this2 = this;
            return _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()(
              function* () {
                yield _this2.isotopify();
              }
            )();
          }
          isotopify() {
            return new Promise((resolve) => {
              // destroy isotope immediately
              if (this.isotope) {
                this.isotope.destroy();
              }
              this.grid = document.querySelector('.work-list');
              imagesloaded__WEBPACK_IMPORTED_MODULE_7___default()(
                this.grid,
                () => {
                  this.isotope =
                    new isotope_layout__WEBPACK_IMPORTED_MODULE_5___default.a(
                      this.grid,
                      {
                        itemSelector: '.grid-item',
                        percentPosition: true,
                        masonry: {
                          hiddenStyle: {
                            opacity: 0,
                          },
                          visibleStyle: {
                            opacity: 1,
                          },
                        },
                        transitionDuration: 0,
                      }
                    );
                  setTimeout(() => {
                    this.isotope.layout({
                      transitionDuration: 0,
                      hiddenStyle: {
                        opacity: 0,
                      },
                      visibleStyle: {
                        opacity: 1,
                      },
                    });
                  }, 1000);
                  const imgs = document.querySelectorAll('img');
                  const videos = document.querySelectorAll('video');
                  if (imgs === null) {
                    return;
                  }
                  Array.from(imgs).forEach((img) => {
                    img.addEventListener('load', () => {
                      this.isotope.layout({});
                      console.log('layout img');
                    });
                  });
                  if (videos === null) {
                    return;
                  }
                  Array.from(videos).forEach((video) => {
                    video.addEventListener('load', () => {
                      this.isotope.layout({});
                      console.log('layout video');
                      var playPromise = video.play();
                      if (playPromise !== undefined) {
                        playPromise
                          .then((_) => {
                            // Automatic playback started!
                            // Show playing UI.
                          })
                          .catch((error) => {
                            // Auto-play was prevented
                            // Show paused UI.
                          });
                      }
                    });
                  });
                  let isotopeFilter = this.isotope;
                  jquery__WEBPACK_IMPORTED_MODULE_8___default()(
                    '.filter-button-group div'
                  ).on('click', (e) => {
                    let filterValue =
                      jquery__WEBPACK_IMPORTED_MODULE_8___default()(
                        e.currentTarget
                      ).attr('data-filter');
                    jquery__WEBPACK_IMPORTED_MODULE_8___default()(
                      '.filter-button-group div'
                    ).removeClass('current-menu-item');

                    // hide grid elements
                    jquery__WEBPACK_IMPORTED_MODULE_8___default()(
                      '.work-list'
                    ).addClass('hidden');
                    jquery__WEBPACK_IMPORTED_MODULE_8___default()(
                      e.currentTarget
                    ).addClass('current-menu-item');
                    setTimeout(() => {
                      isotopeFilter.arrange({
                        filter: filterValue,
                        transitionDuration: 0,
                        hiddenStyle: {
                          opacity: 0,
                        },
                        visibleStyle: {
                          opacity: 1,
                        },
                      });
                    }, 400);
                    setTimeout(() => {
                      isotopeFilter.arrange({
                        transitionDuration: 0,
                      });
                      jquery__WEBPACK_IMPORTED_MODULE_8___default()(
                        'html, body'
                      ).animate(
                        {
                          scrollLeft: 0,
                        },
                        200,
                        'swing'
                      );
                    }, 1000);
                    isotopeFilter.on('arrangeComplete', () => {
                      console.log('completed');
                      setTimeout(() => {
                        // show grid elements
                        jquery__WEBPACK_IMPORTED_MODULE_8___default()(
                          '.work-list'
                        ).removeClass('hidden');
                      }, 1600);
                    });
                  });
                  resolve();
                }
              );
            });
          }

          // destroy isotope with delay
          destroy() {
            if (this.isotope) {
              if (!this.destroyed) {
                clearTimeout();
                setTimeout(() => {
                  this.isotope.destroy();
                }, 400);
              }
            }
          }
          shuffle($grid) {
            //remove node
            let $gridBackup = $grid;
            let lastNode = document.getElementById('last');
            $grid.removeChild(lastNode);
            for (var i = $grid.children.length; i >= 1; i--) {
              $grid.appendChild(
                $grid.children[(Math.random() * i) | 0]
              );
            }
            $grid.appendChild(lastNode);
            return $grid;
          }
        }

        /***/
      },
    /******/
  }
);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
